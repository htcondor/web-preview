{"id": 3363, "title": "Ticket #3363: Preserve 64-bit ClassAd values between processes", "description": "<blockquote>\n<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> now support 64-bit integer and real values, whereas the old <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> library did not. We should ensure that these 64-bit values are preserved when ads are unparsed and written to the network or to disk. This may include making them visible to the user (e.g. condor_q -long).</blockquote>", "remarks": "<blockquote>\n<em>2013-Jul-11 14:29:23 by jfrey:</em> <br/>\n\nExposing the higher-precision floating point values to the user shouldn't cause any significant problems. Any sane code trying to interpret the floating point values in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> values should understand the new format.\n\n<p></p><hr/>\n<em>2013-Sep-12 15:02:45 by johnkn:</em> <br/>\n\nUse of %e formatting for double values is producing numbers that are hard for humans to read, I propose that we use %g instead which will produced readable numbers for values that aren't very large or small and will use exponential notation only when needed.\n\n<p>a format of <code>%.20g</code>  will always give the same precision as <code>%.20e</code>, but will make for more human readable numbers.   The only downside is that <code>%g</code> doesn't always print a decimal point, so code will have to check for a . and append .0 if it isn't there.\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">%.20g of 1.0e0   is \"1\"\n%.20g of 1.0e2   is \"100\"\n%.20g of 1.0e-2  is \"0.01\"\n%.20g of 1.0e22  is \"1.0e+22\"\n%.20g of 1.0e-22 is \"1.0e-22\"\n</pre></div>\n\n\n<p></p><div class=\"code\">\n<pre class=\"code\">%#.20g of 1.0e0   is \"1.0000000000000000000\"\n%#.20g of 1.0e2   is \"100.00000000000000000\"\n%#.20g of 1.0e-2  is \"0.010000000000000000000\"\n%#.20g of 1.0e22  is \"1.0000000000000000000e+022\"\n%#.20g of 1.0e-22 is \"1.0000000000000000000e-022\"\n</pre></div>\n\n\n<p></p><hr/>\n<em>2013-Sep-17 09:58:23 by jfrey:</em> <br/>\n\nA format of <code>%.16g</code> maintains the same precision of the existing <code>%1.15e</code> format. Have you seen any cases where the increased precision you propose is required for proper round-tripping?</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=3928\" onclick=\"get_ticket_and_populate_wrapper('3928'); return false;\" title=\"Improve readability of ClassAd reals in Condor\">#3928</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nImprove readability of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> reals in Condor</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-09 11:32</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/5c3d771c8cccdddae7c85dbd59f8703472a00f24\">[37145]</a></span>: minor edit of 8.1.1 version history item to remove unneeded dashes ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=3363\" onclick=\"get_ticket_and_populate_wrapper('3363'); return false;\" title=\"Preserve 64-bit ClassAd values between processes\">#3363</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-06 11:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/3caca85682d927fc16050e478a3bdb3b95b6e529\">[37103]</a></span>: Version history for printing doubles in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=3363\" onclick=\"get_ticket_and_populate_wrapper('3363'); return false;\" title=\"Preserve 64-bit ClassAd values between processes\">#3363</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-12 11:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/6a9c10f5d16776966c837d3e30a4f58be5fd33f3\">[36874]</a></span>: Fix <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> unit test to match increased precision of reals. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=3363\" onclick=\"get_ticket_and_populate_wrapper('3363'); return false;\" title=\"Preserve 64-bit ClassAd values between processes\">#3363</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-11 17:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/8c12012c6d17dc9d9865c36caa416903301c77ae\">[36873]</a></span>: Preserve double-precision real values in old <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> output. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=3363\" onclick=\"get_ticket_and_populate_wrapper('3363'); return false;\" title=\"Preserve 64-bit ClassAd values between processes\">#3363</a></span> Always print out the full precision of real literals when unparsing in old <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> syntax. This will preserve the values when the ads are transferred between Condor processes, via the network or the disk, and when reported to the user\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2013-Sep-17 09:58", "status": "resolved", "created": "2012-Dec-06 09:52", "fixed_version": "2012-Dec-06 09:52", "broken_version": "v070902", "priority": "3", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "#3248", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}