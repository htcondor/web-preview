{"id": 5996, "title": "Ticket #5996: SCHEDD_USE_SLOT_WEIGHT causes infinite loop if RequestCpus is expr", "description": "<blockquote>\nIf <code>SCHEDD_USE_SLOT_WEIGHT</code> is true, the schedd fakes up a STARTD ad with\n\n<p></p><pre>    Cpus = RequestCpus\n    Disk = RequestDisk\n    Memory = RequestMemory\n</pre>\n\n<p>And then uses it to evaluate job wieght of the job.  This works when the job has constant values for <code>RequestCpus</code>, <code>RequestDisk</code> and <code>RequestMemory</code>. But when one or more of these are expressions referring to the STARTD ad, evaluation of the slot weight of the job turns into infinite recursion. (actually the classad evaluator aborts when it gets to a depth of 1000)\n\n</p><p>The fix for this must be to have the SCHEDD's slot weight expression be expressed directly in terms of job attributes (and getting rid of the faked-up STARTD ad).\n\n</p><p>This will require having a new knob for the SCHEDD's slot weight expression - <code>SCHEDD_SLOT_WEIGHT</code>.\n\n</p><p>The fix should include a dprintf message when the SCHEDD_SLOT_WEIGHT expression has a <code>Cpus</code>, <code>Memory</code>, or <code>Disk</code> attribute reference.</p></blockquote>", "remarks": "<blockquote>\n<em>2016-Nov-08 12:02:32 by tannenba:</em> <br/>\n\nI am not enthralled with the proposed fix above, which requires the poor admin to deal with yet another arcane and hard-to-understand knob else risk the schedd flying off into neverland?  Not good.\n\n<p>I have no problem with adding a knob <code>SCHEDD_SLOT_WEIGHT</code> and having the schedd use that if it is defined instead of using <code>SLOT_WEIGHT</code> <em>assuming</em> we do not require it to be defined.  But I think we can do better in the default case of <code>SCHEDD_SLOT_WEIGHT</code> is not defined, <code>SLOT_WEIGHT</code> is defined (to the default value of Cpus), and <code>SCHEDD_USE_SLOT_WEIGHT</code> is True (which is the default).  I.e., I think we can make the startd ad that is faked up by the schedd smarter/more resilient to avoiding the recursion problem.\n\n</p><p></p><hr/>\n<em>2016-Nov-08 14:19:59 by johnkn:</em> <br/>\n\nJaime and I discussed ways to make the fake ad smarter - its not possible.\nWe could try and re-write the SLOT_WEIGHT expression so that it refers to job attributes instead, but that's risky.\n\n<p>And in any case, whenever the job uses an expression for <code>RequestCpus</code>, etc the schedd calculation of slot weight will be bogus.  The real solution is to get rid of the need for the schedd to make a reasonable guess of slot weight.\n\n</p><p></p><hr/>\n<em>2016-Nov-09 14:06:01 by johnkn:</em> <br/>\n\n<span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/14a1de818139333b5757b5212c0979df7385f61a\">[49559]</a></span> is the initial commit, which add <code>SCHEDD_SLOT_WEIGHT</code>\n<span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/7d6614698ced23127c21c6d52362ecd0ddaf22ae\">[49567]</a></span> ads code to use <code>SLOT_WEIGHT</code> when <code>SCHEDD_SLOT_WEIGHT</code> is not defined\n\n<p></p><hr/>\n<em>2016-Nov-28 17:03:30 by gthain:</em> <br/>\n\n<strong>CODE REVIEW</strong>  Code is good, but would like to fix this in the negotiator so that we don't need to guess the slot weight of unmatched, idle jobs.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Nov-28 17:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/29469fa46c3ba9b9e3e0090e1d0c0c477938df1f\">[49665]</a></span>: Document <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5996\" onclick=\"get_ticket_and_populate_wrapper('5996'); return false;\" title=\"SCHEDD_USE_SLOT_WEIGHT causes infinite loop if RequestCpus is expr\">#5996</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Nov-09 14:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/7d6614698ced23127c21c6d52362ecd0ddaf22ae\">[49567]</a></span>: for <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5996\" onclick=\"get_ticket_and_populate_wrapper('5996'); return false;\" title=\"SCHEDD_USE_SLOT_WEIGHT causes infinite loop if RequestCpus is expr\">#5996</a></span>, if SCHEDD_USE_SLOT_WEIGHT and no SCHEDD_SLOT_WEIGHT, evaluate SLOT_WEIGHT against a simulated startd ad.  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2016-Nov-28 17:07", "status": "resolved", "created": "2016-Nov-07 15:29", "fixed_version": "2016-Nov-07 15:29", "broken_version": "v080400", "priority": "2", "subsystem": "DaemonsSubmitNode", "assigned_to": "gthain", "derived_from": "#4490", "creator": "johnkn", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "tannenba@cs.wisc.edu, gthain@cs.wisc.edu", "due_date": ""}