{"id": 5791, "title": "Ticket #5791: Problem with default JOB_DEFAULT_REQUESTMEMORY", "description": "<blockquote>\nReported by Stuart via Tom to Condor ticket system.\n\n<p>The default setting of JOB_DEFAULT_REQUESTMEMORY,\nifThenElse(MemoryUsage <span class=\"quote\">=!=</span> UNDEFINED,MemoryUsage,(ImageSize+1023)/1024)\nappears to be problematic for jobs submitted without <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RequestMemory\" title=\"Request Memory\">RequestMemory</a></span> under HTCondor 8.4.7 and Partitionable slots if they are preempted and need to match/run again. In particular, I noticed that a number of jobs in the LIGO CIT SL7.2 pool that where relying on this default where being rejected by partitionable slot STARTD\u2019s with,\n</p><div class=\"verbatim\">\n<pre>07/09/16 15:07:44 slot1_3: New machine resource of type -1 allocated\n07/09/16 15:07:44 Setting up slot pairings\n07/09/16 15:07:44 slot1_3: Slot requirements not satisfied.\n07/09/16 15:07:44 slot1_3: Job ad was ============================\n</pre></div>\n\nHowever, if I condor_qedit <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RequestMemory\" title=\"Request Memory\">RequestMemory</a></span> to be quantize(ImageSize/1024,1) then jobs are not rejected and start in a dynamic slot.\n\n<p>I believe there are a few problems:\n\n</p><p>0) Sec 3.5.1.19 states a different default default value,\n<a class=\"external\" href=\"http://research.cs.wisc.edu/htcondor/manual/v8.4/3_5Policy_Configuration.html#37135\">http://research.cs.wisc.edu/htcondor/manual/v8.4/3_5Policy_Configuration.html#37135</a>\n</p><div class=\"verbatim\">\n<pre>JOB_DEFAULT_REQUESTMEMORY = ifThenElse(MemoryUsage =!= UNDEFINED, MemoryUsage, 1)\n</pre></div>\n\nthen what I observe and what is stated in Sec 3.3.13,\n<a class=\"external\" href=\"http://research.cs.wisc.edu/htcondor/manual/v8.4/3_3Configuration.html#25623\">http://research.cs.wisc.edu/htcondor/manual/v8.4/3_3Configuration.html#25623</a>\n<div class=\"verbatim\">\n<pre>ifThenElse(MemoryUsage =!= UNDEFINED,MemoryUsage,(ImageSize+1023)/1024)\n</pre></div>\n\n1) It looks like <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RequestMemory\" title=\"Request Memory\">RequestMemory</a></span> must be an integer to be effective. I first tried manually calculating a reasonable <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RequestMemory\" title=\"Request Memory\">RequestMemory</a></span> value for a test job and entered that via condor_qedit as a real number. However, even when I seriously inflated the value STARTD for the partitionable slot would still reject the job until I rounded that to an integer.\n\n<p>2) Even with STARTD_DEBUG = D_ALL I was unable to find a mention in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StartLog\" title=\"Start Log\">StartLog</a></span> of what \u201cSlot requirements\u201d where not satisfied. I think it would be very helpful to log this and make it easy to access, e.g., from a submit machine I would love to see \u201ccondor_q -better-analyze JobId\u201d report details on the last failed attempt to start a job (if there was a match that was rejected).\n\n</p><p>3) Attempting to use the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResidentSetSize\" title=\"Resident Set Size\">ResidentSetSize</a></span> directly (or via <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MemoryUsage\" title=\"Memory Usage\">MemoryUsage</a></span>) in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RequestMemory\" title=\"Request Memory\">RequestMemory</a></span> did not work (even after rounding to an integer). I did not investigate this very much, but I believe startd is not happy if <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RequestMemory\" title=\"Request Memory\">RequestMemory</a></span> is less than <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ImageSize\" title=\"Image Size\">ImageSize</a></span>.\n\n</p><p>At any rate, the following was successful in getting a number of otherwise idle jobs running,\n\n</p><p>A) Make a list of idle jobs requesting less memory than <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ImageSize\" title=\"Image Size\">ImageSize</a></span> before and after running qedit,\n</p><div class=\"verbatim\">\n<pre>condor_q -constraint \"(jobstatus == 1) &amp;&amp; (RequestMemory &lt; ImageSize/1024)\" -af globaljobid RequestMemory ImageSize/1024\n</pre></div>\n\n\n<p>B) Set all of those jobs to track their <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ImageSize\" title=\"Image Size\">ImageSize</a></span>,\n</p><div class=\"verbatim\">\n<pre>condor_qedit -constraint \"(jobstatus == 1) &amp;&amp; (RequestMemory &lt; ImageSize/1024)\" RequestMemory \"quantize(ImageSize/1024,1)\"\n</pre></div>\n\nC) Change the default setting for new user jobs being submitted,\n<div class=\"verbatim\">\n<pre>[root@ldas-pcdev2 ~]# cat /etc/condor/config.d/memory\nJOB_DEFAULT_REQUESTMEMORY = quantize(ImageSize/1024,1)\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2019-Apr-10 15:13:46 by pfc:</em> <br/>\n\nStuart, what is the concrete impact of this and how important is it to you?  I'm trying to judge the relative urgency and priority of this issue relative to others.  Thanks.\n\n<p></p><hr/>\n<em>2019-Apr-10 18:42:22 by anderson:</em> <br/>\n\nThe impact was significant in that preempted jobs from a pslot that did not specify <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RequestMemory\" title=\"Request Memory\">RequestMemory</a></span> where not restarting. However, I am not sure if that is still happening and I think a more general solution we should work towards is to require that all jobs specify request_memory before they will start the first time.\n\n<p></p><hr/>\n<em>2019-Apr-17 14:12:18 by gthain:</em> <br/>\n\nWe now have SUBMIT_REQUIREMENTS that allow an admin to write an expression that describes what attributes should be in ads, and reject the submit otherwise.\n\n<p></p><hr/>\n<em>2019-Apr-24 13:44:06 by pfc:</em> <br/>\n\nThe ball is in Stuart's court to see if he thinks this will work for us in a usable way, or if it's a usability nightmare.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "todo", "last_change": "2019-Sep-11 13:32", "status": "new", "created": "2016-Jul-20 15:28", "fixed_version": "2016-Jul-20 15:28", "broken_version": "v080406", "priority": "4", "subsystem": "", "assigned_to": "anderson", "derived_from": "", "creator": "tpdownes", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "anderson@ligo.caltech.edu,pcouvare@caltech.edu, gthain@cs.wisc.edu", "due_date": ""}