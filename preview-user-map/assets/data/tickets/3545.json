{"id": 3545, "title": "Ticket #3545: C assert()s with side effects in Condor source", "description": "<blockquote>\n[I'm submitting this on behalf of Leo Singer &lt;lsinger@caltech.edu&gt; who ran into the problem.]\n\n<p>A counter is being incremented inside a C assert() statement in subsystem_info.cpp. This counter increment was being struck out by the preprocessor. Would you please consider incorporating the patch below into the next version of Condor?\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">--- src/condor_utils/subsystem_info.cpp.orig\t2013-03-16 17:21:40.000000000 -0700\n+++ src/condor_utils/subsystem_info.cpp\t2013-03-16 17:46:08.000000000 -0700\n@@ -226,7 +226,8 @@\n SubsystemInfoTable::addEntry( const SubsystemInfoLookup *entry )\n {\n \tm_Table[m_Count] = entry;\n-\tassert ( ++m_Count &lt; m_Size );\n+    ++m_Count;\n+\tassert ( m_Count &lt; m_Size );\n }\n\n const SubsystemInfoLookup *\n</pre></div>\n\n\n<p>FWIW, this is on Mac OS X 10.8.2 (Mountain Lion).\n\n</p><p>Note that there are a few other places in the Condor source code where C assert()s with side effects occur, including nordugrid_gahp.c, qmgmt_receivers.cpp, and NTreceivers.cpp.</p></blockquote>", "remarks": "<blockquote>\n<em>2013-Mar-19 11:26:07 by jfrey:</em> <br/>\n\nqmgmt_receivers.cpp redefines assert() to behave differently. There are a lot of assert()s with side-effects in the standard universe code, which I'm going to leave alone. And I found one other location that needs fixing.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-19 11:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/f526e000aae06e7ea6febac803b7a460cd8e5628\">[35203]</a></span>: Remove side-effects from assert() calls. <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=3545\" onclick=\"get_ticket_and_populate_wrapper('3545'); return false;\" title=\"C assert()s with side effects in Condor source\">#3545</a></span> In some configurations, the compiler on Mac OS 10.8 will turn assert() calls into no-ops, leaving the argument unevaluated. Any side-effects of the argument (such as the ++ operator or function calls) will not occur in this case.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2013-Mar-20 11:16", "status": "defer", "created": "2013-Mar-18 15:30", "fixed_version": "2013-Mar-18 15:30", "broken_version": "v070807", "priority": "5", "subsystem": "Unknown", "assigned_to": "gthain", "derived_from": "", "creator": "pfc", "rust": "a24798", "customer_group": "ligo", "visibility": "public", "notify": "pfcouvar@syr.edu, lsinger@caltech.edu,pcouvare@caltech.edu", "due_date": ""}