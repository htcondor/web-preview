{"id": 7382, "title": "Ticket #7382: Don't copy strings from classad cache on gcc's with small string opt", "description": "<blockquote>\nThe classad caching code today assumes that std:string is implemented as a copy-on-write shared string, except on Windows.  However, starting with gcc version 5, all std:strings are implemented as the so-called \"small string optimization\", or SSO, where they are never shared or C-O-W.  Today, the classad cache code assumes that WIN32 compilers are all SSO, and everything else is COW.  We'll fix this to define COW string for gcc &lt; 5, and SSO for everything else.</blockquote>", "remarks": "<blockquote>\n<em>2019-Dec-30 09:42:30 by tim:</em> <br/>\n\nInternal change. No docs.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Nov-15 13:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/4f0b51e18fda91395cdb05bd957935381bc99d06\">[58483]</a></span>: Don't copy strings out of classad cache for SSO c++'s <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7382\" onclick=\"get_ticket_and_populate_wrapper('7382'); return false;\" title=\"Don't copy strings from classad cache on gcc's with small string opt\">#7382</a></span>  (By Greg Thain )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-Dec-30 09:42", "status": "resolved", "created": "2019-Nov-15 13:09", "fixed_version": "2019-Nov-15 13:09", "broken_version": "v080904", "priority": "3", "subsystem": "ClassAd", "assigned_to": "gthain", "derived_from": "", "creator": "gthain", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}