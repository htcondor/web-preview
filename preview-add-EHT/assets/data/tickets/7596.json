{"id": 7596, "title": "Ticket #7596: Streaming fails with mystery error when the quota is full", "description": "<blockquote>\nWe had a user encounter these mystery failures when their schedd quota was full:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">04/11/20 19:12:31 (D_ALWAYS|D_FAILURE) (12345.0) (2195253): ERROR \"Error from slot1_22@hostname.wisc.edu: StreamHandler: stdout: couldn't write to example.out: Success (379!=4096)\" at line 559 in file /var/lib/condor/execute/slot1/dir_13281/userdir/.tmpKVtJ5K/BUILD/condor-8.9.6/src/condor_shadow.V6.1/pseudo_ops.cpp\n</pre></div>\n\n\n<p>Note the fun <code>Success (379!=4096)</code> error message.  Here's the state of the quota:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">$ quota -s\nDisk quotas for user XYZ (uid 1233):\n     Filesystem   space   quota   limit   grace   files   quota   limit   grace\n      /dev/sdb6  30720M* 20480M  30720M   3days   17336       0       0\n</pre></div>\n\n\n<p>It appears that the shadow code in <code>NTreceivers.cpp</code> doesn't use any of the full blocking write variants and just returned a short write after laying down a few bytes.  Accordingly, the call claims to succeed (if it would have retried, it would have gotten a reasonable error message).</p></blockquote>", "remarks": "<blockquote>\n<em>2020-Apr-13 10:30:12 by zmiller:</em> <br/>\n\n<strong>CODE REVIEW</strong>:  All good.  Add version history and resolve.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Apr-13 11:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/030e918293cd29fe44dc5c47ac0f59886e3af023\">[59339]</a></span>: Fixed a confusing when history. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7596\" onclick=\"get_ticket_and_populate_wrapper('7596'); return false;\" title=\"Streaming fails with mystery error when the quota is full\">#7596</a></span>  (By zmiller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Apr-13 10:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/bc1d3ebf2987f5bb5f3fb8d3e61d782318d77597\">[59335]</a></span>: Document <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7596\" onclick=\"get_ticket_and_populate_wrapper('7596'); return false;\" title=\"Streaming fails with mystery error when the quota is full\">#7596</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Apr-13 08:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/bf225d13f63b713abbe1849e60587904fc8b9043\">[59333]</a></span>: Use full_write in shadow Remote System Calls <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7596\" onclick=\"get_ticket_and_populate_wrapper('7596'); return false;\" title=\"Streaming fails with mystery error when the quota is full\">#7596</a></span> The starter side doesn't check and retry on short writes. As we're talking over the network, we should loop in the shadow, not over the network.  (By Greg Thain )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2020-Apr-13 10:44", "status": "resolved", "created": "2020-Apr-11 20:10", "fixed_version": "2020-Apr-11 20:10", "broken_version": "v080000", "priority": "2", "subsystem": "FileTransfer", "assigned_to": "gthain", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "bbockelman@morgridge.org, zmiller@cs.wisc.edu", "due_date": "20200430"}