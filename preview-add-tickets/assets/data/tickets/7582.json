{"id": 7582, "title": "Ticket #7582: SINful mangled when flocking", "description": "<blockquote>\nWe have a schedd that has a separate public IP than private IP -- we created a private network with PRIVATE_NETWORK_INTERFACE set to the private IP, and used the public IP for TCP_FORWARDING_HOST.\n\n<p>This schedd flocks and advertises itself to the flocking collector with the following SINful:\n\n</p><p></p><div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \n&lt;192.170.236.216:9618?PrivAddr=%3c192.168.35.156:9618%3fsock%3dschedd_568_2de2_3%3e&amp;PrivNet=open-science-ce-ce1-5bd796976b-drplh&amp;addrs=192.170.236.216-9618&amp;alias=open-science-ce-ce1-5bd796976b-drplh&amp;noUDP&amp;sock=schedd_568_2de2_3&gt;\n</td></tr></tbody></table></div>\n\n\n<p>In the above, 192.170.236.216 is the public IP, 192.168.35.156 was the private IP, and open-science-ce-ce1-5bd796976b-drplh was the FULL_HOSTNAME (not in DNS).\nSomewhere along the line, the SINful was getting mangled, and the negotiator was responding to the schedd using\n\n</p><p></p><div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \n&lt;192.170.236.216:9618?addrs=192.170.236.216-9618&amp;alias=open-science-ce-ce1-5bd796976b-drplh&amp;noUDP&amp;sock=schedd_568_2de2_3&gt;\n</td></tr></tbody></table></div>\n\n\n<p>This caused the security session to be invalid, and the negotiator had to reauthenticate.\n\n</p><p>What caused this?</p></blockquote>", "remarks": "<blockquote>\n<em>2020-Apr-28 19:31:23 by tlmiller:</em> <br/>\n\nMat, I think it's still worthwhile for you to try to confirm using a less-unrealistic set-up, but I found one for which the master branch fails to run a job but this patch succeeds:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">use role : personal\nSCHEDD_DEBUG = D_SECURITY:2\n\n# Speed the test up.\nNEGOTIATOR_INTERVAL = 5\n\n# Allow condor_submit and condor_q to authenticate.\nSEC_DEFAULT_METHODS = FS\n# Grant them permission to submit jobs and read the queue user-specifically.\nALLOW_WRITE = *@azaphrael.org/*\n\n# This allows all daemons in a single personal condor to talk to each other..\n# (it's also the default, but we're trying to be clear about what's going on)\nSEC_USE_FAMILY_SESSION = TRUE\n# .. so make sure that the negotiator _must_ use the match password\n# (which is also on by default, but I forgot to be explicit about it)\nNEGOTIATOR.SEC_USE_FAMILY_SESSION = FALSE\n\n# Allows the negotiator to query private ads.\nCOLLECTOR.ALLOW_NEGOTIATOR = 184.60.25.78\n\n# Force only the schedd to use CCB.  We must disable shared port for the schedd\n# because otherwise the shared port, and thus all its daemons, uses or doesn't\n# use CCB, which will cause problems (because one side must be public).\nSCHEDD.USE_SHARED_PORT = FALSE\nSCHEDD.PRIVATE_NETWORK_NAME = mish-mash\nSCHEDD.PRIVATE_NETWORK_ADDRESS = 10.10.2.20\nCOLLECTOR_HOST = 184.60.25.78:9618\nSCHEDD.CCB_ADDRESS = $(COLLECTOR_HOST)\n\n# Give the schedd permission to register with CCB.\nCOLLECTOR.ALLOW_DAEMON = 184.60.25.78\n</pre></div>\n\n\n<p></p><hr/>\n<em>2020-May-11 15:20:03 by tlmiller:</em> <br/>\n\nSee also <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7223\" onclick=\"get_ticket_and_populate_wrapper('7223'); return false;\" title=\"CCB interferes with new negotiator auth sessions\">#7223</a></span>.\n\n<p></p><hr/>\n<em>2020-May-11 15:23:29 by tlmiller:</em> <br/>\n\nThe code review is against the stable-version patch.  My previous testing was against the identical patch for v8.9.\n\n<p></p><hr/>\n<em>2020-Jul-02 13:06:15 by johnkn:</em> <br/>\n\n<strong>CODE_REVIEW</strong> : looks good.\n\n<p></p><hr/>\n<em>2020-Jul-02 15:54:27 by zmiller:</em> <br/>\n\nI just saw this ticket and I vaguely remember discussing it a while ago. I just wanted to throw a really general question out there, but I haven't thought about this AT ALL so maybe it doesn't make sense and we can disregard this comment.  But anyhow:\n\n<p>The problem was a mismatch of what was used for identifying session: the session was being stored under a different key than was being used to look it up (stored with private network info, lookup without).  This latest code change keeps the private network name to store them and also to look them up.  This makes the sesion ids match, and is the most specific, so this will certainly work.  Did we consider the just the opposite, which is to <strong>remove</strong> the private info for both storing and retrieving?  This might allow better session reuse and/or cut down on unnecessary information being transmitted.  On the other hand it might create a conflict by having two distinct entities trying to use the same identifier.\n\n</p><p>Like I said, I haven't thought about it and don't want to switch contexts so if someone who actually looked at it and understood can chime in please do.\n\n</p><p></p><hr/>\n<em>2020-Jul-02 16:29:40 by tlmiller:</em> <br/>\n\nIIRC, we didn't consider making the identifier less specific because this problem happened when we started including the whole Sinful in the identifier, which we did for some good reason which I don't presently recall.  (It may have just been that the old &lt;ip:port&gt; style wasn't enough and it seems safer to use all of the indentifier bits that we have.)</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-02 14:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60066\">[60066]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7582\" onclick=\"get_ticket_and_populate_wrapper('7582'); return false;\" title=\"SINful mangled when flocking\">#7582</a></span>) Release note.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-May-11 15:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59626\">[59626]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7582\" onclick=\"get_ticket_and_populate_wrapper('7582'); return false;\" title=\"SINful mangled when flocking\">#7582</a></span>) Don't remove the private network information from the Sinful in daemon client, because we may need it for a security session.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Apr-24 13:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59479\">[59479]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7582\" onclick=\"get_ticket_and_populate_wrapper('7582'); return false;\" title=\"SINful mangled when flocking\">#7582</a></span>) Don't remove the private network information from the Sinful in daemon client, because we may need it for a security session.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2020-Jul-02 16:29", "status": "resolved", "created": "2020-Apr-07 14:25", "fixed_version": "2020-Apr-07 14:25", "broken_version": "v080906", "priority": "3", "subsystem": "DaemonsCM", "assigned_to": "tlmiller", "derived_from": "", "creator": "matyas", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "matyas@cs.wisc.edu blin@cs.wisc.edu tlmiller@cs.wisc.edu BBockelman@morgridge.org tannenba@cs.wisc.edu zmiller@cs.wisc.edu", "due_date": ""}