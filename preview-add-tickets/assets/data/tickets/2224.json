{"id": 2224, "title": "Ticket #2224: Incorrect use of StringList unparsing methods", "description": "<blockquote>\nMany places in the code use StringList's print_to_string() and print_to_delimed_string() methods incorrectly. The methods return NULL when invoked on an empty list. Otherwise, the pointer they return must be free()d.\n\n<p>In one example turned up by the testsuite, FileTransfer::SimpleInit() passes the returned pointer unchecked to dprintf() and never free()s it. This can result in either a crash (observed on solaris) or a memory leak.\n\n</p><p>A quick sample of several other call sites shows similar problems. All of the call sites should be reviewed.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Jun-10 15:00:30 by matt:</em> <br/>\n\nI went through print_to_delimed_string. The only leak is in pidgeon.cpp. Also, pidgeon.cpp &amp; hadoop.cpp sprintf %s NULL. I don't have an environment to build/test pidgeon or hadoop.\n\n<p>Files checked...\n\n</p><p></p><div class=\"verbatim\">\n<pre>$ git grep -l print_to_delimed_string\nsrc/condor_contrib/condor_pigeon/src/condor_pigeon/pigeon.cpp\nsrc/condor_dagman/dagman_main.cpp\nsrc/condor_hdfs/hadoop.cpp\nsrc/condor_unit_tests/OTEST_StringList.cpp\nsrc/condor_utils/condor_q.cpp\nsrc/condor_utils/string_list.cpp\nsrc/condor_utils/string_list.h\nsrc/condor_vm-gahp/vmware_type.cpp\nsrc/condor_vm-gahp/xen_type.linux.cpp\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Jun-10 16:34:43 by jfrey:</em> <br/>\n\nI've pushed fixes for all of the trouble spots I found, other than pigeon and hadoop.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2315\" title=\"Incorrect use of StringList unparsing methods, part deux\">#2315</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nIncorrect use of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StringList\" title=\"String List\">StringList</a></span> unparsing methods, part deux</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-10 16:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22157\">[22157]</a></span>: Improve handling of unparsed lists returned by <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StringList\" title=\"String List\">StringList</a></span>. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2224\" title=\"Incorrect use of StringList unparsing methods\">#2224</a></span> Many places in the code use StringList's print_to_string() and print_to_delimed_string() methods incorrectly. The methods return NULL when invoked on an empty list. Otherwise, the pointer they return must be free()d.\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-10 14:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22154\">[22154]</a></span>: Fix c-gahp crash in test suite on solaris. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2224\" title=\"Incorrect use of StringList unparsing methods\">#2224</a></span> StringList::print_to_string() was being used incorrectly by FileTransfer::SimpleInit(), which can lead to either a crash or a memory leak.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Jul-18 17:28", "status": "resolved", "created": "2011-Jun-10 14:20", "fixed_version": "2011-Jun-10 14:20", "broken_version": "v070500", "priority": "4", "subsystem": "Unknown", "assigned_to": "jfrey", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu", "due_date": ""}