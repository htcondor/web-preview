{"id": 2570, "title": "Ticket #2570: preemption does not work when group quotas are in effect", "description": "<blockquote>\nI previously put logic in place to limit the computation of pie-left and\nsubmitter-limit when group quotas are in effect, because otherwise negotiate()\ndoes not assign slots in a way that guarantees respect of other group quotas.\n\n<p>However, a side effect of this logic is that it doesn't allow one submitter to\npreempt another as desired, when preemption is enabled.\n\n</p><p>A complete solution will involve addressing these conditions:\n\n</p><p>&lt;eje&gt; What we need is to allow preemption inside of accounting groups, but the\ninner negotiation loop does not respect accounting group boundaries -- it will\ngrab slots in such a way that it steals slots that would need to be used by\nother groups to properly respect quotas\n\n</p><p>&lt;eje&gt; my previous solution imposed limits on submitter-limit, which properly\nrespected quotas, but does not allow a submitter to steal slots from\nalready-running jobs inside that group\n\n</p><p>&lt;eje&gt; we need a way to say \"yes, you can preempt, but only preempt jobs that\nare running in the same acct group as you are\"\n\n</p><p>&lt;eje&gt; So, an added condition for preemption.   in addition to having smaller\npriority value, and preemption-requirements evals to true, when HGQ is in\neffect we also have to have a match on accountinggroup(submitter) and\naccountinggroup(submitter-who-currently-has-slot-claim)\n\n</p><p>&lt;eje&gt; we also need logic to express constraint: \"if your group G quota is Q,\nand number of jobs running against G is N, then you can use up to (Q-N) new\nslots and after that you have to attempt to preempt jobs running against G\"</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Oct-21 15:27:45 by eje:</em> <br/>\n\nthoughts on a solution\n\n<p>&lt;eje&gt; calculateSubmitterLimits yields two values:  number of new slots you can have, plus number of slots you would need to preempt\n\n</p><p>&lt;eje&gt; plumb that information and invoke negotiate() in two modes -- \"new slots\" and then \"preempt\"\n\n</p><p>&lt;eje&gt; have to figure out how to extend logic of preemption to be aware of accounting groups when it needs to be\n\n</p><p></p><hr/>\n<em>2011-Oct-24 18:01:12 by eje:</em> <br/>\n\nTodd pointed out that there is group-related info already plumbed into job and slot ads on the negotiator for preemption policy-making.\n\n<p>I am going to add a couple new ones: <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RemoteGroup\" title=\"Remote Group\">RemoteGroup</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SubmitterGroup\" title=\"Submitter Group\">SubmitterGroup</a></span> (the group names themselves), which will enable a preemption policy that requires:\n\n</p><p></p><div class=\"verbatim\">\n<pre>(RemoteGroup =?= SubmitterGroup)</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Oct-24 22:24:04 by eje:</em> <br/>\n\nProposed patch supports two new attributes on resource/job ads in the negotiator at match-time:\n\n<p></p><div class=\"verbatim\">\n<pre>SubmitterGroup -- the accounting group name that a job was submitted under.  Always defined if accounting groups are enabled (GROUP_NAMES is defined), undefined if acct groups are not enabled.\nRemoteGroup -- the accounting group name of the submitter currently claiming a slot.\n</pre></div>\n\n\n<p>For example, if you want to implement a preemption policy that says \"only preempt slots claimed by a submitter in my same accounting group\" (which is a good way to help ensure that group quota allocations aren't violated), you can do this:\n\n</p><p></p><div class=\"verbatim\">\n<pre>PREEMPTION_REQUIREMENTS = (SubmitterGroup =?= RemoteGroup) &amp;&amp; (other-reqs)\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Oct-24 22:35:54 by eje:</em> <br/>\n\nTESTING:\n\n<p>To test fix, use the following configuration:\n</p><div class=\"code\">\n<pre class=\"code\">MAXJOBRETIREMENTTIME = 0\nPREEMPT = False\nRANK = 0\nCLAIM_WORKLIFE = 0\n\nPREEMPTION_REQUIREMENTS = True &amp;&amp; (SubmitterGroup =?= RemoteGroup)\nNEGOTIATOR_CONSIDER_PREEMPTION = True\n\nNEGOTIATOR_INTERVAL = 30\nNEGOTIATOR_DEBUG = D_FULLDEBUG\n\nNUM_CPUS = 10\n\nGROUP_NAMES = a, b\nGROUP_QUOTA_a = 5\nGROUP_QUOTA_b = 5\nGROUP_ACCEPT_SURPLUS = FALSE\n</pre></div>\n\n\n<p>Spin up the pool.  Then make sure the following priority factors are set:\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_userprio -setfactor a.u1@localdomain 10\nThe priority factor of a.u1@localdomain was set to 10.000000\n$ condor_userprio -setfactor b.u1@localdomain 10\nThe priority factor of b.u1@localdomain was set to 10.000000\n</pre></div>\n\n\n<p>Now submit the following jobs against \"a.u1\" and \"b.u1\":\n</p><div class=\"code\">\n<pre class=\"code\">universe = vanilla\ncmd = /bin/sleep\nargs = 600\nshould_transfer_files = if_needed\nwhen_to_transfer_output = on_exit\n+AccountingGroup=\"a.u1\"\nqueue 4\n+AccountingGroup=\"b.u1\"\nqueue 4\n</pre></div>\n\n\n<p>Let the jobs above negotiate (all 8 jobs should run).  After they negotiate, submit the following jobs for \"a.u2\" and \"b.u2\":\n</p><div class=\"code\">\n<pre class=\"code\">universe = vanilla\ncmd = /bin/sleep\nargs = 600\nshould_transfer_files = if_needed\nwhen_to_transfer_output = on_exit\n+AccountingGroup=\"a.u2\"\nqueue 2\n+AccountingGroup=\"b.u2\"\nqueue 2\n</pre></div>\n\n\n<p>Let these jobs negotiate.  \"a.u2\" and \"b.u2\" have lower prio-factors than \"a.u1\" and \"b.u1\".   \"a.u2\" should take one unclaimed slot, and then preempt another job from \"a.u1\".  Similarly for \"b.u2\"  The result should look like this:\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_q -format \"%s\" AccountingGroup -format \" | %s\\n\" JobStatus | sort | uniq -c\n      1 a.u1 | 1\n      3 a.u1 | 2\n      2 a.u2 | 2\n      1 b.u1 | 1\n      3 b.u1 | 2\n      2 b.u2 | 2\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Oct-24 22:47:18 by eje:</em> <br/>\n\nTESTING with preemption requirements False:\n\n<p>Test is same sequence as above, but with preemption requirements set to false:\n</p><div class=\"code\">\n<pre class=\"code\">MAXJOBRETIREMENTTIME = 0\nPREEMPT = False\nRANK = 0\nCLAIM_WORKLIFE = 0\n\nPREEMPTION_REQUIREMENTS = False\nNEGOTIATOR_CONSIDER_PREEMPTION = True\n\nNEGOTIATOR_INTERVAL = 30\nNEGOTIATOR_DEBUG = D_FULLDEBUG\n\nNUM_CPUS = 10\n\nGROUP_NAMES = a, b\nGROUP_QUOTA_a = 5\nGROUP_QUOTA_b = 5\nGROUP_ACCEPT_SURPLUS = FALSE\n</pre></div>\n\n\n<p>Running the same testing sequence as before with the modified configuration above, and you should see that now, \"a.u2\" and \"b.u2\" cannot preempt any jobs, and so each of them will only acquire one unclaimed slot, leaving all jobs from \"a.u1\" and \"b.u1\" running:\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_q -format \"%s\" AccountingGroup -format \" | %s\\n\" JobStatus | sort | uniq -c\n      4 a.u1 | 2\n      1 a.u2 | 1\n      1 a.u2 | 2\n      4 b.u1 | 2\n      1 b.u2 | 1\n      1 b.u2 | 2\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Oct-24 23:03:12 by eje:</em> <br/>\n\nTesting preemption without groups:\n\n<p>Using original test expression for preemption reqs, but this time disable groups:\n</p><div class=\"code\">\n<pre class=\"code\">MAXJOBRETIREMENTTIME = 0\nPREEMPT = False\nRANK = 0\nCLAIM_WORKLIFE = 0\n\nPREEMPTION_REQUIREMENTS = (SubmitterGroup =?= RemoteGroup)\nNEGOTIATOR_CONSIDER_PREEMPTION = True\n\nNEGOTIATOR_INTERVAL = 30\nNEGOTIATOR_DEBUG = D_FULLDEBUG\n\nNUM_CPUS = 10\n\n#disable acct groups:\n#GROUP_NAMES = a, b\nGROUP_QUOTA_a = 5\nGROUP_QUOTA_b = 5\nGROUP_ACCEPT_SURPLUS = FALSE\n</pre></div>\n\n\n<p>Running the same basic test sequence with the above config should result in all submitter competing against each other, in traditional non-HGQ fashion.  Two of the jobs from \"a.u1\" and/or \"b.u1\" should be preempted by jobs from \"a.u2\" and/or \"b.u2\" (and all four jobs for \"a.u2\" and \"b.u2\" should run):\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_q -format \"%s\" AccountingGroup -format \" | %s\\n\" JobStatus | sort | uniq -c\n      4 a.u1 | 2\n      2 a.u2 | 2\n      2 b.u1 | 1\n      2 b.u1 | 2\n      2 b.u2 | 2\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Oct-24 23:05:57 by eje:</em> <br/>\n\nIf proposed fix goes in I'll need to update the doc in section 3.4 to include <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SubmitterGroup\" title=\"Submitter Group\">SubmitterGroup</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RemoteGroup\" title=\"Remote Group\">RemoteGroup</a></span>\n\n<p></p><hr/>\n<em>2011-Oct-25 09:36:53 by danb:</em> <br/>\n\nYou will find that the way the special preemption-related attributes are managed is different in the master branch compared to V7_6-branch.  For efficiency, we no longer insert these attributes into the machine ad every time we are about to evaluate a match.  Instead, we do the insertion once per cycle.  Any information that is dynamic (e.g. usage) is handled via a callout to a custom classad function.  I don't think your new attributes will require any fancy treatment.  See <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2403\" title=\"negotiator spends lots of time in addRemoteUserPrios()\">#2403</a></span> for more details if you need them.\n\n<p></p><hr/>\n<em>2012-Jan-26 16:51:20 by eje:</em> <br/>\n\nWhat is the status of this?   Did LIGO make use of the patch?\n\n<p></p><hr/>\n<em>2012-Feb-29 14:29:22 by danb:</em> <br/>\n\n<strong>CODE_REVIEW:</strong>\n\n<p>Thanks for the patch!\n\n</p><p>I'm trying to understand the new limits.  Let me summarize my understanding here:\n\n</p><p></p><div class=\"verbatim\">\n<pre>submitterLimit = fair share value calculated by spinning pie algorithm\n\nsubmitterLimitUnclaimed = min(submitterLimit, groupQuota-groupUsage)\n\nlimitUsed = resources claimed so far in this round\n\nlimitUsedUnclaimed = unclaimed resources claimed so far in this round\n</pre></div>\n\n\n<p>If PREEMPTION_REQUIREMENTS allows, the user can claim all the way up to <code>limitUsed</code> by preempting other users.  Therefore, PREEMPTION_REQUIREMENTS=true can lead to arbitrarily large violations of the group quota, so long as resources are acquired via preemption.  If the administrator wishes to avoid this, they need to add <span class=\"quote\">(SubmitterGroup =?= RemoteGroup)</span>.  This is not in the default policy.  Shouldn't it be?\n\n</p><p>Why are the following two blocks of code not identical in how they test the preemption state?\n\n</p><p></p><div class=\"verbatim\">\n<pre>\n+                       if ((pstate != NO_PREEMPTION) &amp;&amp; SubmitterLimitPermits(cached_bestSoFar, limitUsed, submitterLimit, pieLeft)) {\n                                break;\n-                       }\n+                       } else if (SubmitterLimitPermits(cached_bestSoFar, limitUsedUnclaimed, submitterLimitUnclaimed, pieLeft)) {\n+                               break;\n+            }\n</pre></div>\n\n\n<p></p><div class=\"verbatim\">\n<pre>+        if ((candidatePreemptState == PRIO_PREEMPTION) &amp;&amp; !SubmitterLimitPermits(candidate, limitUsed, submitterLimit, pieLeft)) {\n+            rejForSubmitterLimit++;\n+            continue;\n+        } else if ((candidatePreemptState == NO_PREEMPTION) &amp;&amp; !SubmitterLimitPermits(candidate, limitUsedUnclaimed, submitterLimitUnclaimed, pieLeft)) {\n+            rejForSubmitterLimit++;\n+            continue;\n+        }\n</pre></div>\n\n\n<p>My only other comment is that ATTR_PREEMPT_STATE, since it is entirely for internal use, should conform to the new scheme we agreed to in the recent fw meeting: it should end in \"_\".\n\n</p><p></p><hr/>\n<em>2012-Mar-01 14:26:53 by eje:</em> <br/>\n\nThanks for the feedback -\n\n<p>Yes I think your summary is correct.  I agree regarding including (<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SubmitterGroup\" title=\"Submitter Group\">SubmitterGroup</a></span> <code>?</code> <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RemoteGroup\" title=\"Remote Group\">RemoteGroup</a></span>) to the default preemption policy, and I plan to include that in the final submission.\n\n</p><p>The reason for the slight difference in preemption state testing is that in the second block the additional state RANK_PREEMPTION needs to bypass the limit testing, as machine ranking preemption takes precedence over other logic.\n\n</p><p>I will also rename to ATTR_PREEMPT_STATE_\n\n</p><p></p><hr/>\n<em>2012-Mar-01 14:49:36 by tannenba:</em> <br/>\n\nThanks Erik and Dan.  Erik, assigning the ticket back to you, please address the pithy code review items and push.  Then you'll need to merge to V7_7-branch branch (careful about the merge conflict due to changes to how preemption requirements/rank evals were taken out of the inner loop as per Dan's comment above). If how to best rejigger this patch to merge into V7_7-branch ends up being non-obvious, please ask Dan for help.  Thanks again for this patch!</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/484/gt2570-acct-group-preempt.patch\">gt2570-acct-group-preempt.patch</a>\n19909 bytes added by eje on 2011-Oct-24 01:43:07 UTC.\n<br/>\nPatch to make preemption work properly with acct groups.  Against V7_6-branch.  Needs some cleanup and more testing, but it's working on my initial testing case.  This patch allows rank-based preemption to trump quotas.  I'm not sure if that's the best policy but it seems consistent with the high priority given to rank-based preemptions.<br/>\n</li><li><a href=\"attach_get/485/gt2570-acct-group-preempt.patch2\">gt2570-acct-group-preempt.patch2</a>\n23014 bytes added by eje on 2011-Oct-24 23:49:41 UTC.\n<br/>\nRevised patch (against V7_6-branch) that is cleaned up and also implements Todd's mandate to have preemption within accounting groups be policy based using:\n\n<p>PREEMPTION_REQUIREMENTS = (<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SubmitterGroup\" title=\"Submitter Group\">SubmitterGroup</a></span> <code>?</code> <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RemoteGroup\" title=\"Remote Group\">RemoteGroup</a></span>) &amp;&amp; (other-reqs)<br/>\n</p></li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Mar-02 17:56</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=30798\">[30798]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=30796\">[30796]</a></span>, Merged uw/V7_6-branch to uw/master ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2570\" title=\"preemption does not work when group quotas are in effect\">#2570</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Mar-02 12:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=30789\">[30789]</a></span>: ===VersionHistory:Completed=== <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2570\" title=\"preemption does not work when group quotas are in effect\">#2570</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Mar-02 12:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=30788\">[30788]</a></span>: Documentation for (<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SubmitterGroup\" title=\"Submitter Group\">SubmitterGroup</a></span> <code>?</code> <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RemoteGroup\" title=\"Remote Group\">RemoteGroup</a></span>) as used with PREEMPTION_REQUIREMENTS ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2570\" title=\"preemption does not work when group quotas are in effect\">#2570</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Mar-02 12:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=30787\">[30787]</a></span>: Add logic to allow preemption to work properly with group quotas ===GT:Fixed=== <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2570\" title=\"preemption does not work when group quotas are in effect\">#2570</a></span>  (By Erik Erlandson )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2012-Mar-02 18:52", "status": "defer", "created": "2011-Oct-21 15:03", "fixed_version": "2011-Oct-21 15:03", "broken_version": "v070506", "priority": "5", "subsystem": "Daemons", "assigned_to": "eje", "derived_from": "#1393", "creator": "eje", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "eje@cs.wisc.edu, dan@hep.wisc.edu, tstclair@redhat.com, tannenba@cs.wisc.edu, gthain@cs.wisc.edu,pcouvare@caltech.edu", "due_date": ""}