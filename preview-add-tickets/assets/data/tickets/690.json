{"id": 690, "title": "Ticket #690: dprintf initialization around fork() is broken", "description": "<blockquote>\nI ran into the dprintf_failure.MASTER problem with an EBADF on the lock fd again, this time in the V7_3_2-branch, as described in the remarks of <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=123\" onclick=\"get_ticket_and_populate_wrapper('123'); return false;\" title=\"Grand unified param() system: Phase 1\">#123</a></span>.\n\n<p>This problem is <strong>very</strong> hard to debug because it exists just at the boundary of a fork. Basically. the master forks a child, and the child thinks the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LockFd\" title=\"Lock Fd\">LockFd</a></span> is valid when in reality it is closed and when it tries to dprintf (in the param() system in this case) debug_lock() fails badly and writes the above file.\n\n</p><p>Also the dprintf API calls to dprintf_wrapup_fork_child() and dprintf_init_fork_child() don't seem to be called at all, which is very disturbing.\n\n</p><p>This is a showstopper because A) apparently it is easy to get the system into this state, and B) once it happens, who knows what incantation caused it or how to fix it.\n\n</p><p>This needs fixing!\n\n</p><p>I've been debugging it, but no luck so far. It remains elusive.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Aug-24 21:38:06 by psilord:</em> <br/>\n\nOk, I think I finally found it!\n\n<p>In daemon_core_main.cpp, around 1906, we see this block of code:\n\n</p><p></p><div class=\"verbatim\">\n<pre>        if ( get_mySubSystem()-&gt;isType( SUBSYSTEM_TYPE_MASTER ) ) {\n            int fd_null = safe_open_wrapper( NULL_FILE, O_RDWR );\n            if ( fd_null &lt; 0 ) {\n                fprintf( stderr, \"Unable to open %s: %s\\n\", NULL_FILE, strerror(errno) );\n                dprintf( D_ALWAYS, \"Unable to open %s: %s\\n\", NULL_FILE, strerror(errno) );\n            }\n            int fd;\n            for( fd=0;  fd&lt;=2;  fd++ ) {\n                close( fd );\n                if ( ( fd_null &gt;= 0 ) &amp;&amp; ( fd_null != fd ) &amp;&amp;\n                     ( dup2( fd_null, fd ) &lt; 0 )  ) {\n                    dprintf( D_ALWAYS, \"Error dup2()ing %s -&gt; %d: %s\\n\",\n                             NULL_FILE, fd, strerror(errno) );\n                }\n            }\n            // Close the /dev/null descriptor _IF_ it's not stdin/out/err\n            if ( fd_null &gt; 2 ) {\n                close( fd ); // line 1906!!!!!\n            }\n        }\n\n</pre></div>\n\n\n<p>Given the flow of the code around line 1906, it would appear to me that the\n<code>close(fd)</code> in line 1906 should be <code>close(fd_null)</code> instead. Otherwise, fd\nis left at 3 due to the fd++ in the for loop. In my specific case, fd 3 happens\nto be the LockFD for the dprintf() system.\n\n</p><p></p><hr/>\n<em>2009-Aug-24 21:59:36 by psilord:</em> <br/>\n\nFixed the errant close(fd) to be close(fd_null) in line 1906. It worked when\nI tested it, and I committed it to V7_3_2-branch and merged it to master.\n\n<p>I consider this ticket resolved.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-25 10:56</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15492\">[15492]</a></span>: When dup2'ing the NULL_FILE to the stdin/out/err fds, if the fd_null descriptor is &gt; 2, we should close the fd_null descriptor itself, not the fd variable which will be out of range for the entities in question due to the for loop. This fixes the VERY ANNOYING <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=690\" onclick=\"get_ticket_and_populate_wrapper('690'); return false;\" title=\"dprintf initialization around fork() is broken\">#690</a></span>, since I've hit that problem before,\u00a0[...]\n (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-24 21:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15487\">[15487]</a></span>: When dup2'ing the NULL_FILE to the stdin/out/err fds, if the fd_null descriptor is &gt; 2, we should close the fd_null descriptor itself, not the fd variable which will be out of range for the entities in question due to the for loop. This fixes the VERY ANNOYING <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=690\" onclick=\"get_ticket_and_populate_wrapper('690'); return false;\" title=\"dprintf initialization around fork() is broken\">#690</a></span>, since I've hit that problem before,\u00a0[...]\n (By Peter Keller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2010-Jan-28 13:26", "status": "resolved", "created": "2009-Aug-24 19:04", "fixed_version": "2009-Aug-24 19:04", "broken_version": "v070302", "priority": "1", "subsystem": "Daemons", "assigned_to": "psilord", "derived_from": "", "creator": "psilord", "rust": "", "customer_group": "other", "visibility": "public", "notify": "psilord@cs.wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}