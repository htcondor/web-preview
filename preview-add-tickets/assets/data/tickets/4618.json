{"id": 4618, "title": "Ticket #4618: Remove DAGMan code that condor_rms node jobs on condor_rm of DAGMan", "description": "<blockquote>\nWhen DAGMan gets condor_rm'ed, there's code in the schedd to condor_rm the corresponding node jobs.  But there's still code in Dag::RemoveRunningJobs() to do this as well.  We should take that code out of DAGMan and just let the schedd do its thing without putting extra load on it.\n\n<p>(Need to test to make sure this works, but I'm 99+% sure it will.)</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Sep-30 10:08:34 by wenger:</em> <br/>\n\nI just realized this isn't as simple as I thought, because if a DAG has a final node, and the DAGMan job gets condor_rm'ed, we need to remove any running node jobs before we submit the final node.  (I'm actually kind of wondering whether we should wait for all node jobs to terminate before we start the final node, but that would be a change to the existing behaviour).\n\n<p></p><hr/>\n<em>2014-Sep-30 13:02:24 by tannenba:</em> <br/>\n\nWhat is the desired semantic for a <code>FINAL</code> node - is it supposed to run only once all jobs in the dag are done, or can it run beforehand?\n\n<p></p><hr/>\n<em>2014-Sep-30 13:20:26 by wenger:</em> <br/>\n\nUnfortunately, that hasn't been clearly defined in the \"condor_rm of the DAG\" and \"ABORT-DAG-ON\" cases.  In all other (I think) cases, the FINAL node would only get run when all other node jobs have finished.\n\n<p>The currently-implemented semantics are that, when you condor_rm a DAG with a final node, DAGMan condor_rm's any queued node jobs, and then submits the FINAL node (without waiting for the condor_rm'ed jobs to exit the queue).\n\n</p><p>I guess I potentially want to split this ticket into two parts -- part one is duplicating the existing functionality except that DAGMan doesn't condor_rm the node jobs unless there's a FINAL node; part two would be possibly waiting for all of the node jobs to exit the queue before submitting the FINAL node.  (Also see <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=3995\" onclick=\"get_ticket_and_populate_wrapper('3995'); return false;\" title=\"Condor_rm'ed DAGMan waits for node jobs to exit\">#3995</a></span>.)\n\n</p><p></p><hr/>\n<em>2014-Oct-28 12:17:51 by wenger:</em> <br/>\n\nNote:  Some of the tests, such as job_dagman_abort-A, job_dagman_abort-B, job_dagman_abort-final-A, and job_dagman_abort-final-B (and probably others) should check that node jobs get properly removed.  (See the job_dagman_rm test for a way to do this.)\n\n<p></p><hr/>\n<em>2014-Oct-29 17:30:41 by wenger:</em> <br/>\n\nHmm -- maybe we should make a test that checks that DAGMan does not, in fact, do a condor_rm when it gets condor_rm'ed itself.  (Or add this functionality to the existing job_dagman_rm test.)\n\n<p>Maybe one way to do this would be to specify a non-standard \"condor_rm\" binary to DAGMan, which would cause the test to fail if it gets run...\n\n</p><p></p><hr/>\n<em>2014-Oct-29 17:44:54 by wenger:</em> <br/>\n\nOkay, the fix for this (including documentation and a test improvement that checks the functionality) is committed.  Since this is on the devel branch, I went ahead and committed it and I'm going to assign it to Zach for retroactive review.\n\n<p></p><hr/>\n<em>2015-May-01 16:10:17 by zmiller:</em> <br/>\n\n<strong>CODE REVIEW</strong>: Looks good!</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4620\" onclick=\"get_ticket_and_populate_wrapper('4620'); return false;\" title=\"Create a test of DAGMan getting condor_rm'ed\">#4620</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCreate a test of DAGMan getting condor_rm'ed</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=4628\" onclick=\"get_ticket_and_populate_wrapper('4628'); return false;\" title=\"Should condor_rm'ed DAGMan wait for nodes to exit before FINAL runs?\">#4628</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nShould condor_rm'ed DAGMan wait for nodes to exit before FINAL runs?</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=4685\" onclick=\"get_ticket_and_populate_wrapper('4685'); return false;\" title=\"Test that condor_rm'ed DAGMan doesn't remove its node jobs\">#4685</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nTest that condor_rm'ed DAGMan doesn't remove its node jobs</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-19 14:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41689\">[41689]</a></span>: minor 8.3.2 version history item edit <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4618\" onclick=\"get_ticket_and_populate_wrapper('4618'); return false;\" title=\"Remove DAGMan code that condor_rms node jobs on condor_rm of DAGMan\">#4618</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Oct-29 17:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41519\">[41519]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4618\" onclick=\"get_ticket_and_populate_wrapper('4618'); return false;\" title=\"Remove DAGMan code that condor_rms node jobs on condor_rm of DAGMan\">#4618</a></span>: DAGMan now does not generate a condor_rm command for its node jobs when it is condor_rm'ed itself; we <strong>do</strong> still generate the condor_rm command in other cases, such as when an ABORT-DAG-ON fires. The job_dagman_abort-final-A test now checks that ABORT-DAG-ON actually removes queued node\u00a0[...]\n (By Kent Wenger )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2015-May-01 16:10", "status": "resolved", "created": "2014-Sep-26 13:10", "fixed_version": "2014-Sep-26 13:10", "broken_version": "v080301", "priority": "2", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "#4490", "creator": "wenger", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "wenger@cs.wisc.edu, zmiller@cs.wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}