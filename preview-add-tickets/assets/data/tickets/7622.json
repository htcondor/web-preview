{"id": 7622, "title": "Ticket #7622: Difficult to run personal condor under Kubernetes", "description": "<blockquote>\nHTCondor, in various places, checks that the owner of a job does not have user or group id (uid or gid) 0 (i.e., is not root). When it notices this it generally rejects any attempt to do work on their behalf (submit jobs, write event logs, etc.).\n\n<p>Kubernetes, since v1.14 (June 2019), has the feature gate <code>RunAsGroup</code> default to <code>true</code>. When this feature gate is <code>false</code>, Kubernetes always runs pods with the gid set to whatever is in the image metadata. With the feature gate set to <code>true</code>, Kubernetes runs pods with the gid set in the pod security context (<a class=\"external\" href=\"https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\">https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod</a>). <strong>If no gid is set in the pod security context, Kuberentes runs the container as gid 0</strong>. There does not appear to be a way to recover the pre-1.14 behavior to run as the gid in the image metadata if the feature gate <code>RunAsGroup</code> is enabled.\n\n</p><p>We initially noticed this issue in the HTMap tutorials on mybinder.org, which hosts Jupyter Notebooks inside Kubernetes pods. The effect of the above is that, inside the pod, <code>id</code> showed\n</p><div class=\"code\">\n<pre class=\"code\">jovyan@jupyter-binder-2dexamples-2djupyter-2dstacks-2dshd85tff:~$ id\nuid=1000(jovyan) gid=0(root) groups=0(root),100(users)\n</pre></div>\n\n... and since the personal condor we use to back the examples is started in the entrypoint (and therefore by the user), the personal condor had the same <code>uid</code> and <code>gid</code>. It therefore rejected attempts to submit jobs (because of the <code>gid</code>). It also seemed to get very confused about whether it was a rootly condor or not, because it had some privileges by virtue of being gid 0.\n\n<p>I haven't tried it, but I believe this can be replicated by simply starting our HTC notebook image locally with <code>docker run --user 1000:0</code>.\n\n</p><p>As a hotfix for the HTC notebooks I did <a class=\"external\" href=\"https://github.com/htcondor/htc-notebook/pull/7/commits/012e190d1636eb30936495428bd971bc7e371084#diff-4095c27189dcd85cefd5ff73ea166601R29\">https://github.com/htcondor/htc-notebook/pull/7/commits/012e190d1636eb30936495428bd971bc7e371084#diff-4095c27189dcd85cefd5ff73ea166601R29</a> , which runs the master under <code>sg</code> in the entrypoint script. This solves the immediate issue of using the HTC notebooks under Kubernetes v1.14 or greater with default settings, but doesn't help anyone else trying to build their own images to run under Kubernetes.\n\n</p><p>ZKM suggested that we could /MAYBE/ use the config knob CONDOR_IDS as a workaround for this problem, if that code is implemented properly.  I haven't experimented with that. In the HTC notebooks in particular, the expected uid and gid are available as environment variables.\n\n</p><p>ZKM also suggests that a possible general solution is to add a flag that forces condor to drop privileges regardless of whether it actually has them.\n\n</p><p>Related issue on the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=BinderHub\" title=\"Binder Hub\">BinderHub</a></span> issue tracker: <a class=\"external\" href=\"https://github.com/jupyterhub/binderhub/issues/1088\">https://github.com/jupyterhub/binderhub/issues/1088</a></p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2020-Apr-28 09:04", "status": "new", "created": "2020-Apr-28 08:59", "fixed_version": "2020-Apr-28 08:59", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "zmiller", "derived_from": "", "creator": "karpel", "rust": "", "customer_group": "other", "visibility": "public", "notify": "karpel@wisc.edu, zmiller@cs.wisc.edu, gthain@cs.wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}