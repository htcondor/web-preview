{"id": 4631, "title": "Ticket #4631: Slow buffer growth antipattern in ProcAPI::GetSystemPerfData().", "description": "<blockquote>\nIn <code>ProcAPI::GetSystemPerfData()</code> (<code>condor_procapi/procapi.cpp:3212</code>), we call <code>RegQueryValueEx()</code> with a 40K buffer.  If that's not large enough, we <code>realloc()</code> the buffer and increase its size by 4K, and call <code>RegQueryValueEx()</code> again.  We repeat this until the buffer is large enough.  Conventional wisdom suggests that we should instead double the size of the buffer each time, thus reducing us from O(n) syscalls (and realloc()s) to O(log n).\n\n<p>If we're hitting this potential problem as hard as we expect, it's possible that this bug explains the \"performance cliff\" we've notice on the BaTLab Windows machines.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2014-Oct-01 15:40", "status": "new", "created": "2014-Oct-01 15:40", "fixed_version": "2014-Oct-01 15:40", "broken_version": "", "priority": "2", "subsystem": "DaemonProcD", "assigned_to": "johnkn", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "batlab", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, johnkn@cs.wisc.edu", "due_date": ""}