{"id": 6540, "title": "Ticket #6540: Preen should clean up core dump files", "description": "<blockquote>\nBy default, preen does not clean up core dump files in the $(LOG) folder. This could lead to the file system filling up, if enough processes crash and nothing cleans out the core files.\n\n<p>Let's make preen clean these up. We need to figure a policy, since core dumps can also be useful for debugging and should not be erased indiscriminately. I propose that files older than 30 days get removed. Thoughts?</p></blockquote>", "remarks": "<blockquote>\n<em>2018-Apr-23 15:14:48 by jfrey:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p></p><ul>\n<li>Your commits have the wrong ticket number (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6520\" title=\"starter crashes on update if it doesn't know the version of the shadow\">#6520</a></span> instead of <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6540\" title=\"Preen should clean up core dump files\">#6540</a></span>).\n\n<p></p></li><li>\"Process\" isn't the best term. Something like PROGRAM would be more\naccurate.\n\n<p></p></li><li>Should this code (particularly get_corefile_process()) be marked\nunix-only?\n\n<p></p></li><li>Use our my_popen() function instead of popen(). Our version doesn't\ninvoke the shell, so no one can play games with cleverly-crafted\nfilenames.\n\n<p></p></li><li>In get_corefile_process(), a unique_ptr would be better than a\nshared_ptr.\n\n<p></p></li><li>In get_corefile_process(), what if the output of 'file' is malformed?\nFor example, if the token after \"execfn:\" isn't something like\n'/foo/bar', then string::substr() can throw an exception.\n\n<p></p></li><li>In check_log_dir(), there are several situations in which a file\nisn't marked as good or bad. Is that the best action in these cases?\n<ul>\n<li>Two core files have the same timestamp.\n</li><li>Stat'ing the file fails.\n</li><li>get_corefile_process() fails to return an executable name.\n</li></ul>\n\n<p></p></li><li>10Mb seems like an awfully low default for max core file size. We'd\ndelete all core files for a moderately busy schedd, collector, or\nnegotiator.\n</li></ul>\n\n<p></p><hr/>\n<em>2018-Apr-24 14:10:53 by jfrey:</em> <br/>\n\n<strong>Code Review, cont.</strong>\n\n<p></p><ul>\n<li>You can get core files on windows, though they're little more than a stack trace. Running 'file' won't work there.\n\n<p></p></li><li>Consider using our run_command() function. It uses our my_popen() to run a command, then returns all of the output in a buffer. It also has a timeout.\n</li></ul>\n\n<p></p><hr/>\n<em>2018-Apr-27 15:45:23 by coatsworth:</em> <br/>\n\nI've fixed most of the things you mentioned, you can see them in the github comparison:\n\n<p><a class=\"external\" href=\"https://github.com/htcondor/htcondor/compare/V8_6-branch...V8_6-gt6520-core-cleanup\">https://github.com/htcondor/htcondor/compare/V8_6-branch...V8_6-gt6520-core-cleanup</a>\n\n</p><p>A few comments:\n\n</p><p>* First, my main design philosophy here is we don't want to accidentally delete important files. If we're unsure about a file for whatever reason, we ignore it. If we can't stat a core file, or we can't identify who created it, ignore it. The the 'file' command returns weird output, ignore it. I don't want to flag the file as good because we don't actually know if it's good. But good files and ignored files get treated the same: they don't get erased.\n\n</p><p>* Sorry about the wrong ticket number, I named my branch wrong and then the error spilled over into my commit messages :( Is this a big deal? Should I nuke the branch and make a new one with new commits?\n\n</p><p>* We're not going to check core files on Windows. I've #ifdef-ed this all out.\n\n</p><p>* In get_corefile_process(), the shared_ptr constructor is much easier to construct with a pointer and deleter. I couldn't get unique_ptr to work. Is it okay if I leave as is?\n\n</p><p>* I decided not to use run_command because it's not used anywhere in the condor codebase, I figured there must be a reason for that.\n\n</p><p>* Default for max core file size is now 50 Mb, does that sound reasonable? If not let me know what's a good number.\n\n</p><p></p><hr/>\n<em>2018-May-03 11:49:05 by jfrey:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>The current code looks ok.\n\n</p><p>In reply to your comments:\n\n</p><p></p><ul>\n<li>\"When in doubt, leave it alone\" sounds like the right approach.\n\n<p></p></li><li>No need to change anything due to the wrong ticket number. Making the branch name and commits visible in this ticket is sufficient.\n\n<p></p></li><li>shared_ptr is fine, if unique_ptr is being a butt. I haven't used a custom deleter with either, but the docs made it look like they would work the same.\n\n<p></p></li><li>TJ recommended run_command(), which he added not too long ago. Given that no other code is using it, avoiding it seems appropriate.\n\n<p></p></li><li>The default max core file size is something we should probably poll the rest of the FW team about.</li></ul>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Jul-30 11:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55234\">[55234]</a></span>: Added documentation (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6540\" title=\"Preen should clean up core dump files\">#6540</a></span>)  (By Mark Coatsworth )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-May-03 12:56</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=54831\">[54831]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=52958\">[52958]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52961\">[52961]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52964\">[52964]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52967\">[52967]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52968\">[52968]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52969\">[52969]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52984\">[52984]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52985\">[52985]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52986\">[52986]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52987\">[52987]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52988\">[52988]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52989\">[52989]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52990\">[52990]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52992\">[52992]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52995\">[52995]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52996\">[52996]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52997\">[52997]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=52999\">[52999]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53000\">[53000]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53018\">[53018]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53019\">[53019]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53021\">[53021]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53023\">[53023]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53025\">[53025]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53027\">[53027]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53046\">[53046]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53047\">[53047]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53079\">[53079]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53083\">[53083]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53099\">[53099]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53100\">[53100]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53109\">[53109]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=53111\">[53111]</a></span>,\u00a0[...]\n (By Mark Coatsworth )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Apr-27 15:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=54803\">[54803]</a></span>: Added some fixes suggested in code review (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6540\" title=\"Preen should clean up core dump files\">#6540</a></span>)  (By Mark Coatsworth )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Apr-16 15:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=54734\">[54734]</a></span>: Fixed Windows build problems (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6540\" title=\"Preen should clean up core dump files\">#6540</a></span>)  (By Mark Coatsworth )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Apr-10 16:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=54685\">[54685]</a></span>: Added preen logic to clean up core files (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6540\" title=\"Preen should clean up core dump files\">#6540</a></span>)  (By Mark Coatsworth )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2018-Jul-30 13:46", "status": "resolved", "created": "2018-Jan-24 14:21", "fixed_version": "2018-Jan-24 14:21", "broken_version": "", "priority": "2", "subsystem": "Tools", "assigned_to": "coatsworth", "derived_from": "", "creator": "coatsworth", "rust": "", "customer_group": "other", "visibility": "public", "notify": "coatsworth@cs.wisc.edu, johnkn@cs.wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}