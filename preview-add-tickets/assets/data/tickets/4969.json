{"id": 4969, "title": "Ticket #4969: Correctly report checkpointing status from vanilla universe.", "description": "<blockquote>\nWe don't presently report (in the user's job log and assumedly elsewhere) if or that a job which requested checkpoint support in vanilla universe actually checkpointed.  We should do so, especially if we can get the usual standard universe attributes to work without breaking anything.</blockquote>", "remarks": "<blockquote>\n<em>2015-Aug-28 10:45:15 by tlmiller:</em> <br/>\n\nIt would also be handy for the job and/or its slot to advertise the last time that the job checkpointed.\n\n<p></p><hr/>\n<em>2016-Feb-16 14:48:14 by tlmiller:</em> <br/>\n\nSee the first two FIXMEs in <a class=\"external\" href=\"https://htcondor-wiki.cs.wisc.edu/index.cgi/chngview?cn=44488\">https://htcondor-wiki.cs.wisc.edu/index.cgi/chngview?cn=44488</a>, part of <span class=\"ticket\"><a class=\"abandoned\" href=\"tktview?tn=4972\" title=\"Support non-periodic application-level checkpoints in vanilla universe\">#4972</a></span>.\n\n<p></p><hr/>\n<em>2016-Feb-22 13:31:57 by tlmiller:</em> <br/>\n\nTom [Downes] also reports that'd be nice -- especially if standard universe does already -- to report the <em>number</em> of failed checkpoints.\n\n<p></p><hr/>\n<em>2016-Apr-21 14:11:46 by tpdownes:</em> <br/>\n\nSeems like the best place to report periodic checkpoint testing. The following was performed on a one-server installation of Debian 8 with the following deviations from the packaged condor_config:\n\n<p></p><pre>  DAEMON_LIST = COLLECTOR, MASTER, NEGOTIATOR, SCHEDD, STARTD, CKPT_SERVER\n  PERIODIC_CHECKPOINT = $(LastCkpt) &gt; (3 * $(MINUTE))\n  UPDATE_INTERVAL = 15\n</pre>\n\n<p>The script, modified from Todd M to count minutes, rather than seconds:\n\n</p><p></p><pre>  #!/bin/bash\n</pre>\n\n<p></p><pre>  function SaveState () {\n  \techo $i &gt; saved-state\n  }\n</pre>\n\n<p></p><pre>  function VacateJob () {\n  \techo \"Saving state on vacate...\"\n  \tSaveState\n  \texit 17\n  }\n</pre>\n\n<p></p><pre>  function PeriodicCheckpoint () {\n  \techo \"Saving state on periodic checkpoint...\"\n  \tSaveState\n  \texit 17\n  }\n</pre>\n\n<p></p><pre>  function SpontaneousCheckpoint () {\n  \techo \"Checkpointing because I feel like it...\"\n  \tSaveState\n  \texit 17\n  }\n</pre>\n\n<p></p><pre>  function FailToSaveState () {\n  \techo \"Failing to save state...\"\n  \texit 18\n  }\n</pre>\n\n<p></p><pre>  trap VacateJob SIGUSR1\n  trap PeriodicCheckpoint SIGUSR2\n  trap FailToSaveState SIGTSTP\n</pre>\n\n<p></p><pre>  i=0\n  if [ -f saved-state ]; then\n    i=`cat saved-state`\n  fi\n</pre>\n\n<p></p><pre>  echo \"Starting counting from $i\"\n  while [ $i != 32 ]; do\n    # Mark the beginning of a step.\n    echo $i\n    sleep 60\n</pre>\n\n<p></p><pre>    # Increment the counter.\n    i=$((i+1))\n</pre>\n\n<p></p><pre>    # Self-checkpoint at the end of a phase.\n    if [ $i == 4 ]; then\n      SpontaneousCheckpoint\n    fi\n  done\n</pre>\n\n<p></p><pre>  exit 0\n</pre>\n\n<p>And the submit file\n\n</p><p></p><pre>  output                  = out.log\n  error                   = error.log\n  log                     = log.log\n</pre>\n\n<p></p><pre>  accounting_group = cgca.condor\n  accounting_group_user = thomas.downes\n</pre>\n\n<p></p><pre>  executable              = counting-ul\n  transfer_executable     = true\n  should_transfer_files   = true\n  universe                = vanilla\n  transfer_input_files    = input-file\n  transfer_output_files   = saved-state\n</pre>\n\n<p></p><pre>  stream_output\t\t= true\n  stream_error\t\t= true\n</pre>\n\n<p></p><pre>  when_to_transfer_output = ON_EXIT_OR_EVICT\n  +WantCheckpointSignal   = true\n  +CheckpointSig          = \"SIGUSR2\"\n  +CheckpointExitBySignal = false\n  +CheckpointExitCode     = 17\n  +WantFTOnCheckpoint     = true\n  # kill_sig\t\t\t\t= SIGUSR1\n</pre>\n\n<p></p><pre>  queue 1\n</pre>\n\n<p>Unless I set all of these extra job classads, I don't see periodic checkpointing, as one would presently expect. For example, if you don't set +CheckpointSig to SIGUSR2, condor_q will report the job in the held state and that it exited with code 15. Again, as you'd expect.\n\n</p><p>Concerns:\n\n</p><p></p><ul>\n<li>How does <span class=\"quote\">LastPeriodicCheckpoint</span> update?\n<ul>\n<li>reduced UPDATED_INTERVAL to 15 to monitor with condor_status\n</li><li>initial value: time job begins executing\n</li><li>new values: when the checkpoint signal is sent\n<ul>\n<li>potential race condition: should probably be when job signals/exits checkoint\n</li></ul>\n</li><li>it does not appear to update at all on successful \"self\" checkpoints\n</li></ul>\n</li><li>log file does not note occurrence of checkpoint</li></ul>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "experimental", "last_change": "2016-Apr-21 14:12", "status": "defer", "created": "2015-Apr-01 13:14", "fixed_version": "2015-Apr-01 13:14", "broken_version": "", "priority": "5", "subsystem": "DaemonsExecNode", "assigned_to": "tlmiller", "derived_from": "#4968", "creator": "tlmiller", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, downes@uwm.edu,pcouvare@caltech.edu", "due_date": ""}