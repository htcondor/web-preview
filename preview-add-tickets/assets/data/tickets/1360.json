{"id": 1360, "title": "Ticket #1360: startd hangs when fetch hook reads stdin a certain way", "description": "<blockquote>\nWith fetch hook using Perl on Windows, when doing a read from stdin it works, but when calling the join function on the stdin file handle (see fetch.pl -vs- fetchold.pl), it fails about 50-75%.  When it fails, the startd is dead until killed/restarted.</blockquote>", "remarks": "<blockquote>\n<em>2010-May-20 05:01:14 by mtmoore:</em> <br/>\n\nI found a simple test case that causes startd to hang requiring it to be killed hard. As before, the fetch hook in testing is invoking a bat file that runs a perl script. To re-create the issue create a simple perl script like below that tries to use a non-existent module.\n\n<p>Startd Log\n\n</p><p></p><pre>   05/19 16:54:34 Create_Process(): executable: 'C:\\condor\\libexec\\vbox\\fetch.bat'\n   05/19 16:54:34 Executable is a batch file, running: \"C:\\Windows\\system32\\cmd.exe\" /Q /C \"C:\\condor\\libexec\\vbox\\fetch.bat\"\n   05/19 16:54:34 GetBinaryType() returned 0\n   05/19 16:54:34 Create_Process(): executable: 'C:\\condor\\libexec\\vbox\\fetch.bat'\n   05/19 16:54:34 Executable is a batch file, running: \"C:\\Windows\\system32\\cmd.exe\" /Q /C \"C:\\condor\\libexec\\vbox\\fetch.bat\"\n   05/19 16:54:34 GetBinaryType() returned 0\n   05/19 16:54:34 DaemonCore::PidEntry::pipeFullWrite: Unable to write to fd 65537 (errno = 22).  Aborting write attempts.\n   05/19 16:54:34 DaemonCore::PidEntry::pipeFullWrite: Unable to write to fd 65539 (errno = 22).  Aborting write attempts.\n   05/19 16:54:34 DaemonCore::PidEntry::pipeFullWrite: Unable to write to fd 65542 (errno = 22).  Aborting write attempts.\n   05/19 16:54:34 HookClient C:\\condor\\libexec\\vbox\\fetch.bat (pid 5140) exited with status 0\n   05/19 16:54:34 Warning, hook C:\\condor\\libexec\\vbox\\fetch.bat (pid 5140) printed to stderr: Can't locate Foo/Bar.pm in @INC (@INC contains: C:/perl/site/lib C:/perl/lib .) at C:\\condor\\libexec\\vbox\\fetch.pl line 5. BEGIN failed--compilation aborted at C:\\condor\\libexec\\vbox\\fetch.pl line 5.\n   05/19 16:54:34 Hook C:\\condor\\libexec\\vbox\\fetch.bat (pid 5140) returned no data\n   05/19 16:54:34 GetOverlappedResult error: 109\n</pre>\n\n<p>The perl script (fetch.pl) that generated the error is:\n\n</p><p></p><pre>   #!/usr/bin/perl\n   use strict;\n   use warnings;\n</pre>\n\n<p></p><pre>   use Foo::Bar;\n</pre>\n\n<p></p><pre>   exit 0;\n</pre>\n\n<p></p><hr/>\n<em>2010-May-25 10:10:22 by mtmoore:</em> <br/>\n\nI have been able to create the same symptom through a different path. When a fetch hook retrieves work for a slot that is already running a fetched job startd hangs. As soon as the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=FetchWorkDelay\" title=\"Fetch Work Delay\">FetchWorkDelay</a></span> occurs I can no longer talk to the host's startd and must kill it manually. For testing I set it to 120 seconds. The fetch hook is running on all 4 slots. For some reason this fetch hook is also triggering the 'DaemonCore::PidEntry::pipeFullWrite' error.\n\n<p>Config snippet:\n\n</p><p></p><pre>    STARTD_JOB_HOOK_KEYWORD = VBOX\n    VBOX_HOOK_DIR = C:\\condor\\libexec\\vbox\n    VBOX_HOOK_FETCH_WORK = $(VBOX_HOOK_DIR)\\fetch.bat\n    VBOX_HOOK_PREPARE_JOB = $(VBOX_HOOK_DIR)\\prepare.bat\n    VBOX_HOOK_EVICT_CLAIM = $(VBOX_HOOK_DIR)\\exit.bat\n    VBOX_HOOK_JOB_EXIT = $(VBOX_HOOK_DIR)\\exit.bat\n    RANK = ifThenElse( isUndefined(VBoxSlot), 1, 0 )\n    FetchWorkDelay = ifThenElse(State == \"Claimed\", 120, 120)\n</pre>\n\n<p>I have the fetch hook defined as a bat file that runs the following perl script:\n\n</p><p></p><pre>    #!/usr/bin/perl\n    use strict;\n    use warnings;\n</pre>\n\n<p></p><pre>    print STDOUT &lt;&lt; \"EOF\";\n        JobUniverse = 5\n        Owner = \"mtmoore\"\n        User = \"mtmoore\\@clemson.edu\"\n        NiceUser = TRUE\n        Cmd = \"C:\\\\condor\\\\libexec\\\\vbox\\\\run.bat\"\n        Args = \"mtmoore\"\n        Iwd = \"D:\\\\CondorVM\"\n        Out = \"vbox.mtmoore.out\"\n        Err = \"vbox.mtmoore.err\"\n        StarterUserLog = \"vbox.mtmoore.user.log\"\n        StarterUserLogUseXML = FALSE\n        JobLeaseDuration = 604800\n        Requirements = TRUE\n    EOF\n    exit 0;\n</pre>\n\n<p>The run.bat file runs the following perl script:\n\n</p><p></p><pre>    #!/usr/bin/perl\n    use strict;\n    use warnings;\n    use File::Spec;\n</pre>\n\n<p></p><pre>    while ( 1 )\n    {\n        sleep 5;\n    }\n    exit 0;\n</pre>\n\n<p>In <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StartLog\" title=\"Start Log\">StartLog</a></span> I see something like:\n\n</p><p></p><pre>    05/25 11:00:28 Completed initial benchmarks.\n    05/25 11:00:28 slot4: State change: IS_OWNER is false\n    05/25 11:00:28 slot4: Changing state: Owner -&gt; Unclaimed\n    05/25 11:00:29 Executable is a batch file, running: \"C:\\Windows\\system32\\cmd.exe\" /Q /C \"C:\\condor\\libexec\\vbox\\fetch.bat\"\n    05/25 11:00:29 slot1: State change: IS_OWNER is false\n    05/25 11:00:29 slot1: Changing state: Owner -&gt; Unclaimed\n    05/25 11:00:29 Executable is a batch file, running: \"C:\\Windows\\system32\\cmd.exe\" /Q /C \"C:\\condor\\libexec\\vbox\\fetch.bat\"\n    05/25 11:00:29 DaemonCore::PidEntry::pipeFullWrite: Unable to write to fd 65537 (errno = 22).  Aborting write attempts.\n    05/25 11:00:29 slot4: REQ_CLASSAD:\n    05/25 11:00:31 State change: Finished fetching work successfully\n    05/25 11:00:31 slot1: Changing state: Unclaimed -&gt; Claimed\n    05/25 11:00:31 slot1: Warning: starting ClaimLease timer before lease duration set.\n    05/25 11:00:31 slot1: Sending Machine Ad to Starter\n    ....\n    &lt;AD&gt;\n    .....\n    05/25 11:00:32 slot1: Got universe \"VANILLA\" (5) from request classad\n    05/25 11:00:32 slot1: Changing activity: Idle -&gt; Busy\n    05/25 11:02:30 Executable is a batch file, running: \"C:\\Windows\\system32\\cmd.exe\" /Q /C \"C:\\condor\\libexec\\vbox\\fetch.bat\"\n    05/25 11:02:30 GetOverlappedResult error: 109\n</pre>\n\n<p>When I kill condor_startd I see in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StarterLog\" title=\"Starter Log\">StarterLog</a></span>:\n\n</p><p></p><pre>    05/25 11:04:14 Our Parent process (pid 3976) exited; shutting down\n    05/25 11:04:14 Our Parent process (pid 3976) exited; shutting down\n    05/25 11:04:14 Got SIGTERM. Performing graceful shutdown.\n    05/25 11:04:14 Got SIGTERM. Performing graceful shutdown.\n    05/25 11:04:14 ShutdownGraceful all jobs.\n    05/25 11:04:14 ShutdownGraceful all jobs.\n    05/25 11:04:14 Process exited, pid=4804, status=-1073741510\n    05/25 11:04:14 Process exited, pid=4944, status=-1073741510\n    05/25 11:04:15 ReadFile error: 109\n    05/25 11:04:15 WaitNamedPipe error: 2\n    05/25 11:04:15 ProcFamilyClient: failed to read response from ProcD\n    05/25 11:04:15 kill_family: ProcD communication error\n    05/25 11:04:15 ERROR \"ProcD has failed\" at line 599 in file ..\\src\\condor_c++_util\\proc_family_proxy.cpp\n    05/25 11:04:15 ShutdownFast all jobs.\n</pre>\n\n<p>Otherwise, the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StarterLog\" title=\"Starter Log\">StarterLog</a></span> looks okay.\n\n</p><p></p><hr/>\n<em>2010-Jun-03 16:27:24 by tstclair:</em> <br/>\n\nI can not seem to repro in my env.  The original ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=422\" onclick=\"get_ticket_and_populate_wrapper('422'); return false;\" title=\"Fetch hook broken on Windows.\">#422</a></span> had shown that NUM_CPUS &amp;&amp; performance had an effect, possibly due to a timing artifact.\n\n<p>If you have details on the machine configuration which yielded the error that may be helpful.\n\n</p><p></p><hr/>\n<em>2010-Jun-03 17:17:37 by mtmoore:</em> <br/>\n\nThe condor_config.local, no changes to the global config file. The machine is a quad core, 4GB RAM Windows Vista SP1 host. Config below, if you want any other details let me know.\n\n<p></p><pre>   #Generated ClassAds\n</pre>\n\n<p></p><pre>   STARTD_ATTRS = $(STARTD_ATTRS), INSTALLTYPE, CCIT_LAB, CCITLABLOC, HAS_VMWARE, HAS_MATLAB_R2009A, HAS_MAPLE_13, HAS_CYGWIN, HAS_R, HAS_R280, HAS_R290, HAS_VIZ, HAS_BOINC, HAS_PYTHON26, HAS_PYTHON25, HAS_VS90, HAS_PERL, HAS_COMSOL, HAS_SAS, HAS_MINITAB, HAS_RHINO40, HAS_3DSMAX, HAS_VRAY, HAS_VIRTUALBOX, HAS_VIRTUALBOX_HOOK, HAS_MATLAB_HOOK\n</pre>\n\n<p></p><pre>   INSTALLTYPE = \"SCCM\"\n   CCIT_LAB = TRUE\n   CCITLABLOC = \"LOWR11\"\n   HAS_VMWARE = TRUE\n   HAS_MATLAB_R2009A = TRUE\n   HAS_MAPLE_13 = TRUE\n   HAS_CYGWIN = TRUE\n   HAS_R = TRUE\n   HAS_R280 = TRUE\n   HAS_R290 = TRUE\n   HAS_VIZ = TRUE\n   HAS_BOINC = TRUE\n   HAS_PYTHON26 = TRUE\n   HAS_PYTHON25 = TRUE\n   HAS_VS90 = TRUE\n   HAS_PERL = TRUE\n   HAS_COMSOL = TRUE\n   HAS_SAS = TRUE\n   HAS_MINITAB = TRUE\n   HAS_RHINO40 = TRUE\n   HAS_3DSMAX = TRUE\n   HAS_VRAY = TRUE\n   HAS_VIRTUALBOX = TRUE\n   HAS_VIRTUALBOX_HOOK = TRUE\n   HAS_MATLAB_HOOK = HAS_MATLAB_R2009A &amp;&amp; HAS_VS90 &amp;&amp; HAS_PYTHON26\n</pre>\n\n<p></p><pre>   #Appending Config File condor_config.local.cu\n</pre>\n\n<p></p><pre>   #Configuration Options\n</pre>\n\n<p></p><pre>   SHADOW_TIMEOUT_MULTIPLIER=4\n   STARTER_TIMEOUT_MULTIPLIER=4\n   CLIENT_TIMEOUT=600\n   Q_QUERY_TIMEOUT=600\n   SCHEDD_MIN_INTERVAL=80\n</pre>\n\n<p></p><pre>   STARTD_DEBUG = D_JOB\n</pre>\n\n<p></p><pre>   MASTER_NAME = $(IP_ADDRESS)\n   STARTD_NAME = $(IP_ADDRESS)\n</pre>\n\n<p></p><pre>   SLOTS_CONNECTED_TO_CONSOLE = 2\n   SLOTS_CONNECTED_TO_KEYBOARD = 2\n   JOB_RENICE_INCREMENT = 15\n</pre>\n\n<p></p><pre>   StartIdleTime\t\t= 5 * $(MINUTE)\n</pre>\n\n<p></p><pre>   ENFORCE_CPU_AFFINITY = true\n</pre>\n\n<p></p><pre>   STARTD_SLOT_ATTRS = State, Activity, EnteredCurrentActivity\n</pre>\n\n<p></p><pre>   ANY_SLOT_STATE_OWNER = ( slot1_State =?= \"Owner\" || \\\n                         slot2_State =?= \"Owner\" || \\\n                         slot3_State =?= \"Owner\" || \\\n                         slot4_State =?= \"Owner\" || \\\n                         slot5_State =?= \"Owner\" )\n</pre>\n\n<p></p><pre>   ANY_SLOT_STATE_CLAIMED = ( slot1_State =?= \"Claimed\" || \\\n                           slot2_State =?= \"Claimed\" || \\\n                           slot3_State =?= \"Claimed\" || \\\n                           slot4_State =?= \"Claimed\" || \\\n                           slot5_State =?= \"Claimed\")\n</pre>\n\n<p></p><pre>   #Virtualbox hooks\n   STARTD_JOB_HOOK_KEYWORD = VBOX\n   VBOX_HOOK_DIR = C:\\condor\\libexec\\vbox\n   VBOX_HOOK_FETCH_WORK = $(VBOX_HOOK_DIR)\\fetch.bat\n   VBOX_HOOK_PREPARE_JOB = $(VBOX_HOOK_DIR)\\prepare.bat\n   VBOX_HOOK_EVICT_CLAIM = $(VBOX_HOOK_DIR)\\exit.bat\n   VBOX_HOOK_JOB_EXIT = $(VBOX_HOOK_DIR)\\exit.bat\n</pre>\n\n<p></p><pre>   RANK = ifThenElse( isUndefined(VBoxSlot), 1, 0 )\n</pre>\n\n<p></p><pre>   FetchWorkDelay = ifThenElse(State == \"Claimed\" &amp;&amp; Activity == \"Idle\",\\\n                               600, 300)\n</pre>\n\n<p></p><pre>   # Matlab hooks\n   #STARTD_JOB_HOOK_KEYWORD = MATLAB\n   MATLAB_HOOK_DIR = C:\\condor\\libexec\\matlab\n   MATLAB_HOOK_PREPARE_JOB = $(MATLAB_HOOK_DIR)\\matlab_prepare_hook.bat\n</pre>\n\n<p></p><pre>   #Boinc Collector\n   #STARTD.PER_JOB_HISTORY_DIR = D:\\condor\\logs\\per_job\n   STARTD_PER_JOB_HISTORY_DIR = D:\\condor\\logs\\per_job\n</pre>\n\n<p></p><pre>   #Appending Config File condor_config.local.x64.boinc\n</pre>\n\n<p></p><pre>   ##\n   # BOINC configuration\n   ##\n</pre>\n\n<p></p><pre>   #Blacklist to determine which labs should not run backfill\n   BACKFILL_BLACKLIST = ($(CCITLABLOC) =?= \"LABSSMAR\" || \\\n                      $(CCITLABLOC) =?= \"SIRR220\" || \\\n                      $(CCITLABLOC) =?= \"SIRR406\" || \\\n                      $(CCITLABLOC) =?= \"TESTPL\")\n</pre>\n\n<p></p><pre>   # Turn on backfill functionality, and use BOINC\n   ENABLE_BACKFILL = ($(BACKFILL_BLACKLIST) == FALSE)\n   BACKFILL_SYSTEM = BOINC\n</pre>\n\n<p></p><pre>   # Spawn a backfill job if we've been Unclaimed for more than 5\n   # minutes\n   START_BACKFILL = ( $(StateTimer) &gt; (1 * $(MINUTE)) &amp;&amp; (($(ANY_SLOT_STATE_OWNER) || \\\n     $(ANY_SLOT_STATE_CLAIMED)) == false) )\n</pre>\n\n<p></p><pre>   # Evict a backfill job if the machine is busy (based on keyboard\n   # activity or cpu load)\n   EVICT_BACKFILL = ( $(KeyboardBusy) || $(ANY_SLOT_STATE_OWNER) || \\\n     $(ANY_SLOT_STATE_CLAIMED) )\n</pre>\n\n<p></p><pre>   # Define a shared macro that can be used to define other settings.\n   # This directory must be manually created before attempting to run\n   # any backfill jobs.  This should be read/writable by all users.\n   BOINC_HOME = D:\\Data\n   # *NIX:\n   # Path to the boinc_client to use, and required universe setting\n   #BOINC_Executable =  /usr/local/bin/boinc_client\n   #BOINC_Universe = vanilla\n   #BOINC_Arguments = --attach_project http://einstein.phys.uwm.edu/ [key]\n</pre>\n\n<p></p><pre>   # WINDOWS: (note the use of the \"--dir\" option to boinc.exe, this is required)\n   # Path to the boinc_client to use, and required universe setting\n   BOINC_Executable = C:\\Program Files (x86)\\BOINC\\boinc.exe\n   BOINC_Universe = vanilla\n   #BOINC_Arguments = --dir $(BOINC_HOME) --attach_project http://einstein.phys.uwm.edu/ [key]\n   BOINC_Arguments = --dir $(BOINC_HOME) --attach_project http://einstein.phys.uwm.edu/ d1cdcffc16d2668a77f0adf6d78b2bfd\n</pre>\n\n<p></p><pre>   # What initial working directory should BOINC use?\n   BOINC_InitialDir = $(BOINC_HOME)\n</pre>\n\n<p></p><pre>   # Save STDOUT and STDERR\n   BOINC_Output = $(BOINC_HOME)/boinc.out\n   BOINC_Error = $(BOINC_HOME)/boinc.err\n</pre>\n\n<p></p><pre>   # What user the boinc client program should be run as. This\n   # macro is only used if the Condor daemons are running as root.\n   # In this case, the condor_starter must be told what user\n   # identity to switch to before spawning the boinc client. This\n   # can be any valid user on the local system, but it must have\n   # write permission in whatever directory is specified in\n   # BOINC_InitialDir).\n   BOINC_Owner = campus\\LabUser\n   STARTER_ALLOW_RUNAS_OWNER = TRUE</pre>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "todo", "last_change": "2012-Apr-25 13:18", "status": "abandoned", "created": "2010-Apr-16 13:57", "fixed_version": "2010-Apr-16 13:57", "broken_version": "v070400", "priority": "3", "subsystem": "Win32", "assigned_to": "tstclair", "derived_from": "#422", "creator": "tannenba", "rust": "a20035", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu; mtmoore@clemson.edu, tstclair@redhat.com", "due_date": ""}