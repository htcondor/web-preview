{"id": 5433, "title": "Ticket #5433: shared port on windows should hand sockets off without taking bigmutex", "description": "<blockquote>\nin the implementation of shared port on windows, the endpoint code creates a thread to listen on the pipe from the shared port daemon for handoff of the socket.  then when it tries to give the socket off to the main thread it blocks on the big-fat-mutex while trying to set a timer.  When the origination of the socket is the daemon itself, this will block because the big-fat-mutext is already held.\n\n<p>This happens routinely when the collector tries to send updates to itself, but it could also happen if two daemons tried to talk to each other at the same time.\n\n</p><p>To avoid this deadlock a lockless mechanism should be used to hand the socket from the shared port end point thread to the main thread.  This code can be windows specific because only the windows version uses a separate thread to talk to shared port.\n\n</p><p>this fix for this should also fix the underlying reason for this message\n\n</p><p></p><div class=\"verbatim\">\n<pre>09/25/15 15:00:31 (pid:11516) DaemonCore::Wake_up_select called from an unknown thread. windows tid = 7144\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2015-Dec-11 09:46:47 by tlmiller:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>Arguably, the dprintf() changes should go in a different patch.  (I don't care, but they aren't particularly closely tied to the change in question.)\n\n</p><p>I don't know if you actually meant to change the #define for ThreadSafeLogError(), or if that was a debugging change that snuck in.\n\n</p><p>The code proper looks fine, although I'm not familiar with that part of the Windows API.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Dec-14 21:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=46586\">[46586]</a></span>: Version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5283\" onclick=\"get_ticket_and_populate_wrapper('5283'); return false;\" title=\"Shared port deadlock on Windows?\">#5283</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5430\" onclick=\"get_ticket_and_populate_wrapper('5430'); return false;\" title=\"deadlock on windows when daemon talks to itself via shared port\">#5430</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5431\" onclick=\"get_ticket_and_populate_wrapper('5431'); return false;\" title=\"shared port should fail when source and destination are the same\">#5431</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5432\" onclick=\"get_ticket_and_populate_wrapper('5432'); return false;\" title=\"collector doesn't always remove itself from collector list\">#5432</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5433\" onclick=\"get_ticket_and_populate_wrapper('5433'); return false;\" title=\"shared port on windows should hand sockets off without taking bigmutex\">#5433</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5434\" onclick=\"get_ticket_and_populate_wrapper('5434'); return false;\" title=\"Overflow error when setting cgroup vm limit when VM &gt; 2 gb\">#5434</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Dec-11 10:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=46577\">[46577]</a></span>: turn off some debug logging from <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5433\" onclick=\"get_ticket_and_populate_wrapper('5433'); return false;\" title=\"shared port on windows should hand sockets off without taking bigmutex\">#5433</a></span> that had inavertently been left on  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Dec-06 02:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=46361\">[46361]</a></span>: for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5433\" onclick=\"get_ticket_and_populate_wrapper('5433'); return false;\" title=\"shared port on windows should hand sockets off without taking bigmutex\">#5433</a></span>, on Windows, hand off incoming shared port sockets to main thread in non-blocking way This commit adds a new mechanism in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> that allows any thread to queue a callback that will be called in the main thread at the top of the daemon core pump (just before timers are handled.) These callbacks\u00a0[...]\n (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Dec-14 16:57", "status": "resolved", "created": "2015-Dec-04 11:23", "fixed_version": "2015-Dec-04 11:23", "broken_version": "", "priority": "4", "subsystem": "Daemons", "assigned_to": "johnkn", "derived_from": "#5430", "creator": "johnkn", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}