{"id": 5285, "title": "Ticket #5285: Security hostname of SELF for portable localhost definition", "description": "<blockquote>\n<span class=\"section\"><h2>Problem </h2></span>\n\n<p>An administrator may want to say \"trust everyone on this local computer\" for a given operation.  This is desired as the default behavior for a personal HTCondor.  However, we can't easily express this.  You can try something like\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">ALLOW_READ=*/127.0.0.1,*/1::1,*/$(IP_ADDRESS)\n</pre></div>\n\n\n<p>but that doesn't cover everything. Some Linux distributions have 127.0.0.2 set up to also mean loopback.  (Or on Ubuntu or Debian, sometimes 127.0.1.1.) Every IPv6 enabled computer will have an arbitrary link-local address.  Many computers will have multiple IP addresses. Some computers IP addresses will change at runtime.  We'd like to catch all of these cases, at least most of the time, with a particular focus on having <code>use role:personal</code> Just Work almost all of the time.\n\n</p><p><span class=\"section\"></span></p><h2>Goal </h2>\n\n<p>It should be possible to write a security policy allowing any connection from the local computer without needing to enumerate specific interfaces.  The result might look something like:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">ALLOW_READ=*/SELF\n</pre></div>\n\n\n<p><span class=\"section\"></span></p><h2>Proposal </h2>\n\n<p></p><ol>\n<li>Someone familiar with the networking code (probably tlmiller or adesmet) creates a new function <code>bool Sock::connection_is_to_self()</code> or similar.  The function operates on an active connection and compares the local IP address to the remote IP address. If they are exactly the same, return true, otherwise return false.\n\n<p></p></li><li>Someone familiar with the security code (probably zmiller) adds logic to test all connections against the above function.  If true, the \"IP address\" used in security tests becomes the string \"SELF\".  Thus <code>ALLOW_READ=*/SELF</code> becomes meaningful. [Edit: zmiller] We should look at the string first, and if it is equal to SELF, then call Sock::connection_is_to_self() to determine the answer, rather than call it on every connection.  This also aids in backwards campatability, since existing config files will either have $(IP_ADDRESS) or an actual hard-coded IP address, and we can't go swapping that out from under them.\n\n<p></p></li><li>Someone (probably johnkn) modifies <code>role:personal</code> to use this new syntax.\n</li></ol>\n\n<p><span class=\"section\"></span></p><h2>Limitations and concerns</h2>\n\n<p>Won't work if a system connects to itself from a different address than the destination. This is deemed silly, unlikely, and not worth worrying about.\n\n</p><p>We're not certain about the risks of spoofing. Will our various supported operating systems accept external packets that purport to be from itself? Worst case this is no more dangerous than <code>ALLOW_READ=*/$(IP_ADDRESS)</code> , but may be perceived as being safer and lead to less security.\n\n</p><p><span class=\"section\"></span></p><h2>Rejected ideas</h2>\n\n<p>We considered a new authentication method, \"ANONYMOUS_LOCAL\" that would map to the user \"ANONYMOUS_LOCAL\" (or perhaps something else via the map file). This was rejected as adding complexity and noise to the log files.  We could have special cased the method to not add noise to the log files, but that adds further complexity.  The proposal above is believed to be a smaller change.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2016-Feb-12 15:46", "status": "new", "created": "2015-Sep-30 15:25", "fixed_version": "2015-Sep-30 15:25", "broken_version": "v000000", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "zmiller@cs.wisc.edu, tlmiller@cs.wisc.edu, johnkn@cs.wisc.edu", "due_date": ""}