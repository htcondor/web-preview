{"id": 2416, "title": "Ticket #2416: Remove support for antique Visual Studio C++", "description": "<blockquote>\nPossible STUDENTTASK\n\n<p>We still have support for some very, very old versions of Visual Studio / Visual C++ scattered through our code.  It's never used, there is a chance it's bitrotted, and it's bloat.  Proposed:\n\n</p><p></p><ol>\n<li>Identify a minimum version of Visual Studio to support.  TJ is probably the best current resource.  At a bare minimum, declare Visual Studio 6 dead.\n</li><li>Given the previous, identify the associated _MSC_VER macro setting.  (It's 1200 for Visual Studio 6)\n</li><li>Search for all references to _MSC_VER in the code where it is being compared to a number.  Skip cases simply checking for it existing.\n</li><li>For each reference, if possible, simplify the test on the assumption that it will always be at least the minimum.\n</li><li>Add a single check to ensure the minimum version, maybe in <a class=\"file\" href=\"rlog?f=src/condor_daemon_core.V6/daemon_core_main.cpp\">/src/condor_daemon_core.V6/daemon_core_main.cpp</a>, something like:\n<div class=\"code\">\n<pre class=\"code\">#if _MSC_VER &lt;= 1200\n#    error A more modern version of Visual C++ is required.\n#endif\n</pre></div>\n</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2011-Aug-24 14:15:51 by adesmet:</em> <br/>\n\nI ran into this while trying to determine where int32_t is defined on Windows and stumbling across a few wrong locations in dead Windows code paths.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2011-Aug-24 14:15", "status": "new", "created": "2011-Aug-24 14:13", "fixed_version": "2011-Aug-24 14:13", "broken_version": "v070700", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}