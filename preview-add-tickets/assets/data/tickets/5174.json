{"id": 5174, "title": "Ticket #5174: Add resource request prefetch phase to the negotiator", "description": "<blockquote>\nCMS's global pool negotiator continues to struggle to keep up with the negotiation cycles.\n\n<p>Quite a bit of the negotiation cycle is a combination of slow/loaded schedds and the sheer amount of work to do (over 100 RRL requests per negotiation cycle).  The schedd is about 30% CPU-bound -- the rest is waiting on the network.\n\n</p><p>I'd like to investigate some simple concurrency in the negotiator.  I'd like to add an optional 'prefetch phase' where the negotiator keeps a SEND_JOB_INFO command in flight to each schedd (meaning only one negotiation is active per schedd).  The resulting RRL will be used at the beginning of the negotiation with that submitter - meaning the negotiator will not need to wait on the schedd to respond to match the first set of RRLs per submitter.\n\n</p><p>The prefetch phase would have a fixed length - any remaining prefetches are abandoned.  On timeout/error, any remaining prefetches for that schedd are dumped.  Note that this keeps the \"one socket per schedd\" approach - if a single schedd has many users, then this prefetching will be of minimal value (as these will all be serialized).  However, this drawback has the advantage of keeping the code changes manageable.\n\n</p><p>So to summarize, the code will send one NEGOTIATE per submitter ad to each schedd, serially. After reading the requests for one submitter and not returning any matches, it will start a new NEGOTIATE for the next submitter.\nAfter the prefetch phase, when it gets to each submitter in the normal blocking cycle, it will send another NEGOTIATE command, followed by a stream of matches for the prefetched requests. If it runs out of prefetched requests, it will send SEND_JOB_INFO as needed as before.</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Jul-27 20:22:24 by bbockelm:</em> <br/>\n\nSome notes from testing:\n<ul>\n<li>It seems that there's significant speedup even in single-schedd setups (probably because the schedd is less busy at the beginning of the negotiation cycle?).\n</li><li>The newer matchmaking protocol is quite difficult to get right.  It's worth noting that in the v0 protocol, the negotiator MUST NOT send an END_NEGOTIATON after it receives NO_MORE_JOBS.  In the v1 protocol, the negotiator MUST send an END_NEGOTIATION if it receives any JOB_INFO before the NO_MORE_JOBS - but MUST NOT send an END_NEGOTIATION if there were no JOB_INFO sent.  Your welcome, future reader.\n</li><li>In the CMS global pool, this results in about a 10x reduction in time for Phase 4.  I say \"about\" because before we had to timeout the whole cycle at 1200s and there was plenty of work left to do when we were timed out.  Currently, Phase4 is below 120s.\n<ul>\n<li>Confounding the measurements, however, is the fact that the device for /var/log/condor was incredibly slow and I moved the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=NegotiatorLog\" title=\"Negotiator Log\">NegotiatorLog</a></span> to /dev/shm today.  Additionally, I don't have a control pool to do a side-by-side measurement.\n</li><li>However, looking at the basic negotiator health from the log (no timeouts anymore!), I think this is a very significant improvement despite the poor measurements I have.\n</li></ul>\n</li></ul>\n\n<p></p><hr/>\n<em>2015-Jul-28 14:31:58 by bbockelm:</em> <br/>\n\nBumping this ticket to Todd, who probably is most up-to-date with the negotiation protocol.\n\n<p></p><hr/>\n<em>2015-Nov-11 13:50:54 by tannenba:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>A fantastic patch, something I've thought for a long time would be nice to have.  Also like the surgical approach.   Some items to improve for the merge:\n\n</p><p></p><ol>\n<li>Lack of comments in the code makes it unnecessarily hard to follow.\n\n<p></p></li><li>The new config params need better names. They should include NEGOTIATOR.\n\n<p></p></li><li>In prefetchResourceRequestLists(), selector.timed_out() and selector.failed() are mutually exclusive, but they are logically anded to trigger a code block.\nThat code block has problems, though. It gives up trying to read responses from schedds. To do so, it needs to close the sockets, like the timeout code at the end of the function.\n\n<p></p></li><li>At the end of prefetchResourceRequestLists(), for any schedds where it tried to prefetch but timed out before finishing prefetch, it closes the socket and then tries to send an END_NEGOTIATE (which turns into a noop because of the closed socket).\n\n<p></p></li><li>Mixing STL shared pointers and Classy Counted Pointer class is not a good idea.\n\n<p></p></li><li>Need to ensure the prefetch phase only talks to schedds that support\nresource request lists.\n</li></ol>\n\n<p></p><hr/>\n<em>2015-Dec-14 17:38:20 by tannenba:</em> <br/>\n\nCommit <span class=\"chng\"><a href=\"chngview?cn=46583\">[46583]</a></span> is a squash commit of all the patches on the\nbranch master-negotiator-bulk-io (along with fixes for merge conflicts).</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=5443\" title=\"Document the Negotiator Prefetch Phase\">#5443</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nDocument the Negotiator Prefetch Phase</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6164\" title=\"Fix negotiator prefetch bugs from code review\">#6164</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nFix negotiator prefetch bugs from code review</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Dec-14 17:34</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=46584\">[46584]</a></span>: Change names of knobs involving negotiator prefetch. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5174\" title=\"Add resource request prefetch phase to the negotiator\">#5174</a></span> All knobs involving negotiator prefetch now start with NEGOTIATOR_PREFETCH....  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Dec-14 14:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=46583\">[46583]</a></span>: Add a resource request prefetch phase to the negotiator. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5174\" title=\"Add resource request prefetch phase to the negotiator\">#5174</a></span> If enabled in the config file, the negotiator will concurrently connect to each schedd that has one or more active submitters and start send one NEGOTIATE per submitter ad to each schedd, serially. After reading the requests for one submitter\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-27 20:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=45416\">[45416]</a></span>: Nail down END_NEGOTIATE for protocol v1. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5174\" title=\"Add resource request prefetch phase to the negotiator\">#5174</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-27 12:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=45412\">[45412]</a></span>: Fix bulk RRL requests. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5174\" title=\"Add resource request prefetch phase to the negotiator\">#5174</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-26 22:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=45411\">[45411]</a></span>: Reuse selector object; reset map each loop. #0  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-26 21:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=45410\">[45410]</a></span>: Tune/fix prefetch timeouts. #0  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-24 15:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=45403\">[45403]</a></span>: Add a concurrent prefetch loop for resource requests lists. #0  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2015-Dec-16 13:45", "status": "resolved", "created": "2015-Jul-26 22:57", "fixed_version": "2015-Jul-26 22:57", "broken_version": "", "priority": "2", "subsystem": "DaemonsCM", "assigned_to": "tannenba", "derived_from": "#5162", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "bbockelm@cse.unl.edu", "due_date": ""}