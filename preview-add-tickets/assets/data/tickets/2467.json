{"id": 2467, "title": "Ticket #2467: getdirentries is broken in stduniv", "description": "<blockquote>\nthe getdirentries() system call was discovered to be fragile and broken. Also, the test program was discovered to be broken. Everything relating to this call and the requisite call to getdents() that getdirentries() make, is, in fact, broken.\n\n<p>It appears to have been passing our test suite as a fluke and, in fact, didn't work in standalone mode.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Sep-15 14:37:19 by psilord:</em> <br/>\n\nI found one problem in that we extract getdirentries from glibc and call it. This call then calls our getdents() call. The problem is that BOTH of them perform the unmapping of the fd through the file table. The second unmap is incorrect and causes failure. It turns out, that it is even worse. We need to\nunmap the fd when going to the shadow, but not when doing it locally, and there is no means to specify that.\n\n<p></p><hr/>\n<em>2011-Sep-15 14:38:02 by psilord:</em> <br/>\n\nAnother problem I found was the test program for getdirentries(). It was simply\nwrong and worked as a fluke. I have a new test program which fixes this mess.\n\n<p></p><hr/>\n<em>2011-Sep-19 11:11:12 by psilord:</em> <br/>\n\nOne major problem, and the reason why getdirentries went red in the first place after my initial commit to fix type correctness in the stub generator, was that when I refactored the stub generator to be type\ncorrect for return values of system calls, I missed the handling of the\n'code_bytes_bool' expression in the syscall.tmpl file. That expression\nnames the variable symbol in the generated source which holds a length\nquantity for the coding of a binary array. I had changed some aspects of\nthe stub generator to hold the returned value in a symbol called \"ret_val\".\nHowever, \"rval\" was a symbol that was still valid in the scope of all\nof the calls in receivers.cpp. So I ended up choosing the wrong symbol and\nonly wrote a tiny fraction of the bytes in an array back to the job. This\nfix makes ALL handling of the return valus of system calls use the \"ret_val\"\nsymbol so it shouldn't happen anymore. I never saw the error from the compiler\nbecause it turned out, unluckily, that \"rval\" and \"ret_val\" were of the\nsame type in the calls that were failing.\n\n<p></p><hr/>\n<em>2011-Sep-19 11:22:28 by psilord:</em> <br/>\n\nTo summarize. The test program for this call actually found an error that I introduced when doing <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2337\" title=\"Implement 64-bit support for file i/o in stduniv\">#2337</a></span>. However, the test and system call emulation were so screwed up, that it took me a while to realize that this happened. Once I fixed the system call and the test, which were both wrong, I discovered the problem with <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2337\" title=\"Implement 64-bit support for file i/o in stduniv\">#2337</a></span>.\n\n<p></p><hr/>\n<em>2011-Sep-19 14:18:46 by psilord:</em> <br/>\n\nOk, I'm waiting for a green (or green enough, at any rate) test through NMI and then I'll check in my fixes.\n\n<p></p><hr/>\n<em>2011-Sep-21 10:25:24 by psilord:</em> <br/>\n\nOk, the tests pass. I'm committing this today, but I need to document the bugfix still.\n\n<p></p><hr/>\n<em>2011-Oct-03 16:41:02 by psilord:</em> <br/>\n\nDocumented and checked in.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-21 11:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27306\">[27306]</a></span>: ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2467\" title=\"getdirentries is broken in stduniv\">#2467</a></span> ===GT:Fixed=== <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2467\" title=\"getdirentries is broken in stduniv\">#2467</a></span> Fixed a pile of wrongness with the getdirentries() syscall. First, the test for it was just broken in addition to being fragile. I fixed it to not be fragile if the tetsdir already exists, and then I fixed it to actually handle call getdirentries() correctly and check\u00a0[...]\n (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-19 11:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27279\">[27279]</a></span>: ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2467\" title=\"getdirentries is broken in stduniv\">#2467</a></span> This is the first part of the fix for the broken getdirentries() problem. Also, it turns out that this problem affected other system calls and Condor 7.7.1 is a little messed up over it.\u00a0[...]\n (By Peter Keller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Oct-03 16:41", "status": "defer", "created": "2011-Sep-15 14:34", "fixed_version": "2011-Sep-15 14:34", "broken_version": "v070700", "priority": "5", "subsystem": "Std", "assigned_to": "psilord", "derived_from": "", "creator": "psilord", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "psilord@cs.wisc.edu,pcouvare@caltech.edu", "due_date": "20111003"}