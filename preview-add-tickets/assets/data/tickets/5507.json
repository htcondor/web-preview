{"id": 5507, "title": "Ticket #5507: Expose condor_drain functionality in the Python bindings", "description": "<blockquote>\nCERN wants to be able to utilize the condor_drain functionality via the Python bindings (see the condor_drain man page).\n\n<p>Possibly make a new Python primitive:  send a command name followed by a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span>.\n\n</p><p>Talk to ToddT or TJ for more info about Python bindings.</p></blockquote>", "remarks": "<blockquote>\nThe drain commands don't really fit in the claim class or in the dc_tool class, so this will be implemented in a new class.  the <strong>Startd</strong> class.\n\n<p>This class will have two methods\n\n</p><p></p><pre>   drainJobs(drain_type, resume_on_completion, check) returns drain_id\n</pre>\n\n<p><code>drain_type</code> optional, must be a member of the <code>htcondor.DrainTypes</code> enum: <code>Fast</code>, <code>Graceful</code>, or <code>Quick</code>. default: Graceful <br/>\n\n<code>resume_on_completion</code> option, if true exit draining state when draining completes. default: false <br/>\n\n<code>check</code> optional, an expression that must evaluate to true on all slots or the drain request will abort. <br/>\n\n<code>drain_id</code> is a string ID assigned to the drain request when the drain command is accepted. Startd's prior to 8.4.6 or 8.5.4, will always return the empty string as the <code>drain_id</code> even though a non-empty drain id was actually assigned.\n\n</p><p></p><pre>   cancelDrainJobs(drain_id)\n</pre>\n\n<p><code>drain_id</code> optional, the drain request id assigned by the prior drain command. if no <code>drain id</code> is given, all drain commands are cancelled.\n\n</p><p>Here's a sample script using the new drain binding.\n</p><div class=\"snip\">\n<pre class=\"sniplabel\">drain_fast_all_jobs.py </pre>\n<pre class=\"snip\">#!/usr/bin/python\n\n# Drain all startds\n\nimport htcondor\ncollector = htcondor.Collector()\n\naddrs = set()\n\nfor startd_ad in collector.locateAll(htcondor.DaemonTypes.Startd):\n    # collector will return all of the slot (machine) ads, but we really only want the\n    # address.\n    addr = startd_ad['myaddress']\n    if addr in addrs: continue\n    addrs.add(addr)\n\n    print \"Draining (Fast)\", startd_ad['machine'], addr\n    startd = htcondor.Startd(startd_ad)\n    drain_id = startd.drainJobs(htcondor.DrainTypes.Fast, True)\n    print \"Drain id is\", drain_id\n</pre></div>\n\n\n<p></p><hr/>\n<em>2016-Jun-01 10:46:47 by tim:</em> <br/>\n\nPushing this to the 8.5.6 release. We need a design review before making this public.\n\n<p></p><hr/>\n<em>2016-Jun-27 10:00:14 by tim:</em> <br/>\n\nBrian Bockelmann says that this is OK.\n\n<p></p><hr/>\n<em>2016-Jul-27 13:07:36 by wenger:</em> <br/>\n\nI want to add an example to the docs for this, but I want to finish off some other tickets first...</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=5943\" title=\"Add example for drain functionality in python bindings\">#5943</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nAdd example for drain functionality in python bindings</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-26 18:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48854\">[48854]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5507\" title=\"Expose condor_drain functionality in the Python bindings\">#5507</a></span>: Oops -- fixed mistake in previous documentation.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-26 17:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48853\">[48853]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5507\" title=\"Expose condor_drain functionality in the Python bindings\">#5507</a></span>: Finished up documentation for this, cleaned up version history entry and added link.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-20 16:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48821\">[48821]</a></span>: Version history for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5666\" title=\"submit via python bindings should work like condor_submit\">#5666</a></span> and preliminary documention of new python bindings <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5507\" title=\"Expose condor_drain functionality in the Python bindings\">#5507</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5666\" title=\"submit via python bindings should work like condor_submit\">#5666</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-20 15:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48820\">[48820]</a></span>: Version history for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5530\" title=\"condor_q does not respect QUEUE_SUPER_USERS from CERTIFICATE_MAPFILE\">#5530</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5721\" title=\"config/submit language should support multiline values\">#5721</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5507\" title=\"Expose condor_drain functionality in the Python bindings\">#5507</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5751\" title=\"add a userMap function to condor ClassAds\">#5751</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Apr-12 16:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48205\">[48205]</a></span>: for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5507\" title=\"Expose condor_drain functionality in the Python bindings\">#5507</a></span>, add missing startd.cpp to CMakeLists.txt for python bindings.  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Apr-12 15:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48204\">[48204]</a></span>: add python bindings for the condor_drain command functionality. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5507\" title=\"Expose condor_drain functionality in the Python bindings\">#5507</a></span> ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2016-Oct-03 14:45", "status": "resolved", "created": "2016-Feb-10 12:03", "fixed_version": "2016-Feb-10 12:03", "broken_version": "v080502", "priority": "3", "subsystem": "Libs", "assigned_to": "wenger", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "cern", "visibility": "public", "notify": "wenger@cs.wisc.edu, tannenba@cs.wisc.edu, iain.steers@cern.ch, bbockelm@cse.unl.edu", "due_date": ""}