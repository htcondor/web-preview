{"id": 5031, "title": "Ticket #5031: DaemonCore::CreateProcess ASSERT empty InfoCommandSinfulStringMyself", "description": "<blockquote>\nI added the assert in <span class=\"chng\"><a href=\"chngview?cn=27857\">[27857]</a></span> (2227b5625331d8c0908a6583c4888c30a2a3d468) because it would\n\n<p>DaemonCore::CreateProcess creates the environment variable CONDOR_INHERIT with a bunch of useful stuff for its child process to use.  One of these values is teh parent processes's command port, obtained using <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=InfoCommandSinfulStringMyself\" title=\"Info Command Sinful String Myself\">InfoCommandSinfulStringMyself</a></span>.  However, ICSSM returns an empty string if it can't determine its own command port.  If the sinful returned by ICSSM is empty, the resulting CONDOR_INHERIT environment variable has invalid data; a child process trying to read it will encounter cryptic errors.  Bugs cause ICSSM to return an empty string when it shouldn't have happened; ex. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2538\" title=\"IPv6 \tx86_64_deb_6.0-updated master can't start collector\">#2538</a></span> <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2216\" title=\"IPv6: IP/hostname lookup problems when hostname maps to localhost\">#2216</a></span>.  Thus, in <span class=\"chng\"><a href=\"chngview?cn=27857\">[27857]</a></span> (Git b671a019), I added an ASSERT on the theory that we should never generate an invalid CONDOR_INHERIT.  Having such an ASSERT would have sped up debugging for the above two tickets.\n\n</p><p>However, if the parent process legitimately doesn't have a command port (say, DAGMan started with \"-p 0\", see <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4987\" title=\"DAGMan shouldn't open a command socket?\">#4987</a></span>), ICSSM will legitimately return an empty string.  Such a process should still be able to DaemonCore::CreateProcess.\n\n</p><p>Something needs to be done.  In the short term the ASSERT will be removed, but it, or something like it, should be re-added.  Options I see:\n\n</p><p></p><ul>\n<li>Leave the ASSERT gone.  Cons: removes a debugging tool that I have wished already existed.\n</li><li>Replace the ASSERT with a dprintf. Cons: Spams innocent logs, likely overlooked in guilty logs\n</li><li>Way back in dc_main, squirrel away command_port in a global; if it's 0 we Do Something Else.\n</li><li>In DaemonCore::CreateProcess, assume that if want_command_port is false, we can safely Do Something Else. (Are there any cases where we don't want the command port but do want to inherit things from our parent?)\n</li></ul>\n\n<p>\"Do Something Else\" adds another question:\n</p><ul>\n<li>Skip the ASSERT and hope no one looks at CONDOR_INHERIT?\n</li><li>Skip the ASSERT and trash inheritbuf before anyone uses it?\n</li><li>Have all code setting inheritbuf wrapped in a test if(Do Something Else)?\n</li></ul>\n\n<p>You can reproduce this case (no command port, calls <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CreateProcess\" title=\"Create Process\">CreateProcess</a></span>) in two different ways:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">condor_submit_dag -f -no_submit job_dagman_basic.dag\nedit job_dagman_basic.dag.condor.sub and prepend '-p 0' to the arguments\ncondor_submit job_dagman_basic.dag.condor.sub\n</pre></div>\n\n\n<p>or\n</p><div class=\"code\">\n<pre class=\"code\">./condor_install --make-personal-condor\ncondor_master -f -p 0\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2015-Apr-29 09:31", "status": "new", "created": "2015-Apr-28 14:52", "fixed_version": "2015-Apr-28 14:52", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "#4987", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu, adesmet@cs.wisc.edu", "due_date": ""}