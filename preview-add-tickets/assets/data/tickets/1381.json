{"id": 1381, "title": "Ticket #1381: PCRE compilation issues in \"proper\" mode", "description": "<blockquote>\nBrian Bockelman submitted the following to condor-admin:\n\n<p>I noticed that there appears to be no way to compile 7.5.1 in \"proper\" mode.  This is apparently because the new <code>ClassAd</code> library depends on PCRE, and \"-lpcre\" is not added to the linking set if proper mode is set (or --without-externals is thrown).\n\n</p><p>The patch below fixes the autoconf file to do two things:\n\n</p><p></p><ol>\n<li>If externals are on, but no external for PCRE is set, it will try to take it from the build environment.\n</li><li>If externals are off, take PCRE from the build environment.\n</li></ol>\n\n<p>Using the patch below, I can compile even on the latest Fedora with this command\n\n</p><p>./configure --disable-gcc-version-check --disable-glibc-version-check --disable-static --without-externals\n\n</p><p>(Some hand-hacking remains to get vm-gahp to not be enabled in proper mode; --without-libvirt is apparently not strong enough, and the version of libvirt in the latest Fedora does not appear to be compatible with vm-gahp.  I'm sure someone else will tackle this.)\n\n</p><p>Brian\n\n</p><p></p><div class=\"verbatim\">\n<pre>diff --git a/src/configure.ac b/src/configure.ac\nindex d52eac0..5c1b558 100644\n--- a/src/configure.ac\n+++ b/src/configure.ac\n@@ -3075,11 +3075,16 @@ fi\n CHECK_EXTERNAL([pcre], [7.6], [hard],\n                [use PCRE (provides regular expression support)],\n                MF_LIB_CHECK([pcre], [[pcre pcre_compile]], [PCRE]))\n+\n AS_IF([test \"x$cv_ext_pcre\" = xyes],\n   [CPPFLAGS_save=\"$CPPFLAGS\"\n    CPPFLAGS=\"$CPPFLAGS $PCRE_CFLAGS\"\n    AC_CHECK_HEADERS([pcre.h pcre/pcre.h])\n-   CPPFLAGS=\"$CPPFLAGS_save\"])\n+   CPPFLAGS=\"$CPPFLAGS_save\"]\n+  [AC_CHECK_HEADERS([pcre.h], [], [AC_MSG_ERROR([PCRE headers not found or incompatible])])\n+   AC_CHECK_LIB([pcre], [pcre_study], [HAVE_PCRE=\"yes\"; PCRE_LDFLAGS=\"$PCRE_LDFLAGS -lpcre\"], [AC_MSG_ERROR([PCRE library not found or incompatible ])])\n+  ]\n+)\n AC_SUBST(PCRE_LDFLAGS, $PCRE_LDFLAGS)\n AC_SUBST(PCRE_CFLAGS, $PCRE_CFLAGS)\n\n@@ -3333,6 +3338,11 @@ else\n   AC_SUBST(want_ext_glibc,NO)\n   AC_SUBST(ext_glibc_version,UNUSED)\n\n+# We still need PCRE, even if we're not using externals, due to ClassAd library\n+  AC_CHECK_HEADERS([pcre.h], [], [AC_MSG_ERROR([PCRE headers not found or incompatible])])\n+  AC_CHECK_LIB([pcre], [pcre_study], [HAVE_PCRE=\"yes\"; PCRE_LDFLAGS=\"$PCRE_LDFLAGS -lpcre\"], [AC_MSG_ERROR([PCRE library not found or incompatible ])])\n+  AC_SUBST(PCRE_LDFLAGS, $PCRE_LDFLAGS)\n+\n fi\n # END of if $ac_cv_has_externals = \"YES\" or $enable_proper = yes\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2010-Dec-01 15:09:27 by tstclair:</em> <br/>\n\nis this even an issue anymore?\n\n<p></p><hr/>\n<em>2010-Dec-01 16:07:31 by bbockelm:</em> <br/>\n\nYeah, this can probably be closed.  Everything is different in the cmake era (and much, much better from my humble point of view!).\n\n<p>I got a cmake-based SRPM build going for the first time today, it plays just fine with pcre.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2010-Dec-06 11:46", "status": "abandoned", "created": "2010-Apr-27 13:49", "fixed_version": "2010-Apr-27 13:49", "broken_version": "v070501", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "danb", "rust": "a20499", "customer_group": "other", "visibility": "public", "notify": "dan@hep.wisc.edu", "due_date": ""}