{"id": 4560, "title": "Ticket #4560: Unable to release held OpenStack (any non-idempotent EC2 service) jobs", "description": "<blockquote>\nWe compensate for EC2 services which don't support idempotent submits by using SSH keypair IDs.  Naturally, if a user specifies a keypair ID, we put the job on hold when we discover that the service the specified doesn't support idempotent submits.  However, when we put a job on hold, we don't clear the SSH keypair ID in the job ad, and so if the grid manager has to restart to handle releasing the job (as it might if it's the only EC2 job in the queue, for instance), it puts the job on hold for the same reason, not recognizing that it created the SSH keypair in the first place.\n\n<p>We have two fixes to make, then: first, if we should never put the job in a state where the above hold would trigger.  In practice, this means removing the SSH keypair ID from the job ad (and synchronizing with the schedd) after removing the SSH keypair ID from the service.  (To be more conservative, if the user supplied the SSH keypair ID, we could never unset any of the remote job ID, client token, and SSH keypair ID without unsetting all of them.)\n\n</p><p>The second is to check in the hold if we created the keypair in the first place.  Unfortunately, we can't presently do so if we created the keypair only because we needed it for idempotence (that is, the user did not supply a keypair file name).  More thought is required.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2014-Aug-26 17:27", "status": "new", "created": "2014-Aug-26 17:27", "fixed_version": "2014-Aug-26 17:27", "broken_version": "", "priority": "4", "subsystem": "Grid", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}