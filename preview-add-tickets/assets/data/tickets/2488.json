{"id": 2488, "title": "Ticket #2488: Parsing bugs in condor_submit.", "description": "<blockquote>\nMetronome uses the submit file 'environment' variable to pass data from the machine ad to the running job.  We don't want to require these attributes to be set in the machine ad; they're (semantically) optional.  So we end up with job ads that look like this:\n\n<p></p><pre>  env = \"NMI_INITIAL_PATH=$$(nmi_initial_path:NMI_PLACEHOLDER_DEFAULT_VALUE) NMI_FRAMEWORK_PATH=$$(nmi_framework_path:NMI_PLACEHOLDER_DEFAULT_VALUE)\"\n</pre>\n\n<p>The particular problem I'm seeing occurs on a Windows machine, but could occur on any machine with a space in a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> attribute's value.  In particular, $(nmi_initial_path) includes a space.  The job goes on hold with the reason:\n\n</p><p></p><pre>  Failed to convert environment to target syntax for starter (opsys=WINNT61): ERROR: Missing '=' after environment variable 'Files\\Microsoft'.\n</pre>\n\n<p>After expanding $(nmi_initial_path), of course, the space in \"Program Files\" starts a new environment variable.\n\n</p><p><strong>Feature request</strong>: we would like to be able to specify in a variable substitution that Condor should properly quote the result.  Trying to do that by hand is a losing proposition.  (Failing that, could we maybe gain a syntax that lets us use variable names directly, rather than having to worry about quoting rules?)\n\n</p><p>However, as long as the paths don't contain single quotes, we can fix this problem by enclosing the variable subsitution in single quotes, right?\n\n</p><p><strong>Bug the First</strong>: Wrong.  condor_submit strips the single quotes from the following:\n\n</p><p></p><pre>  env = \"NMI_INITIAL_PATH='$$(nmi_initial_path:NMI_PLACEHOLDER_DEFAULT_VALUE)' NMI_FRAMEWORK_PATH='$$(nmi_framework_path:NMI_PLACEHOLDER_DEFAULT_VALUE)'\"\n</pre>\n\n<p>Dan implies this is because condor_submit parses the whole thing and then puts it back together again, discarding any quoting characters it considers superflous.\n\n</p><p><strong>Bug the Second</strong>: Dan tried to help work around bug the first with strcat():\n\n</p><p></p><pre>  env = \"NMI_INITIAL_PATH=$$([strcat(\"\"'\"\",ifThenElse(isUndefined(nmi_initial_path),\"\"NMI_PLACEHOLDER_DEFAULT_VALUE\"\",nmi_initial_path),\"\"'\"\")])\"\n</pre>\n\n<p>This didn't work, but a close reading of the (bizarre) quoting rules indicated that using four single quotes in a row would generate a single single quote.  Even this, however, did not work.  It appears that single quotes are applied before, rather than after, variable expansion.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Sep-21 13:02:04 by tlmiller:</em> <br/>\n\nIn the short term, I'll try to work around this by using Windows short paths, which won't have spaces (or single or double quotes) in them, but this is more than a little clumsy.\n\n<p></p><hr/>\n<em>2011-Sep-21 14:12:55 by danb:</em> <br/>\n\nCreating an expression inside $$([]) that produces the desired quoting is problematic, because condor_submit parses the environment string, modifies it (e.g. adds in environment from getenv=true), and regenerates it.  The problem is that when it regenerates the environment string, it assumes all single quotes in the string are for the benefit of the environment string parser.  Changes made to single quotes by condor_submit may mess up the $$([]) expression.\n\n<p>A workaround is to put the expression in its own classad attribute.  Example:\n\n</p><p></p><pre>   environment = \"NMI_INITIAL_PATH=$$([nmi_initial_path_quoted])\"\n   +nmi_initial_path_quoted = strcat(\"'\", ifThenElse(isUndefined(nmi_initial_path),\"NMI_PLACEHOLDER_DEFAULT_VALUE\",nmi_initial_path), \"'\")</pre>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2011-Sep-21 15:37", "status": "new", "created": "2011-Sep-21 13:00", "fixed_version": "2011-Sep-21 13:00", "broken_version": "", "priority": "4", "subsystem": "Tools", "assigned_to": "danb", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "batlab", "visibility": "public", "notify": "tlmiller@cs.wisc.edu,dan@hep.wisc.edu", "due_date": ""}