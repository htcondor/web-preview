{"id": 7462, "title": "Ticket #7462: Different token types should be distinguished in the cred dir", "description": "<blockquote>\n<strong>NOTE: Documentation work to be done in ticket</strong> <span class=\"ticket\"><a class=\"docpending\" href=\"tktview?tn=7646\" title=\"Update security docs for kerberos, krb5, afs, oauth, credmon, credd\">#7646</a></span>\n\n<p>Currently, <code>$(SEC_CREDENTIAL_DIRECTORY)/&lt;username&gt;</code> could contain many different types of tokens, and we rely on the user and/or admin to know enough about the token storage configuration to avoid naming conflicts. I propose that we should distinguish the type of tokens by creating subdirectories either under <code>$(SEC_CREDENTIAL_DIRECTORY)</code> or <code>&lt;username&gt;</code>, e.g.:\n\n</p><p></p><div class=\"verbatim\">\n<pre>/var/lib/condor/credentials/jpatton/oauth/box.top\n/var/lib/condor/credentials/jpatton/oauth/box.use\n/var/lib/condor/credentials/jpatton/kerberos/krb5.cc\n/var/lib/condor/credentials/jpatton/s3/chtc.access\n/var/lib/condor/credentials/jpatton/s3/chtc.secret\n</pre></div>\n\n\n<p>Perhaps for getting multiple credmons to work nicely together, the distinguishing subdirectories should be up a level, with logs and such placed there instead of at the root of <code>$(SEC_CREDENTIAL_DIRECTORY)</code>:\n\n</p><p></p><div class=\"verbatim\">\n<pre>/var/lib/condor/credentials/oauth/jpatton/box.top\n/var/lib/condor/credentials/oauth/jpatton/box.use\n/var/lib/condor/credentials/kerberos/jpatton/krb5.cc\n/var/lib/condor/credentials/s3/jpatton/chtc.access\n/var/lib/condor/credentials/s3/jpatton/chtc.secret\n</pre></div>\n\n\n<p>However, this means naming conflicts could still show up in the execute sandbox unless some care is taken by the starter to reorganize the sandbox's cred dir.\n\n</p><p><span class=\"subsection\"></span></p><h3>replace SEC_CREDENTIAL_DIRECTORY with multiple knobs</h3>\n\n<p>We will solve this problem, by switching the code to have more than one credential directory knob, there will be a separate knob for each credential directory namespace: <strong>password</strong>, <strong>krb</strong>, and <strong>oauth</strong>.\n\n</p><p></p><ul>\n<li>passwords will be stored in <code>SEC_CREDENTIAL_DIRECTORY</code>.  The *nix builds do not normally store passwords other than the pool password, but this may change in the future.  In any case the plumbing for this has always been in the code.\n\n<p></p></li><li>Kerberos credentials will be stored <code>SEC_CREDENTIAL_DIRECTORY_KRB</code>. It may be reasonable to default this to $(SEC_CREDENTIAL_DIRECTORY)/krb\n\n<p></p></li><li>OAuth tokens will be stored in <code>SEC_CREDENTIAL_DIRECTORY_OAUTH</code>. It may be reasonable to default this to $(SEC_CREDENTIAL_DIRECTORY)/oauth\n</li></ul>\n\n<p><span class=\"subsection\"></span></p><h3>Enable multiple instances of credmon</h3>\n\n<p>In the current code, the admin must add the credmon to the daemon list, we will need to have multiple instances of the credmon, so we will need to extend this mechanism to allow for multiple instances of the credmon, each managing a different credential directory.  This will be handled by adding a daemon to the <code>DAEMON_LIST</code> for each credmon.\n\n</p><p><span class=\"subsection\"></span></p><h3>Schedd must block for multiple CREDMON_COMPLETE files</h3>\n\n<p>Since we may have multiple instances of the credmon, we will need multiple CREDMON_COMPLETE files.  We will extending the existing pattern for this, such that each credmon directory will have it's own CREDMON_COMPLETE FILE.\n\n</p><p>If <code>SEC_CREDENTIAL_DIRECTORY_KRB</code> is configured, then the schedd will wait for a <code>CREDMON_COMPLETE</code> file to appear in this directory before it begins running jobs.\n\n</p><p><strong>optional</strong>\nIf <code>SEC_CREDENTIAL_DIRECTORY_OAUTH</code> is configured, then the schedd will wait for a <code>CREDMON_COMPLETE</code> file to appear in this directory before it begins running jobs.\n\n</p><p>THE Master will delete these files as part of it's startup processing.\n\n</p><p><span class=\"subsection\"></span></p><h3>configuring </h3>\n<div class=\"snip\">\n<pre class=\"sniplabel\">possible config fragment</pre>\n<pre class=\"snip\">DAEMON_LIST = $(DAEMON_LIST) CREDMON_KRB CREDMON_OAUTH\n\nCREDMON_KRB = $(LIBEXEC)/credmon_krb\nSEC_CREDENTIAL_DIRECTORY_KRB = $(SEC_CREDENTIAL_DIRECTORY)/krb\n# The knob above will cause the Schedd to wait for $(SEC_CREDENTIAL_DIRECTORY_KRB)/CREDMON_COMPLETE\n\nCREDMON_OAUTH = $(LIBEXEC)/credmon_oauth\nSEC_CREDENTIAL_DIRECTORY_OAUTH = $(SEC_CREDENTIAL_DIRECTORY)/oauth\n# The knob above will cause the Schedd to wait for $(SEC_CREDENTIAL_DIRECTORY_OAUTH)/CREDMON_COMPLETE\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<hr/>\n<em>2020-Apr-10 07:46:37 by tim:</em> <br/>\n\nBulk change of target version from v080906 to v080907 using ticket-target-mover.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7580\" title=\"condor_store_cred -f will segfault if -p not included\">#7580</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\ncondor_store_cred -f will segfault if -p not included</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Apr-21 14:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59438\">[59438]</a></span>: version history for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7421\" title=\"alias request_gpu to request_gpus in submit files\">#7421</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7462\" title=\"Different token types should be distinguished in the cred dir\">#7462</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Mar-05 16:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59085\">[59085]</a></span>: for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7462\" title=\"Different token types should be distinguished in the cred dir\">#7462</a></span> and <span class=\"ticket\"><a class=\"docpending\" href=\"tktview?tn=6734\" title=\"Need a python binding for sending a credential like condor_submit does\">#6734</a></span>. allow multiple credmons to be running at the same time The credd now puts kerberos credentials in SEC_CREDENTIAL_DIRECTORY_KRB and oauth credentials in SEC_CREDENTIAL_DIRECTORY_OAUTH This commit allows a single job to use both Kerberose and OAuth credentials and a single schedd/startd\u00a0[...]\n (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2020-May-20 09:51", "status": "resolved", "created": "2020-Jan-07 11:34", "fixed_version": "2020-Jan-07 11:34", "broken_version": "", "priority": "4", "subsystem": "Security", "assigned_to": "zmiller", "derived_from": "#6513", "creator": "jpatton", "rust": "", "customer_group": "scitokens", "visibility": "public", "notify": "jpatton@cs.wisc.edu,zmiller@cs.wisc.edu", "due_date": ""}