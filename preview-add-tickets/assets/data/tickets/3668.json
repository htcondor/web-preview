{"id": 3668, "title": "Ticket #3668: resource monitoring of ssh_to_job is not as advertised", "description": "<blockquote>\nThe condor manual says, \"Resource consumption of the sshd process and all processes spawned by it are monitored by the condor_starter as though these processes belong to the job, so any policies such as PREEMPT that enforce a limit on resource consumption also take into account resources consumed by the ssh session.\"\n\n<p>But in fact, the resource consumption of the sshd and processes it spawns are not reported in the job ad.  The way the starter collects resource usage is to call each <code>UserProc:PublishUpdateAd()</code> in turn and then send the resulting ad to the shadow and the startd.  The problem with this is that each <code>UserProc</code> overwrites the attributes in the ad.  To prevent the sshd process resource usage from overwriting the job's usage, SSHDProc::PublishUpdateAd() is a no-op.\n\n</p><p>The startd handles <code>ImageSize</code> specially.  It updates this attribute in its copy of the job ad based on its own monitoring (see Claim::publish()).  Therefore, the combined memory usage by the job and sshd tree is seen by policy expressions such as PREEMPT.  This is arguably better than adding the sshd tree usage into the attributes reported in the job ad.  It does feel a little sneaky though.  If this is the behavior we want, it needs to be better documented in the code and the manual.</p></blockquote>", "remarks": "<blockquote>\n<em>2013-Sep-19 11:16:50 by danb:</em> <br/>\n\nIn <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3921\" onclick=\"get_ticket_and_populate_wrapper('3921'); return false;\" title=\"exitting from condor_ssh_to_job removes job from queue w/cgroups\">#3921</a></span>, the cgroup case was tweaked to use a child cgroup for sshd.  This means the sshd resource usage will be reported as part of the job, even though SSHDProc::PublishUpdateAd() is still a no-op.  If it gets changed to not be a no-op, then we would need to be careful not to double report.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2013-Sep-19 11:19", "status": "new", "created": "2013-May-31 16:47", "fixed_version": "2013-May-31 16:47", "broken_version": "v070800", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "other", "visibility": "public", "notify": "dan@hep.wisc.edu", "due_date": ""}