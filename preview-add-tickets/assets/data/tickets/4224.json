{"id": 4224, "title": "Ticket #4224: DAGMan retry count counter-intuitive", "description": "<blockquote>\nThe DAGMan retry counter is counter-intuitive (at least to us).  It counts the number of times the node is run to \"normal completion\".  That is, the number of times the post script (if present) exits normally (zero or non-zero).\n\n<p>Our users have been complaining that if they kill the DAG and resubmit (which sends SIGUSR1 to the DAG), the retry counter is not incremented the next time the job is submitted.  This is especially irritating because we create a copy of the stdout per DAGMan retry; since the retry counter is not incremented before the job is submitted, we overwrite the stdout of the previous job run.\n\n</p><p>In other words, the job is run multiple times per retry.\n\n</p><p>I propose we introduce a DAGMan \"start count\".  That is, the number of times the pre-script has been started.  So, we will have an ordering of\n</p><div class=\"verbatim\">\n<pre>(node start count) &lt;= (job run count) &lt;= (node retry count)\n</pre></div>\n\n\n<p>Is this behavior a bug or intended?</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Feb-22 17:43:05 by bbockelm:</em> <br/>\n\nShoot, thinking more - we really want to know how many jobs have been submitted, not how many times the pre script has been run.  We don't care how many pre-scripts are run ... no logs from those we want to preserve.\n\n<p>That might be easier to implement anyway.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2014-Feb-22 17:43", "status": "new", "created": "2014-Feb-22 11:42", "fixed_version": "2014-Feb-22 11:42", "broken_version": "", "priority": "4", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "#4198", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "bbockelm@cse.unl.edu", "due_date": ""}