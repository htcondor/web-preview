{"id": 2335, "title": "Ticket #2335: long addresses overflow user log event buffers", "description": "<blockquote>\n<code>SubmitEvent</code> contains a static buffer of size 128 to hold the address of the schedd.  No bounds checking is done when writing into this buffer.  Since the schedd address may contain information such as the private network name, shared port id, and CCB information, it is possible for the address to exceed the buffer size.  The result is a crash of the schedd whenever a job is submitted with a user log.\n\n<p>This problem was observed on the new morgridge submit node, which uses tcp forwarding, shared port, and private network address and name, which resulted in an address string longer than 128 characters.\n\n</p><p>Similar problems exist in the following events: <code>ExecuteEvent</code>, <code>NodeExecuteEvent</code>.\n\n</p><p>These bugs likely go back long before 7.6.0.  I haven't bothered to trace them back to find out.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Aug-02 18:40:41 by cweiss:</em> <br/>\n\nAll in all I think the patch looks reasonable. It looks actually significantly better than before. A couple of remarks:\n\n<p>1) Why don't we just initialize <code>executeHost</code> , <code>remoteName</code> , and <code>submitHost</code> with <code>\"\"</code> in the constructors? That would save the checks later on (in the average case where the values will be actually set, this would lead to an additional delete[], that's true). I could go either way with that, just want to throw it in.\n\n</p><p>2) We should strip obtained values by default where fscanf has been replaced (re: <code>LogNotes</code>). Otherwise I could imagine we may run into more DAGman-related issues down the road. If we don't already have a strip function lying around, one could be added and used.\n\n</p><p></p><hr/>\n<em>2011-Aug-05 11:50:36 by danb:</em> <br/>\n\nCathrin,\n\n<p>Thanks for the review.  I agree that initializing to \"\" would have simplified things slightly.  I'll likely leave things as they are, because I've heavily tested it as is and would rather not touch it any more unless I have to ;-)\n\n</p><p>Regarding your second concern, there was only one instance of the fprintf(\"...%s\\n\") usage.  It is fixed.  So I think we are safe.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jul-29 15:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22650\">[22650]</a></span>: Fixed a problem causing dagman to fail to extract the dag node name from the submit event. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2335\" onclick=\"get_ticket_and_populate_wrapper('2335'); return false;\" title=\"long addresses overflow user log event buffers\">#2335</a></span> This problem was introduced by my initial commit for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2335\" onclick=\"get_ticket_and_populate_wrapper('2335'); return false;\" title=\"long addresses overflow user log event buffers\">#2335</a></span>. In the problematic patch, I replaced a call to fscanf() with a function that read a single line, not realizing that the newline at the end of the\u00a0[...]\n (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jul-28 17:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22638\">[22638]</a></span>: Fixed a bug in my previous commit. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2335\" onclick=\"get_ticket_and_populate_wrapper('2335'); return false;\" title=\"long addresses overflow user log event buffers\">#2335</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jul-27 18:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22615\">[22615]</a></span>: Fixed buffer overflows in userlog events. ===GT:Fixed=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2335\" onclick=\"get_ticket_and_populate_wrapper('2335'); return false;\" title=\"long addresses overflow user log event buffers\">#2335</a></span> ===VersionHistory=== Fixed a crash in the condor_schedd that happened when a job was submitted with a userlog and the schedd address string was longer than 128 characters.  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Aug-08 08:29", "status": "resolved", "created": "2011-Jul-27 17:13", "fixed_version": "2011-Jul-27 17:13", "broken_version": "v070600", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tstclair@redhat.com", "due_date": ""}