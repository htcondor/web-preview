{"id": 7371, "title": "Ticket #7371: Putting a Python ClassAd inside another ClassAd causes a segfault", "description": "<blockquote>\nThis snippet produces a segfault:\n<div class=\"code\">\n<pre class=\"code\">inner = classad.ClassAd({'inner': 0})\nc = classad.ClassAd({'outer': inner})\n</pre></div>\n\n\n<p>This does not, and produces a properly-nested classad:\n</p><div class=\"code\">\n<pre class=\"code\">c = classad.ClassAd()\nc['outer'] = {'inner': 1}\nprint(c)\n</pre></div>\n\n<div class=\"code\">\n<pre class=\"code\">[\n    outer =\n        [\n            inner = 1\n        ]\n]\n</pre></div>\n\n\n<p>i.e., assigning a dictionary implicitly internally converts it into a classad. This is probably helpful behavior and we should keep it.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Nov-13 14:07:29 by tlmiller:</em> <br/>\n\nFirst snippet works fine in Python 2.  (We'll need to mention which Python version in bug reports for a while yet.)\n\n<p></p><hr/>\n<em>2019-Nov-13 15:23:03 by tlmiller:</em> <br/>\n\nPatch fixes the segfault, but may leak.  See the example at <a class=\"external\" href=\"https://docs.python.org/3/c-api/iter.html\">https://docs.python.org/3/c-api/iter.html</a>.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Nov-19 14:15</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58510\">[58510]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7371\" title=\"Putting a Python ClassAd inside another ClassAd causes a segfault\">#7371</a></span>) Release note.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Nov-18 15:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58500\">[58500]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7371\" title=\"Putting a Python ClassAd inside another ClassAd causes a segfault\">#7371</a></span>) OK, apparently nobody ever bothered to decrement the refcount on keys before. This seems to test as not-leaking.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Nov-15 17:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58486\">[58486]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7371\" title=\"Putting a Python ClassAd inside another ClassAd causes a segfault\">#7371</a></span>) I think this is the only Py_DECREF() call we need here.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Nov-13 14:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58450\">[58450]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7371\" title=\"Putting a Python ClassAd inside another ClassAd causes a segfault\">#7371</a></span>) Fix totally broken code in convert_python_to_exprtree().  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Nov-19 14:16", "status": "resolved", "created": "2019-Nov-13 13:07", "fixed_version": "2019-Nov-13 13:07", "broken_version": "", "priority": "3", "subsystem": "PythonBinding", "assigned_to": "tlmiller", "derived_from": "", "creator": "karpel", "rust": "", "customer_group": "other", "visibility": "public", "notify": "karpel@wisc.edu tlmiller@cs.wisc.edu", "due_date": ""}