{"id": 4356, "title": "Ticket #4356: Have some way to do a reconfig on a running DAGMan", "description": "<blockquote>\nThere should be some way to cause a running DAGMan to re-read its configuration -- at least the per-DAG config file, if one exists, and it probably should also pick up changes to the overall Condor config files.\n\n<p>I'm not sure how to communicate this to DAGMan -- one possibility is to do something like the halt file, but that's not very clean.  If we ever do the command-line tool to communicate with DAGMan, this would be an obvious capability for it to have.  (See <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2616\" onclick=\"get_ticket_and_populate_wrapper('2616'); return false;\" title=\"Create a command-line tool to communicate with DAGMan\">#2616</a></span>.)</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Feb-22 08:12:56 by wenger:</em> <br/>\n\nIn an email from Stuart (LIGO):\n\n<p>I would like to re-raise the issue of users being able to easily change any\nof the DAGMan -max* settings for their running instances, e.g.,\n<a class=\"external\" href=\"https://www-auth.cs.wisc.edu/lists/htcondor-users/2010-October/msg00026.shtm\">https://www-auth.cs.wisc.edu/lists/htcondor-users/2010-October/msg00026.shtm</a>\nl\n\n</p><p>It would be nice to have a simpler and more robust (in the presence of new\nusers). How about considering a higher level solution for modifying a\nrunning DAGMan instance, e.g.,\n\n</p><p>condor_qedit -dag jobid [maxjobs X] [maxpost Y] \u00e2\u00a6\nor\ncondor_dagedit jobid \u00e2\u00a6\n\n</p><p>Note, this is a low priority request but I think it would be useful.\n\n</p><p>I kind of like the condor_dagedit idea -- that could be the name of the tool for <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2616\" onclick=\"get_ticket_and_populate_wrapper('2616'); return false;\" title=\"Create a command-line tool to communicate with DAGMan\">#2616</a></span>... (Kent)\n\n</p><p></p><hr/>\n<em>2015-Feb-24 14:40:07 by wenger:</em> <br/>\n\nAs per today's LIGO call, there are a number of things we need to define for this.  Such as:\n<ul>\n<li>If you decrease MAXJOBS, for example, does that remove queued jobs or just not submit until you get down to the new setting?\n</li><li>Would this command just cause DAGMan to re-read whatever existing config files it already knows about?  Or would you also be able to do the equivalent of 'condor_config_val -set'?\n</li><li>What if DAGMan is held and released after setting a specific value?  Should DAGMan save the most recent value somewhere so it re-starts with the most recent value?  (Hmm -- if we do that, maybe it should be an event in the log proposed in <span class=\"ticket\"><a class=\"reviewdesign\" href=\"/tickets?ticket=4125\" onclick=\"get_ticket_and_populate_wrapper('4125'); return false;\" title=\"Separate log file for POST script terminated events?\">#4125</a></span>?)\n</li></ul>\n\n<p></p><hr/>\n<em>2015-Sep-22 11:45:34 by tpdownes:</em> <br/>\n\nThese are all obvious things a DAG command line tool (<span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2616\" onclick=\"get_ticket_and_populate_wrapper('2616'); return false;\" title=\"Create a command-line tool to communicate with DAGMan\">#2616</a></span>) would do and is not adding helpful information. I am going to mark the ticket as abandoned.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2015-Sep-22 11:46", "status": "defer", "created": "2014-May-08 14:46", "fixed_version": "2014-May-08 14:46", "broken_version": "v080106", "priority": "5", "subsystem": "Dag", "assigned_to": "", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "wenger@cs.wisc.edu, zmiller@cs.wisc.edu, anderson@ligo.caltech.edu,pcouvare@caltech.edu", "due_date": ""}