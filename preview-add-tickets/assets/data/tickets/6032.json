{"id": 6032, "title": "Ticket #6032: HTCondor support for AFS tokens on Linux via kernel keyrings", "description": "<blockquote>\nThe AFS documentation states that\n\n<p></p><div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \n\"The Cache Manager stores tokens in the user's credential structure in kernel memory. To distinguish one user's credential structure from another's, the Cache Manager identifies each one either by the user's UNIX UID or by a process authentication group (PAG), which is an identification number guaranteed to be unique in the cell.\"\n</td></tr></tbody></table></div>\n\n\n<p>In the original design for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5272\" onclick=\"get_ticket_and_populate_wrapper('5272'); return false;\" title='Add support for opaque security \"ubertickets\" to accompany jobs.'>#5272</a></span>, we planned to eschew the use of PAGs and access the token via \"the user's UNIX UID\".  We assumed this meant the effective uid (euid) or the Linux file system uid (fsuid), but unfortunately the token is associated with the real uid (ruid) of the user.  When impersonating a user, the HTCondor daemons switch the euid, and keep the ruid as root - this means the daemons cannot access user's AFS files like they need to.  While we could have the daemons switch the ruid to the user, and still switch back to root via the saved uid, this opens a denial-of-service vulnerability because it exposes the daemon process to undesired signals (like SIGKILL, SIGSTOP) from the user being impersonated.\n\n</p><p>So the plan is as follows:\n\n</p><p></p><ol>\n<li>Create a wrapper script for aklog called <em>condor_aklog</em> ( see <a class=\"file\" href=\"rlog?f=src/condor_scripts/condor_aklog\">/src/condor_scripts/condor_aklog</a> ). This script will store the AFS token into a kernel session keyring named \"htcondor_uidX\", where <em>X</em> is the UID of the user being impersonated, by\n<ol>\n<li>securely creating or joining session htcondor_uidX,\n</li><li>creating a PAG in the session via pagsh if and only if a PAG does not already exist, then\n</li><li>run aklog, and finally\n</li><li>link this session keyring to the user-specific keyring (ring <code>@u</code>) for the user that invoked condor_aklog so it is not garbage-collected.\n</li></ol>\n\n<p></p></li><li>When the HTCondor daemons switch to priv_user or priv_user_final to impersonate user X, HTCondor will\n<ol>\n<li>create a new anonymous session keyring,\n</li><li>search the keyring associated with the ruid of the daemon (typically this means the root user keyring) for a ring named \"htcondor_uidX\", and if found,\n</li><li>link that ring to the new anonymous session.</li></ol>\n</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2016-Dec-01 11:23:40 by tannenba:</em> <br/>\n\nWork on this ticket lives on git topic branch <code>V8_5_8-afstoken-branch</code>\n\n<p></p><hr/>\n<em>2017-Jan-11 12:21:08 by tannenba:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>I believe calls to dprintf inside of _set_priv() need to be safeguarded by checking the <code>dologging</code> parameter to avoid nasty recursions; I fixed this up in <span class=\"chng\"><a href=\"chngview?cn=49972\">[49972]</a></span>.\n\n</p><p>Lots of development \"saw dust\" - made some commits to clean this up. I fixed this up in <span class=\"chng\"><a href=\"chngview?cn=49973\">[49973]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=49974\">[49974]</a></span>.\n\n</p><p>New config knobs should be in the param table.\n\n</p><p>Merging this topic branch V8_5_8-afstoken-branch to V8_6_0-branch, as we need this code in v8.6.x, and setting to docpending as there is no documentation.\n\n</p><p>[ Note: <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6110\" onclick=\"get_ticket_and_populate_wrapper('6110'); return false;\" title=\"link and unlink afs token keyrings when switching priv state\">#6110</a></span> now addresses the following. -ZKM ] But I think we should do better (in a new sub-ticket). The algorithm of creating a new session keyring at every user uid switch, and then reverting back to the condor user with the user PAG still intact, is sub-optimal.  Would like to see a new ticket that pursues a more efficient/safer algorithm whereby a new session keyring is created just once the first time a user uid switch occurs, and then after that the htcondor_uidXXX keyring is linked to that keyring on priv_user_(final) and unlinked when switching to another uid.  The last used htcondor_uidXXX keyring id should be stored so we don't need to search for it everytime in the common case of going between userX-&gt;condor-&gt;userX-&gt;condor-&gt;...</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6110\" onclick=\"get_ticket_and_populate_wrapper('6110'); return false;\" title=\"link and unlink afs token keyrings when switching priv state\">#6110</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nlink and unlink afs token keyrings when switching priv state</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jan-11 10:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49974\">[49974]</a></span>: Cleanup use of keyutil functions in uid.c for AFS support. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span> Specifically, don't include undeeded system files, make helper functions static so they don't go into global namespace, don't use numeric constants, guard against redefinition of system constants, remove uncalled helper functions (to avoid\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jan-11 09:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49973\">[49973]</a></span>: Cleanup some scoping in uids.c - remove global functions, etc. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span> Specifically, declare module specific functions as static, move variables from global declaration to the one function they are referenced, remove uneeded curly braces (and the additional indenting) from case statements.  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jan-11 09:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49972\">[49972]</a></span>: Do not dprintf when switching uids when unsafe to do so. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-09 15:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49783\">[49783]</a></span>: add condor_aklog to the rpm spec. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span>  (By zmiller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-07 12:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49750\">[49750]</a></span>: Set keyring permissions in condor_aklog as RHEL7 defaults fail. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-07 11:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49749\">[49749]</a></span>: Improve condor_aklog error reporting. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-06 10:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49741\">[49741]</a></span>: Just fix some whitespace indentation. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-02 14:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49716\">[49716]</a></span>: Add a bunch of comments into the condor_aklog source code. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span> Only comments were added; none of the code itself changed.  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-01 17:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49706\">[49706]</a></span>: Install condor_aklog into RELEASE_DIR/sbin. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-01 16:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49704\">[49704]</a></span>: This keyring code is Linux-specific <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span>  (By zmiller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-01 15:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49703\">[49703]</a></span>: Initial version of condor_aklog tool, for AFS support. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span> This is a wrapper script for aklog that stores the token in a specific Linux kernel keyring where the HTCondor daemons will look for it.  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-01 15:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49700\">[49700]</a></span>: Manual import of the needed pieces to avoid including keyutils.h. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span>  (By zmiller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-01 13:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49698\">[49698]</a></span>: Initial support for selecting a user's AFS credential when changing to user priv <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6032\" onclick=\"get_ticket_and_populate_wrapper('6032'); return false;\" title=\"HTCondor support for AFS tokens on Linux via kernel keyrings\">#6032</a></span>  (By zmiller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2017-Jan-26 15:18", "status": "resolved", "created": "2016-Dec-01 11:19", "fixed_version": "2016-Dec-01 11:19", "broken_version": "", "priority": "2", "subsystem": "Security", "assigned_to": "zmiller", "derived_from": "#5272", "creator": "tannenba", "rust": "", "customer_group": "cern", "visibility": "public", "notify": "tannenba@cs.wisc.edu, zmiller@cs.wisc.edu, ben.dylan.jones@cern.ch", "due_date": ""}