{"id": 413, "title": "Ticket #413: dagman has linear search when parsing dag", "description": "<blockquote>\nSo, I had performed a test to see if dagman could handle a one million node\ndag. The structure of the dag is one parent, 1 million children, then one end node. It turns out it took 2 hrs and 30 minutes to parse! This was because the\nparent/waiting/child structures for each node were linked lists. When a new node was added as a child to the original parent node, a linear search happened to determine if it had already been added. If not, it was added. So, this became an n^2 algorithm.\n\n<p>I replaced the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SimpleList\" title=\"Simple List\">SimpleList</a></span> structure with an STL set instead. This sped it up to 2 minutes and 30 seconds for the parse. However, it broke the DFSVisit code which was written before the Priority stuff went in. So, once I fix that latter, and write some tests, I'll check it in. Hopefully, it'll build everywhere since it uses the STL. :)</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Apr-28 20:25:31 by psilord:</em> <br/>\n\nKent wrote a test for the dfs ordering code, and I was mistaken, it is not broken. Luckily, now we have a test for it. :) So, once I fix a compiler error under creepy windows for the stl I want to do. I'll check it in.\n\n<p></p><hr/>\n<em>2009-Apr-28 21:36:30 by psilord:</em> <br/>\n\nHrm, failed build under windows. I guess my iterators had to be const due to some member functions being const and the set being a member variable. I wish gcc would have complained about this earlier instead of silently accepting it.\n\n<p></p><hr/>\n<em>2009-Apr-30 10:19:27 by psilord:</em> <br/>\n\nThis code is ready for review and has passed NMI to my satisfaction.\n\n<p></p><hr/>\n<em>2009-Apr-30 14:58:44 by psilord:</em> <br/>\n\nCode review is finished, suggested changes (very small) made.\n\n<p></p><hr/>\n<em>2009-Apr-30 16:27:52 by psilord:</em> <br/>\n\nThe branch V7_3-dagspeed-branch which contained this code was <strong>squashed</strong> into the master branch. This is because this feature really looked like a \"single commit\" type feature wrt master branch--and in case of reversion, it is far easier to do it like this in this specific case.\n\n<p>The V7_3-dagspeed-branch should be abandoned now.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Apr-30 16:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=24741\">[24741]</a></span>: Documented <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=413\" onclick=\"get_ticket_and_populate_wrapper('413'); return false;\" title=\"dagman has linear search when parsing dag\">#413</a></span>.  (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Apr-30 16:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14612\">[14612]</a></span>: This commit implements faster dag parsing as described in <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=413\" onclick=\"get_ticket_and_populate_wrapper('413'); return false;\" title=\"dagman has linear search when parsing dag\">#413</a></span>. It contains both the code changes and a test program written by Kent which ensures the hard coded DFS traversal hadn't broken as a result of this change.\u00a0[...]\n (By Peter Keller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2010-Jan-31 08:36", "status": "defer", "created": "2009-Apr-23 16:15", "fixed_version": "2009-Apr-23 16:15", "broken_version": "v070200", "priority": "5", "subsystem": "Dag", "assigned_to": "psilord", "derived_from": "", "creator": "psilord", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "matt@cs.wisc.edu,pcouvare@caltech.edu", "due_date": ""}