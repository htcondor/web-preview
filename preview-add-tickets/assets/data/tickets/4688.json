{"id": 4688, "title": "Ticket #4688: Fine-grained match auth", "description": "<blockquote>\n<strong>Scenario:</strong>\n\n<p>CMS would like users to be able to run their own startds in our global pool.  These startds are completely controlled by the user - START expressions, etc. - and authenticate using the user's identity.  By default, we do not trust the user's identity to do anything but run their own jobs; how do we enforce this policy?\n\n</p><p>As extra credit - but not necessary for first implementation - the job should be able to specify a list of \"trusted users\".  That way, ToddT can say he trusts the startds launched by BrianB.\n\n</p><p><strong>Thoughts on this scenario:</strong>\n</p><ul>\n<li>We can't rely on START or Requirements expressions to enforce this policy because we can't trust the contents.\n<ul>\n<li>We <strong>can</strong> utilize START / Requirements to optimize the matchmaking, just not as the authorization mechanism.\n</li></ul>\n</li><li>We <strong>can</strong> trust the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AuthenticatedIdentity\" title=\"Authenticated Identity\">AuthenticatedIdentity</a></span> attribute in the collector, as the collector inserts this (not the startd).\n</li><li>We don't want to re-authenticate / re-authorize the startd when the shadow first claims it.  We can't afford the authentication costs.\n</li></ul>\n\n<p><strong>Proposed implementation:</strong>\n\n</p><p>Add an option for the schedd:\n\n</p><p></p><div class=\"verbatim\">\n<pre>SEC_ALLOW_MATCH_PASSWORD = user1@domain1, user2@domain2, ...\n</pre></div>\n\n\n<p>This is a comma-separated list of identities of startds who are allowed to use match auth (the startd's identity is taken from the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AuthenticatedIdentity\" title=\"Authenticated Identity\">AuthenticatedIdentity</a></span> value in the startd's ad - this means the schedd trusts the collector to do all the work).  If unset, any startd is allowed to use match auth with this schedd.  Otherwise, match auth is ONLY allowed for users on this list.  There's a special token, self, which allows match auth to be used if the startd's identity matches the job's User attribute.\n\n</p><p><strong>Would be nice:</strong>\n\n</p><p>It would be nice if the user could also specify an <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=TrustedStartds\" title=\"Trusted Startds\">TrustedStartds</a></span> attribute that can extend the SEC_ALLOW_MATCH_PASSWORD.  However, one complication is shadow recycling - we'd have to be OK with the possibility of job A from ToddT trusting BrianB's startd, then having job B from ToddT use the same startd regardless of whether or not it trusted BrianB.\n\n</p><p><strong>How CMS would use this:</strong>\n</p><ul>\n<li>CMS places a wrapper around the pilot startup script in CVMFS such that anyone with a X509 proxy can launch a \"personal pilot\".  This pilot would launch with the user's proxy and use a START expression to only accept their own jobs.\n</li><li>CMS sets up a dedicated child collector for personal pilots.  This child collector authenticates startds against the CERN Argus service (same thing we use for schedds).\n</li><li>Child collector feeds into the global pool.\n</li><li>We set <code>SEC_ALLOW_MATCH_PASSWORD = condor@cms, SELF</code> on all our schedds.\n</li></ul>\n\n<p>Users would submit their tasks to the central CRAB3 service and then be able to launch as many pilots as they wish on whatever resources they can find.</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Jan-08 10:36:31 by bbockelm:</em> <br/>\n\nAlright, some updates on the implementation -\n<ul>\n<li>I ended up using the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SecMan\" title=\"Sec Man\">SecMan</a></span> logic, so <code>MATCH_AUTH</code> is now just a new authorization level in the security table.\n</li><li>There's still a <code>self</code> token that allows jobs to run on startds owned by the job owner.\n</li><li>Turns out the match logic is duplicated in the shadow and the schedd.  I refactored this centrally as much as possible into <code>src/condor_utils/match_auth_verify.{h,cpp}</code>.\n</li></ul>\n\n<p>To test, I added the following lines to my security configuration:\n</p><div class=\"verbatim\">\n<pre>ALLOW_MATCH_AUTH = condor@hcc-briantest.unl.edu\nALLOW_ADVERTISE_STARTD = $(ALLOW_DAEMON), bbockelm@hcc-briantest.unl.edu\nSTARTD.SEC_CLIENT_AUTHENTICATION_METHODS = GSI\nSCHEDD_DEBUG=D_FULLDEBUG, D_SECURITY\nSHADOW_DEBUG=D_FULLDEBUG, D_SECURITY\n</pre></div>\n\n\n<p>I setup GSI auth so the host cert mapped to <code>bbockelm@hcc-briantest.unl.edu</code>.  Overall, this made the startd to authenticate as my user:\n\n</p><p></p><div class=\"verbatim\">\n<pre>$ condor_status -l | grep Auth\nAuthenticatedIdentity = \"bbockelm@hcc-briantest.unl.edu\"\n</pre></div>\n\n\n<p>Then, I turned on <code>D_SECURITY</code> and looked at the security sessions to make sure <code>{execute-side,submit-side}@matchsession</code> only shows up when <code>self</code> is in <code>ALLOW_MATCH_AUTH</code>.\n\n</p><p></p><hr/>\n<em>2015-Feb-17 16:30:03 by jfrey:</em> <br/>\n\nWould this set of config parameters be sufficient:\n<div class=\"verbatim\">\n<pre>APPEND_REQUIMRENTS = AuthenticatedIdentity =?= Undefined || \\\n  AuthenticatedIdentity == \"condor@cms\" || \\\n  AuthenticatedIdentity == User || \\\n  member( AuthenticatedIdentity, TrustedStartds )\nTrustedStartds = { }\nSUBMIT_EXPRS = TrustedStartds\n</pre></div>\n\n\n<p>Like your plan, the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AuthenticatedIdentity\" title=\"Authenticated Identity\">AuthenticatedIdentity</a></span> attribute set by the collector is the root of trust. But here, jobs state which startds they trust, with the default being the Global CMS identity and the job owner. Additional trusted identities can be named in the submit file.\n\n</p><p>The AuthenticatedIdentity=?=Undefined clause is needed for when the startd checks the requirements at job start time. This should be safe, as <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AuthenticatedIdentity\" title=\"Authenticated Identity\">AuthenticatedIdentity</a></span> is set by the collector.\n\n</p><p>This requires no code changes in HTCondor.\n\n</p><p></p><hr/>\n<em>2015-Feb-18 16:23:02 by jfrey:</em> <br/>\n\nAddendum to my proposal based on today's phone call:\n\n<p></p><ul>\n<li>SUBMIT_REQUIREMENTS can be used to ensure that submitters are picking up the appended requirements that restrict which startds the job trusts.\n\n<p></p></li><li>Hobble-in startds should include in their START expression the set of job owners they trust.</li></ul>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-08 10:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=42135\">[42135]</a></span>: Add forgotten match auth files. <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=4688\" onclick=\"get_ticket_and_populate_wrapper('4688'); return false;\" title=\"Fine-grained match auth\">#4688</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-08 10:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=42133\">[42133]</a></span>: Allow fine-grained authorization for match-based auth. <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=4688\" onclick=\"get_ticket_and_populate_wrapper('4688'); return false;\" title=\"Fine-grained match auth\">#4688</a></span> This allows the schedd to setup authorization (ALLOW_MATCH_AUTH/ DENY_MATCH_AUTH) for match authentication. Instead of applying logic to a CEDAR socket, it examines information from the slot ad.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2015-Apr-15 15:34", "status": "defer", "created": "2014-Oct-30 13:44", "fixed_version": "2014-Oct-30 13:44", "broken_version": "", "priority": "2", "subsystem": "DaemonsSubmitNode", "assigned_to": "bbockelm", "derived_from": "#4490", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "zmiller@cs.wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}