{"id": 6701, "title": "Ticket #6701: condor_off -peaceful disrespects max job length", "description": "<blockquote>\nSnippets from the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StartLog\" title=\"Start Log\">StartLog</a></span>:\n\n<p></p><div class=\"verbatim\">\n<pre>06/11/18 09:38:26 (D_ALWAYS) Got SIGTERM. Performing graceful shutdown.\n06/11/18 09:38:26 (D_ALWAYS) shutdown graceful\n...\n06/11/18 09:38:26 (D_ALWAYS) slot2: Changing activity: Busy -&gt; Retiring\n06/11/18 09:38:26 (D_ALWAYS) slot4: Changing activity: Busy -&gt; Retiring\n06/11/18 09:38:26 (D_ALWAYS) slot3: Changing activity: Busy -&gt; Retiring\n06/11/18 09:38:26 (D_ALWAYS) slot1: Changing activity: Busy -&gt; Retiring\n...\n06/12/18 10:06:51 (D_ALWAYS) slot2: Changing state and activity: Claimed/Retiring -&gt; Preempting/Vacating\n06/12/18 10:06:55 (D_ALWAYS) slot2: State change: starter exited\n06/12/18 10:06:55 (D_ALWAYS) slot2: State change: No preempting claim, returning to owner\n06/12/18 10:06:55 (D_ALWAYS) slot2: Changing state and activity: Preempting/Vacating -&gt; Owner/Idle\n06/12/18 10:06:55 (D_ALWAYS) slot2: State change: IS_OWNER is false\n06/12/18 10:06:55 (D_ALWAYS) slot2: Changing state: Owner -&gt; Unclaimed\n...\n06/12/18 15:39:25 (D_ALWAYS) slot1: State change: PREEMPT is TRUE\n...\n06/12/18 15:41:45 (D_ALWAYS) slot4: Changing state and activity: Claimed/Retiring -&gt; Preempting/Vacating\n06/12/18 15:41:48 (D_ALWAYS) slot4: State change: starter exited\n06/12/18 15:41:48 (D_ALWAYS) slot4: State change: No preempting claim, returning to owner\n06/12/18 15:41:48 (D_ALWAYS) slot4: Changing state and activity: Preempting/Vacating -&gt; Owner/Idle\n06/12/18 15:41:48 (D_ALWAYS) slot4: State change: IS_OWNER is false\n06/12/18 15:41:48 (D_ALWAYS) slot4: Changing state: Owner -&gt; Unclaimed\n...\n06/12/18 16:12:14 (D_ALWAYS) slot3: State change: PREEMPT is TRUE\n...\n</pre></div>\n\n\n<p>Note that slot1 and slot3 are never actually preempted, leaving us with the following state:\n\n</p><p></p><div class=\"verbatim\">\n<pre>[tlmiller@gitter0000 ~]$ date\nThu Jun 14 10:45:45 CDT 2018\n[tlmiller@gitter0000 ~]$ condor_status gitter0000.chtc.wisc.edu -af Name State Activity 'formatTime(EnteredCurrentActivity)'\nslot1@gitter0000.chtc.wisc.edu Claimed Retiring Mon Jun 11 09:38:26 2018\nslot2@gitter0000.chtc.wisc.edu Unclaimed Idle Tue Jun 12 10:06:55 2018\nslot3@gitter0000.chtc.wisc.edu Claimed Retiring Mon Jun 11 09:38:26 2018\nslot4@gitter0000.chtc.wisc.edu Unclaimed Idle Tue Jun 12 15:41:48 2018\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2018-Jun-14 11:00:01 by tlmiller:</em> <br/>\n\nIn <code>condor_startd.V6/Resource.cpp</code>, line 455, (called shortly after we print the state change line), we deliberately don't check the max job retirement time if we're in a peaceful shutdown.\n\n<p>This is another manifestation of <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6664\" title=\"condor_drain -start ... broken?\">#6664</a></span> or <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6697\" title=\"coordinated retirement while draining breaks HOLD_IF_MEMORY_EXCEEDED\">#6697</a></span>, where the proper solution is probably splitting PREEMPT into PREEMPT and EVICT, the latter of which does not respect MJRT.\n\n</p><p>In this particular example, it's immediately obvious if we should change <code>Resource::retire_claim()</code> or the code calling it in <code>ResState::eval()</code>.  (It would be a hack to have the startd compute the max job retirement time for individual jobs while their slot is retiring for the purpose of terminating them if the value ever happened to become 0.)\n\n</p><p></p><hr/>\n<em>2018-Jun-14 11:31:44 by tlmiller:</em> <br/>\n\nMaking a child of <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6697\" title=\"coordinated retirement while draining breaks HOLD_IF_MEMORY_EXCEEDED\">#6697</a></span> since we'll be resolving <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6664\" title=\"condor_drain -start ... broken?\">#6664</a></span> for 8.7.9, as the breakage there is no worse than it has been.\n\n<p></p><hr/>\n<em>2018-Jul-16 13:05:03 by tim:</em> <br/>\n\nThis will be resolved by code changes for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6697\" title=\"coordinated retirement while draining breaks HOLD_IF_MEMORY_EXCEEDED\">#6697</a></span></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Aug-09 14:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55272\">[55272]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6697\" title=\"coordinated retirement while draining breaks HOLD_IF_MEMORY_EXCEEDED\">#6697</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6701\" title=\"condor_off -peaceful disrespects max job length\">#6701</a></span>) Documentation.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Aug-06 10:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55260\">[55260]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6697\" title=\"coordinated retirement while draining breaks HOLD_IF_MEMORY_EXCEEDED\">#6697</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6701\" title=\"condor_off -peaceful disrespects max job length\">#6701</a></span>) Short-term hack to fix policy expressions not working during retirement.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Jul-13 16:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55169\">[55169]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6665\" title=\"Update AWS Lambda functions by July 31\">#6665</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6697\" title=\"coordinated retirement while draining breaks HOLD_IF_MEMORY_EXCEEDED\">#6697</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6701\" title=\"condor_off -peaceful disrespects max job length\">#6701</a></span>) Update \"known problems\" section.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Jun-14 14:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55064\">[55064]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6659\" title=\"High Priority Jobs\">#6659</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6664\" title=\"condor_drain -start ... broken?\">#6664</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6697\" title=\"coordinated retirement while draining breaks HOLD_IF_MEMORY_EXCEEDED\">#6697</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6701\" title=\"condor_off -peaceful disrespects max job length\">#6701</a></span>) Release notes.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Oct-04 09:37", "status": "resolved", "created": "2018-Jun-14 10:46", "fixed_version": "2018-Jun-14 10:46", "broken_version": "v080708", "priority": "2", "subsystem": "DaemonsExecNode", "assigned_to": "tlmiller", "derived_from": "#6697", "creator": "tlmiller", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, moate@cs.wisc.edu", "due_date": ""}