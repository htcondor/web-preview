{"id": 1651, "title": "Ticket #1651: Have master daemon create security sessions for its child daemons", "description": "<blockquote>\nCommunication between Condor daemons over TCP must be done over an authenticated security session.  This results in a potential deadlock situation on Windows due to its increased reliance on network communication for emulating signals.  This can occur when the child daemon attempts to communicate with the parent by establishing a session when the parent also initiates an authentication attempt with the child.  This effectively kills scalability on Windows.  A way to avoid this is to have the parent daemon create a security session and pass it off to the child so that the parent can communicate with the child without having to set up a session from scratch.\n\n<p>Components\n</p><ul>\n<ul>\n<li>Have Create_Process create a security session whenever it is starting a daemon.  Currently the method for detecting this is determining if want_command_port is true, as so far every daemon seems to require one and there does not appear to be a case where a non-daemon program will ask for it.\n</li><li>Embed the session information into the environment variable.  We will need to create a second, private environment variable as D_DAEMONCORE debug level will print out the ENV_INHERIT variable contents and this would be a potential security hole.  We will also have to disable this functionality entirely on Solaris as apparently environments are not private to processes on that OS.\n</li><li>Reconstruct the security session on the child side and punch a hole in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=IpVerify\" title=\"Ip Verify\">IpVerify</a></span> so that the child will accept commands through it.\n</li></ul>\n</ul>\n\n<p>Future Work\n</p><ul>\n<ul>\n<li>See if there's an alternative method for Solaris support that doesn't require major modifications.  Also confirm if the issue with environment variables still holds true in newer versions.\n</li><li>Allow the child to use the session to send messages to the parent.  Currently only the parent can use the session.  This will require a bit of thought with respect to making sure the child only tries to use the session if it knows it is communicating with its parent.  The PID for the parent seems to be also passed through the environment variable, which offers a possible way to check.\n</li></ul>\n</ul>\n\n<p>Branch name: V7_5-parent-child-session</p></blockquote>", "remarks": "<blockquote>\n<em>2010-Sep-13 16:57:58 by ziliang:</em> <br/>\n\nStill need to create the separate environment variable and clean up some of the debug information.  Also need to do a workspace build to make sure it still works on the other platforms.  And of course ifdef out Solaris.\n\n<p></p><hr/>\n<em>2010-Sep-14 11:34:51 by matt:</em> <br/>\n\nRelated to <span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=734\" title=\"Child processes should have a session to parent\">#734</a></span> and \"Children born w/ a security session to parent.\" from <span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=928\" title='Condor \"Snow Leopard\" Release'>#928</a></span>?\n\n<p></p><hr/>\n<em>2010-Sep-14 12:12:59 by danb:</em> <br/>\n\nMatt, yes this is related to <span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=734\" title=\"Child processes should have a session to parent\">#734</a></span>.  For now, we are only implementing a security session for use by the parent process when sending signals to the child.  Use of the session for other purposes should be straightforward, but we'd like to get this step done first.\n\n<p></p><hr/>\n<em>2010-Sep-24 12:53:40 by danb:</em> <br/>\n\nZ, here are some comments from my review of the code:\n\n<p>It's cumbersome to have #ifdef Solaris sprinkled everywhere that this code lands.  When coming across this, one wonders, \"what does this have to do with Solaris?\"  And the answer is nowhere to be found.  I would recommend including most of this code on all platforms, even in the Solaris case (e.g. still have a session_id in <code>PidEntry</code>).  The only place where you need to be platform-dependent is when you decide whether to create a session id or not.  Please put a comment there explaining why Solaris is a special case.\n\n</p><p>It is not clear in the code why creation of a security session is conditional on want_command_port.  Please add a comment explaining that this is how we know whether the child is <code>DaemonCore</code>.\n\n</p><p>In daemon-core, session_key is leaked in a couple spots where you 'goto wrapup' without freeing it.  Also, session_id is leaked if anything prevents us from sticking it into the <code>PidInfo</code> object (numerous possible error cases).  It often is best to immediately copy char pointers into a std::string and then free them immediately, rather than having to deal with all the different paths for exiting from a function.\n\n</p><p>The following line should not be conditional on want_command_port or Solaris.  It should be conditional on whether privateinheritbuf is empty or not.\n\n</p><p></p><div class=\"verbatim\">\n<pre>job_environ.SetEnv( EnvGetName( ENV_PRIVATE ), privateinheritbuf.Value() );\n</pre></div>\n\n\n<p>When creating the security session in the parent, do not specify CONDOR_PARENT_FQU.  We aren't currently using the session to connect from the child to the parent, but if we did, we would not want the child to be authenticated as condor@parent.  For now, create CONDOR_CHILD_FQU=condor@child and use that.\n\n</p><p>The following log line needs to be improved.  It sounds like you are removing a session key from the session cache, which is the opposite of what you are doing.\n\n</p><p></p><div class=\"verbatim\">\n<pre>dprintf(D_DAEMONCORE, \"Removing session key.\\n\");\n</pre></div>\n\n\n<p>I just looked at the implementation of <code>PunchHole()</code>.  I was surprised to find that the following does not quite work.  <code>PunchHole()</code> expects \"fqu/ip\".  So giving it \"fqu\" means incoming requests will never match this rule.\n\n</p><p></p><div class=\"verbatim\">\n<pre>id.sprintf(\"%s\", CONDOR_PARENT_FQU);\nipv-&gt;PunchHole(DAEMON, id);\n</pre></div>\n\n\n<p>So we have to decide what to do.  We could punch holes for all IP addresses on the machine.  I am worried that this will be more complicated and fragile (e.g. if network interfaces change dynamically).  Therefore, I think we need to add support in <code>PunchHole()</code> for matching just the fqu, from any IP.  That will also fix a similar problem with <code>PunchHole()</code> in the starter's implementation of ssh_to_job.  Let's not make that fix in this patch.  I'll make it separately.\n\n</p><p></p><hr/>\n<em>2010-Oct-05 17:16:50 by danb:</em> <br/>\n\nZ, your latest patch looks good.  The only problem I see is that you call UnsetEnv() and then read the value of the environment variable that you got from GetEnv().  You should not assume that the value returned by GetEnv() is still valid once you call UnsetEnv().\n\n<p>Once you fix that, I recommend merging your branch to the master branch.  If it were me, I would merge with the --squash option and put one short description of the patch, rather than pulling in lots of little pieces that are not logically independent.\n\n</p><p></p><hr/>\n<em>2010-Oct-06 14:36:42 by ziliang:</em> <br/>\n\nThe same assumption is being made in the code that read in the public environment variable.  Is that also a problem?  Though granted I was unsetting the wrong environment variable in the first place.\n\n<p></p><hr/>\n<em>2010-Oct-07 11:07:02 by danb:</em> <br/>\n\nThe code that reads CONDOR_INHERIT strdups the value returned from GetEnv() before calling UnsetEnv().  I'd recommend doing something similar, except, of course, it would probably be better to just use a std::string instead of strdup.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1793\" title=\"IpVerify::PunchHole() doesn't work without specific IP address\">#1793</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nIpVerify::PunchHole() doesn't work without specific IP address</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1815\" title=\"sec session not passed from parent to child under unix\">#1815</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nsec session not passed from parent to child under unix</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Oct-11 12:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=19148\">[19148]</a></span>: Merge in working parent child session key sharing from branch. Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1651\" title=\"Have master daemon create security sessions for its child daemons\">#1651</a></span>.  (By Ziliang Guo )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Oct-06 14:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=19127\">[19127]</a></span>: Unset the correct environment variable and move the unset operation to after the list is parsed. Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1651\" title=\"Have master daemon create security sessions for its child daemons\">#1651</a></span>.  (By Ziliang Guo )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Sep-28 15:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=19082\">[19082]</a></span>: Readd CONDOR_PARENT_FQU after misunderstanding with Dan was cleared up. Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1651\" title=\"Have master daemon create security sessions for its child daemons\">#1651</a></span>.  (By Ziliang Guo )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Sep-28 09:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=19074\">[19074]</a></span>: Use std::strings to hold session keys and only #ifndef Solaris in two places to separate session key passing. Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1651\" title=\"Have master daemon create security sessions for its child daemons\">#1651</a></span>.  (By Ziliang Guo )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Sep-15 13:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18981\">[18981]</a></span>: Fix uninitialized pointer in Create_Process that was causing crashes. Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1651\" title=\"Have master daemon create security sessions for its child daemons\">#1651</a></span>.  (By Ziliang Guo )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Sep-14 13:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18971\">[18971]</a></span>: Add a few sanity checks to when parent-child session information is being used. Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1651\" title=\"Have master daemon create security sessions for its child daemons\">#1651</a></span>.  (By Ziliang Guo )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Sep-14 13:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18970\">[18970]</a></span>: Exclude a few more places on Solaris where parent-child session information is used. Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1651\" title=\"Have master daemon create security sessions for its child daemons\">#1651</a></span>.  (By Ziliang Guo )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Sep-14 12:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18969\">[18969]</a></span>: Exclude Solaris from the parent-child key sending for now. Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1651\" title=\"Have master daemon create security sessions for its child daemons\">#1651</a></span>.  (By Ziliang Guo )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Sep-14 12:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18968\">[18968]</a></span>: Add a private environment variable to daemon core for passing the session key. Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1651\" title=\"Have master daemon create security sessions for its child daemons\">#1651</a></span>.  (By Ziliang Guo )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Sep-13 16:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18966\">[18966]</a></span>: Add the session key to the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PidEntry\" title=\"Pid Entry\">PidEntry</a></span> struct. Have Create_Process create security sessions when starting daemons. Have the primary Send_Signal function use the pre-established security session for sending messages. Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1651\" title=\"Have master daemon create security sessions for its child daemons\">#1651</a></span>.  (By Ziliang Guo )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Sep-13 16:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18965\">[18965]</a></span>: Add new FQU identifier for the pre-made security session. Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1651\" title=\"Have master daemon create security sessions for its child daemons\">#1651</a></span>.  (By Ziliang Guo )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Oct-11 13:11", "status": "resolved", "created": "2010-Sep-13 16:50", "fixed_version": "2010-Sep-13 16:50", "broken_version": "v070400", "priority": "4", "subsystem": "Daemons", "assigned_to": "danb", "derived_from": "", "creator": "ziliang", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tannenba@cs.wisc.edu, zmiller@cs.wisc.edu, danb@cs.wisc.edu, matt@cs.wisc.edu, ziliang@cs.wisc.edu", "due_date": "20100917"}