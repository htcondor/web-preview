{"id": 4711, "title": "Ticket #4711: Delayed bind() result causes slow client tools on Windows", "description": "<blockquote>\nWhen run rapidly in succession (or while under load), it's possible for HTCondor tools on Windows to fail to connect() with WSA error 10048, WSAEADDRINUSE.  (This has been demonstrated to affect condor_submit and condor_q, although the latter tends to require fewer trials to reproduce.)  On Windows, this can happen as a result of a connect() call if (and only if?) if bind() is called with a wildcard address.\n\n<p>Theory: The test suite sets (or inherits from the BaTLab machines) a LOWPORT and HIGHPORT range of 1024-65535.  The existence of this range causes us to call Sock::bindWithin() and set a particular port number.  If, as by default, BIND_ALL_INTERFACES is true, Sock::bindWithin() will bind a wildcard address.  Windows may then delay the error until the connect() call (when it chooses a specific interface to use).  Since every tool (and every outbound daemon connection) will be using the same particular port number, the chance of a collision is quite high (especially since a closed socket may not become available immediately).\n\n</p><p>Testing: Removing LOWPORT and HIGHPORT from the config file and the environment appears to work around the problem.  Adding setting _CONDOR_HIGHPORT and _CONDOR_LOWPORT in the environment reintroduces it.\n\n</p><p>Oddly, setting BIND_ALL_INTERFACES to false (and NETWORK_INTERFACE to suit) does NOT work around the problem.  This may be a problem in my theory, or in my code analysis.</p></blockquote>", "remarks": "<blockquote>\nTJ is attempting to verify that this problem manifests on shut down, when the condor_master attempts to send a \"signal\" (DC message) to each child process; in doing so it connects to the shared port daemon over TCP and gets WSA error 10048 a bunch.\n\n<p></p><hr/>\n<em>2015-Nov-05 13:54:25 by johnkn:</em> <br/>\n\nI can reproduce.  I have attached a master log with trials, the first without HIGHPORT/LOWPORT set and the second with them set.\n\n<p></p><hr/>\n<em>2015-Nov-05 14:29:12 by johnkn:</em> <br/>\n\nClearly on Windows we believe that we have bound to the same port multiple times.\n\n<p></p><div class=\"snip\">\n<pre class=\"sniplabel\">fragment of master log with D_NETWORK:2</pre>\n<pre class=\"snip\">11/05/15 14:20:49 get_port_range - (LOWPORT,HIGHPORT) is (1000,50000).\n11/05/15 14:20:49 Sock::bindWithin - bound to 17085...\n11/05/15 14:20:49 CONNECT bound to &lt;128.105.136.34:17085&gt; fd=1380 peer=&lt;128.105.136.34:7107&gt;\n11/05/15 14:20:49 condor_write(fd=1380 daemon at &lt;128.105.136.34:7107&gt;,,size=120,timeout=20,flags=0,non_blocking=0)\n11/05/15 14:20:49 condor_write(fd=1380 daemon at &lt;128.105.136.34:7107&gt;,,size=645,timeout=20,flags=0,non_blocking=0)\n11/05/15 14:20:49 condor_write(fd=1380 daemon at &lt;128.105.136.34:7107&gt;,,size=13,timeout=20,flags=0,non_blocking=0)\n11/05/15 14:20:49 CLOSE TCP &lt;128.105.136.34:17085&gt; fd=1380\n11/05/15 14:20:49 Sent signal 15 to COLLECTOR (pid 6500)\n11/05/15 14:20:49 get_port_range - (LOWPORT,HIGHPORT) is (1000,50000).\n11/05/15 14:20:49 Sock::bindWithin - bound to 17085...\n11/05/15 14:20:49 SEND [648] &lt;128.105.136.34:17085&gt; &lt;128.105.136.34:7108&gt;\n11/05/15 14:20:49 CLOSE UDP &lt;128.105.136.34:17085&gt; fd=1380\n11/05/15 14:20:49 Sent signal 15 to NEGOTIATOR (pid 6892)\n11/05/15 14:20:49 get_port_range - (LOWPORT,HIGHPORT) is (1000,50000).\n11/05/15 14:20:49 Sock::bindWithin - bound to 17085...\n11/05/15 14:20:49 get_port_range - (LOWPORT,HIGHPORT) is (1000,50000).\n11/05/15 14:20:49 Sock::bindWithin - bound to 17085...\n11/05/15 14:20:49 attempt to connect to &lt;128.105.136.34:7107&gt; failed: connect errno = 10048.  Will keep trying for 20 total seconds (20 to go).\n11/05/15 14:20:50 get_port_range - (LOWPORT,HIGHPORT) is (1000,50000).\n</pre></div>\n\n\n<p></p><hr/>\n<em>2015-Nov-09 15:22:46 by tlmiller:</em> <br/>\n\nOur current proposal is to redefine HIGHPORT and LOWPORT to mean IN_LOWPORT and IN_HIGHPORT.  If users really want the broken behavior on Windows, they can specify OUT_LOWPORT and OUT_HIGHPORT.  This assumes that most people don't actually care about the outbound port range.\n\n<p>I prefer this to tying the definition of HIGHPORT and LOWPORT to the setting of USE_SHARED_PORT (because we see the problem occur most frequently when shared port is active).\n\n</p><p>Another option is to disable outbound port range limiting for Windows entirely, but since that's included as the default in the first proposal, its only advantage would be if we don't think that most don't people care about outbound port ranges, but the opposite for Windows, or that it's better to work more reliably than support a feature that occasionally breaks things.\n\n</p><p>We could also check for -10048 on Windows and if OUT_LOWPORT and OUT_HIGHPORT are set, speculate to the user that the connection failed because of this problem, and not because of a connection problem.  It's not immediately obvious that we could do this in all cases, so this change might cause more confusion rather than less.\n\n</p><p></p><hr/>\n<em>2016-Feb-29 07:45:47 by tim:</em> <br/>\n\nConsider back-porting this to 8.4.x</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/917/MasterLog\">MasterLog</a>\n9653 bytes added by johnkn on 2015-Nov-05 19:55:05 UTC.\n<br/>\nMasterlog showing interaction of HIGHPORT/LOWPORT with shared port on WINDOWS.<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-May-24 09:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48407\">[48407]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5687\" onclick=\"get_ticket_and_populate_wrapper('5687'); return false;\" title=\"Backport selected changes to stable release\">#5687</a></span>) Backport changes for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4711\" onclick=\"get_ticket_and_populate_wrapper('4711'); return false;\" title=\"Delayed bind() result causes slow client tools on Windows\">#4711</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5489\" onclick=\"get_ticket_and_populate_wrapper('5489'); return false;\" title=\"Linux kernel tuning script doesn't tell anyone (else) what it's doing.\">#5489</a></span>, and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5527\" onclick=\"get_ticket_and_populate_wrapper('5527'); return false;\" title=\"condor_history truncates job ids\">#5527</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Feb-10 10:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=47587\">[47587]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4711\" onclick=\"get_ticket_and_populate_wrapper('4711'); return false;\" title=\"Delayed bind() result causes slow client tools on Windows\">#4711</a></span>) Don't step on the delayed-bind() landmine by default.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2016-Feb-29 07:45", "status": "resolved", "created": "2014-Nov-10 16:25", "fixed_version": "2014-Nov-10 16:25", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "johnkn@cs.wisc.edu, tlmiller@cs.wisc.edu", "due_date": ""}