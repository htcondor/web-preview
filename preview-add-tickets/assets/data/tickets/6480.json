{"id": 6480, "title": "Ticket #6480: FileLock functions isLocked() isUnlocked() don't call fcntl() to check", "description": "<blockquote>\nOn Linux,\n\n<p>Instantiating a <code>FileLock</code> object and then calling <code>isLocked()</code> or <code>isUnlocked()</code> doesn't actually make any calls to <code>fcntl()</code>.  It just returns the value of a member variable.  That member variable <code>m_state</code> is initialized to the <code>UNLOCK</code> state and only updated if we call <code>obtain()</code>.\n\n</p><p>This means that if another process has already obtained a lock, and we instantiate a <code>FileLock</code> and call <code>isUnlocked()</code> the answer will always be <code>true</code>.  Unless I'm misunderstanding the intended use of these functions, it seems like if they don't actually call <code>fnctl()</code> to check the lock status that this couldn't possible come up with the correct answer.\n\n</p><p>Am I missing something?  As is, it seems like the function should be named <code>pleaseDontTellMeIfSomeoneElseDidButDidIPersonallyLockThisFileIForgot()</code></p></blockquote>", "remarks": "<blockquote>\n<em>2017-Nov-09 14:19:34 by tannenba:</em> <br/>\n\nYes, the isLocked/isUnlocked methods do exactly as you describe - they just tell the caller the current state of the object.  It would be nice if a comment told folks this in the header file, but changing these methods to do fcntl() to test things is not a good idea imho.\n\n<p>First of all, you'd be changing the semantics of a public method which is currently in use elsewhere, which could have large consequences.\n\n</p><p>Secondly, implementing the semantic of \"tell me if any process has this file locked\" by polling is nonsensical imho.  Process i/o happens asynchronously.  If \"isUnlocked()\" returns True, you cannot act on that information, because by the time the function returns another process may have locked the file.  The only way to truly determine the state of a lock on a file is to try and actually obtain and hold the lock.  (and even that can be messed up iirc, due to incompatibilities between fcntl, flock, lockf, etc)\n\n</p><p>Thus these helper methods simply return the state of the object.\n\n</p><p>I am going to mark this ticket as abandoned.\n\n</p><p></p><hr/>\n<em>2017-Nov-09 19:38:24 by zmiller:</em> <br/>\n\nI'm re-opening this ticket.  As you said:\n<div class=\"code\">\n<pre class=\"code\">It would be nice if a comment told folks this in the header file,\n</pre></div>\n\n\n<p>I agree that would be nice.  I have other reservations beyond that, however, so until we chat and resolve this, I'd like to keep it open.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2019-May-13 17:01", "status": "active", "created": "2017-Nov-08 16:52", "fixed_version": "2017-Nov-08 16:52", "broken_version": "v080700", "priority": "3", "subsystem": "Libs", "assigned_to": "zmiller", "derived_from": "", "creator": "zmiller", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "tannenba@cs.wisc.edu, coatsworth@cs.wisc.edu, zmiller@cs.wisc.edu", "due_date": ""}