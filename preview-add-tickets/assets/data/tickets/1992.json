{"id": 1992, "title": "Ticket #1992: Implement First Come, First Served for dagman jobs", "description": "<blockquote>\nImplement First Come, First Served for dagman jobs where an entire dagman job can be prioritized over another dagman job. Currently jobs within different dag's are prioritized with qdate and individual prios. There is no way to prioritize an entire dag job over another.</blockquote>", "remarks": "<blockquote>\n<em>2011-Mar-22 10:48:55 by matt:</em> <br/>\n\nInitial comments -\n\n<p></p><ol>\n<li>Need patch against V7_6-branch (or master, where c++_utils is now just utils)\n</li><li>Avoid whitespace changes (in qmgmt.cpp)\n</li><li>The sort comparator is in two places (!)\n</li><li>Must avoid creating attributes that are required on a job ad, e.g. put a default for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PreJobPrio\" title=\"Pre Job Prio\">PreJobPrio</a></span> at its evaluation point (get_job_prio instead of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CreateJobAd\" title=\"Create Job Ad\">CreateJobAd</a></span>)\n</li></ol>\n\n<p></p><hr/>\n<em>2011-Mar-29 07:30:54 by jrt:</em> <br/>\n\nNote on use.\n\n<p>The new prios should be positive integers. -1 is used for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=GetAttributeInt\" title=\"Get Attribute Int\">GetAttributeInt</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LookupInteger\" title=\"Lookup Integer\">LookupInteger</a></span> to indicate the prios are not defined. If a user submits a negative prio, the code will consider it not to be defined. If job A has [Pre,Post]JobPrio[1,2] defined and job B does not, the code will skip the [Pre,Post]JobPrio[1,2] comparison.\n\n</p><p></p><hr/>\n<em>2011-Mar-29 11:33:56 by matt:</em> <br/>\n\ndagman7.6-v2.patch -\n\n<p></p><ol>\n<li>clusterSortByPrioAndDate() compares against INT_MIN, but should compare against -1\n</li><li>Comment in get_job_prio should -1 -&gt; INT_MIN\n</li></ol>\n\n<p>Can you add the test to src/condor_tests?\n\n</p><p></p><hr/>\n<em>2011-Mar-29 13:58:37 by matt:</em> <br/>\n\nHere's a different testing strategy.\n\n<p></p><div class=\"code\">\n<pre class=\"code\"># Using a personal condor configuration with NUM_CPUS=1\n$ condor_master\n$ condor_off -negotiator\n$ ./submit.sh\n...spam...\n$ condor_on -negotiator\n...wait about 5 minutes...\n$ condor_history -format \"%d \" JobStartDate -format \"%d \" PreJobPrio1 -format \"%d \" PreJobPrio2 -format \"%d \" JobPrio -format \"%d \" PostJobPrio1 -format \"%d \" PostJobPrio2 -format \"%s\\n\" GlobalJobId | sort -n -k1\n</pre></div>\n\n\n<p>submit.sh:\n</p><div class=\"code\">\n<pre class=\"code\">#!/bin/sh\n\nfor pre1 in $(seq -1 1 1); do\n   for pre2 in $(seq 1 -1 -1); do\n      for prio in $(seq -1 1 1); do\n         for post1 in $(seq 1 -1 -1); do\n            for post2 in $(seq -1 1 1); do\n               condor_submit -a pre1=$pre1 \\\n                             -a pre2=$pre2 \\\n                             -a prio=$prio \\\n                             -a post1=$post1 \\\n                             -a post2=$post2 \\\n                  job.sub\n            done\n         done\n      done\n   done\ndone\n</pre></div>\n\n\n<p>job.sub:\n</p><div class=\"code\">\n<pre class=\"code\">cmd = /bin/sleep\nargs = 1\n\nlog = job.log\n\n+PreJobPrio1 = $(pre1)\n+PreJobPrio2 = $(pre2)\npriority = $(prio)\n+PostJobPrio1 = $(post1)\n+PostJobPrio2 = $(post2)\n\nqueue\n</pre></div>\n\n\n<p>Successful output will look like:\n</p><div class=\"code\">\n<pre class=\"code\">1301424089 1 1 1 1 1 matt@eeyore.local#183.0#1301424079\n1301424091 1 1 1 1 0 matt@eeyore.local#182.0#1301424079\n1301424093 1 1 1 1 -1 matt@eeyore.local#181.0#1301424079\n1301424095 1 1 1 0 1 matt@eeyore.local#186.0#1301424079\n1301424098 1 1 1 0 0 matt@eeyore.local#185.0#1301424079\n1301424100 1 1 1 0 -1 matt@eeyore.local#184.0#1301424079\n1301424102 1 1 1 -1 1 matt@eeyore.local#189.0#1301424079\n1301424105 1 1 1 -1 0 matt@eeyore.local#188.0#1301424079\n1301424107 1 1 1 -1 -1 matt@eeyore.local#187.0#1301424079\n1301424109 1 1 0 1 1 matt@eeyore.local#174.0#1301424079\n1301424112 1 1 0 1 0 matt@eeyore.local#173.0#1301424079\n1301424114 1 1 0 1 -1 matt@eeyore.local#172.0#1301424079\n...\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Mar-29 14:15:33 by matt:</em> <br/>\n\nA successful run's md5 is...\n\n<p></p><div class=\"code\">\n<pre class=\"code\">$ condor_history -format \"%d\\t\" JobStartDate -format \"%d\\t\" PreJobPrio1 -format \"%d\\t\" PreJobPrio2 -format \"%d\\t\" JobPrio -format \"%d\\t\" PostJobPrio1 -format \"%d\\n\" PostJobPrio2 | sort -n -k1 | cut -f1 --complement | md5sum -\n2365d29aa83308493a0387e6038e9cd5  -\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Mar-29 15:03:55 by matt:</em> <br/>\n\nFinal notes on use -\n\n<p>New attributes: PreJobPrio1, PreJobPrio2, PostJobPrio1, PostJobPrio2\n\n</p><p>These new attributes are only accessible via explicit addition to a job ad, e.g. +PreJobPrio1 in a submit file.\n\n</p><p>The new Prios can range from INT_MIX+1 to INT_MAX. Higher priorities run before lower priorities, e.g. 1 then 0 then -1. If job A has {Pre,Post}JobPrio{1,2} defined and job B does not, the code skips the comparison.\n\n</p><p>Order of comparison: PreJobPrio1, PreJobPrio2, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobPrio\" title=\"Job Prio\">JobPrio</a></span>, PostJobPrio1, PostJobPrio2\n\n</p><p></p><hr/>\n<em>2011-Mar-31 15:54:08 by psilord:</em> <br/>\n\nPardon me if I am brash, but that's a crappy interface.\n\n<p>Why not make <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobPrio\" title=\"Job Prio\">JobPrio</a></span> an array of integers and then stable sort them in a particular order on the columns going left to right, filling in anything you don't know about with zero when there is a length mismatch\n\n</p><p></p><div class=\"verbatim\">\n<pre>job1:\nJobPrio = 1, 0\n\njob2:\nJobPrio = 2\n\njob3:\nJobPrio = 1, 3\n</pre></div>\n\n\n<p>Now, the jobs sort left to right in descending order (with canonnicalized job prio arrays]:\n\n</p><p></p><div class=\"verbatim\">\n<pre>job2   [2 0]\njob3   [1 3]\njob1   [1 0]\n</pre></div>\n\n\n<p>This is sufficient to produce any fine grained ordering you want with macro level behavior depending on how many columns you put into the ordering.\n\n</p><p>Likely, we use a crappy strtol on the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobPrio\" title=\"Job Prio\">JobPrio</a></span> attribute for versions of Condor which don't have this feature. This means that if you downgrade a pool with array based <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobPrios\" title=\"Job Prios\">JobPrios</a></span>, then it'll convert the first number upto the , and the jobprio and functions like how it is supposed to.</p></blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/297/dag.patch\">dag.patch</a>\n6074 bytes added by jrt on 2011-Mar-22 14:44:02 UTC.\n<br/>\nPatch to add <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PreJobPrio\" title=\"Pre Job Prio\">PreJobPrio</a></span> for dagman jobs. The DAGMan submissions can specify +PreJobPrio=&lt;value&gt; where &lt;value&gt; can be a DAGMan VAR, such as \n\n<p>VARS A myprio=\"100\" \n\n</p><p>and \n\n</p><p>+PreJobPrio = $(myprio)\n<br/>\n</p></li><li><a href=\"attach_get/302/dagman_FCFS_tests.tar\">dagman_FCFS_tests.tar</a>\n51200 bytes added by jrt on 2011-Mar-29 12:21:24 UTC.\n<br/>\ntarball of tests used with patch. See readme, results files.<br/>\n</li><li><a href=\"attach_get/303/dagman7.6-v3.patch\">dagman7.6-v3.patch</a>\n9563 bytes added by jrt on 2011-Mar-29 18:16:27 UTC.\n<br/>\nfixed erroneous use of INT_MIN and changed comment<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Mar-29 15:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21189\">[21189]</a></span>: Added {Pre,Post}JobPrio{1,2} job ad attributes, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1992\" title=\"Implement First Come, First Served for dagman jobs\">#1992</a></span> ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1992\" title=\"Implement First Come, First Served for dagman jobs\">#1992</a></span> ===VersionHistory=== New attributes: PreJobPrio1, PreJobPrio2, PostJobPrio1, PostJobPrio2\u00a0[...]\n (By Jon Thomas )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2011-Mar-31 16:29", "status": "resolved", "created": "2011-Mar-22 09:39", "fixed_version": "2011-Mar-22 09:39", "broken_version": "v070506", "priority": "2", "subsystem": "Daemons", "assigned_to": "jrt", "derived_from": "#804", "creator": "jrt", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu jthomas@redhat.com", "due_date": ""}