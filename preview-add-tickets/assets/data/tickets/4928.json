{"id": 4928, "title": "Ticket #4928: Schedd<->negotiator protocol timeouts in CMS pool", "description": "<blockquote>\nWe're seeing persistent issues with negotiator&lt;-&gt;schedd timeouts during matchmaking.\n\n<p>Historically, we've always ignored this as we figured \"the schedd is really busy\".  However, spending some time staring at this, I think there's an underlying problem.  Here's the setup:\n\n</p><p></p><ul>\n<li>Users A and B have a lot of idle jobs in queue in a schedd.\n</li><li>Negotiator sends many matches (~500) to User A.\n</li><li>Negotiator sends END_NEGOTIATE to schedd.\n</li><li>Negotiator starts negotiation with user B.\n</li><li>Negotiator times out reading response from schedd.\n</li></ul>\n\n<p>From the negotiator log:\n\n</p><p></p><div class=\"verbatim\">\n<pre>03/05/15 16:55:15 condor_read(): timeout reading 21 bytes from schedd analysis.jbalcas@cms.\n03/05/15 16:55:16 IO: Failed to read packet header\n03/05/15 16:55:16     Failed to get reply from schedd\n</pre></div>\n\n\n<p>From the schedd log:\n\n</p><p></p><div class=\"verbatim\">\n<pre>03/05/15 07:55:32 Lost priority - 1350 jobs matched\n03/05/15 07:55:32 Finished negotiating for analysis.jbalcas in local pool: 1350 matched, 0 rejected\n03/05/15 07:55:32 Activity on stashed negotiator socket: &lt;128.142.141.24:37159&gt;\n03/05/15 07:55:32 Using negotiation protocol: NEGOTIATE\n03/05/15 07:55:32 Negotiating for owner: analysis.mmascher@cms\n03/05/15 07:55:32 condor_write(): Socket closed when trying to write 2624 bytes to &lt;128.142.141.24:37159&gt;, fd is 19\n03/05/15 07:55:32 Buf::write(): condor_write() failed\n</pre></div>\n\n\n<p>(don't mind the timezone differences)  It took about 16 seconds for the schedd to get to the END_NEGOTIATE.\n\n</p><p>Perusing the logs, it seems the schedd has plenty of activity.\n\n</p><p>Here's what I think is going on:\n</p><ul>\n<li>The negotiator fills up the socket buffer with matches.  The buffer is large, meaning this is non-blocking.\n</li><li>It takes 16s to process all the matches in the schedd.  From what I can tell, it takes 1 daemon cycle per match.  So, if the buffer contained 500 matches then the END_NEGOTIATE, it takes 500 cycles to process all of them.\n</li><li>By the time we get to the last message on the TCP socket, even though the schedd responds promptly, the negotiator has closed the socket.\n<ul>\n<li>It's not entirely clear where all the time goes.  In at least one case, I've observed this triggering <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=FindRunnable\" title=\"Find Runnable\">FindRunnable</a></span> - rebuilding the prio table took 5s in itself.</li></ul>\n</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2015-Mar-11 11:48:10 by tannenba:</em> <br/>\n\nWhy 2 seconds vs 1 second?\n\n<p>If relaxing scheduling semantics is OK, does <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4931\" onclick=\"get_ticket_and_populate_wrapper('4931'); return false;\" title=\"Document PreJobPrioX and PostJobPrioX\">#4931</a></span> solve the problem (at least for the CMS pool) ?\n\n</p><p></p><hr/>\n<em>2015-Mar-11 12:05:38 by bbockelm:</em> <br/>\n\nUnfortunately, no - that just reduces the resource request count.  It doesn't solve the problem here.\n\n<p>I do agree that both are needed for CMS in short order!\n\n</p><p></p><hr/>\n<em>2015-Mar-11 13:23:06 by bbockelm:</em> <br/>\n\nSo, I found time to sit down and test the posted branch.  I think it's working effectively now - before, a bug in msgReady for messages &gt;4KB caused it to think there was no waiting data.\n\n<p>On my test VM (I had faked a 95-core setup), we can now match fast enough to bottleneck the shared_port.  Progress!\n\n</p><p>I had things set to 2s before I had switched to a millisecond-level clock.  It's now 1s.\n\n</p><p></p><hr/>\n<em>2015-Mar-21 19:53:59 by tannenba:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>Patch looks very nice, except for a couple changes (which I already did since\nthey were easy to do):\n\n</p><p></p><ol>\n<li>A few more comments in the actual code would help.  Comments in the commit messages were very good, however, but keep in mind folks looking at the code years from now are not necessarily going to lookup every commit message for every code block...\n\n<p></p></li><li>do/while loop should verify the pending operation is RECEIVE_MSG_PENDING, instead of just anything besides NOTHING_PENDING, as we may add more pending states (or, gasp, reuse the DCMessenger object to start a new connection...)\n\n<p></p></li><li>duration to keep processing messages is now a config knob <code>RECEIVE_MSGS_DURATION</code> which defaults to 0.  Time is in milliseconds. If equal to zero, that means process one message and return to daemonCore.  No need to document this knob, it is a developer tuning parameter.\n</li></ol>\n\n<p>So to get the behavior of the original patch, put in condor_config\n\n</p><p></p><pre>    RECEIVE_MSGS_DURATION = 1000\n</pre>\n\n<p>Would be super helpful if CMS reported back upstream results of experimentation with different duration values as feedback a better default for future releases.\n\n</p><p>Thanks for the patch!!! Merging to the v8.3.5 release branch.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-21 19:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=43658\">[43658]</a></span>: Added undocumented tuning knob RECEIVE_MSGS_DURATION. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4928\" onclick=\"get_ticket_and_populate_wrapper('4928'); return false;\" title=\"Schedd&lt;-&gt;negotiator protocol timeouts in CMS pool\">#4928</a></span> Also addressed a few other changes from code review.  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-11 13:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=43560\">[43560]</a></span>: Fixup: break loop if no info is available. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4928\" onclick=\"get_ticket_and_populate_wrapper('4928'); return false;\" title=\"Schedd&lt;-&gt;negotiator protocol timeouts in CMS pool\">#4928</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-11 13:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=43559\">[43559]</a></span>: Have msgReady read until it blocks. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4928\" onclick=\"get_ticket_and_populate_wrapper('4928'); return false;\" title=\"Schedd&lt;-&gt;negotiator protocol timeouts in CMS pool\">#4928</a></span> Previously, msgReady would return True if: 1) A message is ready, OR 2) A message is one packet long and can be read non-blocking.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-11 12:56</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=43558\">[43558]</a></span>: Improve logging messages and decrease blocking to 1s. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4928\" onclick=\"get_ticket_and_populate_wrapper('4928'); return false;\" title=\"Schedd&lt;-&gt;negotiator protocol timeouts in CMS pool\">#4928</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-05 20:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=43530\">[43530]</a></span>: Read consecutive messages from messenger. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4928\" onclick=\"get_ticket_and_populate_wrapper('4928'); return false;\" title=\"Schedd&lt;-&gt;negotiator protocol timeouts in CMS pool\">#4928</a></span> If multiple CEDAR messages are available on a socket, it will take a DC duty cycle per message. This may be inefficient if each message takes a short time to process.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2015-Mar-23 11:46", "status": "resolved", "created": "2015-Mar-05 19:43", "fixed_version": "2015-Mar-05 19:43", "broken_version": "", "priority": "1", "subsystem": "DaemonsCM", "assigned_to": "tannenba", "derived_from": "#4490", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "bbockelm@cse.unl.edu, tannenba@cs.wisc.edu", "due_date": ""}