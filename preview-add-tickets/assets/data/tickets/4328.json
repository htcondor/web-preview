{"id": 4328, "title": "Ticket #4328: Failed file transfers can be treated as successful by schedd/shadow", "description": "<blockquote>\nWhen the schedd and shadow transfer a job's files, they create a child process to handle the actual transfer. The exit status of the child process is examined to determine whether the transfer succeeded. The child will use exit code 0 to indicate failure and exit code 1 to indicate success. But the parent process considers any non-zero exit code a success (exiting via a signal is a failure, see <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3104\" onclick=\"get_ticket_and_populate_wrapper('3104'); return false;\" title=\"Crash during file spooling results in schedd releasing job\">#3104</a></span>).\n\n<p>The child process can have a non-zero exit status in several failure cases. Any call to ASSERT() or EXCEPT() results in an exit code of 4. A dprintf() failure results in an exit code of 44. The parent process must consider any exit condition other than an exit code of 1 as a failure.\n\n</p><p>The parent process also expects to read a status update over a pipe from the child after the child exits (in FileTransfer::ReadTransferPipeMsg()). Failure to read this message will cause the transfer to be flagged as failed. But the final call to ReadTransferPipeMsg() could read an IN_PROGRESS message and not the FINAL_UPDATE message, in which case the transfer won't be flagged as failed. After the final call to ReadTransferPipeMsg(), FileTransfer::Reaper() should verify that Info.status==XFER_STATUS_DONE.</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Apr-22 15:56:22 by jfrey:</em> <br/>\n\nThis could explain the behavior described in <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=4300\" onclick=\"get_ticket_and_populate_wrapper('4300'); return false;\" title=\"Job left queue after failed file transfer w/ MAX_TRANSFER_QUEUE_AGE\">#4300</a></span>.\n\n<p></p><hr/>\n<em>2014-Apr-23 14:34:11 by tlmiller:</em> <br/>\n\n<strong class=\"two\">Code Review</strong>\n\n<p>Approved.</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4332\" onclick=\"get_ticket_and_populate_wrapper('4332'); return false;\" title=\"Don't terminate Create_Thread() children via exec()\">#4332</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nDon't terminate Create_Thread() children via exec()</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Jun-02 13:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40293\">[40293]</a></span>: Minor 8.0.7 version history item edit. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4328\" onclick=\"get_ticket_and_populate_wrapper('4328'); return false;\" title=\"Failed file transfers can be treated as successful by schedd/shadow\">#4328</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Apr-28 15:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40032\">[40032]</a></span>: Undo change in exit code checks for file transfer child processes. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4328\" onclick=\"get_ticket_and_populate_wrapper('4328'); return false;\" title=\"Failed file transfers can be treated as successful by schedd/shadow\">#4328</a></span> When a process created with Create_Thread() exits, we terminate the process by exec'ing /bin/true or /bin/false. This means any non-zero return value of the child is translated into the exit code of /bin/false. On Solaris, this\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Apr-23 14:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40023\">[40023]</a></span>: Failed file transfers can be treated as successful by schedd/shadow <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4328\" onclick=\"get_ticket_and_populate_wrapper('4328'); return false;\" title=\"Failed file transfers can be treated as successful by schedd/shadow\">#4328</a></span> When the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=FileTransfer\" title=\"File Transfer\">FileTransfer</a></span> object is invoked in non-blocking mode, the parent process needs to be more careful in checking whether the transfer succeeded.\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-May-21 10:50", "status": "resolved", "created": "2014-Apr-22 15:54", "fixed_version": "2014-Apr-22 15:54", "broken_version": "v080000", "priority": "3", "subsystem": "FileTransfer", "assigned_to": "jfrey", "derived_from": "#3104", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}