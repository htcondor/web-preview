{"id": 3931, "title": "Ticket #3931: Asynchronous Stageout for dynamic slots", "description": "<blockquote>\n<strong>This approach has been abandoned.  See <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4291\" onclick=\"get_ticket_and_populate_wrapper('4291'); return false;\" title=\"Overlayed I/O with dedicated transfer slots\">#4291</a></span> for latest</strong>\n\n<p>Full details available in <a class=\"external\" href=\"https://docs.google.com/document/d/13JDdkZ1I9zquocMNJ70LCAmN1mHtgz8Jq1_5uWqv_oA/edit#\">Design Doc</a>\n\n</p><p>There's a relatively straightforward way to do asynchronous stageout -- allow the dynamic slot starter release the CPU resources it currently holds back to its parent slot.  The partitionable slot gets a new CPU resource and can be rematched.\n\n</p><p>There are two circuit breakers relevant here:\n</p><ul>\n<li>There should be a way to limit the number of simultaneous asynchronous stageouts; I suggest having a config knob which defaults to the number of CPUs in the parent partitionable slot.\n</li><li>This would currently cause a lot of shadow churn - the dynamic slot will no longer match the next job, meaning the schedd has to go back to the negotiator to reuse the resource.  Hence, the starter shouldn't try async stageout until the stageout has lasted at least X seconds.  Another config knob; default is 60.  This could go away once the shadows only match against the p-slot; we don't need to wait for this, however.\n</li></ul>\n\n<p>Hence - the starter could request to give up its resources but the startd could deny the request.\n\n</p><p>For the implementation, we already have a command socket between starter and startd - we can use this for the communication.  We would also need to switch stageout to non-blocking in the starter; not so bad, as allJobsDone is already non-blocking (from the job exit hook implementation).</p></blockquote>", "remarks": "<blockquote>\n<em>2013-Sep-19 14:40:15 by gthain:</em> <br/>\n\nDoes the startd know if it is in the transfering output state?  If so, seems like with static slots, you could just bologna batch up a hack wherein you have two slots per core, and start is true based on the transferring state of the buddy slot.  I'm curious how much overlapping we're expecting to see in the real world?\n\n<p></p><hr/>\n<em>2013-Sep-19 14:45:21 by bbockelm:</em> <br/>\n\nThe startd doesn't currently get informed by stageout (it's not actually an activity), but it could.  The starter pushes a status update to the schedd when it is staging out including the attribute \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=TransferringOutput\" title=\"Transferring Output\">TransferringOutput</a></span> = true\"; we could easily have the startd also be informed.\n\n<p>That said, I prefer the approach outlined above for the p-slot case!\n\n</p><p></p><hr/>\n<em>2013-Sep-19 16:38:39 by gthain:</em> <br/>\n\nLooks like there's a couple of tests that hang when running this branch.  In one case, the test tries to transfer_output_files = file_that_doesn't_exit, and tests that the job is held.\n\n<p></p><hr/>\n<em>2013-Sep-20 07:40:38 by bbockelm:</em> <br/>\n\nTests fixed (<a class=\"external\" href=\"http://submit-2.batlab.org/results/run-details.php?runid=175125\">http://submit-2.batlab.org/results/run-details.php?runid=175125</a>).  The remaining test failures look unrelated.\n\n<p></p><hr/>\n<em>2014-Feb-14 12:25:37 by tannenba:</em> <br/>\n\nDesign document forthcoming....\n\n<p></p><pre>   [11:55]\ttannenba: bbockelm  re #3931, can you write up a design doc ?\n   [11:56]\tbbockelm: yup\n</pre>\n\n<p></p><hr/>\n<em>2014-Feb-19 17:08:31 by tannenba:</em> <br/>\n\nFirst pass at design doc reviewed w/ comments; Brian, please address comments and assign ticket back to me...  Thanks, Todd</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4242\" onclick=\"get_ticket_and_populate_wrapper('4242'); return false;\" title=\"starter should have an argument to specify slot id/name\">#4242</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nstarter should have an argument to specify slot id/name</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4244\" onclick=\"get_ticket_and_populate_wrapper('4244'); return false;\" title=\"allow StarterLog.JobId instead of StarterLog.slotN\">#4244</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nallow StarterLog.JobId instead of StarterLog.slotN</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4291\" onclick=\"get_ticket_and_populate_wrapper('4291'); return false;\" title=\"Overlayed I/O with dedicated transfer slots\">#4291</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nOverlayed I/O with dedicated transfer slots</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Apr-14 14:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39920\">[39920]</a></span>: Squashed commit of the following: V8_1-async_transfer, which adds overly execute and output transfer. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4291\" onclick=\"get_ticket_and_populate_wrapper('4291'); return false;\" title=\"Overlayed I/O with dedicated transfer slots\">#4291</a></span>\u00a0[...]\n (By Zach Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-06 00:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39534\">[39534]</a></span>: allow <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StarterLog\" title=\"Starter Log\">StarterLog</a></span> extension to be blank, Cluster, or <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobId\" title=\"Job Id\">JobId</a></span> instead of slot id <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4244\" onclick=\"get_ticket_and_populate_wrapper('4244'); return false;\" title=\"allow StarterLog.JobId instead of StarterLog.slotN\">#4244</a></span>, and pass slot-name to the starter explicity via argument <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4242\" onclick=\"get_ticket_and_populate_wrapper('4242'); return false;\" title=\"starter should have an argument to specify slot id/name\">#4242</a></span> This is in support of async stage out <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3931\" onclick=\"get_ticket_and_populate_wrapper('3931'); return false;\" title=\"Asynchronous Stageout for dynamic slots\">#3931</a></span> ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-14 11:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39421\">[39421]</a></span>: Only show transferring state from the current job. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3931\" onclick=\"get_ticket_and_populate_wrapper('3931'); return false;\" title=\"Asynchronous Stageout for dynamic slots\">#3931</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-14 11:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39420\">[39420]</a></span>: Force a queue update when user stageout starts. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3931\" onclick=\"get_ticket_and_populate_wrapper('3931'); return false;\" title=\"Asynchronous Stageout for dynamic slots\">#3931</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-14 11:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39419\">[39419]</a></span>: Fix handling of CPU attributes. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3931\" onclick=\"get_ticket_and_populate_wrapper('3931'); return false;\" title=\"Asynchronous Stageout for dynamic slots\">#3931</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-14 07:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39416\">[39416]</a></span>: Finish initial implementation of <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3931\" onclick=\"get_ticket_and_populate_wrapper('3931'); return false;\" title=\"Asynchronous Stageout for dynamic slots\">#3931</a></span>. Users should be able to start stageout mode for dynamic slots via an appropriate condor_chirp command. Time spent in user stageout will be registered as post-execution time in the schedd stats.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-13 20:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39414\">[39414]</a></span>: Quick checkpoint of ASO chirp work. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3931\" onclick=\"get_ticket_and_populate_wrapper('3931'); return false;\" title=\"Asynchronous Stageout for dynamic slots\">#3931</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-19 21:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37690\">[37690]</a></span>: Replicate original logic when job goes on hold. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3931\" onclick=\"get_ticket_and_populate_wrapper('3931'); return false;\" title=\"Asynchronous Stageout for dynamic slots\">#3931</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-18 12:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37645\">[37645]</a></span>: Add support for asynchronous stageout in dynamic slots. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3931\" onclick=\"get_ticket_and_populate_wrapper('3931'); return false;\" title=\"Asynchronous Stageout for dynamic slots\">#3931</a></span>  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "experimental", "last_change": "2014-May-19 15:42", "status": "abandoned", "created": "2013-Sep-18 12:39", "fixed_version": "2013-Sep-18 12:39", "broken_version": "", "priority": "2", "subsystem": "DaemonsExecNode", "assigned_to": "bbockelm", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "zmiller@cs.wisc.edu, eje@cs.wisc.edu, tstclair@redhat.com, tannenba@cs.wisc.edu", "due_date": ""}