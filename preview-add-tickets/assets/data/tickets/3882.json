{"id": 3882, "title": "Ticket #3882: DAGMan recovery aborts after failing to recognize completed jobs", "description": "<blockquote>\nOn recovery, DAGMan appears not to recognize already-completed jobs it has logged as completed, causing it to freak out when it sees their children.  The log below spells it out clearly.\n\n<p></p><div class=\"verbatim\">\n<pre>08/29/13 11:35:09 **** condor_scheduniv_exec.8176437.0 (condor_DAGMAN) pid 20207 EXITING WITH STATUS 1\n08/29/13 11:37:07 ******************************************************\n08/29/13 11:37:07 ** condor_scheduniv_exec.8176453.0 (CONDOR_DAGMAN) STARTING UP\n08/29/13 11:37:07 ** /usr/bin/condor_dagman\n08/29/13 11:37:07 ** SubsystemInfo: name=DAGMAN type=DAGMAN(10) class=DAEMON(1)\n08/29/13 11:37:07 ** Configuration: subsystem:DAGMAN local:&lt;NONE&gt; class:DAEMON\n08/29/13 11:37:07 ** $CondorVersion: 8.0.2 Aug 15 2013 BuildID: 162062 $\n08/29/13 11:37:07 ** $CondorPlatform: x86_64_RedHat6 $\n08/29/13 11:37:07 ** PID = 21588\n08/29/13 11:37:07 ** Log last touched 8/29 11:35:09\n08/29/13 11:37:07 ******************************************************\n08/29/13 11:37:07 Using config source: /etc/condor/condor_config\n08/29/13 11:37:07 Using local config sources:\n08/29/13 11:37:07    /etc/condor/condor_config.local\n08/29/13 11:37:07 DaemonCore: command socket at &lt;10.20.5.33:41142?PrivAddr=%3c128.230.146.15:41142%3e&amp;PrivNet=public&gt;\n08/29/13 11:37:07 DaemonCore: private command socket at &lt;128.230.146.15:41142&gt;\n08/29/13 11:37:07 DAGMAN_USE_STRICT setting: 1\n08/29/13 11:37:07 DAGMAN_VERBOSITY setting: 3\n08/29/13 11:37:07 DAGMAN_DEBUG_CACHE_SIZE setting: 5242880\n08/29/13 11:37:07 DAGMAN_DEBUG_CACHE_ENABLE setting: False\n08/29/13 11:37:07 DAGMAN_SUBMIT_DELAY setting: 0\n08/29/13 11:37:07 DAGMAN_MAX_SUBMIT_ATTEMPTS setting: 6\n08/29/13 11:37:07 DAGMAN_STARTUP_CYCLE_DETECT setting: False\n08/29/13 11:37:07 DAGMAN_MAX_SUBMITS_PER_INTERVAL setting: 50\n08/29/13 11:37:07 DAGMAN_USER_LOG_SCAN_INTERVAL setting: 5\n08/29/13 11:37:07 DAGMAN_DEFAULT_PRIORITY setting: 0\n08/29/13 11:37:07 DAGMAN_ALWAYS_USE_NODE_LOG setting: True\n08/29/13 11:37:07 DAGMAN_SUPPRESS_NOTIFICATION setting: True\n08/29/13 11:37:07 allow_events (DAGMAN_IGNORE_DUPLICATE_JOB_EXECUTION, DAGMAN_ALLOW_EVENTS) setting: 114\n08/29/13 11:37:07 DAGMAN_RETRY_SUBMIT_FIRST setting: True\n08/29/13 11:37:07 DAGMAN_RETRY_NODE_FIRST setting: False\n08/29/13 11:37:07 DAGMAN_MAX_JOBS_IDLE setting: 2500\n08/29/13 11:37:07 DAGMAN_MAX_JOBS_SUBMITTED setting: 5000\n08/29/13 11:37:07 DAGMAN_MAX_PRE_SCRIPTS setting: 0\n08/29/13 11:37:07 DAGMAN_MAX_POST_SCRIPTS setting: 0\n08/29/13 11:37:07 DAGMAN_ALLOW_LOG_ERROR setting: False\n08/29/13 11:37:07 DAGMAN_MUNGE_NODE_NAMES setting: True\n08/29/13 11:37:07 DAGMAN_PROHIBIT_MULTI_JOBS setting: True\n08/29/13 11:37:07 DAGMAN_SUBMIT_DEPTH_FIRST setting: True\n08/29/13 11:37:07 DAGMAN_ALWAYS_RUN_POST setting: True\n08/29/13 11:37:07 DAGMAN_ABORT_DUPLICATES setting: True\n08/29/13 11:37:07 DAGMAN_ABORT_ON_SCARY_SUBMIT setting: True\n08/29/13 11:37:07 DAGMAN_PENDING_REPORT_INTERVAL setting: 600\n08/29/13 11:37:07 DAGMAN_AUTO_RESCUE setting: True\n08/29/13 11:37:07 DAGMAN_MAX_RESCUE_NUM setting: 100\n08/29/13 11:37:07 DAGMAN_WRITE_PARTIAL_RESCUE setting: True\n08/29/13 11:37:07 DAGMAN_DEFAULT_NODE_LOG setting: null\n08/29/13 11:37:07 DAGMAN_GENERATE_SUBDAG_SUBMITS setting: True\n08/29/13 11:37:07 DAGMAN_MAX_JOB_HOLDS setting: 100\n08/29/13 11:37:07 DAGMAN_HOLD_CLAIM_TIME setting: 20\n08/29/13 11:37:07 ALL_DEBUG setting:\n08/29/13 11:37:07 DAGMAN_DEBUG setting:\n08/29/13 11:37:07 argv[0] == \"condor_scheduniv_exec.8176453.0\"\n08/29/13 11:37:07 argv[1] == \"-Debug\"\n08/29/13 11:37:07 argv[2] == \"3\"\n08/29/13 11:37:07 argv[3] == \"-Lockfile\"\n08/29/13 11:37:07 argv[4] == \"inspiral_hipe_full_data.FULL_DATA-0.dag.lock\"\n08/29/13 11:37:07 argv[5] == \"-Dag\"\n08/29/13 11:37:07 argv[6] == \"inspiral_hipe_full_data.FULL_DATA-0.dag\"\n08/29/13 11:37:07 argv[7] == \"-AllowVersionMismatch\"\n08/29/13 11:37:07 argv[8] == \"-AutoRescue\"\n08/29/13 11:37:07 argv[9] == \"1\"\n08/29/13 11:37:07 argv[10] == \"-DoRescueFrom\"\n08/29/13 11:37:07 argv[11] == \"0\"\n08/29/13 11:37:07 argv[12] == \"-MaxPre\"\n08/29/13 11:37:07 argv[13] == \"1\"\n08/29/13 11:37:07 Default node log file is: &lt;/usr1/samantha.usman/logs/H1L1V1-ihope_ssipe-966384015-2592000.S6MfET/full_data/inspiral_hipe_full_data.FULL_DATA_ID000002.000/inspiral_hipe_full_data.FULL_DATA-0.dag.nodes.log&gt;\n08/29/13 11:37:07 Warning: the version (undefined) of this DAG's Condor submit file (created by condor_submit_dag) is invalid; continuing because of -AllowVersionMismatch flag\n08/29/13 11:37:07 DAG Lockfile will be written to inspiral_hipe_full_data.FULL_DATA-0.dag.lock\n08/29/13 11:37:07 DAG Input file is inspiral_hipe_full_data.FULL_DATA-0.dag\n08/29/13 11:37:07 Parsing 1 dagfiles\n08/29/13 11:37:07 Parsing inspiral_hipe_full_data.FULL_DATA-0.dag ...\n08/29/13 11:37:08 Warning: category thinca has no throttle value set\n08/29/13 11:37:08 Warning: category sire has no throttle value set\n08/29/13 11:37:08 Warning: category inspiral1 has no throttle value set\n08/29/13 11:37:08 Warning: category registration has no assigned nodes, so the throttle setting (1) will have no effect\n08/29/13 11:37:08 Warning: category ligolw_add has no throttle value set\n08/29/13 11:37:08 Dag contains 3713 total jobs\n08/29/13 11:37:08 Lock file inspiral_hipe_full_data.FULL_DATA-0.dag.lock detected,\n08/29/13 11:37:08 Duplicate DAGMan PID 20207 is no longer alive; this DAGMan should continue.\n08/29/13 11:37:08 Submit file version indicates submit is too old. Falling back to 7.8 behavior of not using the default node log\n08/29/13 11:37:08 Sleeping for 12 seconds to ensure ProcessId uniqueness\n08/29/13 11:37:20 Bootstrapping...\n08/29/13 11:37:20 Number of pre-completed nodes: 0\n08/29/13 11:37:20 Running in RECOVERY mode... &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n08/29/13 11:37:20 Currently monitoring 1 Condor log file(s)\n08/29/13 11:37:20 Event: ULOG_SUBMIT for Condor Node create_dir_inspiral_hipe_full_data.FULL_DATA_0_local (7507523.0.0) [recovery mode]\n08/29/13 11:37:20 Number of idle job procs: 1\n08/29/13 11:37:20 Event: ULOG_EXECUTE for Condor Node create_dir_inspiral_hipe_full_data.FULL_DATA_0_local (7507523.0.0) [recovery mode]\n08/29/13 11:37:20 Number of idle job procs: 0\n08/29/13 11:37:20 Event: ULOG_JOB_TERMINATED for Condor Node create_dir_inspiral_hipe_full_data.FULL_DATA_0_local (7507523.0.0) [recovery mode]\n08/29/13 11:37:20 Number of idle job procs: 0\n08/29/13 11:37:20 Node create_dir_inspiral_hipe_full_data.FULL_DATA_0_local job proc (7507523.0.0) completed successfully.\n08/29/13 11:37:20 Node create_dir_inspiral_hipe_full_data.FULL_DATA_0_local job completed\n08/29/13 11:37:20 Event: ULOG_SUBMIT for Condor Node stage_in_remote_local_1_1 (7507528.0.0) [recovery mode]\n08/29/13 11:37:20 Error: DAG semantics violated!  Node stage_in_remote_local_1_1 was submitted but has unfinished parents!\n08/29/13 11:37:20 This may indicate log file corruption; you may want to check the log files and re-run the DAG in recovery mode by giving the command 'condor_submit inspiral_hipe_full_data.FULL_DATA-0.dag.condor.sub'\n08/29/13 11:37:20 ---------------------- Job ----------------------\n08/29/13 11:37:20       Node Name: stage_in_remote_local_1_1\n08/29/13 11:37:20            Noop: false\n08/29/13 11:37:20          NodeID: 6\n08/29/13 11:37:20     Node Status: STATUS_READY\n08/29/13 11:37:20 Node return val: -1\n08/29/13 11:37:20 Job Submit File: stage_in_remote_local_1_1.sub\n08/29/13 11:37:20     POST Script: /usr/bin/pegasus-exitcode   /usr1/samantha.usman/logs/H1L1V1-ihope_ssipe-966384015-2592000.S6MfET/./full_data/inspiral_hipe_full_data.FULL_DATA_ID000002.000/stage_in_remote_local_1_1.out\n08/29/13 11:37:20           Retry: 3\n08/29/13 11:37:20   Condor Job ID: (7507528.0.0)\n08/29/13 11:37:20       Q_PARENTS: create_dir_inspiral_hipe_full_data.FULL_DATA_0_local, &lt;END&gt;\n08/29/13 11:37:20       Q_WAITING: create_dir_inspiral_hipe_full_data.FULL_DATA_0_local, &lt;END&gt;\n08/29/13 11:37:20      Q_CHILDREN: ligolw_add_ID006073, ligolw_add_ID006309, ligolw_add_ID006197, ligolw_add_ID006227, ligolw_add_ID006261, ligolw_add_ID006189, ligolw_add_ID006355, ligolw_add_ID006357, ligolw_add_ID006349, ligolw_add_ID006143, ligolw_add_ID006121, ligolw_add_ID006119, ligolw_add_ID006141, ligolw_add_ID006139, ligolw_add_ID006117, ligolw_add_ID006135, ligolw_add_ID006123, ligolw_add_ID006147, ligolw_add_ID006133, ligolw_add_ID006145, ligolw_add_ID006245, ligolw_add_ID006243, ligolw_add_ID006233, ligolw_add_ID006235, ligolw_add_ID006225, ligolw_add_ID006223, ligolw_add_ID006231, ligolw_add_ID006229, ligolw_add_ID006219, ligolw_add_ID006221, ligolw_add_ID006103, ligolw_add_ID006393, ligolw_add_ID006395, ligolw_add_ID006191, ligolw_add_ID006185, ligolw_add_ID006187, ligolw_add_ID006199, ligolw_add_ID006201, ligolw_add_ID006051, ligolw_add_ID006099, ligolw_add_ID006101, ligolw_add_ID006057, ligolw_add_ID006093, ligolw_add_ID006217, ligolw_add_ID006215, ligolw_add_ID006371, ligolw_add_ID006375, ligolw_add_ID006373, ligolw_add_ID006213, ligolw_add_ID006211, ligolw_add_ID006377, ligolw_add_ID006207, ligolw_add_ID006209, ligolw_add_ID006359, ligolw_add_ID006361, ligolw_add_ID006205, ligolw_add_ID006363, ligolw_add_ID006365, ligolw_add_ID006203, ligolw_add_ID006367, ligolw_add_ID006369, ligolw_add_ID006193, ligolw_add_ID006195, ligolw_add_ID006031, ligolw_add_ID006379, ligolw_add_ID006345, ligolw_add_ID006263, ligolw_add_ID006255, ligolw_add_ID006253, ligolw_add_ID006257, ligolw_add_ID006259, ligolw_add_ID006351, ligolw_add_ID006353, ligolw_add_ID006237, ligolw_add_ID006239, ligolw_add_ID006241, ligolw_add_ID006347, ligolw_add_ID006247, ligolw_add_ID006251, ligolw_add_ID006249, ligolw_add_ID006125, ligolw_add_ID006115, ligolw_add_ID006113, ligolw_add_ID006131, ligolw_add_ID006137, ligolw_add_ID006127, ligolw_add_ID006129, ligolw_add_ID006105, ligolw_add_ID006107, ligolw_add_ID006109, ligolw_add_ID006111, ligolw_add_ID006043, ligolw_add_ID006045, ligolw_add_ID006049, ligolw_add_ID006047, ligolw_add_ID006053, ligolw_add_ID006033, ligolw_add_ID006035, ligolw_add_ID006037, ligolw_add_ID006039, ligolw_add_ID006041, ligolw_add_ID006025, ligolw_add_ID006027, ligolw_add_ID006029, ligolw_add_ID006017, ligolw_add_ID006023, ligolw_add_ID006009, ligolw_add_ID006019, ligolw_add_ID006021, ligolw_add_ID006149, ligolw_add_ID006151, ligolw_add_ID006055, ligolw_add_ID006059, ligolw_add_ID006381, ligolw_add_ID006069, ligolw_add_ID006383, ligolw_add_ID006173, ligolw_add_ID006175, ligolw_add_ID006067, ligolw_add_ID006177, ligolw_add_ID006077, ligolw_add_ID006391, ligolw_add_ID006179, ligolw_add_ID006181, ligolw_add_ID006183, ligolw_add_ID006385, ligolw_add_ID006387, ligolw_add_ID006389, ligolw_add_ID006153, ligolw_add_ID006403, ligolw_add_ID006401, ligolw_add_ID006089, ligolw_add_ID006087, ligolw_add_ID006157, ligolw_add_ID006155, ligolw_add_ID006159, ligolw_add_ID006399, ligolw_add_ID006397, ligolw_add_ID006097, ligolw_add_ID006095, ligolw_add_ID006091, ligolw_add_ID006161, ligolw_add_ID006079, ligolw_add_ID006081, ligolw_add_ID006163, ligolw_add_ID006165, ligolw_add_ID006167, ligolw_add_ID006083, ligolw_add_ID006085, ligolw_add_ID006169, ligolw_add_ID006171, ligolw_add_ID006075, ligolw_add_ID006065, ligolw_add_ID006071, ligolw_add_ID006061, ligolw_add_ID006063, ligolw_add_ID006423, ligolw_add_ID006419, ligolw_add_ID006421, ligolw_add_ID006431, ligolw_add_ID006425, ligolw_add_ID006427, ligolw_add_ID006429, ligolw_add_ID006405, ligolw_add_ID006407, ligolw_add_ID006305, ligolw_add_ID006417, ligolw_add_ID006415, ligolw_add_ID006413, ligolw_add_ID006411, ligolw_add_ID006409, ligolw_add_ID006287, ligolw_add_ID006437, ligolw_add_ID006285, ligolw_add_ID006433, ligolw_add_ID006435, ligolw_add_ID006275, ligolw_add_ID006015, ligolw_add_ID006011, ligolw_add_ID006013, ligolw_add_ID006333, ligolw_add_ID006265, ligolw_add_ID006267, ligolw_add_ID006335, ligolw_add_ID006337, ligolw_add_ID006343, ligolw_add_ID006341, ligolw_add_ID006339, ligolw_add_ID006279, ligolw_add_ID006277, ligolw_add_ID006271, ligolw_add_ID006273, ligolw_add_ID006269, ligolw_add_ID006319, ligolw_add_ID006289, ligolw_add_ID006317, ligolw_add_ID006321, ligolw_add_ID006281, ligolw_add_ID006283, ligolw_add_ID006297, ligolw_add_ID006323, ligolw_add_ID006325, ligolw_add_ID006331, ligolw_add_ID006329, ligolw_add_ID006291, ligolw_add_ID006295, ligolw_add_ID006293, ligolw_add_ID006327, ligolw_add_ID006303, ligolw_add_ID006299, ligolw_add_ID006301, ligolw_add_ID006307, ligolw_add_ID006315, ligolw_add_ID006311, ligolw_add_ID006313, &lt;END&gt;\n08/29/13 11:37:20 **** condor_scheduniv_exec.8176453.0 (condor_DAGMAN) pid 21588 EXITING WITH STATUS 1\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2013-Aug-29 16:05:58 by pfc:</em> <br/>\n\nI should add that this is a critical show-stopper for LIGO (and any other DAGMan user).  Specifically, it means the act of upgrading to 8.0.2 (thereby restarting the schedd and causing DAGMan jobs to recover) causes any running DAGMs to either abort and leave the queue (best-case) or resubmit every already-completed job in the DAG (worst-case).  The only workaround is a Condor (or at least DAGMan) downgrade to 8.0.1 -- and you still have to manually track down and resubmit every aborted DAG.  (I have dozens of them still to clean up just at Syracuse alone...)\n\n<p></p><hr/>\n<em>2013-Aug-30 11:03:50 by wenger:</em> <br/>\n\nMy current theory is that this has something to do with the HTCondor version not being specified in the .condor.sub file.  This causes DAGMan to think that it should fall back to the \"read from the log files specified in the submit files\" mode as opposed to the \"use the single node job log file\" mode.  (This fallback feature was added in 8.0.1.)\n\n<p>If the original DAG was submitted with 7.9 or 8.0.0, DAGMan would have used the \"single log file\" feature initially; but on restart (because of the missing version in the .condor.sub file) the new instance of DAGMan falls back to the old \"individual submit file\" behavior.\n\n</p><p></p><hr/>\n<em>2013-Sep-03 16:31:27 by wenger:</em> <br/>\n\nAs per today's LIGO phone conference, the plan is as follows:\n\n<p></p><ol>\n<li>I produce an 8.0.3-pre release DAGMan that doesn't do the \"fall back to individual log files\" check.  If possible, this will be statically linked as far as the HTCondor libraries are concerned, so hopefully LIGO will just have to push out condor_dagman and condor_submit_dag binaries.  We need binaries for SL6 and Deb6 (both 64-bit, I think).\n\n<p></p></li><li>I fix the check (my current thought is for it to check for the existence of the default node log if the version is not defined in the arguments).  This fix will go into the \"real\" 8.0.3 release.\n</li></ol>\n\n<p></p><hr/>\n<em>2013-Sep-06 11:56:03 by gthain:</em> <br/>\n\nI added a new cmake target to build condor_dagman_s, a more statically linked version of dagman, to work around problems with mixed HTCondor version deployments.\n\n<p></p><hr/>\n<em>2013-Sep-06 16:25:53 by pfc:</em> <br/>\n\nEarly returns indicate a win.  The b0rked DAGs have successfully resumed!  Thank you all VERY much for the fix -- getting these workflows restarted before the weekend was really important.\n\n<p></p><hr/>\n<em>2013-Sep-12 19:19:24 by wenger:</em> <br/>\n\nThis works now in my manual tests.  I'm still working on the automated tests (see <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3890\" onclick=\"get_ticket_and_populate_wrapper('3890'); return false;\" title='Have a test for \"Pegasus\" workflow recovery'>#3890</a></span>).\n\n<p></p><hr/>\n<em>2013-Sep-13 11:39:51 by tim:</em> <br/>\n\n<strong>CODE REVIEW:</strong> This looks good.\n\n<p></p><hr/>\n<em>2013-Sep-13 16:16:24 by wenger:</em> <br/>\n\nDevelopment of this fix is on V8_0-gittrac_3882-branch.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"reviewdesign\" href=\"/tickets?ticket=3889\" onclick=\"get_ticket_and_populate_wrapper('3889'); return false;\" title=\"Periodically dump rescue DAG while continuing to run\">#3889</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nPeriodically dump rescue DAG while continuing to run</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3890\" onclick=\"get_ticket_and_populate_wrapper('3890'); return false;\" title='Have a test for \"Pegasus\" workflow recovery'>#3890</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nHave a test for \"Pegasus\" workflow recovery</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"active\" href=\"/tickets?ticket=3891\" onclick=\"get_ticket_and_populate_wrapper('3891'); return false;\" title=\"Get Pegasus to fix sub-DAG submit files\">#3891</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nGet Pegasus to fix sub-DAG submit files</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-13 16:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37602\">[37602]</a></span>: Don't need statically linked dagman for release. <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3882\" onclick=\"get_ticket_and_populate_wrapper('3882'); return false;\" title=\"DAGMan recovery aborts after failing to recognize completed jobs\">#3882</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-11 16:34</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37552\">[37552]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3882\" onclick=\"get_ticket_and_populate_wrapper('3882'); return false;\" title=\"DAGMan recovery aborts after failing to recognize completed jobs\">#3882</a></span>: Fixed this (although the fix still needs some more testing). The fix is that we check whether a valid version is defined in the .condor.sub file, rather than essentially assuming that we have a valid version.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-06 11:38</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37496\">[37496]</a></span>: edit prose in 8.1.1 version history and fully identify which releases the bug appeared in. ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3882\" onclick=\"get_ticket_and_populate_wrapper('3882'); return false;\" title=\"DAGMan recovery aborts after failing to recognize completed jobs\">#3882</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-06 11:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37494\">[37494]</a></span>: edit known bug version history item ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3882\" onclick=\"get_ticket_and_populate_wrapper('3882'); return false;\" title=\"DAGMan recovery aborts after failing to recognize completed jobs\">#3882</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-06 09:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37492\">[37492]</a></span>: Make a static dagman target <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3882\" onclick=\"get_ticket_and_populate_wrapper('3882'); return false;\" title=\"DAGMan recovery aborts after failing to recognize completed jobs\">#3882</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-05 11:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37478\">[37478]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3882\" onclick=\"get_ticket_and_populate_wrapper('3882'); return false;\" title=\"DAGMan recovery aborts after failing to recognize completed jobs\">#3882</a></span>: Added this to the \"known bugs\" section of the 8.0.2 version history.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-05 11:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37477\">[37477]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3882\" onclick=\"get_ticket_and_populate_wrapper('3882'); return false;\" title=\"DAGMan recovery aborts after failing to recognize completed jobs\">#3882</a></span>: Added this to the \"known bugs\" section of the 8.1.1 version history.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-04 14:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37464\">[37464]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3882\" onclick=\"get_ticket_and_populate_wrapper('3882'); return false;\" title=\"DAGMan recovery aborts after failing to recognize completed jobs\">#3882</a></span>: Temporarily disabled \"fall back to individual log files\" check to make recovery work with Pegasus sub-DAGs (which don't have -CsdVersion in their submit files).  (By Kent Wenger )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2013-Sep-13 16:16", "status": "defer", "created": "2013-Aug-29 13:22", "fixed_version": "2013-Aug-29 13:22", "broken_version": "v080002", "priority": "5", "subsystem": "Dag", "assigned_to": "tim", "derived_from": "", "creator": "pfc", "rust": "s8336", "customer_group": "ligo", "visibility": "public", "notify": "pfcouvar@syr.edu, anderson@ligo.caltech.edu, wenger@cs.wisc.edu, tannenba@cs.wisc.edu,pcouvare@caltech.edu", "due_date": ""}