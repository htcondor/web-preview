{"id": 6227, "title": "Ticket #6227: Memory leak in python bindings due to dprintf buffering", "description": "<blockquote>\n<a class=\"external\" href=\"https://www-auth.cs.wisc.edu/lists/htcondor-users/2017-April/msg00029.shtml\">Jitendra in htcondor-users</a> reports observing a memory leak when attempting to verify the memory leak fix in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5727\" onclick=\"get_ticket_and_populate_wrapper('5727'); return false;\" title=\"memory leak in condor_q client, noticed w/ condor_q python binding\">#5727</a></span>. He used the snippet of python code from that ticket and saw the leak in both 8.4 and 8.6.\n\n<p>I can reproduce the behavior on my own machine. Valgrind confirms that <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5727\" onclick=\"get_ticket_and_populate_wrapper('5727'); return false;\" title=\"memory leak in condor_q client, noticed w/ condor_q python binding\">#5727</a></span> fixed a memory leak. It also revealed that the additional memory leak is due to dprintf() buffering all log messages in memory until a dprintf_config_*() function is called. The python bindings don't do this, but so expose a couple functions to let the user do so.\n\n</p><p>The python bindings should call one of the dprintf config functions with reasonable defaults (e.g. subsystem TOOL and flags to drop all messages) during initialization, and allow the user to alter these via exported functions.</p></blockquote>", "remarks": "<blockquote>\n<em>2017-Apr-24 14:05:59 by jfrey:</em> <br/>\n\nI added a new function, which drops all dprintf() lines when in in-memory buffering mode. The python module calls this during initialization. The python user can call one of the exported logging functions to re-enable logging, including the previously-buffered lines. Thus, users who don't care about logging don't need to make a call to prevent the increased memory usage, and users who do care about logging can still get a complete set of log messages.\n\n<p></p><hr/>\n<em>2017-May-01 10:07:23 by johnkn:</em> <br/>\n\n<strong>CODE_REVIEW</strong> : Change looks good.\n\n<p><strong>notes</strong> : I had a bit of concern over the fact that there are other export_* functions called between the time the logging is paused and the time that the user can get control and enable logging, but the code that is currently there appears not to do any logging, so it's ok for now.\n\n</p><p>A bigger issue - not new to this patch, and something that neither Jaime or I know  how to fix is that the config is loaded initially without subsystem being set. This is a problem if the config is uses subsystem to determine which config files to read.  For now that will just have to be a known issue.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-08 11:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50615\">[50615]</a></span>: Docs for python bindings logging memory leak fix. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6227\" onclick=\"get_ticket_and_populate_wrapper('6227'); return false;\" title=\"Memory leak in python bindings due to dprintf buffering\">#6227</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Apr-21 12:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50540\">[50540]</a></span>: Pause dprintf() in-memory buffering when python bindings are loaded. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6227\" onclick=\"get_ticket_and_populate_wrapper('6227'); return false;\" title=\"Memory leak in python bindings due to dprintf buffering\">#6227</a></span> This prevents the library from allocating an unbounded amount of memory if the python user doesn't call one of the exported logging functions. If the user calls one of the logging functions before any other HTCondor module functions,\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Apr-21 12:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50539\">[50539]</a></span>: Add function to pause dprintf() in-memory buffering. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6227\" onclick=\"get_ticket_and_populate_wrapper('6227'); return false;\" title=\"Memory leak in python bindings due to dprintf buffering\">#6227</a></span> This only has an effect when called before a dprintf_config function has been called.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2017-May-08 11:34", "status": "resolved", "created": "2017-Apr-18 14:19", "fixed_version": "2017-Apr-18 14:19", "broken_version": "v080400", "priority": "3", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "#5727", "creator": "jfrey", "rust": "", "customer_group": "users", "visibility": "public", "notify": "", "due_date": ""}