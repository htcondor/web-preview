{"id": 3069, "title": "Ticket #3069: RFE: config setting to enable/disable strict classad log exprs", "description": "<blockquote>\nFor a long time, classad logs did not enforce successful parsing of RHS expressions in 'set attribute' operation (103) when loading in a classad log file.  This allowed some undefined set of instances where RHS expressions were created with improper classad syntax to creep in over time.\n\n<p>When I introduced strict parsing for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2934\" onclick=\"get_ticket_and_populate_wrapper('2934'); return false;\" title=\"Add line number info to log output of job que parse failures\">#2934</a></span>, I kicked over some of these instances.  Although it passed regression testing, we have discovered a few more cases from external components, and so we felt it was safer to add a new flag, which can be used to turn on strict parsing, but which defaults to FALSE to prevent any customers from having job queue logs, accountant logs, etc, unexpectedly stop working.\n\n</p><p>Classad expressions ought to be parsed and checked.  We should determine a path to having parse checking on by default in some future release.</p></blockquote>", "remarks": "<blockquote>\n<em>2012-Jun-19 18:45:01 by eje:</em> <br/>\n\nSuggested change adds config variable CLASSAD_LOG_STRICT_PARSING, and looks like this:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">diff --git a/src/condor_utils/classad_log.cpp b/src/condor_utils/classad_log.cpp\nindex a8fe5f8..a474c2f 100644\n--- a/src/condor_utils/classad_log.cpp\n+++ b/src/condor_utils/classad_log.cpp\n@@ -959,7 +959,11 @@ LogSetAttribute::ReadBody(FILE* fp)\n     if (ParseClassAdRvalExpr(value, value_expr)) {\n         if (value_expr) delete value_expr;\n         value_expr = NULL;\n-        return -1;\n+        if (param_boolean(\"CLASSAD_LOG_STRICT_PARSING\", false)) {\n+            return -1;\n+        } else {\n+            dprintf(D_ALWAYS, \"WARNING: strict classad parsing failed for expression: \\\"%s\\\"\\n\", value);\n+        }\n     }\n        return rval + rval1;\n }\n</pre></div>\n\n\n<p></p><hr/>\n<em>2012-Jun-22 15:31:00 by eje:</em> <br/>\n\nBecause the strict parsing from <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2934\" onclick=\"get_ticket_and_populate_wrapper('2934'); return false;\" title=\"Add line number info to log output of job que parse failures\">#2934</a></span> was introduced to 7.9 dev series, I'm going to default CLASSAD_LOG_STRICT_PARSING to TRUE, with the intent of flushing out any new sources of bad classad syntax.  The flag provides an easy way to disable if that is required to work around any legacy sources until they are fixed.\n\n<p></p><hr/>\n<em>2012-Jun-22 15:46:34 by eje:</em> <br/>\n\nTEST:\n\n<p>Testing can be done by setting up test content for .../spool/job_queue.log, and starting up the schedd while watching the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SchedLog\" title=\"Sched Log\">SchedLog</a></span>.\n\n</p><p>Using this test content for job_queue.log (note, make sure a space is after 105 and 106, since gittrac display eats them):\n</p><div class=\"code\">\n<pre class=\"code\">107 1 CreationTimestamp 1334245749\n101 0.0 Job Machine\n103 0.0 NextClusterNum 1\n105\n103 1.0 JobStatus 2  ZOMG!\n103 1.0 EnteredCurrentStatus 1334245771\n103 1.0 LastSuspensionTime 0\n103 1.0 CurrentHosts 1\n106\n105\n103 1.1 LastJobStatus 1\n103 1.1 JobStatus 2\n</pre></div>\n\n\n<p>Include this config - start with setting to TRUE for demonstrating default behavior:\n</p><div class=\"code\">\n<pre class=\"code\"># require correct classad expressions\nCLASSAD_LOG_STRICT_PARSING = TRUE\n</pre></div>\n\n\n<p>with the default strict parsing behavior, you should see an exception in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SchedLog\" title=\"Sched Log\">SchedLog</a></span>:\n</p><div class=\"code\">\n<pre class=\"code\">06/22/12 12:59:46 (pid:31585) WARNING: Encountered corrupt log record 5 (byte offset 89)\n06/22/12 12:59:46 (pid:31585) Lines following corrupt log record 5 (up to 3):\n06/22/12 12:59:46 (pid:31585)     103 1.0 EnteredCurrentStatus 1334245771\n06/22/12 12:59:46 (pid:31585)     103 1.0 LastSuspensionTime 0\n06/22/12 12:59:46 (pid:31585)     103 1.0 CurrentHosts 1\n06/22/12 12:59:46 (pid:31585) ERROR \"Error: corrupt log record 5 (byte offset 89) occurred inside closed transaction, recovery failed\" at line 1141 in file /home/eje/git/grid/src/condor_utils/classad_log.cpp\n</pre></div>\n\n\n<p>If you turn off strict parsing:\n</p><div class=\"code\">\n<pre class=\"code\"># Turn off to accept improper classad syntax from some legacy sources\nCLASSAD_LOG_STRICT_PARSING = FALSE\n</pre></div>\n\n\n<p>You should see the schedd log the error with a warning, but continue in legacy mode:\n</p><div class=\"code\">\n<pre class=\"code\">06/22/12 13:24:43 (pid:32102) WARNING: strict classad parsing failed for expression: \"2  ZOMG!\"\n06/22/12 13:24:43 (pid:32102) Detected unterminated transaction in ClassAd Log/home/eje/condor/local/spool/job_queue.log. Forcing rotation.\n06/22/12 13:24:43 (pid:32102) About to rotate ClassAd log /home/eje/condor/local/spool/job_queue.log\n06/22/12 13:24:43 (pid:32102) About to save historical log /home/eje/condor/local/spool/job_queue.log.1\n</pre></div>\n\n\n<p></p><hr/>\n<em>2012-Oct-01 16:43:01 by zmiller:</em> <br/>\n\nalthough i have set CLASSAD_LOG_STRICT_PARSING to false, the negotiator on the master branch still chokes, whereas it did not on the V7_8-branch.\n\n<p>It is running into this error, (src/condor_utils/classad_log.cpp:1141)\n</p><div class=\"code\">\n<pre class=\"code\">EXCEPT(\"Error: corrupt log record %lu (byte offset %lld) occurred inside closed transaction, recovery failed\", recnum, pos);</pre></div>\n\n\n<p>here is an example Accountnew.log which produces the problem:\n</p><div class=\"code\">\n<pre class=\"code\">107 5 CreationTimestamp 1348602699\n105\n103 Customer.zmiller@cs.wisc.edu ResourcesUsed 1\n103 Customer.zmiller@cs.wisc.edu WeightedResourcesUsed 1.000000\n103 Customer.zmiller@cs.wisc.edu UnchargedTime 0\n103 Customer.zmiller@cs.wisc.edu WeightedUnchargedTime 0.000000\n103 Customer.&lt;none&gt; WeightedResourcesUsed 1.000000\n103 Customer.&lt;none&gt; ResourcesUsed 1\n103 Customer.&lt;none&gt; UnchargedTime 0\n103 Customer.&lt;none&gt; WeightedUnchargedTime 0.000000\n101 Resource.&lt; slot26@ingwe.cs.wisc.edu , 128.105.121.64 &gt; * *\n103 Resource.&lt; slot26@ingwe.cs.wisc.edu , 128.105.121.64 &gt; RemoteUser \"zmiller@cs.wisc.edu\"\n103 Resource.&lt; slot26@ingwe.cs.wisc.edu , 128.105.121.64 &gt; SlotWeight 1.000000\n103 Resource.&lt; slot26@ingwe.cs.wisc.edu , 128.105.121.64 &gt; StartTime 1348602995\n106\n103 Accountant. LastUpdateTime 1348603055\n</pre></div>\n\n\n<p>it would really be nice if the negotiator did not EXCEPT() when this knob is false.\n\n</p><p></p><hr/>\n<em>2012-Dec-17 12:58:57 by zmiller:</em> <br/>\n\nthere was never any final resolution on this.  last remark by me was that there are still inputs that cause the parsing code to except even when strict parsing is disabled.  comments?</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jul-06 11:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32604\">[32604]</a></span>: edit defn and version history item about new knob CLASSAD_LOG_STRICT_PARSING ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3069\" onclick=\"get_ticket_and_populate_wrapper('3069'); return false;\" title=\"RFE: config setting to enable/disable strict classad log exprs\">#3069</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-22 16:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32461\">[32461]</a></span>: Add flag CLASSAD_LOG_STRICT_PARSING which allows strict classad expr parsing to be turned off for legacy input that is not strict compliant ===GT:Fixed=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3069\" onclick=\"get_ticket_and_populate_wrapper('3069'); return false;\" title=\"RFE: config setting to enable/disable strict classad log exprs\">#3069</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-22 16:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32462\">[32462]</a></span>: Documentation for CLASSAD_LOG_STRICT_PARSING ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3069\" onclick=\"get_ticket_and_populate_wrapper('3069'); return false;\" title=\"RFE: config setting to enable/disable strict classad log exprs\">#3069</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-22 16:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32463\">[32463]</a></span>: ===VersionHistory:Completed=== ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3069\" onclick=\"get_ticket_and_populate_wrapper('3069'); return false;\" title=\"RFE: config setting to enable/disable strict classad log exprs\">#3069</a></span>  (By Erik Erlandson )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2013-May-16 18:06", "status": "resolved", "created": "2012-Jun-19 18:43", "fixed_version": "2012-Jun-19 18:43", "broken_version": "", "priority": "2", "subsystem": "Libs", "assigned_to": "eje", "derived_from": "#2934", "creator": "eje", "rust": "", "customer_group": "other", "visibility": "public", "notify": "eje@cs.wisc.edu, tstclair@redhat.com,  johnkn@cs.wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}