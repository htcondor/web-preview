{"id": 3681, "title": "Ticket #3681: OpenStack scaling woes.", "description": "<blockquote>\n(Adapted from Tony's summary of 2013-06-06.)\n\n<p>This incident ticket will serve as a parent ticket for the individual actionable tickets related to this incident.\n\n</p><p><span class=\"subsection\"></span></p><h3>Environment </h3>\n\n<p></p><ul>\n<li>RHEL5, 32-bit HTCondor 7.9.6 (On SLC5)\n</li><li><span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=OpenStack\" title=\"Open Stack\">OpenStack</a></span> Essex\n</li><li>The HTCondor queue is full of held EC2 jobs.  These jobs are generally held because of a RunInstances() failure.  None are spot instances, so we'll ignore that code path for the remainder of this report.\n</li></ul>\n\n<p><span class=\"subsection\"></span></p><h3>HTCondor Problems</h3>\n\n<p>When the grid manager restarts, each EC2 job in the queue looks for two attributes: the client token and the instance ID.  Because of the environment (the third point above), almost all of the jobs have a client token but not an instance ID.  Because of a bug in HTCondor (for which I believe I have a fix), even jobs which actually have instance IDs will appear as if they don't.  Therefore, (effectively) every (held) job in the queue will cause the grid manager to issue a RunInstances() command.\n\n</p><p>Since we have and use a client token, this operation should be idempotent; should therefore never accidentally start more than one instance per job.  However, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=OpenStack\" title=\"Open Stack\">OpenStack</a></span> neither supports idempotent RunInstances() nor complains when you supply a client token, which it then ignores.  We must therefore return to using SSH keypair IDs for our two-phase commit; see ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3682\" onclick=\"get_ticket_and_populate_wrapper('3682'); return false;\" title=\"Reintroduce SSH keypair -style two-phase commit for OpenStack\">#3682</a></span>.\n\n</p><p>Since this RunInstance() command fails, the jobs will eventually go back on hold.  However, a thousand RunInstances() calls on the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=OpenStack\" title=\"Open Stack\">OpenStack</a></span> controller cause it grief.  We should therefore batch RunInstances() commands; see ticket <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3606\" onclick=\"get_ticket_and_populate_wrapper('3606'); return false;\" title=\"Batch VM requests.\">#3606</a></span>.  It would, however, be even better to skip the RunInstances() call entirely: see ticket <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=3672\" onclick=\"get_ticket_and_populate_wrapper('3672'); return false;\" title=\"Never try to start held EC2 jobs.\">#3672</a></span>.\n\n</p><p>In addition, on each startup, the grid manager issues two DescribeInstances() command, each of which also cause the controller grief.  The first is used to ping the controller, to see if it's up.  We should try to find some other, cheaper, no-op; see ticket #FIXME; the second is the batch status update.\n\n</p><p>In addition, on each start up, the grid manager issue a DescribeInstances() command for each removed job, to determine if the removed job corresponds to instance which began running without the grid manager noticing.  This calls must also be batched, or more likely, rendered redundant by trusting the results of the batched status update.  This path is fraught with race condition peril; see ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3683\" onclick=\"get_ticket_and_populate_wrapper('3683'); return false;\" title=\"Minimize calls to DescribeInstances().\">#3683</a></span>.\n\n</p><p>Finally, if a the batch status update's call to DescribeInstances() succeeds, it will most likely result in a large number of jobs changing state.  This results in each changed job shifting from GM_SUBMITTED to GM_PROBE_JOB, where we ask the controller for more details about the job.  This call could probably be made more efficient by filtering by the instance ID on the controller rather than the client.  This call could probably be made redundant by expanding the amount of information returned from the EC2 GAHP from the EC2_VM_STATUS_ALL command; see ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3683\" onclick=\"get_ticket_and_populate_wrapper('3683'); return false;\" title=\"Minimize calls to DescribeInstances().\">#3683</a></span>.\n\n</p><p><span class=\"subsection\"></span></p><h3>Other Problems</h3>\n\n<p>Since these problems occur (mostly) when the grid manager restarts, other factors must have been causing the ongoing problems: HTCondor eventually finishes (if necessary, by timing out requests) and the jobs all go back on hold, at which point the grid manager dies with its work complete.\n\n</p><p>We found three reasons why the grid manager was restarting frequently:\n\n</p><p></p><ol>\n<li>A bug in glideinWMS was discovered where it was releasing held jobs, even though it was configured not to.  (Releasing a job when the queue is entirely held causes the grid manager to start.)  A work-around has been put in place and a permanent fix had already been checked into the source code repository.\n\n<p></p></li><li>A bug in the grid manager was causing it to segfault with great frequency: 191 times between the fourth and fifth of June.  Although these events resulted in core dumps, their stacks appear to have been smashed and rendered useless for debugging.  The crashes seem to correlate well with the number of EC2 jobs, of which there were roughly a thousand (as opposed to the previous level of several hundred) between the fourth and fifth of June.\n\n<p></p></li><li>Manually running condor_rm also restarts the grid manager.  The problem is compounded because the grid manager checks, for each job in this situation (a client token but no instance ID), if an instance started before removing the job; doing so causes another call to DescribeInstances().\n</li></ol>\n\n<p><span class=\"subsection\"></span></p><h3>Conclusions </h3>\n\n<p>We have three main tasks:\n\n</p><p></p><ol>\n<li>(<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3682\" onclick=\"get_ticket_and_populate_wrapper('3682'); return false;\" title=\"Reintroduce SSH keypair -style two-phase commit for OpenStack\">#3682</a></span>)  Reintroducing the SSH keypair ID style of two-phase commits.  This will probably require that the user specify that they're using a service which doesn't support client tokens, since we can't readily tell.\n\n<p></p></li><li>(<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3683\" onclick=\"get_ticket_and_populate_wrapper('3683'); return false;\" title=\"Minimize calls to DescribeInstances().\">#3683</a></span>)  We need to minimize the number of calls we make to DescribeInstances(), especially when starting up and removing jobs.\n\n<p></p></li><li>(<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3701\" onclick=\"get_ticket_and_populate_wrapper('3701'); return false;\" title=\"Gridmanager can crash on certain replies from EC2 GAHP\">#3701</a></span>)  Determine and correct the cause of the segfaults.</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2013-Jun-10 14:34:45 by tlmiller:</em> <br/>\n\nCommit 07dc766 fixes the aforementioned bug with not seeing instance IDs, and is probably simple enough to go into 8.0.x.  Pushed to a branch to keep it separate until review, but available for subsequent patches to build on.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3682\" onclick=\"get_ticket_and_populate_wrapper('3682'); return false;\" title=\"Reintroduce SSH keypair -style two-phase commit for OpenStack\">#3682</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nReintroduce SSH keypair -style two-phase commit for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=OpenStack\" title=\"Open Stack\">OpenStack</a></span></td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3683\" onclick=\"get_ticket_and_populate_wrapper('3683'); return false;\" title=\"Minimize calls to DescribeInstances().\">#3683</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nMinimize calls to DescribeInstances().</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3701\" onclick=\"get_ticket_and_populate_wrapper('3701'); return false;\" title=\"Gridmanager can crash on certain replies from EC2 GAHP\">#3701</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nGridmanager can crash on certain replies from EC2 GAHP</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3705\" onclick=\"get_ticket_and_populate_wrapper('3705'); return false;\" title=\"EC2 jobs lost track of their instance ID during recovery\">#3705</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nEC2 jobs lost track of their instance ID during recovery</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-18 16:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36616\">[36616]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3681\" onclick=\"get_ticket_and_populate_wrapper('3681'); return false;\" title=\"OpenStack scaling woes.\">#3681</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3705\" onclick=\"get_ticket_and_populate_wrapper('3705'); return false;\" title=\"EC2 jobs lost track of their instance ID during recovery\">#3705</a></span>) Fix an EC2 bug where EC2 jobs lost track of their instance ID during recovery. (cherry picked from commit 07dc76653732061f566aa72f9e2ccabca3abcfcc) Committer: Jaime Frey  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-10 14:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36523\">[36523]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3681\" onclick=\"get_ticket_and_populate_wrapper('3681'); return false;\" title=\"OpenStack scaling woes.\">#3681</a></span>) Fix an EC2 bug where EC2 jobs lost track of their instance ID during recovery.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2014-Aug-07 12:31", "status": "resolved", "created": "2013-Jun-06 17:20", "fixed_version": "2013-Jun-06 17:20", "broken_version": "v070905", "priority": "1", "subsystem": "Grid", "assigned_to": "jfrey", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "fermi", "visibility": "public", "notify": "tiradani@fnal.gov", "due_date": "20130614"}