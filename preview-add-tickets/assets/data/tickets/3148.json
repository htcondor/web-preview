{"id": 3148, "title": "Ticket #3148: Condor checkpointing should setarch automatically", "description": "<blockquote>\nWishlist item for existing standard universe support:\n\n<p>Because of address randomization and other changes to Linux, Condor's checkpointing support requires that the executable be run in backward compatibility mode.  On the command line this is done like so, replacing x86_64  with i386 for 32-bit systems, and possibly not setting -B (thus allowing &gt; 32 bit addresses) in some undefined circumstances.  Presumably when run under Condor, something similar happens.\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">setarch x86_64 -L -B -R ./my-condor-compiled-executable\n</pre></div>\n\n\n<p>That you need to do this is non-obvious, and the failure is cryptic; the binary will crash when checkpointing without any clue that setarch could fix the problem.\n\n</p><p>For the sake of ease of use, I propose that the condor syscall library should detect if the appropriate backward compatibility options are set.  If they are not, it should set them itself, then exec itself.  (You need to exec, because the options only take effect at exec time.  By the time you're in user code, it's too last.)  This will simplify things for users using Condor's checkpointing support outside of Condor, as well as for developers testing.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2012-Jul-19 14:40", "status": "new", "created": "2012-Jul-19 14:40", "fixed_version": "2012-Jul-19 14:40", "broken_version": "v070600", "priority": "4", "subsystem": "Std", "assigned_to": "", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}