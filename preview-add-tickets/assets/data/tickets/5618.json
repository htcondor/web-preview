{"id": 5618, "title": "Ticket #5618: Bad behavior with CCB+SP and failures during claiming", "description": "<blockquote>\nDuring the recent 100,000-slot scale test, before we turned on the claiming throttle (MAX_PENDING_STARTD_CONTACTS), the reverse connections from the startds initiated when the schedd connected to the startd in order to claim it, would frequently get dropped on the floor by the schedd's shared port daemon (because the schedd's domain socket's listen queue was full).  This meant that the schedd would (effectively) never retry claiming that slot.  (This may be because the default time-out for failing to claim is calibrated assuming that the failure to hear back from the startd was because the startd was preempting (retiring?).)  However, the schedd would also refuse new attempts to claim the slot (during the negotiation cycle) because the pending claim was still in its table.  Furthermore, it appears that the failure of the reverse connection didn't prompt a retry from the startd.  (This may be on purpose; the contact_er_ is supposed to do the retries, not the contact_ee_.)\n\n<p>Perhaps if the startd is using CCB (and the schedd is using shared port), the schedd should put claim attempts waiting the startd's reverse connection in a different state (in the pending-connection table) with a shorter time-out.  Once the startd connects -- even if it has nothing to say because it's preempting/retiring or whatever -- the state could move to the current intermediate state, with the longer timeout.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "incident", "last_change": "2016-Apr-11 17:39", "status": "new", "created": "2016-Apr-11 17:39", "fixed_version": "2016-Apr-11 17:39", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}