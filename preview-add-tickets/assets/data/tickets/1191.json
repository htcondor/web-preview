{"id": 1191, "title": "Ticket #1191: Windows job_queue.log rotation not atomic", "description": "<blockquote>\nA user noticed his windows schedd daemons (Condor 7.2.4) were emitting this error:\n\n<p></p><div class=\"verbatim\">\n<pre>1/27 12:50:15 (pid:2528) ERROR \"JOB QUEUE DAMAGED; header ad NEXT_CLUSTER_NUM\ninvalid\" at line 893 in file ..\\src\\condor_schedd.V6\\qmgmt.cpp\n</pre></div>\n\n\n<p>His environment is XP SP3 and Server 2003 SP2 and he does a patching scenario\nwhere his machines will come up, apply a patch, then reboot, 5-10 times, and the machine being up 20 seconds to 5 minutes each time before stabilizing. He's been doing thid for a long time, and his Condor 6.8.8custom version hadn't shown the problem, but his 7.2.4 version did.\n\n</p><p>Upon inspection of the job_queue.log, it was found corrupted. Most notably, there was an instance of <code>NextClusterNum</code> being 1, when it should have ~700.\n\n</p><p>Guessing that file rotation might be an issue, I tracked down the portion of the code which deals with it. here it is on the head of the V7_2-branch:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">/* HEAD of V7_2-branch */\nint\nrotate_file(const char *old_filename, const char *new_filename)\n{\n#if defined(WIN32)\n    /* We must use MoveFileEx on NT because rename can not overwrite\n       an existing file. */\n    if (MoveFileEx(old_filename, new_filename,\n                   MOVEFILE_REPLACE_EXISTING) == 0) {\n        DWORD err = GetLastError();\n        dprintf(D_ALWAYS, \"MoveFileEx(%s,%s) failed with error %d\\n\",\n                old_filename, new_filename, err);\n        return -1;\n    }\n#else\n    if (rename(old_filename, new_filename) &lt; 0) {\n        dprintf(D_ALWAYS, \"rename(%s, %s) failed with errno %d\\n\",\n                old_filename, new_filename, errno);\n        return -1;\n    }\n#endif\n\n    return 0;\n}\n</pre></div>\n\n\n<p>Notably, here is the same piece of code at the head of the V7_4-branch:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">int\nrotate_file(const char *old_filename, const char *new_filename)\n{\n#if defined(WIN32)\n    /* We must use MoveFileEx on NT because rename can not overwrite\n       an existing file. */\n    if (MoveFileEx(old_filename, new_filename,\n                   MOVEFILE_COPY_ALLOWED |\n                   MOVEFILE_REPLACE_EXISTING |\n                   MOVEFILE_WRITE_THROUGH) == 0) {\n        DWORD err = GetLastError();\n        dprintf(D_ALWAYS, \"MoveFileEx(%s,%s) failed with error %d\\n\",\n                old_filename, new_filename, err);\n        return -1;\n    }\n#else\n    if (rename(old_filename, new_filename) &lt; 0) {\n        dprintf(D_ALWAYS, \"rename(%s, %s) failed with errno %d\\n\",\n                old_filename, new_filename, errno);\n        return -1;\n    }\n#endif\n\n    return 0;\n}\n</pre></div>\n\n\n<p>Notice the difference? Those flags showed up in this checkin:\n\n</p><p></p><div class=\"verbatim\">\n<pre>commit a4fad2c73e9076e3a26bc5c6e392844de9cc1b98\nAuthor: Ben Burnett &lt;burnett@cs.wisc.edu&gt;\nDate:   Thu Dec 11 19:08:24 2008 -0600\n\n    A first attempt at eliminating the access denied error we are seeing in\nsome of the tests when rotate_file() is called.\n\n</pre></div>\n\n\n<p>My hypothesis was verified when he found this in the logs:\n\n</p><p></p><div class=\"verbatim\">\n<pre>1/15 18:42:46 (pid:480) Cleaning job queue...\n1/15 18:42:46 (pid:480) About to rotate ClassAd log D:\\Condor/spool/job_queue.log\n1/15 18:42:47 (pid:480) MoveFileEx(D:\\Condor/spool/job_queue.log.tmp,\nD:\\Condor/spool/job_queue.log) failed with error 5\n1/15 18:42:47 (pid:480) failed to rotate job queue log!\n</pre></div>\n\n\n<p>It needs to be verified that the new flags in V7_4-branch either fix, or don't fix, this problem.\n\n</p><p>If it is still a problem, then a lock file should be used to perform the rotation. You create the lock file, rotate the log, delete the lockfile, then delete the old job queue log. If the schedd wakes up (say from reboot) and sees that the lock file is still there, then it needs to start over the rotation procedure.</p></blockquote>", "remarks": "<blockquote>\n<em>2010-Jun-03 10:55:16 by cweiss:</em> <br/>\n\nAttached commit (as described in ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1215\" onclick=\"get_ticket_and_populate_wrapper('1215'); return false;\" title=\"job_queue.log can be corrupted in case of rotation failure\">#1215</a></span>) prevents  corruption of the job_queue.log in case rotation fails.\n\n<p>We still can run into trouble if a file descriptor is open on either file (with different error codes), e.g. caused by a virus scanner currently scanning. Therefore, I will still leave this ticket open to be addressed at some point.\n\n</p><p></p><hr/>\n<em>2011-Aug-16 14:44:59 by cweiss:</em> <br/>\n\nAs I am cleaning up tickets, I am going to close this one, because there is not much we can do at this time if virus scanners et al have a handle on log files (except for waiting and retrying).</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Feb-18 15:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=17281\">[17281]</a></span>: Added O_APPEND flag to re-open classad_log in case of rotation failure (see <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1215\" onclick=\"get_ticket_and_populate_wrapper('1215'); return false;\" title=\"job_queue.log can be corrupted in case of rotation failure\">#1215</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1191\" onclick=\"get_ticket_and_populate_wrapper('1191'); return false;\" title=\"Windows job_queue.log rotation not atomic\">#1191</a></span> )  (By Cathrin Weiss )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Nov-21 15:23", "status": "resolved", "created": "2010-Feb-08 10:26", "fixed_version": "2010-Feb-08 10:26", "broken_version": "v070204", "priority": "2", "subsystem": "Libs", "assigned_to": "cweiss", "derived_from": "", "creator": "psilord", "rust": "s7878", "customer_group": "other", "visibility": "public", "notify": "psilord@cs.wisc.edu", "due_date": ""}