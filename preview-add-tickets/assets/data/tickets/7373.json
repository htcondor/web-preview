{"id": 7373, "title": "Ticket #7373: condor_wait doesn't fall back on polling when inotify fails", "description": "<blockquote>\nA user reports that after upgrading from 8.4.x to 8.8.x, they could no longer run condor_wait a (DAGMan) event log on a shared filesystem because of some problem with inotify.  (It may just no be supported for their shared filesystem.)  If this error is available via the inotify API, HTCondor should notice and fall back on polling, instead.\n\n<p>The user further reports that simply recompiling 8.8.x with the polling-based alternative left in the code resulted in condor_wait preventing events from being written to the (DAGMan) event log, so we may have additional work to do even after implementing the fall-back.</p></blockquote>", "remarks": "<blockquote>\n<strong>CODE_REVIEW</strong> changes look good.  given the different time bases used in the various part of the code it would be clearer to indicate when a timeout is millisec by making that part of the variable name.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Dec-13 17:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58659\">[58659]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7373\" onclick=\"get_ticket_and_populate_wrapper('7373'); return false;\" title=\"condor_wait doesn't fall back on polling when inotify fails\">#7373</a></span>) Rename some variables to indicate that they're milliseconds.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Dec-12 17:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58653\">[58653]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7373\" onclick=\"get_ticket_and_populate_wrapper('7373'); return false;\" title=\"condor_wait doesn't fall back on polling when inotify fails\">#7373</a></span>) Correct botched merge.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Dec-12 00:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58646\">[58646]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7373\" onclick=\"get_ticket_and_populate_wrapper('7373'); return false;\" title=\"condor_wait doesn't fall back on polling when inotify fails\">#7373</a></span>) Include the case for when inotify() actually triggers.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Dec-11 19:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58645\">[58645]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7373\" onclick=\"get_ticket_and_populate_wrapper('7373'); return false;\" title=\"condor_wait doesn't fall back on polling when inotify fails\">#7373</a></span>) Fix build for Windows.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Dec-11 18:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58644\">[58644]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7373\" onclick=\"get_ticket_and_populate_wrapper('7373'); return false;\" title=\"condor_wait doesn't fall back on polling when inotify fails\">#7373</a></span>) Release note.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Dec-11 17:29</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58642\">[58642]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7373\" onclick=\"get_ticket_and_populate_wrapper('7373'); return false;\" title=\"condor_wait doesn't fall back on polling when inotify fails\">#7373</a></span>) Now that they're almost identical, it no longer makes sense to keep the Linux/inotify and polling implementations in separate #ifdefs.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Dec-11 16:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58641\">[58641]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7373\" onclick=\"get_ticket_and_populate_wrapper('7373'); return false;\" title=\"condor_wait doesn't fall back on polling when inotify fails\">#7373</a></span>) Change <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ReadUserLog\" title=\"Read User Log\">ReadUserLog</a></span> constructor call in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WaitForUserLog\" title=\"Wait For User Log\">WaitForUserLog</a></span> so that we don't open the log file for writing, allowing AFS to keep the log file up-to-date when written by a remote process. Change <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=FileModifiedTrigger\" title=\"File Modified Trigger\">FileModifiedTrigger</a></span> to always use a polling loop, but with inotify() instead of sleep() on Linux.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Dec-13 14:35", "status": "resolved", "created": "2019-Nov-13 13:54", "fixed_version": "2019-Nov-13 13:54", "broken_version": "", "priority": "2", "subsystem": "Tools", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "a99023", "customer_group": "cern", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}