{"id": 2458, "title": "Ticket #2458: Coverity of IPv6 code", "description": "<blockquote>\nStatus: I believe all real IPv6 bugs are resolved. There are a few the (\"INSANE\") bugs that should get a second opinion. The remaining \"probably not ipv6\" should also get re-reviewed; if really not IPv6, copy over to <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=2473\" onclick=\"get_ticket_and_populate_wrapper('2473'); return false;\" title=\"Coverity issue tracking\">#2473</a></span>.\n\n<p>Bug states:\n</p><ul>\n<li>not ipv6 - Probably a real bug, but not related to IPv6 work. Ignoring for now\n</li><li>BUG      - Real bug, not yet resolved\n</li><li>fixed    - Real bug, fixed\n</li><li>not bug  - Not a bug, works as intended.\n</li><li>INSANE   - Coverity has apparently gone insane. Recheck with second pair of eyes\n\n<p></p></li><li><code>11057 fixed...</code> UNINIT - 2e67823\n</li><li><code>11056 fixed...</code> UNINIT - 11f588cbc6a205f161b1c4185057ef0719f496f9\n</li><li><code>11048 fixed...</code> CHECKED_RETURN f0342de\n</li><li><code>11039 fixed...</code> UNINIT 271ba9d\n</li><li><code>11011 okay....</code> PASS_BY_VALUE - Valid, efficiency warning\n</li><li><code>11022 INSANE..</code> RETURN_LOCAL\n</li><li><code>10992 INSANE..</code> FORWARD_NULL - \"At conditional (4): \"status != 0\" taking the false branch.\" appears wrong; it must be true given what happened at and around \"At conditional (2): \"*__errno_location() == 2\" taking the true branch.\"\n</li><li><code>10988 not bug.</code> DEADCODE - Coverity isn't aware of #ifdef magic.\n</li><li><code>10987 INSANE..</code> DEADCODE - Why can't spin_pie increment to larger numbers?\n</li><li><code>10986 INSANE..</code> DEADCODE\n</li><li><code>10966 ........</code> UNINIT\n</li><li><code>10996 ........</code> FORWARD_NULL - probably not ipv6\n</li><li><code>10995 ........</code> FORWARD_NULL - probably not ipv6\n</li><li><code>10994 ........</code> FORWARD_NULL - probably not ipv6\n</li><li><code>10993 ........</code> FORWARD_NULL - probably not ipv6\n</li><li><code>10976 ........</code> CHECKED_RETURN - probably not ipv6\n</li><li><code>10963 ........</code> OVERRUN_STATIC - probably not ipv6\n</li><li><code>10962 ........</code> OVERRUN_STATIC - probably not ipv6\n</li></ul>\n\n<p>Not IPv6 problems, but may be real problems. Worth looking into later. Bugs with some work done have been moved over to <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=2473\" onclick=\"get_ticket_and_populate_wrapper('2473'); return false;\" title=\"Coverity issue tracking\">#2473</a></span>. Bugs with none are being ignored; they should show up on future investigations\n</p><ul>\n<li><code>11055 not ipv6</code> REVERSE_INULL\n</li><li><code>11054 not ipv6</code> REVERSE_INULL\n</li><li><code>11053 not ipv6</code> RESOURCE_LEAK - May not be a real bug, requires closer reading.\n</li><li><code>11052 not ipv6</code> NEGATIVE_RETURNS\n</li><li><code>11051 not ipv6</code> NEGATIVE_RETURNS\n</li><li><code>11049 not ipv6</code> CHECKED_RETURN\n</li><li><code>11046 not ipv6</code> UNINIT_CTOR\n</li><li><code>11045 not ipv6</code> UNINIT_CTOR\n</li><li><code>11041 not ipv6</code> UNINIT_CTOR\n</li><li><code>11040 not ipv6</code> UNINIT_CTOR\n</li><li><code>11038 not ipv6</code> UNINIT\n</li><li><code>11037 not ipv6</code> UNINIT\n</li><li><code>11034 not ipv6</code> UNINIT\n</li><li><code>11032 not ipv6</code> UNINIT\n</li><li><code>11029 not ipv6</code> UNINIT\n</li><li><code>11026 not ipv6</code> UNINIT\n</li><li><code>11058 not ipv6</code> UNINIT - Globus related\n</li><li><code>11024 not ipv6</code> REVERSE_INULL - Possibly INSANE\n</li><li><code>11019 not ipv6</code> RESOURCE_LEAK - Appear real, if rare.\n</li><li><code>11018 not ipv6</code> RESOURCE_LEAK - WILL LEAK\n</li><li><code>11017 not ipv6</code> RESOURCE_LEAK - may leak\n</li><li><code>11016 not ipv6</code> RESOURCE_LEAK - WILL LEAK; strdup is wrong. While we're at it, refactor to use two argument form of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SetEnv\" title=\"Set Env\">SetEnv</a></span>. See if we can eliminate the single argument form?\n</li><li><code>11015 not ipv6</code> RESOURCE_LEAK - WILL LEAK\n</li><li><code>11014 not ipv6</code> RESOURCE_LEAK - WILL LEAK\n</li><li><code>11013 not ipv6</code> RESOURCE_LEAK - WILL LEAK if execvp fails.\n</li><li><code>11012 not ipv6</code> RESOURCE_LEAK - maybe leaks\n</li><li><code>11010 not ipv6</code> NEGATIVE_RETURNS - Probably wrong, should check if socket() failed\n</li><li><code>11007 not ipv6</code> MISSING_RETURN - wrong\n</li><li><code>11006 not ipv6</code> MISSING_BREAK - Needs investigation to understand intent\n</li><li><code>11002 not ipv6</code> FORWARD_NULL\n</li><li><code>11001 not ipv6</code> FORWARD_NULL\n</li><li><code>11000 not ipv6</code> FORWARD_NULL\n</li><li><code>10999 not ipv6</code> FORWARD_NULL\n</li><li><code>10998 not ipv6</code> FORWARD_NULL\n</li><li><code>10997 not ipv6</code> FORWARD_NULL\n</li><li><code>10985 not ipv6</code> CONSTANT_EXPRESSION_RESULT - Probably DEADCODE\n</li><li><code>10984 not ipv6</code> CONSTANT_EXPRESSION_RESULT - Probably DEADCODE\n</li><li><code>10983 not ipv6</code> CONSTANT_EXPRESSION_RESULT - Probably DEADCODE\n</li><li><code>10982 not ipv6</code> CHECKED_RETURN\n</li><li><code>10981 not ipv6</code> CHECKED_RETURN\n</li><li><code>10980 not ipv6</code> CHECKED_RETURN\n</li><li><code>10979 not ipv6</code> CHECKED_RETURN\n</li><li><code>10978 not ipv6</code> CHECKED_RETURN\n</li><li><code>10977 not ipv6</code> CHECKED_RETURN\n</li><li><code>10975 not ipv6</code> CHECKED_RETURN\n</li><li><code>10973 not ipv6</code> CHECKED_RETURN\n</li><li><code>10972 not ipv6</code> CHECKED_RETURN\n</li><li><code>10971 not ipv6</code> CHECKED_RETURN\n</li><li><code>10970 not ipv6</code> CHECKED_RETURN\n</li></ul>\n\n<p>Bad calls on Coverity's part:\n\n</p><p></p><ul>\n<li><code>11035 not bug.</code> UNINIT\n</li><li><code>11033 not bug.</code> UNINIT\n</li><li><code>11031 not bug.</code> UNINIT - decode/code\n</li><li><code>11030 not bug.</code> UNINIT - decode/code\n</li><li><code>11028 not bug.</code> UNINIT - decode/code\n</li><li><code>11027 not bug.</code> UNINIT - decode/code\n</li><li><code>11025 not bug.</code> UNINIT\n</li><li><code>11021 not bug.</code> RESOURCE_LEAK - Coverity didn't understand callback handler\n</li><li><code>11020 not bug.</code> RESOURCE_LEAK - Coverity didn't understand callback handler</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2012-Jul-16 13:46:00 by adesmet:</em> <br/>\n\nOld. Important stuff done. Resolving.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-14 16:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27220\">[27220]</a></span>: Fix very confused logic finding hostname of incoming connection. Fixes coverity 11057 ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2458\" onclick=\"get_ticket_and_populate_wrapper('2458'); return false;\" title=\"Coverity of IPv6 code\">#2458</a></span>  (By Alan De Smet )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-13 17:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27219\">[27219]</a></span>: Cover make condor_getostaddr_ipv6 robust in face of invalid input. Coverity 11039. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2458\" onclick=\"get_ticket_and_populate_wrapper('2458'); return false;\" title=\"Coverity of IPv6 code\">#2458</a></span>  (By Alan De Smet )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-13 16:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27218\">[27218]</a></span>: Verify that we could parse IP address in the CKPT_SERVER_HOSTS list, EXCEPTing on failure. Fixes Coverity 11048. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2458\" onclick=\"get_ticket_and_populate_wrapper('2458'); return false;\" title=\"Coverity of IPv6 code\">#2458</a></span>  (By Alan De Smet )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-Aug-05 10:09", "status": "resolved", "created": "2011-Sep-12 17:06", "fixed_version": "2011-Sep-12 17:06", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "adesmet", "derived_from": "#9", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}