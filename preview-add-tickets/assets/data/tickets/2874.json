{"id": 2874, "title": "Ticket #2874: Batlab meltdown due to Condor testsuite on Mac and BSD", "description": "<blockquote>\nOn March 7, Scot Kronenfeld attempted to make the Condor testsuite run faster by having the test harness hard-kill all of the daemons after each test, rather than soft-killing the master and waiting for the daemons to exit. On macosx and freebsd, the kernel tables for processes and/or file descriptors filled up, causing Condor to fail and leaving lots of processes orphaned after Condor restarted.\n\n<p>Here's the chain of events we believe led to this situation:\n\n</p><p>Process tracking via environment variables is only supported on linux. So each time the test harness hard-killed all of the daemons associated with a test, they didn't have a chance to clean up their children. Metronome's Condor wasn't aware of these children, since the condor_master started by the test daemonizes itself and the environment tracking can't be used to connect it to the test job.\n\n</p><p>The batlab has dedicated slot users. So normally, these orphaned processes would be cleaned up by the root Condor once Metronome exits. But there were enough orphaned processes (possibly from several slots) to fill up the kernel's internal tables. Suddenly, nothing could open any more files. The procd failed and the startd and some starters exited. The master survived and restarted the startd. But there were still many orphaned processes, since only the starter cleans up all processes owned by the dedicated slot user. We rebooted the machines to clear everything up and Scot reverted his change.\n\n</p><p>Here are improvements that could be made to Condor to prevent this from happening:\n</p><ul>\n<li>Change test suite to run condor_master in the foreground, so that parent-child process tracking of Metronome's Condor can find orphaned children of test suite's Condor.\n</li><li>Add process tracking via the environment on macosx and freebsd. This may or may no be possible depending on the OS APIs.\n</li><li>When using a dedicated slot user, the starter should kill all processes owned by that user before starting the job.\n</li><li>When using a dedicated slot user, the startd could kill all processes owned by that user when cleaning up after the starter.\n</li><li>In KillFamily::hardkill(), iterate between takesnapshot() and spree() to catch processes created while we're trying to kill their parents.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "incident", "last_change": "2012-Mar-12 11:02", "status": "new", "created": "2012-Mar-08 15:50", "fixed_version": "2012-Mar-08 15:50", "broken_version": "v070705", "priority": "4", "subsystem": "Libs", "assigned_to": "", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "jfrey@cs.wisc.edu", "due_date": ""}