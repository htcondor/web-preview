{"id": 1349, "title": "Ticket #1349: startd can crash when using STARTD_SENDS_ALIVES", "description": "<blockquote>\nIn 7.4.1, the following was observed:\n\n<p></p><div class=\"verbatim\">\n<pre>04/13 02:21:10 (pid:31430) State change: claim no longer recognized by the sched\nd - removing claim\n04/13 02:21:10 (pid:31430) Changing state and activity: Claimed/Busy -&gt; Preempti\nng/Killing\n04/13 02:21:10 (pid:31430) Starter pid 31449 exited with status 0\n04/13 02:21:10 (pid:31430) State change: starter exited\n04/13 02:21:10 (pid:31430) Cancel_Socket: called on non-registered socket!\nStack dump for process 31430 at timestamp 1271139670 (17 frames)\ncondor_startd(dprintf_dump_stack+0xda)[0x816f535]\ncondor_startd[0x816f6fa]\n[0xffffe400]\ncondor_startd(_ZN6Stream16peer_descriptionEv+0x2c)[0x8215ca8]\ncondor_startd(_ZN10DaemonCore13Cancel_SocketEP6Stream+0x87)[0x814b68f]\ncondor_startd(_ZN5ClaimD0Ev+0xaa)[0x8104c42]\ncondor_startd(_ZN8Resource22leave_preempting_stateEv+0x38)[0x8119f62]\ncondor_startd(_ZN8Resource13starterExitedEP5Claim+0x12e)[0x8119cc6]\ncondor_startd(_ZN5Claim13starterExitedEi+0x49)[0x8107951]\ncondor_startd(_Z6reaperP7Serviceii+0xbd)[0x8129393]\ncondor_startd(_ZN10DaemonCore10CallReaperEiPKcii+0xd0)[0x8159bc4]\ncondor_startd(_ZN10DaemonCore17HandleProcessExitEii+0x1ff)[0x8159e5d]\ncondor_startd(_ZN10DaemonCore24HandleDC_SERVICEWAITPIDSEi+0x35)[0x8159ab5]\ncondor_startd(_ZN10DaemonCore6DriverEv+0x589)[0x814ecc1]\ncondor_startd(main+0x183a)[0x8163fd0]\n/lib/libc.so.6(__libc_start_main+0xdc)[0x4a81adec]\ncondor_startd(ldexp+0x59)[0x8103ac1]\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2011-Mar-17 15:30:24 by gthain:</em> <br/>\n\nI'm not sure this is right:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">commit f8e93883dce4deb447e350ab06ef0a01e81c5d1f\nAuthor: Dan Bradley &lt;dan@hep.wisc.edu&gt;\nDate:   Wed Apr 14 11:14:24 2010 -0500\n\n    Fixed startd crash when using STARTD_SENDS_ALIVES. #1349\n\ndiff --git a/src/condor_startd.V6/claim.cpp b/src/condor_startd.V6/claim.cpp\nindex 50fc86d..5198a8c 100644\n--- a/src/condor_startd.V6/claim.cpp\n+++ b/src/condor_startd.V6/claim.cpp\n@@ -1041,6 +1041,7 @@ Claim::sendAliveResponseHandler( Stream *sock )\n                dprintf(D_FAILURE|D_ALWAYS,\"State change: claim no longer recognized \"\n                         \"by the schedd - removing claim\\n\" );\n                finishKillClaim();      // get rid of the claim\n+               c_alive_inprogress_sock = NULL;\n                return FALSE;\n        }\n\n\n\nI've got a valgrind with this:\n\ncat /tmp/startd.vg\n==19206== Memcheck, a memory error detector\n==19206== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.\n==19206== Using Valgrind-3.5.0 and LibVEX; rerun with -h for copyright info\n==19206== Command: /scratch/gthain/personal-condor/release_dir/sbin/condor_startd -f -t\n==19206== Parent PID: 4318\n==19206==\n==19206== Invalid write of size 8\n==19206==    at 0x50FB32: Claim::sendAliveResponseHandler(Stream*) (claim.cpp:1077)\n==19206==    by 0x54F2AC: DaemonCore::CallSocketHandler_worker(int, bool, Stream*) (daemon_core.cpp:3697)\n==19206==    by 0x54F4F4: DaemonCore::CallSocketHandler_worker_demarshall(void*) (daemon_core.cpp:3659)\n==19206==    by 0x65E6E4: CondorThreads::pool_add(void (*)(void*), void*, int*, char const*) (condor_threads.cpp:1109)\n==19206==    by 0x54021E: DaemonCore::CallSocketHandler(int&amp;, bool) (daemon_core.cpp:3647)\n==19206==    by 0x541B75: DaemonCore::Driver() (daemon_core.cpp:3531)\n==19206==    by 0x5375F4: main (daemon_core_main.cpp:2377)\n==19206==  Address 0x4ee7030 is 176 bytes inside a block of size 224 free'd\n==19206==    at 0x4A05743: operator delete(void*) (vg_replace_malloc.c:346)\n==19206==    by 0x51057E: Claim::~Claim() (claim.cpp:127)\n==19206==    by 0x4FF72B: Resource::leave_preempting_state() (Resource.cpp:793)\n==19206==    by 0x525BF9: ResState::enter_action(State, Activity, bool, bool) (ResState.cpp:757)\n==19206==    by 0x525081: ResState::change(State, Activity) (ResState.cpp:139)\n==19206==    by 0x502B8A: Resource::change_state(State, Activity) (Resource.h:85)\n==19206==    by 0x50042C: Resource::kill_claim() (Resource.cpp:298)\n==19206==    by 0x50D68E: Claim::finishKillClaim() (claim.cpp:1132)\n==19206==    by 0x50FB2D: Claim::sendAliveResponseHandler(Stream*) (claim.cpp:1076)\n==19206==    by 0x54F2AC: DaemonCore::CallSocketHandler_worker(int, bool, Stream*) (daemon_core.cpp:3697)\n==19206==    by 0x54F4F4: DaemonCore::CallSocketHandler_worker_demarshall(void*) (daemon_core.cpp:3659)\n==19206==    by 0x65E6E4: CondorThreads::pool_add(void (*)(void*), void*, int*, char const*) (condor_threads.cpp:1109)\n==19206==    by 0x54021E: DaemonCore::CallSocketHandler(int&amp;, bool) (daemon_core.cpp:3647)\n==19206==    by 0x541B75: DaemonCore::Driver() (daemon_core.cpp:3531)\n==19206==    by 0x5375F4: main (daemon_core_main.cpp:2377)\n</pre></div>\n\n\n<p>Looks like Claim::finishKillClaim eventually delete's this, so any further write is out of bounds.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Mar-21 17:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21107\">[21107]</a></span>: Fix startd crash when sending alives <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1349\" onclick=\"get_ticket_and_populate_wrapper('1349'); return false;\" title=\"startd can crash when using STARTD_SENDS_ALIVES\">#1349</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Apr-16 07:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=17868\">[17868]</a></span>: Fixed startd crash when using STARTD_SENDS_ALIVES. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1349\" onclick=\"get_ticket_and_populate_wrapper('1349'); return false;\" title=\"startd can crash when using STARTD_SENDS_ALIVES\">#1349</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Apr-14 14:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=25431\">[25431]</a></span>: Documented fix for STARTD_SENDS_ALIVES crash in startd. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1349\" onclick=\"get_ticket_and_populate_wrapper('1349'); return false;\" title=\"startd can crash when using STARTD_SENDS_ALIVES\">#1349</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Apr-14 11:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=17863\">[17863]</a></span>: Fixed startd crash when using STARTD_SENDS_ALIVES. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1349\" onclick=\"get_ticket_and_populate_wrapper('1349'); return false;\" title=\"startd can crash when using STARTD_SENDS_ALIVES\">#1349</a></span>  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Mar-21 17:19", "status": "resolved", "created": "2010-Apr-14 11:14", "fixed_version": "2010-Apr-14 11:14", "broken_version": "v070400", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "matt@cs.wisc.edu", "due_date": ""}