{"id": 5268, "title": "Ticket #5268: Fix manual page for condor_transfer_data", "description": "<blockquote>\nPer htcondor-staff email with Todd Miller, and acknowledgement by Todd Tannenbaum</blockquote>", "remarks": "<blockquote>\n<em>2015-Sep-23 15:16:05 by tlmiller:</em> <br/>\n\n<div class=\"verbatim\">\n<pre>I came across the section of the manual for \"condor_transfer_data\", and\nbelieve it could use a bit of clarification, as I found myself very (SUPER)\nconfused.\n</pre></div>\n\nSee:\n<a class=\"external\" href=\"http://research.cs.wisc.edu/htcondor/manual/current/condor_transfer_data.html\">http://research.cs.wisc.edu/htcondor/manual/current/condor_transfer_data.html</a>\n\n<p></p><div class=\"verbatim\">\n<pre>Some example text, below, and my confusion:\n\n*\"condor_transfer_data* causes HTCondor to transfer spooled data. It is\nmeant to be used in conjunction with the *-spool* option of *condor_submit*,\nas in\n\ncondor_submit -spool mysubmitfile\n\nSubmission of a job with the *-spool* option causes HTCondor to spool all\ninput files, the job event log, and any proxy across a connection to the\nmachine where the *condor_schedd* daemon is running. After spooling these\nfiles, the machine from which the job is submitted may disconnect from the\nnetwork or modify its local copies of the spooled files.\"\n\nFor \"causes HTCondor to transfer spooled data\":\nIn which direction, from what machine to what machine, and under what other\nconditions, is data transferred? What is the order of events? Is this at\nthe end of the job or when data is first transferred to the sandbox on the\nexecute node?\nWhat does it mean to \"spool\" all input files. What happens to them and\nwhere do they go if \"spooled\"? Should this section point to a better\nexplanation of \"spool\"? Why or in what instances would I want this?\n\nIn which cases (desired or undesired) would the submission machine\ndisconnect from the network or modify its local copies of the spooled\nfiles? What's different if \"-spool\" isn't used? I think the use of  \"may\"\nwith \"or\" also adds ambiguity here. Is a disconnection something that is\nmore prone to happen (not of the user's desire) if spool is used  or is it\na disconnection easier to recover from when using spool? How do I know\nif/when/why the machine would disconnect -OR- modify it's local copies of\nthe spooled files?\n\n\"When the job finishes, the job has JobStatus = 4, meaning that the job has\ncompleted. The output of the job is spooled, and\n*condor_transfer_data* retrieves\nthe output of the completed job.\"\nSo condor_transfer_data retrieves the data from the spool and then copies\nit to the submission directory? If not to the submission directory, then to\nwhere?\n</pre></div>\n\n\n<p></p><hr/>\n<em>2015-Sep-23 15:17:00 by tlmiller:</em> <br/>\n\n<div class=\"verbatim\">\n<pre>        I agree.  The man page could be a lot better -- I think it was\ntrying to compactly explain the intended usage scenario, but ended up being\nless helpful than a simple link to a longer introduction.\n\n&gt; For \"causes HTCondor to transfer spooled data\": In which direction, from\n&gt; what machine to what machine, and under what other conditions, is data\n&gt; transferred?\n\n        The first sentence should probably read something like\n\"condor_transfer_data transfers a spooled job's output to the current\ndirectory.\"  Hopefully that makes it clear that the transfer happens\nimmediately (when you call condor_transfer_data).\n\n&gt; What is the order of events? Is this at the end of the job or when data is\n&gt; first transferred to the sandbox on the execute node?\n\n        Likewise, I hope this question is answered by the reformulation\nabove.\n&gt; What does it mean to \"spool\" all input files. What happens to them and\n&gt; where do they go if \"spooled\"? Should this section point to a better\n&gt; explanation of \"spool\"? Why or in what instances would I want this?\n\n        I agree that the man page should point to a longer introduction, and\ntend to think that we should just omit the smaller inline explanation. My\nlonger attempt to actually answer your questions follows.  (It may save you\nsome time to note here that the '-remote' option to condor_submit is\nequivalent to '-spool -name'.)\n\n        Suppose that you're working on your laptop.  You've made some clever\nchange to your Matlab code, or maybe just come some interesting data from\nsome instrument you attached to the laptop.  Either way, uploading files to\nthe submit node is a pain (whether it's using scp or if you don't have\naccess to gluster from your laptop or whatever); or maybe you're just not\nsure which files you changed, and don't want to spend the time to transfer\nall of them.  Instead of transferring files and then submitting a job, you\ncan use 'condor_submit -spool -name submit-3.chtc.wisc.edu ...' (or\nwherever) and Condor will transfer the job's input files from your laptop to\nthe submit node for you.\n\n        Rather than picking some random part of your home directory to store\nyour job's files, Condor (the schedd) takes responsibility for managing them\nand stores them its 'spool' directory.  Once condor_submit has finished\ntransferring the job's input files, the job proceeds as normal with its\ndirectory in spool effectively being its submission directory.  At this\npoint, the job is entirely independent of your laptop -- whether you\ndisconnect it from the network (because you went home, because it's low on\nbattery), change the files that were part of the job, or whatever.\n\n        At some point, you learn that the job has finished.  (Condor can\nsend you mail. ;))  When you do, you can run condor_transfer_data to get the\noutput sandbox.  (Since the job's spool directory is its submission\ndirectory, the output goes there.)  In older version of Condor, running\ncondor_transfer_data before the job finished may not have worked, depending\non file permissions.\n\n        You can also use -spool without -name, in case all you want the\nability to continue to change your files while the job is in queue, but I\nthink we generally don't like it when people do that (it uses a lot of disk\nspace and can be abused in the presence of quotas).\n</pre></div>\n\n\n<p></p><hr/>\n<em>2015-Sep-23 15:17:40 by tlmiller:</em> <br/>\n\nLauren also mentioned a mail from ToddT that she found considerably more illuminating than the manual, and much shorter than my own. :)\n\n<p></p><hr/>\n<em>2015-Sep-23 16:30:08 by tlmiller:</em> <br/>\n\nProposal, pending a better example to crib from.\n\n<p></p><div class=\"verbatim\">\n<pre>\\Description\nUse \\Condor{transfer\\_data} to fetch a job's output after submitting it\nwith the \\Opt{-spool} or \\Opt{-remote} options.  You may call\n\\Condor{transfer\\_data} at any time, but if you call it before the job\nattribute \\Attr{JobStatus} equals 4 (completed), you may not get the\nall of the job's output.  Data transfer begins immediately and will be\ncomplete when \\Condor{transfer\\_data} returns (unless an error occurs).\nAfter transfer, the location(s) of output on disk will be the same as\nif the job had not been submitted with the \\Opt{-spool} or \\Opt{-remote}\noptions.\n\nFor more details on HTCondor file transfer, please consult [FIXME].\n\nFor more information about why you might choose to use the \\Opt{-spool} or\n\\Opt{-remote} options, please consult [FIXME].\n</pre></div>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "doc", "last_change": "2015-Sep-23 16:34", "status": "new", "created": "2015-Sep-21 16:50", "fixed_version": "2015-Sep-21 16:50", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "tlmiller", "derived_from": "", "creator": "lmichael", "rust": "", "customer_group": "other", "visibility": "public", "notify": "lmichael@wisc.edu", "due_date": ""}