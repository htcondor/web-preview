{"id": 3523, "title": "Ticket #3523: RFE: implement new function firstDefined() for classad language", "description": "<blockquote>\nA common scenario with condor's use of classads is allowing values to override other values, when they are present.  Currently, this is somewhat awkward, requiring expressions like this:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">ifThenElse(_condor_RequestCpus isnt undefined, _condor_RequestCpus &lt;= Cpus, RequestCpus &lt;= Cpus)</pre></div>\n\n\n<p>Having a function such as firstDefined() would allow the same use case to be written like this:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">firstDefined(_condor_RequestCpus, RequestCpus) &lt;= Cpus</pre></div>\n\n\n<p>It would also scale nicely with larger priority hierarchies:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">firstDefined(_4th_override_RequestCpus, _3rd_override_RequestCpus, _condor_RequestCpus, RequestCpus) &lt;= Cpus</pre></div>\n\n\n<p>Proposed semantics:\n</p><ul>\n<li>firstDefined() is proposed to accept an arbitrary number of arguments (zero or more)\n</li><li>It will return the value of the first expression (left to right) that evaluates to a value that is neither 'undefined' nor 'error'\n</li><li>short circuit: Once a non-error non-undefined value is encountered,  subsequent expressions are <strong>not</strong> evaluated\n</li><li>firstDefined(), with no arguments, evaluates to 'undefined'\n</li><li>firstDefined({e1, e2, ...}) is equivalent to firstDefined(e1, e2, ...)\n</li><li>if all expressions evaluate to either 'undefined' or 'error', the return value will be 'undefined'\n</li></ul>\n\n<p>Proposed additional functions in suite:\n</p><ul>\n<li>firstNumeric()\n</li><li>firstValid()  (first non-error?)\n</li><li>perhaps a variation that accepts a type as a parameter:, so return first expression that has the given type (string, int, etc)\n</li></ul>\n\n<p>Proposal for an additional operator with similar semantics:\n</p><ul>\n<li>e1 &lt;op&gt; e2 &lt;op&gt; ...   is equivalent to firstDefined(e1, e2, ...)\n</li><li>suggestion - &lt;op&gt; = '?:'</li></ul>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2013-Mar-05 09:41", "status": "new", "created": "2013-Mar-04 16:56", "fixed_version": "2013-Mar-04 16:56", "broken_version": "", "priority": "3", "subsystem": "Libs", "assigned_to": "", "derived_from": "", "creator": "eje", "rust": "", "customer_group": "other", "visibility": "public", "notify": "eje@cs.wisc.edu, johnkn@cs.wisc.edu, tannenba@cs.wisc.edu, tstclair@redhat.com", "due_date": ""}