{"id": 4721, "title": "Ticket #4721: DAGman submit to same queue", "description": "<blockquote>\nIt would be nice if a running DAGman job could submit to the same queue that it is running under. Consider a server running two queues. The current behavior is that a scheduler universe job running on q2 will submit its jobs to q1. The ideal behavior is that it would submit to q2 unless explicitly told to do otherwise.\n\n<p>Sadly, patching this myself is beyond my skills, but I'd be happy to help however I can.</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Nov-17 13:20:12 by wenger:</em> <br/>\n\nHmm -- can you clarify a little bit?  Are you saying that the job will always be submitted to the queue that's the one that's <strong>not</strong> running DAGMan?  Or is there something about q1 that makes the jobs prefer it?  In other words, is this symmetric or not?\n\n<p></p><hr/>\n<em>2014-Nov-17 13:27:18 by wenger:</em> <br/>\n\nOr are you basically saying that if you specify\n\n<p></p><pre>  condor_submit_dag -schedd-address-file &lt;file&gt;\n</pre>\n\n<p>the -schedd-address-file specification should apply to the DAG's node jobs but doesn't?\n\n</p><p></p><hr/>\n<em>2014-Nov-17 13:41:05 by bcotton:</em> <br/>\n\nDAGman currently always submits to Q1, regardless of which queue the condor_dagman job is running in. That's because we set SCHEDD_HOST in the config. Without SCHEDD_HOST set, DAGs submitted to Q2 won't successfully submit jobs at all.\n\n<p></p><div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \nOr are you basically saying that if you specify\n\ncondor_submit_dag -schedd-address-file &lt;file&gt;\n\nthe -schedd-address-file specification should apply to the DAG's node jobs but doesn't?\n</td></tr></tbody></table></div>\n\n\n<p>Yes, ish. (-schedd-address-file doesn't seem to work in 8.2.3, as I recently noted on htcondor-users, and in this case we're not actually submitting with that argument, but via a submit file).\n\n</p><p>I can force the desired behavior by manually specifying _CONDOR_SCHEDD_HOST in the environment, but I'm not sure of a good way to automatically detect and set that (since the jobs are submitted dynamically by <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CycleServer\" title=\"Cycle Server\">CycleServer</a></span> and there's no way of knowing a priori where it will end up).\n\n</p><p></p><hr/>\n<em>2014-Nov-17 13:55:05 by bbockelm:</em> <br/>\n\nWouldn't it be reasonable to have _condor_SCHEDD_HOST automatically set by the schedd for all scheduler / local universe jobs (if not already set in the job?)?\n\n<p></p><hr/>\n<em>2014-Nov-17 15:04:25 by wenger:</em> <br/>\n\nAh, okay, you're saying that the node jobs go to whatever queue SCHEDD_HOST in the config is pointing to, no matter which queue the DAGMan job itself is submitted to, right?\n\n<p></p><hr/>\n<em>2014-Nov-17 15:19:13 by bcotton:</em> <br/>\n\nThat's correct. I've tried a variety of ways of forcing the issue (including setting SCHEDD.Q2.SCHEDD_ENVIRONMENT = \"_CONDOR_SCHEDD_HOST=$(SCHEDD.Q2.SCHEDD_NAME)\", SCHEDD_ENVIRONMENT = \"_CONDOR_SCHEDD_HOST=$(SCHEDD_NAME)\", and even using _CONDOR_SCHEDD_HOST=$$([regexps(\"\"(.*)#(.*)#(.*)\"\",GlobalJobId,\"\"\\1\"\")]) in the job's environment setting), to no avail.\n\n<p></p><hr/>\n<em>2014-Nov-17 17:12:20 by bcotton:</em> <br/>\n\nFor what it's worth, specifying _CONDOR_SCHEDD_HOST=$$([regexps(\"\"(.*)#(.*)#(.*)\"\",GlobalJobId,\"\"\\1\"\")]) in the submit file's environment setting would work except that such expansions happen in the shadow, so don't help for scheduler universe jobs. Here's a sample submit file:\n\n<p></p><pre>  # Template used by plugin rapipeline.prepare to generate the DAG submit file\n  # for each submission. Parameters are configured in prepare.cfg.\n</pre>\n\n<p></p><pre>  universe        = scheduler\n  executable      = /usr/bin/condor_dagman\n  output          = workflow.dag.lib.out\n  error           = workflow.dag.lib.err\n  log             = workflow.dag.dagman.log\n  remove_kill_sig = SIGUSR1\n</pre>\n\n<p></p><pre>  # attempts to ensure that DAGMan is automatically\n  # requeued by the schedd if it exits abnormally or\n  # is killed (e.g., during a reboot).\n  on_exit_remove  = ( ExitSignal =?= 11 || (ExitCode =!= UNDEFINED &amp;&amp; ExitCode &gt;=0 &amp;&amp; ExitCode &lt;= 2))\n</pre>\n\n<p></p><pre>  copy_to_spool   = False\n  arguments       = \"-f -l . -Debug 3 -Lockfile /var/log/condor/dagman.req-176.lock -AutoRescue 1 -DoRescueFrom 0 -Dag /data/raptest/submissions2/req-176/execute/workflow.dag -CsdVersion $CondorVersion:' '8.0.6' 'Feb' '01' '2014' 'BuildID:' '225363' '$\"\n  environment     = \"_CONDOR_DAGMAN_LOG=/var/log/condor/dagman.req-176.out _CONDOR_MAX_DAGMAN_LOG=0 PATH=/usr/local/bin:/bin:/usr/bin CONDOR_CONFIG=/etc/condor/condor_config\"\n</pre>\n\n<p></p><pre>  +raPipelineSubmissionId = \"req-176\"\n  +raPipelineSubmissionConfig = \"http://192.168.53.128:8080/getConfig.s?templateName=rap3.5.0\"\n  +raPipelineSubmissionDir = \"\\\\192.168.53.128\\raptest\\submissions2\\req-176\"\n  +raPipelineSubmissionResultsDir = \"\\\\192.168.53.128\\raptest\\results/raptest-2014.07.23-11.46.59-176-3_5_0_final_testing\"\n  +raPipelineStage=\"Risk Analysis Pipeline DAG\"\n  +cycleUser = \"bcotton\"\n  +cycleGroup = \"rap\"\n  +AccountingGroup = \"g_rap.$(cycleUser)\"\n</pre>\n\n<p></p><pre>  queue 1\n</pre>\n\n<p>The above gets produced by a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CycleServer\" title=\"Cycle Server\">CycleServer</a></span> plugin for submission via <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CycleServer\" title=\"Cycle Server\">CycleServer</a></span>. Since <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CycleServer\" title=\"Cycle Server\">CycleServer</a></span> doesn't have a way to submit DAGs via condor_submit_dag, we do it this way.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2014-Nov-17 17:12", "status": "new", "created": "2014-Nov-17 13:10", "fixed_version": "2014-Nov-17 13:10", "broken_version": "", "priority": "4", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "", "creator": "bcotton", "rust": "", "customer_group": "users", "visibility": "public", "notify": "ben.cotton@cyclecomputing.com", "due_date": ""}