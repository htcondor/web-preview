{"id": 3793, "title": "Ticket #3793: missing build dependency for std_local_ref", "description": "<blockquote>\nWhen doing a uw-style build with a large make -jN number (eg, -j24), I consistently hit a build dependency where the rule to generate receivers.cpp gets run before stub_gen is built (which is the utility used to generate receivers.cpp).\n\n<p>This doesn't usually come up with smaller -jN's, since an earlier rule ends up building stub_gen in time, but there is no explicit dependency on it.  (There is a receivers target that depends on stub_gen, but there is also a std_local_ref target, which has a rule to build receivers.cpp, but this does not depend on stub_gen or the receivers target.)\n\n</p><p>One way to address this is to add a cmake dependency for receivers (and senders) on stub_gen.  This seems to work, but the result is receivers.cpp gets generated twice once stub_gen is built; once for the receivers target and once for std_local_ref.\n\n</p><p>Another way (my preference) would be to add a cmake dependency for std_local_ref on receivers (and senders).  This adds an implicit dependency on stub_gen and avoids regenerating the .cpp files.  There are similar looking holes for switches.cpp, which I think should be addressed the same way.\n\n</p><p>My suggestion is to patch src/condor_syscall_lib/CMakeLists.txt like this:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">--- a/src/condor_syscall_lib/CMakeLists.txt\n+++ b/src/condor_syscall_lib/CMakeLists.txt\n@@ -125,13 +125,14 @@ if( STD_UNIVERSE )\n \t# part 2:\n \t# set dependencies to ensure build dep order for parallel builds\n \t##################################################\n-\tadd_dependencies( condorsyscall stub_gen )\n+\tadd_dependencies( condorsyscall senders switches )\n \tif (DOES_COMPRESS_CKPT)\n-\t\tadd_dependencies( condorzsyscall stub_gen )\n+\t\tadd_dependencies( condorzsyscall senders switches )\n \tendif()\n \tadd_dependencies( switches syscall_numbers stub_gen )\n \tadd_dependencies( senders syscall_numbers stub_gen )\n \tadd_dependencies( receivers syscall_numbers stub_gen )\n+\tadd_dependencies( std_local_ref senders receivers )\n \tadd_dependencies( sys-list syscall_numbers stub_gen )\n\n \t#################################################\n</pre></div>\n\n\n<p>This fix worked for me, but I'd like to put this out here in case anyone thinks there's a better way to address it.  Thanks!</p></blockquote>", "remarks": "<blockquote>\n<em>2013-Jul-24 14:29:36 by edquist:</em> <br/>\n\nI checked in this change to master, as recommended by TJ.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-24 14:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36986\">[36986]</a></span>: (<span class=\"ticket\"><a class=\"review\" href=\"tktview?tn=3793\" title=\"missing build dependency for std_local_ref\">#3793</a></span>) Add build dependency for std_local_ref Some cmake targets in a UW_BUILD depend on .cpp files that get generated with stub_gen, but the dependencies are not spelled out explicitly in the cmake rules; which breaks larger parallel builds (eg, make -j24), when stub_gen gets called before it is built.\u00a0[...]\n (By Carl Edquist )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2013-Jul-24 14:32", "status": "review", "created": "2013-Jul-18 16:26", "fixed_version": "2013-Jul-18 16:26", "broken_version": "", "priority": "4", "subsystem": "Packaging", "assigned_to": "edquist", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "edquist@cs.wisc.edu", "due_date": ""}