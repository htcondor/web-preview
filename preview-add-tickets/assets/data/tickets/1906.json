{"id": 1906, "title": "Ticket #1906: Update documentation for new Hierarchical Acct Group Quotas (HGQ)", "description": "<blockquote>\nThe accounting groups feature has been enhanced to support hierarchical accounting groups and group quotas, as of 7.5.6 -- The condor documentation should be updated to explain the enhanced capability.\n\n<p>Documentation has been written for the downstream FH repo:\n<a class=\"external\" href=\"http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_MRG/1.3/html-single/Grid_User_Guide/index.html#sect-Grid_User_Guide-User_Priorities_and_Negotiation-Hierarchical_Fair_Share_HFS\">http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_MRG/1.3/html-single/Grid_User_Guide/index.html#sect-Grid_User_Guide-User_Priorities_and_Negotiation-Hierarchical_Fair_Share_HFS</a></p></blockquote>", "remarks": "<blockquote>\n<em>2011-Mar-08 13:18:59 by smoler:</em> <br/>\n\nThe link given for the documentation does not work.  Tried on March 8, 2011. Please provide a correct one such that the feature might get documented in the Condor manual.\n\n<p></p><hr/>\n<em>2011-Mar-30 14:49:34 by smoler:</em> <br/>\n\nKaren taking on this ticket, as no one else has.  Erik should expect questions, via e-mail, and they should be answered quickly (!), unless I hear that someone else should be receiving questions.\n\n<p></p><hr/>\n<em>2011-Mar-30 15:15:01 by matt:</em> <br/>\n\nQuestions and answers should go into this ticket.\n\n<p></p><hr/>\n<em>2011-Mar-30 15:56:24 by smoler:</em> <br/>\n\nA first question:  the term <strong>normalized</strong> is used twice in the section numbered 1 of the 10.3 Hierarchical Fair Share (HFS) document.  Since normalization is a term describing the mantissa portion of a floating point representation with respect to the placement of a radix point such that HW guaranties a unique representation for values, I think probably the wrong word has been chosen.  Could these uses be better described with <strong>scaled</strong> ?\n\n<p>The example of static quotas chooses child quotas that add up to 2 times the integer defined for the parent.  So the 15 of the parent causes each of the children's static quota where their sum is 30 to be scaled by .5, making one child's 10 become 5, and the other child's 20 become 10.\n\n</p><p>What happens if integer values do not result from this scaling?  I'd have to guess that a truncated floating point value is used, but then the children won't sum to the parent's (static) quota.  (But, at least it won't be MORE than the quota.)  Here's an example that you can fill in the numbers for:  Parent says 100, child1 says 80, and child2 says 40.  Scaling factor (without precision) is .83, leading to child1 getting 66.6 and child2 getting 33.2. . .what integer value do they really get?\n\n</p><p></p><hr/>\n<em>2011-Mar-30 16:28:20 by smoler:</em> <br/>\n\nAnother question:  what happens if a group (subgroup, subsubgroup, etc) is assigned (configuration) BOTH a <code>GROUP_QUOTA_&lt;groupname&gt;</code> value (static) and <code>GROUP_QUOTA_DYNAMIC_&lt;groupname&gt;</code> value (dynamic)?\n\n<p>BTW, there is a typo in the Red Hat documentation.  Under portion 1. of Setting up hierarchical fair share, a sentence is:\n\n</p><p></p><ul>\nFor example, a static quota for group_physics is assigned using the configuration variable <code>GROUP_QUOTA_DYNAMIC_group_physics</code>.\n</ul>\n\n<p>The <code>DYNAMIC</code>  needs to be removed to correct the typo.\n\n</p><p></p><hr/>\n<em>2011-Mar-30 17:03:56 by eje:</em> <br/>\n\nI used the term \"normalized\" in the statistics sense of \"dividing by a constant so that everything sums to unity.\"   However \"scaled\" would also work.\n\n<p>Regarding the static quotas example, quotas are actually floating point values at that particular stage.  I used an example where the results were integers because it was easier, but if the results of normalization are non-integer that is how they will be stored until a later step.  There should be a description in the doc I attached that describes the final step of recovering fractional slots.  That happens after initial quota assignment and surplus quota distribution (which both treat quotas as floating point).\n\n</p><p>In the case where both a static and dynamic quota are declared in the config, the static quota takes precedence, and the dynamic quota will be ignored.\n\n</p><p></p><hr/>\n<em>2011-Mar-31 09:26:47 by smoler:</em> <br/>\n\nSo, what happens if the configuration states a non-integer value for the static quota of a group?  Is that then OK, since you're carrying fl pt values thru the algorithm until the point where the fractional parts (obtained thru truncation?) are all collected back up?  What I'm getting at here is that I need to document a type for the configuration variable.  Your doc states that it is an integer, but the entire description (and your answer to previous question) really implies that it actually is a fl pt that is eventually truncated to provide an integral number of slots.\n\n<p></p><hr/>\n<em>2011-Mar-31 10:00:27 by eje:</em> <br/>\n\nA static quota is currently read from the config as a floating point, and so in that respect it is probably most accurate to define its type as float/real, however: pragmatically, it is intended to represent some number of slots, and so it will be easiest to think of it as 'integer' from a user/admin point of view.  My recommendation would be to document it as 'integer'.  (I will also consider reading those with param_integer() instead of param_double(), which is probably the correct thing to do unless I can think of a plausible use-case for an admin defining a non-integer static quota)\n\n<p></p><hr/>\n<em>2011-Mar-31 13:56:15 by smoler:</em> <br/>\n\nThe more correct way to read would be with\n<div class=\"code\">\n<pre class=\"code\">trunc(param_double())</pre></div>\n\nsince  it would accept fl pt representations of integral amounts, as for example 1.234e4, whereas param_integer() will do the wrong thing with such a string and give back 1 (because strtol stops at the first nonacceptable character).\n\n<p>Yet another question, what does it mean if configuration assigns the value 0 (or 0.0) for either of the quota types?  Same question, but for a static quota setting, a legal value can be negative (as in -1.0); what behavior will we see if someone sets this nonsense value for a quota?  Or does -1 have some special, but not documented meaning?\n\n</p><p></p><hr/>\n<em>2011-Mar-31 14:31:59 by eje:</em> <br/>\n\nBoth static and dynamic quotas are required to be &gt;= 0, for example:\n<div class=\"code\">\n<pre class=\"code\">double quota = param_double(vname.Value(), -1.0, 0, INT_MAX);</pre></div>\n\n\n<p>If a group is missing its quota declaration, then it will default to zero (with a warning).\n\n</p><p>If a quota is configured or defaulted to zero, then it will only be able to run jobs if there is surplus quota available from other groups (and if it has autoregroup enabled, so it can accept surplus quota).\n\n</p><p>FYI: there is a new synonym for GROUP_AUTOREGROUP_&lt;&gt;, called GROUP_ACCEPT_SURPLUS_&lt;&gt;.   Dan seemed to like it, however at this point it hasn't been documented, and could be left undocumented.\n\n</p><p></p><hr/>\n<em>2011-Apr-13 15:15:02 by smoler:</em> <br/>\n\nWhat is the point of having a job set its <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AccountingGroup\" title=\"Accounting Group\">AccountingGroup</a></span> attribute ending in the \"username\"?  For example,  if there are group/subgroups such as\n<div class=\"verbatim\">\n<pre>GROUP_QUOTA_group_physics = 12\nGROUP_QUOTA_group_physics.lab1 = 3\nGROUP_QUOTA_group_physics.lab2 = 4\n</pre></div>\n\n\n<p>why does my job need to set\n</p><div class=\"verbatim\">\n<pre>+AccountingGroup = \"group_physics.lab1.marysunshine\"\n</pre></div>\n\n\n<p>To distinguish, why is my job <em>not</em>\n</p><div class=\"verbatim\">\n<pre>+AccountingGroup = \"group_physics.lab1\"\n</pre></div>\n\n\n<p>Related question:  is this \"username\" subject to any limitations or verification? If there were 2 Unix logins (\"john\" and \"jane\"), and John submits his job with a \"username\" of \"jane,\" what happens?\n\n</p><p></p><hr/>\n<em>2011-Apr-13 15:17:59 by smoler:</em> <br/>\n\nThe older, existing Condor documentation on group accounting specified a 40 character limit on group names.  Has this limit changed?  If so, to what? And, how does any limit apply to subgroups, sub subgroups, etc. ?\n\n<p></p><hr/>\n<em>2011-Apr-13 16:01:42 by eje:</em> <br/>\n\nThe \"grp.user\" format predates the introduction of this hierarchical group feature -- I left it as-is for backward compatibility.\n\n<p>The \"user\" portion of this name is not authenticated, and is not required to be correlated with actual OS user name: it is essentially honor system at this point.  (there are certainly good arguments for supporting authenticated user names, and perhaps also authenticated group names, in the future)\n\n</p><p>There is no fixed limit on group name length.   I've tested it with group names up to 80 characters long.\n\n</p><p></p><hr/>\n<em>2011-May-05 15:18:45 by smoler:</em> <br/>\n\nConfiguration variable not yet documented, and should not be forgotten: <code>GROUP_DYNAMIC_MACH_CONSTRAINT</code>\n\n<p></p><hr/>\n<em>2011-May-11 11:44:18 by smoler:</em> <br/>\n\nE-mail about errors in the 7.6.0 manual's calculations (for dynamic quotas) and subsequent e-mails about terminology refer to configuration variables that are not referred to in the \"downstream documentation.\"  Please help me out by giving me definitions for these 2, as well as identifying any others that I wouldn't know about:\n\n<p><code>ACCEPT_SURPLUS</code>\n\n</p><p><code>GROUP_DYNAMIC_MACH_CONSTRAINT</code>\n\n</p><p></p><hr/>\n<em>2011-May-23 15:23:53 by danb:</em> <br/>\n\nGROUP_ACCEPT_SURPLUS - a boolean value that specifies whether groups should be allowed to use more than their configured quota when there is not enough demand from other groups to use all of the available machines.  The default is false.\n\n<p>GROUP_ACCEPT_SURPLUS_&lt;group_name&gt; - this setting applies to the specific named group.  If not specified, the default is controlled by GROUP_ACCEPT_SURPLUS.\n\n</p><p>GROUP_DYNAMIC_MACH_CONSTRAINT - this is an expression that specifies the set of machines in the pool that should be used to determine the size of the pool for dynamic quotas, which are expressed as a fraction of the total.  When there are extra rarely used slots in the pool (e.g. administrative slots), it may be desirable to filter these out by specifying an expression for GROUP_DYNAMIC_MACH_CONSTRAINT that matches only the \"normal\" slots and not the special slots.\n\n</p><p>GROUP_QUOTA_ROUND_ROBIN_RATE - the maximum sum of weighted slots that should be handed out to an individual submitter in each iteration within a negotiation cycle.  If slot weights are not being used by the negotiator (NEGOTIATOR_USE_SLOT_WEIGHTS=false), then this is just the (unweighted) number of slots.  The default is a very big number---effectively infinite.  Setting this to a number smaller than the size of the pool can help avoid starvation.  An example of the starvation problem when there are a subset of machines in a pool with large memory and there are multiple job submitters who desire all of these machines.  Normally, Condor will decide how much of the full pool each person should get and then attempt to hand out that number of resources to each person.  Since the big memory machines are only a subset of pool, it may happen that they are all given to the first person contacted, and the rest of the people requiring large memory machines get nothing.  Setting GROUP_QUOTA_ROUND_ROBIN_RATE to a value that is small compared to the size of subsets of machines will reduce starvation at the cost of possibly slowing down the rate at which resources are allocated.\n\n</p><p>NEGOTIATOR_USE_SLOT_WEIGHTS - a boolean value that controls whether the negotiator pays attention to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SlotWeight\" title=\"Slot Weight\">SlotWeight</a></span> in machine ads.  The default is true.  When false, each slot effectively has a weight of 1.\n\n</p><p>GROUP_QUOTA_MAX_ALLOCATION_ROUNDS - an integer that specifies the maximum number of times in one negotiation cycle the negotiator will calculate how many slots each group deserves and attempt to allocate them.  The default is 3.  The reason it may take more than one round is that some groups may not have jobs that match some of the available machines, so some of the slots that were withheld for those groups may not get allocated in any given round.\n\n</p><p></p><hr/>\n<em>2012-Dec-17 16:43:08 by smoler:</em> <br/>\n\nDec 17, 2012:  Documentation task of getting the manual up to date will be completed by explicitly telling folks that we don't recommend mixing static and dynamic quotas, and removing the waiting/empty subsection on how mixing would work.\n\n<p>Examples are to be generated and placed into the htcondor wiki.\n\n</p><p></p><hr/>\n<em>2012-Dec-18 15:53:59 by smoler:</em> <br/>\n\nChanges have gone into many branches of the manual.  Last one went into 7.8.8.</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/282/hgq_doc.pdf\">hgq_doc.pdf</a>\n98308 bytes added by eje on 2011-Mar-08 23:16:07 UTC.\n<br/>\nPDF of documentation for the Hierarchical Group Quotas (HGQ) feature.  \n\n<p>When we adopted upstream, we decided to replace the former name (HFS - Hierarchical Fair Share) with \"Hierarchical Group Quotas.\"<br/>\n</p></li><li><a href=\"attach_get/287/gt1906-version-hist.patch\">gt1906-version-hist.patch</a>\n777 bytes added by eje on 2011-Mar-10 23:29:26 UTC.\n<br/>\nVersion history entry for Hierarchical Accounting Groups (7.5.6)<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-May-07 15:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35639\">[35639]</a></span>: Correct and edit prose on group accounting and hierarchical group quotas. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2728\" onclick=\"get_ticket_and_populate_wrapper('2728'); return false;\" title=\"RFE: a 1st-class accounting_group 'command' for submit files\">#2728</a></span> ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3053\" onclick=\"get_ticket_and_populate_wrapper('3053'); return false;\" title='HGQ and negotiation: document the &lt;none&gt; \"group\"'>#3053</a></span> ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1393\" onclick=\"get_ticket_and_populate_wrapper('1393'); return false;\" title=\"Implement tiered groups and hierarchical fairshare\">#1393</a></span> ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1906\" onclick=\"get_ticket_and_populate_wrapper('1906'); return false;\" title=\"Update documentation for new Hierarchical Acct Group Quotas (HGQ)\">#1906</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Dec-18 15:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=34427\">[34427]</a></span>: do not mix static and dynamic group quotas ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1906\" onclick=\"get_ticket_and_populate_wrapper('1906'); return false;\" title=\"Update documentation for new Hierarchical Acct Group Quotas (HGQ)\">#1906</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-14 12:56</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26046\">[26046]</a></span>: added defns for several config knobs related to hierarchical group quotas; gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1906\" onclick=\"get_ticket_and_populate_wrapper('1906'); return false;\" title=\"Update documentation for new Hierarchical Acct Group Quotas (HGQ)\">#1906</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-May-11 11:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26033\">[26033]</a></span>: wording changes to clarify meaning for hierarchical group quotas; gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1906\" onclick=\"get_ticket_and_populate_wrapper('1906'); return false;\" title=\"Update documentation for new Hierarchical Acct Group Quotas (HGQ)\">#1906</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-May-10 16:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26031\">[26031]</a></span>: rework incorrect examples of dynamic hier. group quotas; gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1906\" onclick=\"get_ticket_and_populate_wrapper('1906'); return false;\" title=\"Update documentation for new Hierarchical Acct Group Quotas (HGQ)\">#1906</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Apr-11 12:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=25996\">[25996]</a></span>: more prose entered about hierarchical group quotas, gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1906\" onclick=\"get_ticket_and_populate_wrapper('1906'); return false;\" title=\"Update documentation for new Hierarchical Acct Group Quotas (HGQ)\">#1906</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Apr-07 13:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=25995\">[25995]</a></span>: more prose added to document hierarchical group quotas; gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1906\" onclick=\"get_ticket_and_populate_wrapper('1906'); return false;\" title=\"Update documentation for new Hierarchical Acct Group Quotas (HGQ)\">#1906</a></span>  (By Karen Miller )</td></tr>\n</tbody></table>", "type": "doc", "last_change": "2012-Dec-18 15:54", "status": "resolved", "created": "2011-Feb-08 13:25", "fixed_version": "2011-Feb-08 13:25", "broken_version": "v070506", "priority": "2", "subsystem": "Daemons", "assigned_to": "smoler", "derived_from": "#1393", "creator": "eje", "rust": "", "customer_group": "other", "visibility": "public", "notify": "smoler@cs.wisc.edu eje@redhat.com", "due_date": ""}