{"id": 632, "title": "Ticket #632: Clone() in DaemonCore::Create_Process() has uninitialized bytes", "description": "<blockquote>\nWhen running a DAG with a PRE script under valgrind, I get the following error:\n\n<p></p><pre>  ==4690== Syscall param clone(parent_tidptr) contains uninitialised byte(s)\n  ==4690==    at 0xB7E418: clone (in /lib/libc-2.5.so)\n  ==4690==    by 0x814DDA0: DaemonCore::Create_Process(char const*, ArgList  const&amp;, priv_state, int, int, Env const*, char const*, FamilyInfo*, Stream**, int*, int*, int, __sigset_t*, int, unsigned*, int*) (daemon_core.cpp:7525)\n  ==4690==    by 0x8131F35: Script::BackgroundRun(int) (script.cpp:106)\n  ==4690==    by 0x8132404: ScriptQ::Run(Script*) (scriptQ.cpp:68)\n  ==4690==    by 0x811D1B7: Dag::StartNode(Job*, bool) (dag.cpp:1315)\n  ==4690==    by 0x8123C0C: Dag::Bootstrap(bool) (dag.cpp:337)\n  ==4690==    by 0x8119261: main_init(int, char**) (dagman_main.cpp:880)\n  ==4690==    by 0x816063C: main (daemon_core_main.cpp:2108)\n</pre>\n\n<p>This seems to be happening when DAGMan tries to run the PRE script.\n\n</p><p>Hmm -- this also seems to produce a subsequent error inside dprintf():\n\n</p><p></p><pre>  ==4959== Jump to the invalid address stated on the next line\n  ==4959==    at 0x40B4676: ???\n  ==4959==  Address 0x40B4676 is 54 bytes inside a block of size 352 free'd\n  ==4959==    at 0x4004FDA: free (vg_replace_malloc.c:233)\n  ==4959==    by 0xB04C55: fclose@@GLIBC_2.1 (in /lib/libc-2.5.so)\n  ==4959==    by 0x816B75D: fclose_wrapper (dprintf.c:1019)\n  ==4959==    by 0x816AD2D: debug_unlock (dprintf.c:611)\n  ==4959==    by 0x816A5E9: _condor_dprintf_va (dprintf.c:362)\n  ==4959==    by 0x81319B6: debug_printf (debug.cpp:63)\n  ==4959==    by 0x8117FC5: Dagman::Config() (dagman_main.cpp:309)\n  ==4959==    by 0x81181BD: main_init(int, char**) (dagman_main.cpp:464)\n  ==4959==    by 0x8160D98: main (daemon_core_main.cpp:2108)\n</pre>\n\n<p>I don't get that error if there are no PRE/POST scripts.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Sep-25 10:43:29 by tannenba:</em> <br/>\n\nValgrind and clone do not mix, this is a known issue.\n\n<p>When valgrinding, configure Condor to use fork() instead of clone.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2009-Dec-26 21:31", "status": "abandoned", "created": "2009-Jul-17 11:36", "fixed_version": "2009-Jul-17 11:36", "broken_version": "v070302", "priority": "3", "subsystem": "Daemons", "assigned_to": "", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu", "due_date": ""}