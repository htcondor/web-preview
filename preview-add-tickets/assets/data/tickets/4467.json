{"id": 4467, "title": "Ticket #4467: starter heap corruption on windows while creating execute dir", "description": "<blockquote>\nCycle Computing has reported on condor users that starters are exiting with status -1073740940 (0xC0000374)  which is STATUS_HEAP_CORRUPTION\n\n<p>The crash is happening just after creation of the execute directory and before the job is started. The last lines in the <code>StarterLog</code> are.  There is no core file.\n\n</p><p></p><div class=\"verbatim\">\n<pre>07/10/14 17:48:47 (fd:7) (pid:336) (D_ALWAYS) setting the orig job name in starter\n07/10/14 17:48:47 (fd:7) (pid:336) (D_ALWAYS) setting the orig job iwd in starter\n07/10/14 17:48:47 (fd:7) (pid:336) (D_PRIV) PRIV_CONDOR --&gt; PRIV_CONDOR at c:\\condor\\execute\\dir_18128\\userdir\\src\\condor_starter.v6.1\\basestarter.cpp:1789</pre></div>\n\n\n<p>Some experimentation shows that the problem only happens when the starter is built with the Visual Studio 2012 compiler.</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Jul-17 21:20:10 by johnkn:</em> <br/>\n\nCould not reproduce the problem here, So Ben Cotton assisted by running the starter under windows heap verifier in his EC2 VM where they were seeing the problem. The verifier log shows\n\n<p></p><div class=\"verbatim\">\n<pre>===========================================================\nVERIFIER STOP 00000010: pid 0xC04: corrupted start stamp\n\n\t00351000 : Heap handle\n\t08845F58 : Heap block\n\t05000000 : Block size\n\t00000030 : Corrupted stamp\n===========================================================\nThis verifier stop is not continuable. Process will be terminated\nwhen you use the `go' debugger command.\n===========================================================\n\n(c04.adc): WOW64 breakpoint - code 4000001f (first chance)\nFirst chance exceptions are reported before any exception handling.\nThis exception may be expected and handled.\n*** ERROR: Symbol file could not be found.  Defaulted to export symbols for C:\\Windows\\syswow64\\verifier.dll -\nverifier_74130000!VerifierStopMessage+0x1f8:\n7413ba58 cc              int     3\n[IP-0A486195\\Administrator (tcp 10.72.97.149:52535)] 0:000:x86&gt; k\nChildEBP RetAddr\nWARNING: Stack unwind information not available. Following frames may be wrong.\n0034f7d4 74139e69 verifier_74130000!VerifierStopMessage+0x1f8\n0034f838 7413a22a verifier_74130000!VerifierDisableFaultInjectionExclusionRange+0x3f19\n0034f894 7413a742 verifier_74130000!VerifierDisableFaultInjectionExclusionRange+0x42da\n0034f8b4 741390d3 verifier_74130000!VerifierDisableFaultInjectionExclusionRange+0x47f2\n0034f8d8 77e31534 verifier_74130000!VerifierDisableFaultInjectionExclusionRange+0x3183\n0034f920 77deaba1 ntdll32!RtlpNtEnumerateSubKey+0x4937\n0034fa14 77d93492 ntdll32!RtlUlonglongByteSwap+0xd781\n*** ERROR: Symbol file could not be found.  Defaulted to export symbols for C:\\Windows\\syswow64\\KERNELBASE.dll -\n0034fa34 75a5537d ntdll32!RtlImageNtHeader+0x30e\n*** WARNING: Unable to verify checksum for condor_starter.exe\n0034fa7c 01356636 KERNELBASE!LocalFree+0x27\n0034fac8 012cdf6a condor_starter!perm::set_acls+0x2a6 [c:\\condor\\execute\\dir_19152\\userdir\\src\\condor_utils\\perm.windows.cpp @ 884]\n0034fbb0 012dc2c0 condor_starter!CStarter::createTempExecuteDir+0x1ea [c:\\condor\\execute\\dir_19152\\userdir\\src\\condor_starter.v6.1\\basestarter.cpp @ 1862]\n0034fc28 012c836e condor_starter!JICShadow::init+0x190 [c:\\condor\\execute\\dir_19152\\userdir\\src\\condor_starter.v6.1\\jic_shadow.cpp @ 216]\n0034fc38 012f04be condor_starter!CStarter::Init+0x2ae [c:\\condor\\execute\\dir_19152\\userdir\\src\\condor_starter.v6.1\\basestarter.cpp @ 233]\n0034fc60 01352da6 condor_starter!main_init+0x6e [c:\\condor\\execute\\dir_19152\\userdir\\src\\condor_starter.v6.1\\starter_v61_main.cpp @ 285]\n0034fd28 01442f36 condor_starter!dc_main+0x1316 [c:\\condor\\execute\\dir_19152\\userdir\\src\\condor_daemon_core.v6\\daemon_core_main.cpp @ 2772]\n*** ERROR: Symbol file could not be found.  Defaulted to export symbols for C:\\Windows\\syswow64\\kernel32.dll -\n0034fd68 7752336a condor_starter!__tmainCRTStartup+0xfd [f:\\dd\\vctools\\crt_bld\\self_x86\\crt\\src\\crtexe.c @ 536]\n0034fd74 77d9bf32 kernel32!BaseThreadInitThunk+0x12\n0034fdb4 77d9bf05 ntdll32!RtlInitializeExceptionChain+0x63\n0034fdcc 00000000 ntdll32!RtlInitializeExceptionChain+0x36\n[IP-0A486195\\Administrator (tcp 10.72.97.149:52535)] 0:000:x86&gt; kd\n</pre></div>\n\n\n<p>and the <code>StarterLog</code> shows\n\n</p><p></p><div class=\"verbatim\">\n<pre>07/17/14 20:53:08 ******************************************************\n07/17/14 20:53:08 ** condor_starter.exe (CONDOR_STARTER) STARTING UP\n07/17/14 20:53:08 ** C:\\Condor\\bin\\condor_starter.exe\n07/17/14 20:53:08 ** SubsystemInfo: name=STARTER type=STARTER(8) class=DAEMON(1)\n07/17/14 20:53:08 ** Configuration: subsystem:STARTER local:&lt;NONE&gt; class:DAEMON\n07/17/14 20:53:08 ** $CondorVersion: 8.2.1 Jun 27 2014 BuildID: 256063 $\n07/17/14 20:53:08 ** $CondorPlatform: x86_64_Windows8 $\n07/17/14 20:53:08 ** PID = 3116\n07/17/14 20:53:08 ** Log last touched time unavailable (No such file or directory)\n07/17/14 20:53:08 ******************************************************\n07/17/14 20:53:08 Using config source: C:\\Condor\\condor_config\n07/17/14 20:53:08 Using local config sources:\n07/17/14 20:53:08    C:\\condor_local/condor_config.local\n07/17/14 20:53:08    Z:\\condor_local/condor_config.local\n07/17/14 20:53:08 config Macros = 205, Sorted = 204, StringBytes = 6671, TablesBytes = 5768\n07/17/14 20:53:08 CLASSAD_CACHING is OFF\n07/17/14 20:53:08 Daemon Log is logging: D_ALWAYS:2 D_ERROR\n07/17/14 20:53:08 Not using shared port because USE_SHARED_PORT=false\n07/17/14 20:53:08 DaemonCore: command socket at &lt;10.72.97.149:52316&gt;\n07/17/14 20:53:08 DaemonCore: private command socket at &lt;10.72.97.149:52316&gt;\n07/17/14 20:53:08 Setting maximum accepts per cycle 8.\n07/17/14 20:53:08 Setting maximum reaps per cycle 8.\n07/17/14 20:53:08 Will use UDP to update collector ip-10-63-28-166.ec2.internal &lt;10.63.28.166:9618&gt;\n07/17/14 20:53:08 Not using shared port because USE_SHARED_PORT=false\n07/17/14 20:53:08 GLEXEC_JOB not supported on this platform; ignoring\n07/17/14 20:53:08 Entering JICShadow::receiveMachineAd\n07/17/14 20:53:08 Communicating with shadow &lt;10.63.28.166:37892?noUDP&gt;\n07/17/14 20:53:08 Shadow version: $CondorVersion: 8.2.1 Jun 27 2014 BuildID: 256063 $\n07/17/14 20:53:08 Submitting machine is \"ip-10-63-28-166.ec2.internal\"\n07/17/14 20:53:08 Instantiating a StarterHookMgr\n07/17/14 20:53:08 Job does not define HookKeyword, not invoking any job hooks.\n07/17/14 20:53:08 setting the orig job name in starter\n07/17/14 20:53:08 setting the orig job iwd in starter\n07/17/14 20:53:08 ShouldTransferFiles is \"YES\", transfering files\n07/17/14 20:53:08 init_user_ids: want user 'nobody@.', current is '(null)@(null)'\n07/17/14 20:53:08 Using dynamic user account.\n07/17/14 20:53:08 dynuser: Re-enabling account (condor-slot1)\n07/17/14 20:53:08 dynuser::createuser(condor-slot1) successful\n07/17/14 20:53:08 perm::init() starting up for account (condor-slot1) domain (NULL)\n07/17/14 20:53:08 perm::init: Found Account Name condor-slot1\n</pre></div>\n\n\n<p></p><hr/>\n<em>2014-Jul-17 21:24:59 by johnkn:</em> <br/>\n\nthe code at src\\condor_utils\\perm.windows.cpp line 882 is\n\n<p></p><div class=\"code\">\n<pre class=\"code\">\t// clean up our memory.\n\tLocalFree(oldDACL);\n\tLocalFree(newDACL);\n</pre></div>\n\n\n<p>And sure enough oldDACL is not a pointer to the start of a heap allocation. The mystery is why this code doesn't crash in VS2008.\n\n</p><p></p><hr/>\n<em>2014-Aug-06 15:24:49 by tannenba:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>Looks good.  I am just committing a small change that adds some\ncomments in the code to help future folks understand the crazy structs\nreturned by Windows.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Aug-06 16:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40870\">[40870]</a></span>: Add some comments to help understand memory model w/ DACLS. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4467\" title=\"starter heap corruption on windows while creating execute dir\">#4467</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Jul-21 10:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40710\">[40710]</a></span>: add 8.2.2 version history item <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4467\" title=\"starter heap corruption on windows while creating execute dir\">#4467</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Jul-18 10:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40697\">[40697]</a></span>: fix for starter crash while creating an execute dir on Windows <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4467\" title=\"starter heap corruption on windows while creating execute dir\">#4467</a></span> ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-Aug-06 15:25", "status": "resolved", "created": "2014-Jul-17 21:15", "fixed_version": "2014-Jul-17 21:15", "broken_version": "v080200", "priority": "2", "subsystem": "DaemonsExecNode", "assigned_to": "tannenba", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "users", "visibility": "public", "notify": "", "due_date": ""}