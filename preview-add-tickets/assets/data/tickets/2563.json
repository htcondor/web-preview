{"id": 2563, "title": "Ticket #2563: bug in startd alive protocol when there are communication failures", "description": "<blockquote>\nCommunication failure during the startd-&gt;schedd alive protocol can cause the startd to kill the job, because it incorrectly determines that the claim is no longer recognized by the schedd.  I have observed this actually happen to jobs in the Wisconsin CMS T2.\n\n<p>startd log:\n</p><div class=\"verbatim\">\n<pre>10/19/11 12:07:20 Calling Handler &lt;Alive to schedd &lt;128.104.29.235:54791&gt;&gt; (3)\n10/19/11 12:07:20 slot1: Received Alive response of -1 from schedd &lt;128.104.29.235:54791&gt; job 1.0\n10/19/11 12:07:20 slot1: State change: claim no longer recognized by the schedd - removing claim\n</pre></div>\n\n\n<p>schedd log, showing a timeout when reading a message from the startd:\n</p><div class=\"verbatim\">\n<pre>10/19/11 12:07:15 (pid:93969) Received TCP command 441 (ALIVE) from unauthenticated@unmapped &lt;128.104.29.235:55161&gt;, access level READ\n10/19/11 12:07:15 (pid:93969) Calling HandleReq &lt;receive_startd_alive&gt; (0) for command 441 (ALIVE) from unauthenticated@unmapped &lt;128.104.29.\n235:55161&gt;\n10/19/11 12:07:16 (pid:93969) condor_read(): timeout reading 5 bytes from &lt;128.104.29.235:55161&gt;.\n10/19/11 12:07:16 (pid:93969) IO: Failed to read packet header\n10/19/11 12:07:16 (pid:93969) Received startd keepalive for unknown claimid #...\n10/19/11 12:07:16 (pid:93969) Return from HandleReq &lt;receive_startd_alive&gt; (handler: 1.000s, sec: 0.001s, payload: 0.000s)\n</pre></div>\n\n\n<p>The schedd command handler receive_startd_alive is not correctly detecting the error.  It is going ahead and processing the command with claim_id=NULL.  It therefore sends back a negative response to the startd, indicating that the claim is no longer recognized by the schedd.\n\n</p><p>How can this be?  Why does the following code not detect the communication failure?\n\n</p><p></p><pre>    s-&gt;get_secret(claim_id);    // must free this; CEDAR will malloc cuz claimid=NULL\n    if ( !s-&gt;end_of_message() ) {\n        if (claim_id) free(claim_id);\n        return FALSE;\n    }\n</pre>\n\n<p>The answer is that end_of_message() is returning true, because of the following code in end_of_message():\n\n</p><p></p><pre>            if ( allow_empty_message_flag ) {\n                allow_empty_message_flag = FALSE;\n                return TRUE;\n            }\n</pre>\n\n<p>allow_empty_message_flag hides the error!  It basically makes the first end_of_message() after receipt of a command an unreliable indicator of success.\n\n</p><p>A fix for this specific case would be to check the return value of s-&gt;get_secret().  I am making that change for 7.6.\n\n</p><p>But can we do better?  I think so.  If any attempt to read from the socket automatically cleared the allow_empty_message_flag, then the schedd code would have correctly detected the error.  I think this change should be made in 7.7, but, arguably, it could go into 7.6 instead.\n\n</p><p>Another issue raised by this incident is that the receive_startd_alive command handler is getting called without doing a non-blocking wait for the command payload to arrive.  In 7.7, commands can be registered so that <code>DaemonCore</code> does a non-blocking wait, so in 7.7, I will use that mechanism for this command.  In addition, we should probably not set allow_empty_message_flag for commands that are registered in this way, because we know that they expect to receive data.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Oct-19 14:59:31 by danb:</em> <br/>\n\nI made the very specific fix in 7.6.4: <span class=\"chng\"><a href=\"chngview?cn=27897\">[27897]</a></span>.  The more general fixes have all been done in the master branch.\n\n<p></p><hr/>\n<em>2011-Oct-19 15:40:01 by bbockelm:</em> <br/>\n\nReported the same issue here for the Nebraska CMS T2 for glideinWMS jobs:\n\n<p><a class=\"external\" href=\"https://savannah.cern.ch/support/?124115\">https://savannah.cern.ch/support/?124115</a>\n\n</p><p>(ignore the CCB issue, look lower in the ticket)\n\n</p><p></p><hr/>\n<em>2012-Mar-13 15:29:44 by tannenba:</em> <br/>\n\n<strong>CODE REIVEW</strong>\n\n<p>Looks good, thanks for the patch.  Resolving.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-19 14:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27902\">[27902]</a></span>: Documented fix for startd-&gt;schedd alive protocol bug. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2563\" onclick=\"get_ticket_and_populate_wrapper('2563'); return false;\" title=\"bug in startd alive protocol when there are communication failures\">#2563</a></span> ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2563\" onclick=\"get_ticket_and_populate_wrapper('2563'); return false;\" title=\"bug in startd alive protocol when there are communication failures\">#2563</a></span> ===VersionHistory:Complete===  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-19 14:32</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27897\">[27897]</a></span>: Detect failure to receive claim_id in startd-&gt;schedd alive protocol. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2563\" onclick=\"get_ticket_and_populate_wrapper('2563'); return false;\" title=\"bug in startd alive protocol when there are communication failures\">#2563</a></span> The problem is that end_of_message() alone is not a reliable indicator of success, due to allow_empty_message_flag.  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-19 14:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27895\">[27895]</a></span>: Clear allow_empty_message_flag when there is an attempt to read data. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2563\" onclick=\"get_ticket_and_populate_wrapper('2563'); return false;\" title=\"bug in startd alive protocol when there are communication failures\">#2563</a></span> Also, get rid of muddy semantics of allow_empty_message_flag. Previously, it would both allow a missing message and ignore trailing junk in a message.  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-19 14:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27896\">[27896]</a></span>: Register schedd commands with non-blocking wait for command message. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2563\" onclick=\"get_ticket_and_populate_wrapper('2563'); return false;\" title=\"bug in startd alive protocol when there are communication failures\">#2563</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-19 14:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27894\">[27894]</a></span>: Avoid setting allow_empty_message_flag when we know the command has a payload. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2563\" onclick=\"get_ticket_and_populate_wrapper('2563'); return false;\" title=\"bug in startd alive protocol when there are communication failures\">#2563</a></span>  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2012-Mar-13 15:31", "status": "resolved", "created": "2011-Oct-19 13:20", "fixed_version": "2011-Oct-19 13:20", "broken_version": "v070600", "priority": "2", "subsystem": "", "assigned_to": "tannenba", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "dan@hep.wisc.edu,tannenba@cs.wisc.edu,gthain@cs.wisc.edu", "due_date": ""}