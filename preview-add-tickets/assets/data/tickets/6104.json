{"id": 6104, "title": "Ticket #6104: condor_update_machine_ad", "description": "<blockquote>\nI noticed a few things about <code>condor_update_machine_ad</code> as a result of recent posts to condor-users.  We begin with a bug report about a pair of command-line flags that I'm not at all sure <code>condor_update_machine_ad</code> was supposed to have: <code>-name</code> and <code>-pool</code>.\n\n<p>The intent of the tool, as recorded in its man page, is to allow an administrator, after fixing an offline universe, to inform the startd about that universe being online.  In this role, there's no need for <code>-name</code> or <code>-pool</code>, because the admin is already running commands locally (probably).  Of course, the server-side code is transport-agnostic, so limiting the client only delays any abuse of the protocol.\n\n</p><p>That would be sufficient reason to convert <code>condor_update_machine_ad</code> to require an authenticated ADMIN-level connection.  Adding the ability to directly adjust the startd ad from another machine is probably not a concern at this level of privilege.  Conversely, the indirect ability to modify the startd ad, via <code>condor_config_val -set</code> and <code>condor_config_val -rset</code> can be specifically rejected or granularly constrained by the configuration of the startd (and this more limited form of administrator privilege granted to a remote connection).  Since the change is supposed to persist -- that is, survive across update cycles -- until changed equally persistently, e.g., by the failure of a VM universe job to launch, <code>condor_config_val -rset</code> may be the better example.\n\n</p><p>Additionally, we need to investigate what protections, if any, are provided or necessary (e.g., not changing the Activity).  Since we face the same problem with startd cron, that seems like a good place to hook in.  However, we have to be careful to ensure that updates from <code>condor_update_machine_ad</code> both (a) still persist and (b) are run last, so that they can't be changed by the startd cron jobs.  (Under the argument that the admin who runs <code>condor_update_machine_ad</code> by hand does not want the automatic background tasks of the startd cron jobs undoing her good work.)\n\n</p><p>It would be consistent with other HTCondor tools but still surprising and disappointing if\n</p><div class=\"term\">\n<pre class=\"term\">$ condor_update_machine_ad -name slot3@exec-13.batlab.org update.ad\n</pre></div>\n\nchanged every slot on exec-13.batlab.org.  Since the start cron jobs can already update individual slots (or, more usefully, each slot of a specific slot type, or each slot matching a constraint), this surprise shouldn't be too hard to avoid; it would also make the tool more powerful.\n\n<p>A prospective usage scenario for running <code>condor_update_machine_ad</code> remotely is one in which a centralized resource (e.g., a fileserver) is being used to different time-varying degrees by a subset of the jobs.  Rather than update the attempting to compute the usage of each job, it may be easier to query the fileserver (or the quota system) to determine how much space is left.  By propagating this information to the startds, better scheduling decisions could be made (without having to query the centralized resource from every execute node).</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2017-Jan-20 17:42", "status": "new", "created": "2017-Jan-20 17:42", "fixed_version": "2017-Jan-20 17:42", "broken_version": "", "priority": "4", "subsystem": "DaemonsExecNode", "assigned_to": "", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}