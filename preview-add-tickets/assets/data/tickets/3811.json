{"id": 3811, "title": "Ticket #3811: Jobs can leave queue without writing relevant event to user job log", "description": "<blockquote>\nMany job management tools that submit jobs to HTCondor use the user job log to monitor the status of those jobs, particularly to detect when jobs leave the queue (whether because they complete or are removed). Thus, it's very important that an \"abort\" or \"terminate\" event be written to the job log before the schedd removes the job from the queue.\n\n<p>Unfortunately, there are several situations where writing to the job log fails but the schedd still lets the job leave the queue. We have seen this happen several times in the past month in the BaTLab, where the disk holding the job logs filled up but the disk holding the spool directory still had room. Numerous Metronome jobs left the queue, but DAGMan thought they were still queued.\n\n</p><p>This problem applies to both the regular user job log and the DAGMan job log. Failure to write to the global event log was previously deemed to be unimportant (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2858\" onclick=\"get_ticket_and_populate_wrapper('2858'); return false;\" title='Unwriteable global event log prevents writing to \"normal\" job logs'>#2858</a></span>).\n\n</p><p>Here are some cases where this can happen:\n\n</p><p></p><ul>\n<li>In the schedd, if opening or writing to the job log fails, completed scheduler and noop jobs are still allowed to leave the queue. <code>Scheduler::InitializeUserLog()</code> returns NULL when no logging required and when opening a log file fails.\n<code>Scheduler::scheduler_univ_job_leave_queue()</code> and <code>count()</code> ignore the return value of <code>Scheduler::WriteTerminateToUserLog()</code>.\n\n<p></p></li><li>In the schedd, if opening or writing to the job log fails, any removed job is still allowed to leave the queue.\n<code>Scheduler::InitializeUserLog()</code> returns NULL when no logging required and when opening a log file fails.\nAll callers of <code>Scheduler::WriteAbortToUserLog()</code> ignore its return value.\n\n<p></p></li><li>In the gridmanager, if opening or writing to the job log fails, any completed or removed job is still allowed to leave the queue.\n<code>InitializeUserLog()</code> ignores any failure returned by <code>WriteUserLog::initialize()</code>.\nAny subsequent calls to <code>WriteUserLog::writeEvent()</code> will return success without trying to write anything.\n<code>BaseJob::DoneWithJob()</code> ignores any failures returned by <code>WriteTerminateEventToUserLog()</code> or <code>WriteAbortEventToUserLog()</code>.\n</li></ul>\n\n<p>There are also some problems with writing the submit event:\n\n</p><p></p><ul>\n<li>In condor_submit, when talking to an old schedd, if opening or writing to the job log fails, the job is still submitted and can run.\nWhen a logging failure is detected in <code>log_submit()</code>, all that's done is to print an error to stderr.\n\n<p></p></li><li>In the schedd, if opening or writing to the job log fails, the job is still submitted and can run.\n<code>Scheduler::InitializeUserLog()</code> returns NULL when no logging required and when opening a log file fails.\nThe return value of <code>Scheduler::WriteSubmitToUserLog()</code> is ignored.\n</li></ul>\n\n<p>Code to properly initialize a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WriteUserLog\" title=\"Write User Log\">WriteUserLog</a></span> object based on information from a job ad is replicated in 5 or 6 locations with different behavior. These should be consolidated. (This is the topic of <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5329\" onclick=\"get_ticket_and_populate_wrapper('5329'); return false;\" title=\"Unify user log event writing code\">#5329</a></span>)</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2019-Aug-13 09:42", "status": "new", "created": "2013-Jul-24 15:01", "fixed_version": "2013-Jul-24 15:01", "broken_version": "v080000", "priority": "3", "subsystem": "DaemonsSubmitNode", "assigned_to": "jfrey", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "batlab", "visibility": "public", "notify": "tstclair@redhat.com tannenba@cs.wisc.edu", "due_date": ""}