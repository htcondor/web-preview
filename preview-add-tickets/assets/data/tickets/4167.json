{"id": 4167, "title": "Ticket #4167: VM universe assumption shared filesystems breaks compressed FT plugin", "description": "<blockquote>\nIf you submit a VM universe job which mentions <code>base.img</code> in the <code>vm_disk</code> parameter, and you don't specify <code>base.img</code> in <code>transfer_input_files</code>, <code>condor_submit</code> adds a requirement that the submit and execute nodes share a filesystem.  I think that's more of a heroic assumption than a user-friendly feature, but at least the solution is clear: mention your input disks in <code>transfer_input_files</code>.  However, this breaks down when your URLs don't include (after the last slash, apparently) the filename in question, e.g.:\n<div class=\"code\">\n<pre class=\"code\">transfer_input_files = httpz://host.tld/base.img.gz</pre></div>\n\n\n<p>This has cause TimC grief in CHTC.  Brainstorming:\n\n</p><p></p><ol>\n<li>Require a convention-maintaining remap syntax for file-transfer plugins (if the URL doesn't match the convention).  Pros: only the new compression plugin requires changes.  If generally implemented (e.g., <code>transfer_input_remaps</code>), could be useful.  Con: Rather verbose (especially if it becomes as common as I'd expect).  If generally implemented, could be super-confusing, because some plugins would do their own remaps and others wouldn't.  A specific solution may look like:\n<div class=\"code\">\n<pre class=\"code\">transfer_input_files = httpz://host.tld/base.img.gz?basename=./base.img</pre></div>\n\n</li></ol>\n\n<p>Another option might be something like:\n</p><div class=\"code\">\n<pre class=\"code\">transferred_input_files = base.img\ntransfer_input_files = ftp://host.tld/vm-image-generator?param=$(PROC)\n</pre></div>\n\nbut this is also clumsy.\n\n<p></p><ol>\n<li>Decline to assume a shared filesystem in VM universe.  Pro: Neatly solves this problem.  Cons: May mean missing out on opportunities to help our users notice problems with their jobs.  May require add <code>assume_shared_filesystem</code> or similar (so that users could request the old behavior).  Not backwards-compatible.\n\n<p></p></li><li>Add a flag (<code>assume_shared_filesystem</code>) and require users using the compress plugin (or others, in the future) unless it's set to false.  Pros: backwards-compabitible, concise.  Cons: Annoying and non-obvious.</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2014-Jan-21 14:37:09 by tlmiller:</em> <br/>\n\nJaimeF will be adding some documentation here (and hopefully in the manual) about what the VM universe currently does, with respect to file transfer, with the vm_disk filenames.\n\n<p></p><hr/>\n<em>2014-Jan-21 14:39:44 by tlmiller:</em> <br/>\n\nYou can work around part of this assumption by adding a null (tautological?) requirement that mentions <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=FileSystemDomain\" title=\"File System Domain\">FileSystemDomain</a></span>, but the VM universe job will then fail looking for the disk image that's not mentioned in transfer_input_files in a directory based on the submit node.\n\n<p></p><hr/>\n<em>2014-Jan-21 15:03:02 by tlmiller:</em> <br/>\n\nTimC has a reasonable suggestion:\n\n<p>(4) Everybody except the starter (and/or VM GAHP) ignore the contents of the vm_disk filename field (the exceptions may need to know to convert relative paths to absolute paths by prepending the location of the (execute-side) sandbox for libvirt API reasons).  Pros: Simple, easy to explain, flexible.  (Works for a pre-staged or shared-FS base image with a delta disk.)  Cons: Makes it impossible for HTCondor to try and warn the user about a missing file.\n\n</p><p></p><hr/>\n<em>2014-Feb-25 16:44:59 by tlmiller:</em> <br/>\n\nComplication: doing anything other than a flag in the submit file will break old submit files which assume a shared filesystem.  The following is a quick hack that seems to address the problem, albeit in a user-hostile way.\n<div class=\"code\">\n<pre class=\"code\">diff --git a/src/condor_submit.V6/submit.cpp b/src/condor_submit.V6/submit.cpp\nindex a144a28..36601e1 100644\n--- a/src/condor_submit.V6/submit.cpp\n+++ b/src/condor_submit.V6/submit.cpp\n@@ -7980,6 +7980,13 @@ bool make_vm_file_path(const char *filename, MyString&amp; fi\n                }\n        }\n\n+       // File-transfer plugins can confuse us, so if the user says to,\n+       // trust them and don't require a shared FS -- or change the filename.\n+       char * vm_disk_trusted = condor_param( \"vm_disk_trusted\" );\n+       if( isTrue( vm_disk_trusted ) ) {\n+               return true;\n+       }\n+\n        // This file will not be transferred\n        // filename should have absolute path\n        fixedname = full_path(fixedname.Value());\n</pre></div>\n\n\n<p></p><hr/>\n<em>2014-Feb-26 14:07:52 by tlmiller:</em> <br/>\n\nSo if we're OK with breaking submit files with relative paths on a shared file system (e.g., submitting from the base image's directory), the good news -- as TimC points out -- is that the fix for users with broken jobs is relatively simple - just list the files in question in transfer_input_files.  This may make HTCondor look a little stupider, but it's for a good cause. :)\n\n<p>(Also, TimC thinks a flag that changes the behavior of vm_disk would be less confusing than having another very similar attribute that behaves differently.)\n\n</p><p></p><hr/>\n<em>2014-May-15 17:10:53 by tlmiller:</em> <br/>\n\nPatch applied in V8_1-trustVMDisk-branch (in git repo for safekeeping).\n\n<p></p><hr/>\n<em>2016-Apr-25 16:10:50 by jfrey:</em> <br/>\n\nFor 8.5.5, no new attributes. Just have condor_submit stop rewriting vm_disk, xen_kernel, and xen_initrd. Also, condor_submit no longer makes any assumptions about the need for a shared filesystem based on whether files are mentioned in transfer_input_files.\n\n<p>Filenames in these attributes need to be valid on the execute machine: either absolute paths, or paths relative to the execute directory.\n\n</p><p></p><hr/>\n<em>2016-Apr-28 13:54:13 by cat:</em> <br/>\n\nJaime, I do not understand your recent comment. In the case where transfer_input_files mentions a compressed filename ending in, say, .tgz but the actual sandbox filename does not include that suffix (after decompression), will things work now?\n\n<p></p><hr/>\n<em>2016-Apr-29 09:48:41 by jfrey:</em> <br/>\n\nYes, the scenario you describe will work now. Condor no longer examines the filenames in the vm_disk, xen_kernel, and xen_initrd submit attributes before it's time to launch the vm. At that time, the filenames need to point to valid files on the execute machine. How those files come to be there is up to the user (pre-staged, transferred normally, transferred compressed and extracted via a plugin, etc). There's no longer any comparison with filenames in transfer_input_files or rewriting of file paths.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"review\" href=\"/tickets?ticket=6132\" onclick=\"get_ticket_and_populate_wrapper('6132'); return false;\" title=\"Whitespace significant in VMPARAM_vm_disk\">#6132</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nWhitespace significant in VMPARAM_vm_disk</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-May-05 12:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48361\">[48361]</a></span>: Docs for changes to vm_disk and company. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4167\" onclick=\"get_ticket_and_populate_wrapper('4167'); return false;\" title=\"VM universe assumption shared filesystems breaks compressed FT plugin\">#4167</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Apr-25 15:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48281\">[48281]</a></span>: Remove useless check about xen files and checkpointing. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4167\" onclick=\"get_ticket_and_populate_wrapper('4167'); return false;\" title=\"VM universe assumption shared filesystems breaks compressed FT plugin\">#4167</a></span> This check doesn't appear necessary. We don't detect whether files are transferred, and we don't turn arguments into an a cdrom iso (we just write them to a file).  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Apr-25 15:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48280\">[48280]</a></span>: Do not mangle xen/kvm filenames in condor_submit. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4167\" onclick=\"get_ticket_and_populate_wrapper('4167'); return false;\" title=\"VM universe assumption shared filesystems breaks compressed FT plugin\">#4167</a></span> condor_submit no longer rewrites filenames in vm_disk, xen_kernel, and xen_initrd. It no longer makes decisions about the need for a shared filesystem based on these filenames and their presence in transfer_input files. Now, these filenames need\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2016-May-05 12:08", "status": "resolved", "created": "2014-Jan-17 14:37", "fixed_version": "2014-Jan-17 14:37", "broken_version": "", "priority": "4", "subsystem": "VM", "assigned_to": "jfrey", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "cat@cs.wisc.edu, tlmiller@cs.wisc.edu, jfrey@cs.wisc.edu", "due_date": ""}