{"id": 3124, "title": "Ticket #3124: \"pipeFullWrite: Unable to write to fd\" If startd hooks ignore stdin", "description": "<blockquote>\nIf the startd is feeding significant input to a hook, and the hook ignores it, the startd will complain with message like this:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">DaemonCore::PidEntry::pipeFullWrite: Unable to write to fd 65590 (errno = 32).  Aborting write attempts.\n</pre></div>\n\n\n<p>This is not good. It's noise in the log file.  If one decided to investigate it, it's not obvious what the source is.  You can't even determine what the read FD is.  (The FD is obfuscated to discourage other sections of code from doing overly clever things with it. Subtract 65536 to find the real FD.)\n\n</p><p>Should hooks be allowed to ignore, not even reading, stdin?\n</p><ul>\n<li>If so, we shouldn't complain at all.  (Or if we must, downgrade it to D_FULLDEBUG)\n</li><li>If not\n<ul>\n<li>we should document that it isn't allowed\n</li><li>we should provide a more useful error message explaining the problem.\n</li></ul>\n</li></ul>\n\n<p>To reproduce:\n</p><ol>\n<li>Create a simple fetchwork hook:<div class=\"code\">\n<pre class=\"code\">#! /usr/bin/perl -w\nuse strict;\n\nprint &lt;&lt;END;\nCmd=\"/bin/sleep\"\nArgs=\"3600\"\nOwner=\"adesmet\"\nJobUniverse=5\nRequirements=TRUE\nRequestCpus=1\nRequestMemory=8\nRequestDisk=1024\nEND\n\nexit 0;\n</pre></div>\n\n</li><li>Add the following to your configuration file, changing the path as appropriate:<div class=\"code\">\n<pre class=\"code\">STARTD_JOB_HOOK_KEYWORD = ALAN\nALAN_HOOK_FETCH_WORK=/scratch/adesmet/V7_8-branch/release_dir/hooks/fetch-work-infinite\nFetchWorkDelay=1\n</pre></div>\n\n</li><li>Start up Condor.\n</li><li>Check <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StartLog\" title=\"Start Log\">StartLog</a></span>, observe regular complaints similar to:<div class=\"code\">\n<pre class=\"code\">07/11/12 15:53:17 DaemonCore::PidEntry::pipeFullWrite: Unable to write to fd 65537 (actually 1) (errno = 32).  Aborting write attempts.\n</pre></div>\n</li></ol>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2012-Jul-11 16:25", "status": "new", "created": "2012-Jul-11 15:54", "fixed_version": "2012-Jul-11 15:54", "broken_version": "v070801", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}