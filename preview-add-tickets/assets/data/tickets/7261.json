{"id": 7261, "title": "Ticket #7261: Late materialization submit fails when +key used itemdata dict", "description": "<blockquote>\nWhen submitting a job using queue_with_itemdata() and using max_materialize (with the python bindings), it fails with.\n\n<p></p><div class=\"code\">\n<pre class=\"code\">Traceback (most recent call last):\n  File \"submit_min.py\", line 39, in &lt;module&gt;\n    submitRes = sub.queue_with_itemdata(txn, 1, iter(jobAds))\nRuntimeError: Failed to send job factory for max_materilize.\n</pre></div>\n\n\n<p>This doesn't seem to happen if e.g.: setQArgs is used instead for a similar purpose.\nAlso, note the typo ( \"materilize\" rather than \"materialize\") in the schedd message.\n\n</p><p>For reference, here is a python example that fails (unless I comment the \"max_materialize\" line):\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">import classad\nimport htcondor\n\nsub = htcondor.Submit(\"\"\"\n        universe = vanilla\n        executable = test.sh\n        arguments = 3\n        max_materialize = 1\n        Output = out.$(Cluster)-$(Process)\n        Log = log.$(Cluster).log\n        \"\"\")\n\n\njobAds = []\nad = {}\nfor name in (\"Job1\", \"Job2\"):\n    ad['+JobName'] = classad.quote(name)\n    jobAds.append(ad)\n\nwith schedd.transaction() as txn:\n    submitRes = sub.queue_with_itemdata(txn, 1, iter(jobAds))\n</pre></div>\n\n\n<p>Also for reference, here is a python example using setQArgs that does work:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">import classad\nimport htcondor\nsub = htcondor.Submit(\"\"\"\n        universe = vanilla\n        executable = test.sh\n        arguments = 3\n        max_materialize = 1\n        Output = out.$(Cluster)-$(Process)\n        Log = log.$(Cluster)\n        \"\"\")\n\n\nsub['+JobName'] = '$(Name)'\nsub.setQArgs('Name in (\"Job1\" \"Job2\")')\n\nschedd = htcondor.Schedd()\nwith schedd.transaction() as txn:\n        cluster = sub.queue(txn)\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2019-Sep-16 10:22:05 by johnkn:</em> <br/>\n\nThe problem is that +JobName is not a valid key for the itemdata dictionary.  We should be catching that in the python bindings, but we aren't so it gets over to the schedd and then fails to parse.\n\n<p>The schedd sees this </p><div class=\"code\">\n<pre class=\"code\">Queue +JobName from &lt;file&gt;</pre></div>\n which isn't valid.  When you use QArgs, you also change this to use <code>name</code> on the queue line, so the Schedd sees this <div class=\"code\">\n<pre class=\"code\">Queue name from &lt;file&gt;</pre></div>\n which is valid and so it works.  you could also have used <code>My.JobName</code> instead of <code>+JobName</code>\n\n<p></p><hr/>\n<em>2019-Sep-16 10:22:29 by karpel:</em> <br/>\n\nThe below works.\n\n<p>Incidentally, in your first example, you re-use the same dictionary in the itemdata. This will result in a list of itemdata containing the same dictionary over and over, so they'll all have the last name you gave. Each item must be its own dictionary for what you want to do to work.\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">import classad\nimport htcondor\n\nsub = htcondor.Submit(\"\"\"\n        universe = vanilla\n        executable = test.sh\n        arguments = 3\n        max_idle = 1\n        output = out.$(Cluster)-$(Process)\n        log = log.$(Cluster).log\n        \"\"\")\n\nitemdata = []\nfor name in (\"Job1\", \"Job2\"):\n    itemdata.append({\"My.JobName\": classad.quote(name)})\n\nschedd = htcondor.Schedd()\nwith schedd.transaction() as txn:\n    submitRes = sub.queue_with_itemdata(txn, 1, iter(itemdata))\n</pre></div>\n\n\n<p></p><hr/>\n<em>2019-Sep-17 08:14:57 by khurtado:</em> <br/>\n\njohnkn: Thanks, I can confirm using My.JobName rather than +JobName works.\n\n<p>karper: Indeed, thanks. That was a quick example to isolate the problem, where I ended up making that mistake.\n\n</p><p>Question though:\nWhile John's answer makes sense to me, why does +JobName works (after moving \"ad = {}\" inside the loop for example,  when there is no \"max_materialize/max_idle\" line? Shouldn't it give the same error?\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">$ cat submit_items.py\nimport classad\nimport htcondor\n\nsub = htcondor.Submit(\"\"\"\n\tuniverse = vanilla\n\texecutable = test.sh\n\targuments = 3\n        Output = out.$(Cluster)-$(Process)\n        Log = log.$(Cluster)\n\t\"\"\")\n\nschedd = htcondor.Schedd()\njobAds = []\nfor name in (\"Job1\", \"Job2\"):\n    ad = {}\n    ad['+JobName'] = classad.quote(name)\n    jobAds.append(ad)\n\nwith schedd.transaction() as txn:\n    submitRes = sub.queue_with_itemdata(txn, 1, iter(jobAds))\n    print(\"ClusterId: {}\".format(submitRes.cluster()))\n$ python submit_items.py\nClusterId: 2551\n$ condor_q 2551 -af:h ProcId JobName\nProcId JobName\n0      Job1\n1      Job2\n$\n</pre></div>\n\n\n<p></p><hr/>\n<em>2019-Sep-17 14:01:14 by johnkn:</em> <br/>\n\nyes, it should give the same error (in theory).  but it doesn't because it goes through a different code path that happens to automatically convert +JobName to My.JobName.\n\n<p>late materialization actually sends the schedd a QUEUE statement to be parsed, while the old form of submit sends job classad to the schedd.\n\n</p><p></p><hr/>\n<em>2019-Sep-18 07:07:14 by khurtado:</em> <br/>\n\nJohn: Understood. Thank you! I will replace all of my +Attribute lines to use My.Attribute instead and move on.\n\n<p></p><hr/>\n<em>2019-Sep-18 07:22:09 by khurtado:</em> <br/>\n\nWait, while for my case, I'm just going to replace things to use My.Attribute, should this ticket remain with the \"defect\" label, where the bug fix would be to make submission with and without \"max_idle/max_materialize\" behave the same (with respect to how it handles +A -&gt; My.A) to avoid confusion?\n\n<p></p><hr/>\n<em>2019-Sep-24 16:10:37 by johnkn:</em> <br/>\n\nI believe this fix here it to aggressively convert +Attr in to My.Attr at the time members are added to the submit \"dictionary\"\n\n<p>This means that when you do this\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">sub = new Submit()\nsub['+Foo'] = 'bar'</pre></div>\n\n\n<p>what actually happens is this </p><div class=\"code\">\n<pre class=\"code\">sub = new Submit()\nsub['My.Foo'] = 'bar'</pre></div>\n\n\n<p>We will also change the get method to do only-the-fly conversion of <code>+Foo</code> to <code>My.Foo</code>, so that if you try and lookup '+Foo' you will get what you expect.  But + prefixed keys will never appear when you enumerate keys in the submit \"dictionary\"</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-22 14:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58233\">[58233]</a></span>: version history for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7172\" title=\"submit_utils should not create custom resources with leading _ names\">#7172</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7283\" title=\"submit utils should provide a $(SUBMIT_TIME) expansion\">#7283</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7261\" title=\"Late materialization submit fails when +key used itemdata dict\">#7261</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Sep-30 16:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57982\">[57982]</a></span>: Agressively convert +Attr keys to My.Attr keys in python Submit object. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7261\" title=\"Late materialization submit fails when +key used itemdata dict\">#7261</a></span>  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Oct-22 15:01", "status": "resolved", "created": "2019-Sep-16 08:15", "fixed_version": "2019-Sep-16 08:15", "broken_version": "v080902", "priority": "4", "subsystem": "", "assigned_to": "johnkn", "derived_from": "", "creator": "khurtado", "rust": "", "customer_group": "other", "visibility": "public", "notify": "karpel@wisc.edu, johnkn@cs.wisc.edu, bbockelm@morgridge.edu", "due_date": ""}