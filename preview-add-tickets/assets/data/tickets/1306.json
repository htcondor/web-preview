{"id": 1306, "title": "Ticket #1306: Stop/Start daemons on a master reconfig", "description": "<blockquote>\nThere is currently no way to have the master start/stop daemons w/o completely restarting the master.  This can cause a bit system impact if you are trying to add an additional schedd, or other such daemon, to improve scalability.  It would be nice if a reconfig sent to the master would start/stop daemons if DAEMON_LIST has changed.</blockquote>", "remarks": "<blockquote>\n<em>2010-Mar-24 13:21:34 by danb:</em> <br/>\n\nI see the following line with no indent.  Is this just temporary debugging cruft?\n\n<p></p><div class=\"verbatim\">\n<pre>dprintf(D_ALWAYS, \"DAEMON_LIST = %s\\n\", daemon_list);\n</pre></div>\n\n\n<p>The following message is missing the word 'in'.  This predates your patch, but you touched the line ;-)\n\n</p><p></p><div class=\"verbatim\">\n<pre>%s from your DAEMON_LIST is not defined the config file\n</pre></div>\n\n\n<p>Perhaps I am overlooking something, but this patch does not appear to start daemons in the same order as prior to this patch.  Prior to this patch, the order is first SHARED_PORT, then COLLECTOR, then the order as listed in DAEMON_LIST.  (The special case for SHARED_PORT and COLLECTOR is achieved by reordering DAEMON_LIST.)\n\n</p><p>It appears that <code>check_daemon_list()</code> is never called (and never was prior to this patch either).  If so, please get rid of it.\n\n</p><p>In your new code in <code>main_config()</code> that removes/adds new daemons, this all happens inside a conditional block that is only executed if <code>StartDaemons</code> is true.  That doesn't quite make sense to me.  If somebody does condor_off to turn off all daemons (except the master) followed by condor_reconfig, followed by condor_on, does your patch correctly handle changes to DAEMON_LIST?  My guess is no.  From a casual reading, it seems like some of the code there could be shared with the code that initializes daemon_list rather than having two code paths that create daemon objects.\n\n</p><p>This patch touches a lot of code in condor_master.  If condor_master dies, then we are in deep trouble.  I haven't spotted any source of crashes, but I think we should test these changes under valgrind and also do a new coverity run to see if the static analysis catches any new issues.\n\n</p><p></p><hr/>\n<em>2010-Mar-25 10:44:29 by rrati:</em> <br/>\n\nI see the following line with no indent. Is this just temporary debugging cruft?\n\n<p>dprintf(D_ALWAYS, \"DAEMON_LIST = %s\\n\", daemon_list);\n\n</p><p>&gt;&gt; Debugging cruft and removed.\n\n</p><p>The following message is missing the word 'in'. This predates your patch, but you touched the line ;-)\n\n</p><p>%s from your DAEMON_LIST is not defined the config file\n\n</p><p>&gt;&gt; Fixed\n\n</p><p>Perhaps I am overlooking something, but this patch does not appear to start daemons in the same order as prior to this patch. Prior to this patch, the order is first SHARED_PORT, then COLLECTOR, then the order as listed in DAEMON_LIST. (The special case for SHARED_PORT and COLLECTOR is achieved by reordering DAEMON_LIST.)\n\n</p><p>&gt;&gt; The daemons will now be started in the same order as before.\n\n</p><p>It appears that check_daemon_list() is never called (and never was prior to this patch either). If so, please get rid of it.\n\n</p><p>&gt;&gt; Gone.\n\n</p><p>In your new code in main_config() that removes/adds new daemons, this all happens inside a conditional block that is only executed if <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StartDaemons\" title=\"Start Daemons\">StartDaemons</a></span> is true. That doesn't quite make sense to me. If somebody does condor_off to turn off all daemons (except the master) followed by condor_reconfig, followed by condor_on, does your patch correctly handle changes to DAEMON_LIST? My guess is no. From a casual reading, it seems like some of the code there could be shared with the code that initializes daemon_list rather than having two code paths that create daemon objects.\n\n</p><p>&gt;&gt; The original patch wouldn't handle the off, reconfig, on path.  I've reworked the code so that path is handled correctly, and it allowed for more code commonality.\n\n</p><p>This patch touches a lot of code in condor_master. If condor_master dies, then we are in deep trouble. I haven't spotted any source of crashes, but I think we should test these changes under valgrind and also do a new coverity run to see if the static analysis catches any new issues.\n\n</p><p>&gt;&gt; Agreed.\n\n</p><p></p><hr/>\n<em>2010-Mar-29 15:52:54 by danb:</em> <br/>\n\nLooks to me like the Daemon object is leaked when Daemon::StopDaemon() is used to stop it.  Am I wrong?\n\n<p>What happens if MASTER is removed from DAEMON_LIST.  Preferably, it would EXCEPT rather than having undefined behavior via references to Daemons::master ;-)\n\n</p><p>It looks like daemons are only removed if <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StartDaemons\" title=\"Start Daemons\">StartDaemons</a></span> is true at reconfig time.  So if I do condor_off, remove something from DAEMON_LIST, and then do condor_on, will it start up the daemon that I just removed from the list?\n\n</p><p></p><hr/>\n<em>2010-Mar-29 16:46:37 by rrati:</em> <br/>\n\nIf the user does a condor_off, removes daemons but does NOT do a reconfig, then does a condor_on then master will be working off the old config values and any changes made (DAEMON_LIST or otherwise) would be ignored.\n\n<p>I'll test what happens is master is removed from the daemon list.  If it doesn't EXCEPT, I'll make it.\n\n</p><p></p><hr/>\n<em>2010-Mar-29 17:01:56 by danb:</em> <br/>\n\nMy comment about changes to DAEMON_LIST when <code>StartDaemons</code> is false should have read like this: if I do condor_off, remove something from DAEMON_LIST, then do condor_reconfig, and then do condor_on, will it start up the daemon that I just removed from the list?\n\n<p></p><hr/>\n<em>2010-Mar-30 08:10:44 by rrati:</em> <br/>\n\nNo.  If you do a reconfig after a condor_off, the daemon_list will be updated correctly and the condor_on will only start the daemons currently listed in DAEMON_LIST.\n\n<p></p><hr/>\n<em>2010-Mar-30 08:35:05 by rrati:</em> <br/>\n\nWhen MASTER is removed from the daemon_list and then a reconfig is done, the master will still be running.  The master is special cases, and will not be allowed to be shut down part from explicitly stopping the master (kill, condor_off -master, etc).  I've tested removing removing the special casing from master and found that in the above scenario (and all others involving a reconfig), the master will be stopped as any other daemon would be (thus shutting down all daemons).  If condor is attempted to be started again w/o adding MASTER back into DAEMON_LIST, the master will EXCEPT.\n\n<p></p><hr/>\n<em>2010-Mar-30 09:45:15 by danb:</em> <br/>\n\nOk, so if I understand correctly, the reason why off, reconfig, on works is that although daemons that have been removed are still in Daemons::daemon_ptr, they are not listed in \"ordered_daemon_names\".  The only place I see where anything is removed from daemon_ptr is in StopDaemon().  It seems odd that this is only done during reconfig if <code>StartDaemons</code> is true.  Why not just always do it?\n\n<p></p><hr/>\n<em>2010-Mar-30 11:25:29 by rrati:</em> <br/>\n\nOriginally I wasn't stopping the daemons explicitly unless <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StartDaemons\" title=\"Start Daemons\">StartDaemons</a></span> == TRUE because it didn't make sense to process the changes to DAEMON_LIST and stop the removed items if all the daemons were going to be shut down anyway.  Looking at the code, the stopping of daemons allows for the resources used by the daemon class to leak.  I've modified the code to free the resources for daemons that are shut off by changes to DAEMON_LIST.  <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StopDaemon\" title=\"Stop Daemon\">StopDaemon</a></span> is now called every time a reconfig is done.</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/149/master_start_stops_daemons_on_reconfig.patch\">master_start_stops_daemons_on_reconfig.patch</a>\n30201 bytes added by rrati on 2010-Mar-24 15:05:04 UTC.\n<br/>\nThe master will start/stop daemons listed on DAEMON_LIST on a reconfig if DAEMON_LIST has changed since in the configuration (startup or previous reconfig)<br/>\n</li><li><a href=\"attach_get/150/master_start_stops_daemons_on_reconfig.patch\">master_start_stops_daemons_on_reconfig.patch</a>\n29911 bytes added by rrati on 2010-Mar-25 15:45:53 UTC.\n<br/>\nRevised patch based upon feedback.  Daemons are started in the same order they were before these changes, and DAEMON_LIST is updated even if a condor_off was giving previous to a reconfig.<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Mar-30 11:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=17763\">[17763]</a></span>: When deamons are stopped because of a change to DAEMON_LIST, clean up the resources used by those daemons. Added destructor to the daemon class to accomplish the task. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1306\" title=\"Stop/Start daemons on a master reconfig\">#1306</a></span>  (By Robert Rati )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Mar-29 15:36</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=17718\">[17718]</a></span>: The master will now start/stop daemons on a reconfig. Daemons removed from DAEMON_LIST will be stopped before any new daemons are started and remaining daemons are reconfigured. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1306\" title=\"Stop/Start daemons on a master reconfig\">#1306</a></span>  (By Robert Rati )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Mar-30 11:25", "status": "resolved", "created": "2010-Mar-24 10:00", "fixed_version": "2010-Mar-24 10:00", "broken_version": "v070000", "priority": "3", "subsystem": "Daemons", "assigned_to": "rrati", "derived_from": "", "creator": "rrati", "rust": "", "customer_group": "other", "visibility": "public", "notify": "dan@hep.wisc.edu", "due_date": ""}