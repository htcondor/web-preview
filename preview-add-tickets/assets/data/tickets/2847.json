{"id": 2847, "title": "Ticket #2847: core file in a test causes secondary, misleading error", "description": "<blockquote>\nIf a test using CondorTest.pm drops a core file, the code to handle and report that fails.  The code emits a misleading error and terminates prematurely, possibly leading to failure to archive the core file.\n\n<p>To reproduce:\n\n</p><p>Modify <a class=\"file\" href=\"rlog?f=src/condor_tests/job_core_leaveinqueue_van.run\">/src/condor_tests/job_core_leaveinqueue_van.run</a>, inserting the following at the top:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">my $logdir = `condor_config_val LOG`;\nchomp($logdir);\nsystem(\"touch\", \"$logdir/core.fake\");\n</pre></div>\n\n\n<p>Now run the test \"./job_core_leaveinqueue_van.run\". (You'll need to have run \"make tests\" first, and you'll need to do an in-source build, not an out-of-source build.)\n\n</p><p>The output ends:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">12/02/27 13:41:20: CT:Job not in queue as expected\nok\n+ END STDOUT\n+ BEGIN STDERR\nCan not count&lt;/scratch/adesmet/CONDOR_SRC_TEST/src/condor_tests/Cores/core_error_trace&gt;:No such file or directory\n+ END STDERR\n+-------------------------------------------------------------------------------\nExpectation Failed on cmd &lt;./job_core_leaveinqueue-false_van.pl&gt;\n</pre></div>\n\n\n<p>The \"Can not count\" line is the best clue you get that the actual error is \"A core file was created.\"  The message is emitted in CondorTest.pm in CountFileTrace(), called from MoveCoreFile(), called from CoreCheck().  <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CoreCheck\" title=\"Core Check\">CoreCheck</a></span> has detected a core file.  <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MoveCoreFile\" title=\"Move Core File\">MoveCoreFile</a></span> wants to rename the core file by appending _$entries.  $entries is returned by <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CountFileTrace\" title=\"Count File Trace\">CountFileTrace</a></span>, and is the number of lines in \"core_error_trace\".  I believe it's being used to generate a unique identifiers to avoid collisions, essentially numbering the core files starting from 1.\n\n</p><p>Theory: the problem is bootstrapping.  The code is checking to verify that the file exists before doing any work on it.  However, no one ever actually creates the file in the first place.  <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MoveCoreFile\" title=\"Move Core File\">MoveCoreFile</a></span> should be modified to create the file if necessary.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Feb-27 14:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=30714\">[30714]</a></span>: Fix: Core files no longer cause CondorTest.pm to freak out. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2847\" title=\"core file in a test causes secondary, misleading error\">#2847</a></span>  (By Alan De Smet )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2012-May-11 14:35", "status": "resolved", "created": "2012-Feb-27 13:58", "fixed_version": "2012-Feb-27 13:58", "broken_version": "v070706", "priority": "4", "subsystem": "Tests", "assigned_to": "adesmet", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}