{"id": 4332, "title": "Ticket #4332: Don't terminate Create_Thread() children via exec()", "description": "<blockquote>\nWhen a daemon creates a child process using fork() without exec() (usually by calling Create_Thread()), we override the exit() function with our own version that calls exec(\"/bin/true\") or exec(\"/bin/false\") to terminate the process. This is avoid cleanup code that executes on exit, like destructors for static C++ objects, which may have effects external to the process.\n\n<p>Unfortunately, this causes a lose of information in the child's exit status. Any non-zero exit code is translated into the exit code of /bin/false, which can vary by platform (1 on Linux an BSD, 255 on Solaris). In the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=FileTransfer\" title=\"File Transfer\">FileTransfer</a></span> object, a non-zero exit code indicates success. But a call to EXCEPT() or a dprintf() failure results in the same non-zero status observed by the parent process.\n\n</p><p>We can preserve the full exit status by terminating the child process via a call to _exit(). This call skips exit-time cleanup code like C++ destructors.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-02 16:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40062\">[40062]</a></span>: Be pickier about the exit status of file transfer child processes. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4332\" onclick=\"get_ticket_and_populate_wrapper('4332'); return false;\" title=\"Don't terminate Create_Thread() children via exec()\">#4332</a></span> Now that the exit status of a Create_Thread() child is more reliable, flag an error if the status anything other than exit code 1.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Apr-29 15:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40033\">[40033]</a></span>: Terminate child \"threads\" with _exit() instead of exec(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4332\" onclick=\"get_ticket_and_populate_wrapper('4332'); return false;\" title=\"Don't terminate Create_Thread() children via exec()\">#4332</a></span> We don't want processes created via Create_Thread() to execute C++ destructors when they exit. Both _exit() and exec(\"/bin/{true|false}\") can accomplish this. Using exec() means we only get a binary result of zero/non-zero, and the non-zero\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-May-21 10:51", "status": "resolved", "created": "2014-Apr-28 15:59", "fixed_version": "2014-Apr-28 15:59", "broken_version": "v080000", "priority": "3", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "#4328", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}