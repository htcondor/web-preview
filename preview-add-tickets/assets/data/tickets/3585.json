{"id": 3585, "title": "Ticket #3585: Negotiation protocol slow over high latency links", "description": "<blockquote>\nCMS has stood up a new submit machine in Switzerland, trying to connect to a central manager in the US.  Round trip ping time is on the order of 200 ms, and they see that the negotiation is much slower to those schedds, topping at 5Hz.\n\n<p>This is creating problems for CMS, since it experiences Negotiation cycles in the 5 minute to 20 minute range. This is problematic for two reasons:\n1) Being this a glidein system, this can result in glideins giving up on Grid slots before ever being matched; the glideins will wait only a max of 20 minutes.\n2) It makes the system feel sluggish, since even with lots of free slots the jobs take minutes to start.</p></blockquote>", "remarks": "<blockquote>\n<em>2013-Jun-10 14:11:51 by tannenba:</em> <br/>\n\nJust to get a feeling for scale.  When observing a glidein submit node in production:\n\n<p></p><ol>\n<li>what is the typical number of unique users and\n</li><li>what is the typical number of unique autoclusters\n</li></ol>\n\n<p>Tens?  Hundreds?  Thousands?\n\n</p><p>Thanks.\n\n</p><p></p><hr/>\n<em>2013-Jun-10 14:27:32 by tannenba:</em> <br/>\n\nFWIW, as a data point submit-1 (a busy GLOW glidein submit node) currently has 6833 jobs with 16 unique users.   The 992 jobs that are still idle are represented by 55 autoclusters.\n\n<p>You can see an immediate count of unique autoclusters for idle jobs via\n\n</p><p></p><pre>   condor_q -cons 'JobStatus==1' -af AutoClusterId | sort | uniq | wc -l\n</pre>\n\n<p></p><hr/>\n<em>2013-Jun-10 14:57:49 by bbockelm:</em> <br/>\n\nPulling some statistics out of the current negotiator:\n\n<p></p><div class=\"verbatim\">\n<pre>LastNegotiationCycleNumIdleJobs0 = 39870\nLastNegotiationCycleNumIdleJobs1 = 34753\nLastNegotiationCycleNumIdleJobs2 = 34596\nLastNegotiationCycleTotalSlots0 = 24344\nLastNegotiationCycleTotalSlots1 = 26296\nLastNegotiationCycleTotalSlots2 = 27373\nLastNegotiationCycleCandidateSlots0 = 806\nLastNegotiationCycleCandidateSlots1 = 1037\nLastNegotiationCycleCandidateSlots2 = 1447\nLastNegotiationCycleNumJobsConsidered0 = 1051\nLastNegotiationCycleNumJobsConsidered1 = 1194\nLastNegotiationCycleNumJobsConsidered2 = 1309\nLastNegotiationCycleDuration0 = 461\nLastNegotiationCycleDuration1 = 400\nLastNegotiationCycleDuration2 = 285\nLastNegotiationCycleNumSchedulers0 = 5\nLastNegotiationCycleNumSchedulers1 = 5\nLastNegotiationCycleNumSchedulers2 = 5\nLastNegotiationCycleActiveSubmitterCount0 = 53\nLastNegotiationCycleActiveSubmitterCount1 = 53\nLastNegotiationCycleActiveSubmitterCount2 = 55\nLastNegotiationCycleRejections0 = 369\nLastNegotiationCycleRejections1 = 359\nLastNegotiationCycleRejections2 = 362\nLastNegotiationCycleMatches0 = 682\nLastNegotiationCycleMatches1 = 835\nLastNegotiationCycleMatches2 = 947\n</pre></div>\n\n\n<p>Can't quite reconstruct the autocluster stats out of that, but at least gives a sense of scale.\n\n</p><p></p><hr/>\n<em>2013-Jun-10 15:13:54 by bbockelm:</em> <br/>\n\nUsing Todd's recipe, I find 366 autoclusters.\n\n<p></p><hr/>\n<em>2013-Jun-26 11:13:59 by sfiligoi:</em> <br/>\n\nA couple numbers.\nI wrote a small script that counts the number of matches per schedd;\nhere is what I get for a busy cycle (18 minutes!):\n\n<p></p><pre>              Schedd    Hz Count  Time\n      128.142.16.105   1.7   797   471\n      128.142.229.43   1.5   313   211\n      129.93.244.200   4.4    22     5\n      169.228.130.36  10.5   557    53\n       169.228.38.37   7.5  1340   179\n</pre>\n\n<p>The negotiator is located at 169.228.130.23.\n\n</p><p>BTW: Since I don't truly understand why we occasionally have multi-second gaps in the logs, I tried to excluded those in the next set of numbers... but looks still pretty consistent:\n\n</p><p></p><pre>              Schedd    Hz Count  Time\n      128.142.16.105   2.1   754   361\n      128.142.229.43   1.9   284   150\n      129.93.244.200   4.4    22     5\n      169.228.130.36  10.9   556    51\n       169.228.38.37  14.5  1321    91\n</pre>\n\n<p>You can see remote schedds are matched at about one tenth of the speed.\n\n</p><p>BTW: The above had 2.6k successful matches and 440 rejected matches.\n\n</p><p></p><hr/>\n<em>2013-Jun-26 12:04:49 by sfiligoi:</em> <br/>\n\nWe have been seeing several occasions when the Negotiation cycles were above 10 minutes for prolonged periods of time, and a few spikes where they reached the 20 minute mark.\n\n<p>Anything about 10 mins is reason for concern for CMS, as we want to have some safety margin in operations.\n\n</p><p><img alt=\"negotiation_times.png\" src=\"attach_get/765/negotiation_times.png\"/>\n\n</p><p></p><hr/>\n<em>2013-Jun-26 13:46:32 by sfiligoi:</em> <br/>\n\nFor completeness, here is what the status of the pool looked like in the same period (adding also a unclaimed-only graph to better view detail)\n\n<p><img alt=\"slots.png\" src=\"attach_get/766/slots.png\"/>\n\n</p><p><img alt=\"unclaimed.png\" src=\"attach_get/767/unclaimed.png\"/>\n\n</p><p></p><hr/>\n<em>2013-Jun-27 21:19:23 by bbockelm:</em> <br/>\n\nWhat's the current thinking on this ticket?\n\n<p>A straightforward solution - not really \"making the hard decisions\" for how we negotiate - would be to have the schedd send M autoclusters and N ads per autocluster.\n\n</p><p></p><hr/>\n<em>2013-Aug-02 17:12:24 by tannenba:</em> <br/>\n\nChecked in patch to topic branch <code>V8_1-gt3585-branch</code> that has the schedd tell the negotiator to send X matches at a time where X equals number of consecutive jobs in the queue with the same autocluster. Should decrease number of high latency turn-arounds in the protocol in the (hopefully common) situation where there are many jobs next to each other in the queue with the same autocluster and many matches are being made.  I'll write up a design doc next week, but I wanted to get this into git now so CMS can test.  Changes are made to both the negotiator and schedd. New negotiator knob <code>USE_RESOURCE_REQUEST_COUNTS</code>, which defaults to true, enables the new lower-latency protocol change if set to true.\n\n<p></p><hr/>\n<em>2013-Aug-07 19:48:39 by sfiligoi:</em> <br/>\n\nI tested the new branch with the schedd and negotiator being separated by 200ms, and I see over 300 jobs being matched in a single second!\n\n<p>With the stock 8.0.1 the best I could get was 4Hz, and those were spikes. I never got past 100 per minute.\n\n</p><p>Definitely a huge improvement.\n\n</p><p></p><hr/>\n<em>2013-Aug-08 14:41:13 by tannenba:</em> <br/>\n\n^^ Woot! Awesome news. Is this with a representative CMS job mix (aka similar autoclustering) ?\n\n<p></p><hr/>\n<em>2013-Aug-08 16:24:57 by sfiligoi:</em> <br/>\n\nNo... this was closer to the best case scenario.\n\n<p>I am planning to do a more realistic test soon, though.\n\n</p><p></p><hr/>\n<em>2013-Aug-12 12:05:07 by sfiligoi:</em> <br/>\n\nWe are now running the patched version on some of the production nodes in CMS <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AnaOps\" title=\"Ana Ops\">AnaOps</a></span>. I now see occasional peaks of of up to 180 matches per second (still 200ms link).\n\n<p>So, that's good. It should smooth out the big peaks we have seen in the past.\nOf course, not all matches so grouped; most are in the single digits and only a few go into the double or triple digits.\n\n</p><p>Moreover, it does not help with the average case.... the negotiation time there is still dominated by jobs/autoclusters that do not match. And this patch does not change anything there.\n\n</p><p>Here is the summary of a couple <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=HistoryLogs\" title=\"History Logs\">HistoryLogs</a></span> (includes the \"no match found ones\"):\n</p><div class=\"code\">\n<pre class=\"code\">Count   NrMatches\n   4751   1\n     11   2\n      7   3\n      3   4\n      3   5\n      2   7\n      2   8\n      1  10\n      1  11\n      2  13\n      1  18\n      1  24\n      2  30\n      1  49\n      1  71\n      1  82\n      1  95\n      1 122\n      1 179\n      1 189\n</pre></div>\n\n\n<p></p><hr/>\n<em>2013-Aug-21 22:20:19 by sfiligoi:</em> <br/>\n\n<img alt=\"negotaition_times_2.png\" src=\"attach_get/794/negotaition_times_2.png\"/>\n\n<p>The new patch helped CMS quite a bit. See the attached picture; you can see the difference before and after the patch was applied (\"week 33\"). Now we just need it in the official binaries.\n\n</p><p></p><hr/>\n<em>2013-Aug-22 10:41:30 by tannenba:</em> <br/>\n\n^^^ It is being released in HTCondor v8.1.1.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4460\" title=\"Further improvements to negotiation over high latency links\">#4460</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nFurther improvements to negotiation over high latency links</td></tr>\n</tbody></table>", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/765/negotiation_times.png\">negotiation_times.png</a>\n26380 bytes added by sfiligoi on 2013-Jun-26 17:01:38 UTC.\n<br/>\nNegotiation times for past week.<br/>\n</li><li><a href=\"attach_get/766/slots.png\">slots.png</a>\n44881 bytes added by sfiligoi on 2013-Jun-26 18:44:51 UTC.\n<br/>\nThe slots in the pool in the past week<br/>\n</li><li><a href=\"attach_get/767/unclaimed.png\">unclaimed.png</a>\n27535 bytes added by sfiligoi on 2013-Jun-26 18:45:10 UTC.\n<br/>\nUnclaimed only slots for the past week<br/>\n</li><li><a href=\"attach_get/794/negotaition_times_2.png\">negotaition_times_2.png</a>\n27401 bytes added by sfiligoi on 2013-Aug-22 03:18:13 UTC.\n<br/>\nTh new patch helped CMS quite a bit. See the attached picture; you can see the difference before and after the patch was applied (\"week 33\").\nNow we just need it in the official binaries.<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-17 11:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37630\">[37630]</a></span>: documentation of new knob USE_RESOURCE_REQUEST_COUNTS and version history item ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3585\" title=\"Negotiation protocol slow over high latency links\">#3585</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-19 16:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37281\">[37281]</a></span>: fix of fix further fedora warning for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3585\" title=\"Negotiation protocol slow over high latency links\">#3585</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-19 12:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37280\">[37280]</a></span>: fix further fedora warning in <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3585\" title=\"Negotiation protocol slow over high latency links\">#3585</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-19 11:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37273\">[37273]</a></span>: fix fedora warning about c++ initializers <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3585\" title=\"Negotiation protocol slow over high latency links\">#3585</a></span> ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-02 17:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37084\">[37084]</a></span>: Implement USE_RESOURCE_REQUEST_COUNTS in negotiation protocol. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3585\" title=\"Negotiation protocol slow over high latency links\">#3585</a></span> Negotiation protocol changed to have less turn-arounds. Should be backwards and forwards compatible.  (By Todd Tannenbaum )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2013-Sep-17 13:53", "status": "resolved", "created": "2013-Apr-22 14:37", "fixed_version": "2013-Apr-22 14:37", "broken_version": "v070900", "priority": "2", "subsystem": "DaemonsCM", "assigned_to": "tannenba", "derived_from": "", "creator": "gthain", "rust": "s8285", "customer_group": "cms", "visibility": "public", "notify": "isfiligoi@ucsd.edu tstclair@redhat.com burt@fnal.gov tannenba@cs.wisc.edu", "due_date": ""}