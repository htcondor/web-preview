{"id": 4774, "title": "Ticket #4774: OOM Management issues", "description": "<blockquote>\n<a class=\"external\" href=\"http://goo.gl/q0znpq\">RAL reported in htcondor-users</a> they observed a signficant number of jobs going on hold with the following message in the <code>ShadowLog</code>:\n\n<p></p><pre>   10/08/14 14:26:26 (860002.0) (30272): ERROR \"Error from slot1@xxxxxxxxxxxxxx: Close_Pipe error\" at line ....\n</pre>\n\n<p>After a long debugging session with RAL, we noticed a few OOM notification management issues:\n\n</p><p></p><ol>\n<li>When the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=VanillaProc\" title=\"Vanilla Proc\">VanillaProc</a></span> object is destroyed, the m_oom_efd pipe is not de-registered (also, the other end of the pipe is <strong>never</strong> closed).  The handler is active, so it's possible to get a use-after-free.  The probability of this issue greatly increased in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4435\" onclick=\"get_ticket_and_populate_wrapper('4435'); return false;\" title='Starter logs \"Unable to set OOM control\" on newer kernels'>#4435</a></span> where it became possible to have the OOM-killer enabled along with the OOM notification (previously, the OOM-killer was always disabled when the OOM notification was enabled).\n</li><li><span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=VanillaProc\" title=\"Vanilla Proc\">VanillaProc</a></span> is a sub-class allocated on the heap with no virtual destructor.  Oops.\n</li><li>Because the OOM killer can fire along with the OOM notification, we should check for the notification in VanillaProc::JobReaper.  This way, it's much more likely we put the job on hold when the OOM killer is enabled and sent the job a SIGKILL.\n</li><li>On newer kernels, when memory.use_hierarchy is enabled in the memory controller, attempting to disable the OOM killer fails with EINVAL in a not-top-level cgroup; this is the underlying cause of <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4435\" onclick=\"get_ticket_and_populate_wrapper('4435'); return false;\" title='Starter logs \"Unable to set OOM control\" on newer kernels'>#4435</a></span>.  Now that we understand this is the problem, we ought to make the log message less scary.</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2014-Dec-16 13:15:08 by gthain:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>With this patch, in the reaper, we double check the OOM event fd to see if it has fired.  Is there a race here, or are we guaranteed that it is hot by the time the starter's reaper is called?\n\n</p><p>Should we #ifdef LINUX the code in the reaper to do the event fd check?  It <em>should</em> be -1 on all other platforms, but...\n\n</p><p>Otherwise, looks good to merge to V8_2-branch\n\n</p><p></p><hr/>\n<em>2014-Dec-16 21:00:40 by bbockelm:</em> <br/>\n\nHi Greg,\n\n<p>I don't particularly like to do unnecessary ifdef's; we already rely on the fact that (m_oom_efd == -1) outside \"defined(HAVE_EVENTFD) &amp;&amp; defined(HAVE_EXT_LIBCGROUP)\".\n\n</p><p>Looking at the kernel code (well, the source tarball for 3.7.2 I happened to have on disk), the eventfd is always signaled before the OOM-killer routines run.  I'm no expert, but I believe this guarantees there's no race condition.\n\n</p><p>That said, what happens if the race is possible in some future Linux 4.0?  I would argue it's still OK; we already warn the user this race is possible in the starter log if disabling the OOM-killer failed.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2014-Dec-17 12:01:18 by gthain:</em> <br/>\n\nIf we feel good about the event being delivered before the signal, let's merge it to 8.2</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-17 21:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41960\">[41960]</a></span>: Ifdef out Get_Pipe_FD on Windows. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4774\" onclick=\"get_ticket_and_populate_wrapper('4774'); return false;\" title=\"OOM Management issues\">#4774</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-17 20:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41957\">[41957]</a></span>: Version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4774\" onclick=\"get_ticket_and_populate_wrapper('4774'); return false;\" title=\"OOM Management issues\">#4774</a></span>.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-17 20:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41956\">[41956]</a></span>: Cleanup of OOM notification bugs. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4774\" onclick=\"get_ticket_and_populate_wrapper('4774'); return false;\" title=\"OOM Management issues\">#4774</a></span> This bugfix clears up several issues: - When the OOM killer is enabled, there were a few race conditions between the job shutdown and the OOM notification. It was possible to recieve the notification <strong>after</strong> the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=VanillaProc\" title=\"Vanilla Proc\">VanillaProc</a></span> object was deleted (Close_Pipe wasn't\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-15 09:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41917\">[41917]</a></span>: Cleanup of OOM notification bugs. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4774\" onclick=\"get_ticket_and_populate_wrapper('4774'); return false;\" title=\"OOM Management issues\">#4774</a></span> This bugfix clears up several issues: - When the OOM killer is enabled, there were a few race conditions between the job shutdown and the OOM notification. It was possible to recieve the notification <strong>after</strong> the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=VanillaProc\" title=\"Vanilla Proc\">VanillaProc</a></span> object was deleted (Close_Pipe wasn't\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Mar-25 09:32", "status": "resolved", "created": "2014-Dec-15 08:43", "fixed_version": "2014-Dec-15 08:43", "broken_version": "v080200", "priority": "1", "subsystem": "", "assigned_to": "bbockelm", "derived_from": "#4435", "creator": "gthain", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "bbockelm@cse.unl.edu, tannenba@cs.wisc.edu, gthain@cs.wisc.edu", "due_date": ""}