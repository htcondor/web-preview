{"id": 6968, "title": "Ticket #6968: IpVerify initialization shouldn't happen in middle of new connection", "description": "<blockquote>\nThe Condor security authorization tables maintained by the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=IpVerify\" title=\"Ip Verify\">IpVerify</a></span> class are initialized lazily the first time an authorization decision needs to be made. This happens in the middle of the first network connection that the process makes (as either client or server), as its peer is waiting. The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=IpVerify\" title=\"Ip Verify\">IpVerify</a></span> initialization can include numerous DNS queries for hostnames mentioned in the security configuration. If any of these queries end up blocking for a long time, the peer may timeout and close the connection.\n\n<p>For a long-lived daemon, this is usually a minor inconvenience, as the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=IpVerify\" title=\"Ip Verify\">IpVerify</a></span> initialization is only done once. For the shadow, it becomes a major problem, as the shadow will exit with failure if the startd hangs up on it when trying to activate the claim. This was demonstrated this week in a thread on htcondor-users.\n\n</p><p>The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=IpVerify\" title=\"Ip Verify\">IpVerify</a></span> initialization should be done before any network connections are established. For daemons, this could be explicitly as part of daemoncore's startup. For tools, this could be done somewhere inside SecMan::startCommand() before the socket is created.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-May-16 07:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56899\">[56899]</a></span>: Docs for doing <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=IpVerify\" title=\"Ip Verify\">IpVerify</a></span> init before first network connection. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6968\" title=\"IpVerify initialization shouldn't happen in middle of new connection\">#6968</a></span> Committer: Tim Theisen  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-May-15 14:45</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56893\">[56893]</a></span>: Docs for doing <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=IpVerify\" title=\"Ip Verify\">IpVerify</a></span> init before first network connection. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6968\" title=\"IpVerify initialization shouldn't happen in middle of new connection\">#6968</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-28 13:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56461\">[56461]</a></span>: Call IpVerify::Init() before any network communication. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6968\" title=\"IpVerify initialization shouldn't happen in middle of new connection\">#6968</a></span> Initializing CEDAR's authorization tables in IpVerify::Init() can involve numerous DNS queries. Since these queries can block, we should avoid doing them in the middle of setting up a new network connection. Now, the initialization is done\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-May-15 14:46", "status": "resolved", "created": "2019-Mar-27 16:38", "fixed_version": "2019-Mar-27 16:38", "broken_version": "", "priority": "3", "subsystem": "Security", "assigned_to": "jfrey", "derived_from": "#6967", "creator": "jfrey", "rust": "", "customer_group": "users", "visibility": "public", "notify": "", "due_date": ""}