{"id": 2927, "title": "Ticket #2927: allow a standalone checkpoint to be submitted to the standard universe", "description": "<blockquote>\nWe would like to be able to submit an existing standalone checkpoint image as a standard-universe executable.  This is to support the following campus grid use-case:\n\n<p></p><ul>\n<li>we have jobs with complex environmental dependencies, which read lots of input data and then compute for a long time, producing a small output\n</li><li>we submit them as standard-universe jobs to our local condor pool, let them start up and read all their input data, and then checkpoint and exit\n</li><li>we submit the standalone checkpoint to another remote condor pool (e.g., via Condor-C)\n</li><li>this allows to job to run in that foreign environment without its software dependencies or input data\n</li></ul>\n\n<p>With <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2877\" title=\"add -_condor_relocatable argument for submitting a standalone ckpt\">#2877</a></span>, we can now do this, except we must submit the resulting remote job as a vanilla universe job and as a result it cannot continue to checkpoint.\n\n</p><p>Since the considerable remote/foreign resources we have access to (1000's of cores) are opportunistic, checkpointing would unlock significant goodput for us.</p></blockquote>", "remarks": "<blockquote>\n<em>2012-May-22 15:03:25 by tannenba:</em> <br/>\n\nThinking we could/should spend a little bit of time looking at this to see how big a project it is.... But if it is significant, the effort should go into getting ckpt support into vanilla universe instead.\n\n<p></p><hr/>\n<em>2012-Jul-02 14:09:15 by tlmiller:</em> <br/>\n\n&gt; With <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2877\" title=\"add -_condor_relocatable argument for submitting a standalone ckpt\">#2877</a></span>, we can now do this, except we must submit the resulting remote job as a vanilla universe job and as a result it cannot continue to checkpoint.\n\n<p>What prevents you from continuing to use stand-alone checkpointing?\n\n</p><p></p><hr/>\n<em>2012-Jul-25 10:52:40 by tlmiller:</em> <br/>\n\nI tried starting a stand-alone checkpoint up as standard-universe job, but with the command-line arguments necessary to resume from its checkpoint.  The job started, but not from the checkpoint: the command FD over-rides the command-line argument(s) related to the checkpoint file.  Fixing this would be suprisingly tricky because the syscall library startup routines presently assume that the command FD (that is, the standard universe) entails remote system calls.  It may be possible to work around this by copying the stand-alone checkpoint to the appropriate place in the spool, but it turns out that the standard universe uses a \"pseudo\" remote system call to handle fetching the checkpoint at start-up.  Distentangling the two seems like it would be difficult and time-consuming, at best.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2012-Jul-25 10:52", "status": "defer", "created": "2012-Apr-06 11:11", "fixed_version": "2012-Apr-06 11:11", "broken_version": "v070605", "priority": "5", "subsystem": "Std", "assigned_to": "tlmiller", "derived_from": "#2877", "creator": "pfc", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "dabrown@syr.edu, skoranda@uwm.edu,pcouvare@caltech.edu", "due_date": ""}