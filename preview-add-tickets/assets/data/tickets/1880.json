{"id": 1880, "title": "Ticket #1880: More flexible actions as the result of job state changes", "description": "<blockquote>\nIncorporating part of <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1490\" title=\"condor_hold + condor_rm of DAG goofs things up\">#1490</a></span>, because I want to be able to resolve that ticket now that code is in place to deal with the issue (condor_hold/condor_rm of DAGs) that's causing problems for LIGO.  The stuff below relates to a more general capability to take action as the result of job state changes.\n\n<p>Pete and I just met and came up with a more general way of dealing with this: we'd have a bunch of \"job state transition actions\" (e.g., auto_action_remove, auto_action_hold, auto_action_checkpoint, etc.). Probably initially we'd just implement auto_action_remove to deal with LIGO's DAG issue. This would be an expression in a job's submit file that would act on other jobs when the first job is removed. The one for DAGMan would be something like this:\n\n</p><p></p><pre>  auto_action_remove = target.DAGManJobId == my.ClusterId\n</pre>\n\n<p>eventually this could be extended to something like:\n\n</p><p></p><pre>  auto_action_remove = if (expression) job_hold(constraint)\n</pre>\n\n<p>so that removing one job could do something to other jobs besides removing them.\n\n</p><p>The auto_action_remove should be done when a job is removed via condor_rm (but not condor_rm -f), periodic_remove, on_exit_remove, etc.\n\n</p><p>One important consideration is that the auto_action_remove processing must not start until the originally-removed job is in the X state, so that we don't get into cycles if job A's auto_action_remove removes job B, and job B's auto_action_remove removes job A.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2011-Jan-27 12:58", "status": "new", "created": "2011-Jan-27 12:58", "fixed_version": "2011-Jan-27 12:58", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "#1490", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu, psilord@cs.wisc.edu", "due_date": ""}