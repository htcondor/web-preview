{"id": 4363, "title": "Ticket #4363: Uninitialized data in write system call", "description": "<blockquote>\n<div class=\"code\">\n<pre class=\"code\">==10237== Syscall param write(buf) points to uninitialised byte(s)\n==10237==    at 0x35CE00E6E0: __write_nocancel (in /lib64/libpthread-2.12.so)\n==10237==    by 0x42CF92: NamedPipeWriter::write_data(void*, int) (named_pipe_writer.unix.cpp:127)\n==10237==    by 0x4284FF: LocalServer::write_data(void*, int) (local_server.UNIX.cpp:237)\n==10237==    by 0x42312E: ProcFamilyServer::write_to_client(void*, int) (proc_family_server.cpp:73)\n==10237==    by 0x4236C9: ProcFamilyServer::get_usage() (proc_family_server.cpp:254)\n==10237==    by 0x423E62: ProcFamilyServer::wait_loop() (proc_family_server.cpp:509)\n==10237==    by 0x429CFD: main (procd_main.cpp:540)\n==10237==  Address 0x7fefff7b9 is on thread 1's stack\n==10237==\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2014-May-13 17:00:30 by tlmiller:</em> <br/>\n\nThis appears to be caused by uninitialized padding bytes inserted by the compiler after ==total_proportional_set_size_available==.  Making the padding bytes explicit should shut valgrind up.\n\n<p></p><div class=\"verbatim\">\n<pre>diff --git a/src/condor_procd/proc_family_io.h b/src/condor_procd/proc_family_io\nindex 8092fea..93c9540 100644\n--- a/src/condor_procd/proc_family_io.h\n+++ b/src/condor_procd/proc_family_io.h\n@@ -89,6 +89,10 @@ struct ProcFamilyUsage {\n #if HAVE_PSS\n     unsigned long total_proportional_set_size;\n     bool total_proportional_set_size_available;\n+    // These exist to make valgrind quit whining.\n+    bool pad1;\n+    bool pad2;\n+    bool pad3;\n #endif\n        int           num_procs;\n        // These are signed so a negative number indicates uninitialized\n@@ -107,6 +111,7 @@ struct ProcFamilyUsage {\n #if HAVE_PSS\n                total_proportional_set_size(0),\n                total_proportional_set_size_available(0),\n+               pad1(0), pad2(0), pad3(0),\n #endif\n                num_procs(0),\n         block_reads(0),\n</pre></div>\n\n\n<p></p><hr/>\n<em>2014-May-14 13:36:25 by tlmiller:</em> <br/>\n\nThis patch silences valgrind and shouldn't cause alignment/packing issues on any platform (because the bools are now in a group that's a multiple of 4).\n\n<p></p><hr/>\n<em>2014-May-14 13:39:50 by gthain:</em> <br/>\n\n<strong class=\"two\">CODE REVIEW</strong>\nLooks good</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-14 13:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40131\">[40131]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4363\" title=\"Uninitialized data in write system call\">#4363</a></span>) Encourage valgrind to contemplate the value of silence.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-May-16 14:25", "status": "resolved", "created": "2014-May-13 13:34", "fixed_version": "2014-May-13 13:34", "broken_version": "v070000", "priority": "2", "subsystem": "", "assigned_to": "tlmiller", "derived_from": "#4362", "creator": "gthain", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}