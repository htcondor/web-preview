{"id": 1550, "title": "Ticket #1550: add set operators to ClassAds", "description": "<blockquote>\nIgor requests the ability to compute the intersection of two lists.  For example, a job has a list of storage elements that it wants and a machine has a list of storage elements that it provides.  In the requirements expression, we want to specify that these two lists must intersect.\n\n<p>The best I could come up with was stringList_RegexpMember(), which requires that one of the lists be formatted as a regular expression.</p></blockquote>", "remarks": "<blockquote>\n<hr/>\n<em>2011-Feb-25 14:33:53 by danb:</em> <br/>\n\nWhen using new-classads, another idea is to use a nested <code>ClassAd</code> to represent one of the sets.  The members of the set would be encoded as attribute names.  The values would just bet set to true.  To test for intersection of two sets, one would need to encode the other set as a boolean expression that looks for attributes in the ad.  Example:\n\n<p>In the machine ad:\n\n</p><p></p><pre>  software = [ CMSSW_2 = true; CMSSW_3 = true; ]\n</pre>\n\n<p>In the job ad:\n\n</p><p></p><pre>  SoftwareMatches = TARGET.software.CMSSW_1 || TARGET.software.CMSSW_2\n</pre>\n\n<p></p><hr/>\n<em>2011-Mar-02 17:23:53 by danb:</em> <br/>\n\n\n<p>After discussion with Igor, we agreed that the following would satisfy the use-cases that he has encountered so far:\n\n</p><p>stringListsIntersect(A,B,[delimiter])\n\n</p><p>It returns true if string-lists A and B intersect.\n\n</p><p>In the initial implementation, it will do all required inspection and digestion of the strings describing the sets on-the-fly in every call to the function, so it will be O(N log(N)).</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Mar-03 18:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26087\">[26087]</a></span>: Documented stringListsIntersect(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1550\" onclick=\"get_ticket_and_populate_wrapper('1550'); return false;\" title=\"add set operators to ClassAds\">#1550</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Mar-03 18:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=20909\">[20909]</a></span>: Added <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> function stringListsIntersect(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1550\" onclick=\"get_ticket_and_populate_wrapper('1550'); return false;\" title=\"add set operators to ClassAds\">#1550</a></span>  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2011-Mar-03 18:09", "status": "resolved", "created": "2010-Aug-02 16:28", "fixed_version": "2010-Aug-02 16:28", "broken_version": "v070700", "priority": "3", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "dan@hep.wisc.edu,sfiligoi@fnal.gov", "due_date": ""}