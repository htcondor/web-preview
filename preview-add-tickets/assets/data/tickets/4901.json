{"id": 4901, "title": "Ticket #4901: crondor job with limited times to run keeps running(univ:local)", "description": "<blockquote>\non windows in local universe a crondor poised to run only twice, keeps running\ninspite of an <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=OnExitRemove\" title=\"On Exit Remove\">OnExitRemove</a></span> being used. the script being called just writes out time to a file and if an arg is passed, it sleeps that long, I will place it here second.\n\n<p></p><div class=\"code\">\n<pre class=\"code\">universe = local\nexecutable = x_time.pl\nlog = job_core_crontab.user_log.22376\nhold = False\narguments = 20\nnotification = never\n\n\n##\n## Skeleton for the CronTab Tests\n## The perl script will insert what universe the job will be\n## This file SHOULD NOT contain \"Queue\" at the end\n##\n\n##\n## The job will run every 3 minutes\n##\nCronHour\t\t= *\nCronMinute\t\t= */2\nCronDayOfMonth\t= *\nCronMonth\t\t= *\nCronDayOfWeek\t= *\n\n##\n## Preparation Time\n##\nCronPrepTime\t= 20\n\n\n#\n# Deferral window\n# Give it 5 seconds leeway to run, so if it gets there late,it\n# is still ok\ndeferral_window = 5\n\n##\n## We only want to run it 2 times\n##\nOnExitRemove\t= NumJobStarts &gt;= 1\n\nqueue 1\n</pre></div>\n\n\n<p></p><div class=\"code\">\n<pre class=\"code\">#!/usr/bin/env perl\n##**************************************************************\n##\n## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,\n## University of Wisconsin-Madison, WI.\n##\n## Licensed under the Apache License, Version 2.0 (the \"License\"); you\n## may not use this file except in compliance with the License.  You may\n## obtain a copy of the License at\n##\n##    http://www.apache.org/licenses/LICENSE-2.0\n##\n## Unless required by applicable law or agreed to in writing, software\n## distributed under the License is distributed on an \"AS IS\" BASIS,\n## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n## See the License for the specific language governing permissions and\n## limitations under the License.\n##\n##**************************************************************\n\n\n##\n## Simply prints out the current Unix timestamp\n## Yet if a second arg exists, it writes it to a file.\n##\nif($ARGV[1]) {\n\topen(WR,\"&gt;&gt;$ARGV[1]\") or die \"Can not open $ARGV[1]:$!\\n\";\n\tprint WR time().\"\\n\";\n\tclose(WR);\n} else {\n\tprint time().\"\\n\";\n}\n\n##\n## We can be told to sleep for a bit as well\n##\nif ( $ARGV[0] ) {\n\tsleep( $ARGV[0] );\n}\n\nexit(0);\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2015-Feb-19 15:04:33 by jfrey:</em> <br/>\n\nFor all local universe jobs in the test suite, the schedd says that the starter exit with exception ACCESS_VIOLATION. The schedd then reruns the job repeatedly. The starter log says that it's exiting with the appropriate exit code to tell the schedd what to do with the job (let it leave the queue, rerun it, put it on hold).\nThe starter is probably crashing at exit due to code run in DC_Exit() or a global destructor.\n\n<p>Most of the tests for local universe succeed because the starter writes the appropriate user log events before exiting, so the test thinks everything is fine.\n\n</p><p></p><hr/>\n<em>2015-Feb-27 10:51:19 by jfrey:</em> <br/>\n\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4909\" onclick=\"get_ticket_and_populate_wrapper('4909'); return false;\" title=\"Make tear-down methods safe to call after DaemonCore is deleted\">#4909</a></span> should fix this problem.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "todo", "last_change": "2015-Feb-27 10:51", "status": "new", "created": "2015-Feb-19 12:08", "fixed_version": "2015-Feb-19 12:08", "broken_version": "v080303", "priority": "4", "subsystem": "DaemonsSubmitNode", "assigned_to": "jfrey", "derived_from": "#4520", "creator": "bt", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "bt@cs.wisc.edu", "due_date": ""}