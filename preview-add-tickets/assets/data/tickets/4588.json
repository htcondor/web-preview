{"id": 4588, "title": "Ticket #4588: Export a log reader API from the python bindings", "description": "<blockquote>\nThe <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> log is an important concept - especially for the schedd - which we should expose through the python bindings (currently, it's only exposed through libcondorapi).  This would allow easier development of appropriately-privileged external daemons to tail the activity of the schedd and synchronize out to external systems.\n\n<p>Why use this versus ...\n</p><ul>\n<li>Global user log?  The log reader API provides details at the level of the individual attributes.  The Global user log only includes state transitions.\n</li><li>Schedd plug-ins?  Plug-ins run in-process (potentially causing security issues, memory leaks, or crashes) and wouldn't provide an easier development path - C++ plugin versus python code.  As seen in recent issues with classad loadable plugins, the HTCondor plugin infrastructure provides no versioning help -- there's no way to know if you are loading an incompatible plugin and about to cause the schedd to crash.\n</li></ul>\n\n<p>The API design would expose a new class with the following methods:\n</p><ul>\n<li>constructor: given a filename, returns a new instance.  Unfortunately, this must be based on filename (as opposed to an open file pointer) due to the\n</li><li>Next (and __iter__): Returns the next event in the log.  Appropriate for for-loops.\n<ul>\n<li>A slight twist, Poll, will be provided that is appropriate for while-loops.\n</li></ul>\n</li><li>Wait: Block until a new event is available.\n</li><li>setBlocking: Determine whether or not \"next\" should block when there are no events available.\n</li><li>Watch: Return a file descriptor which will be marked as \"ready for read\" in a select() call when there are new events available.  Meant to be used for event-loop-based programs.\n</li></ul>\n\n<p>Basically, the object is meant to behave as a pythonic iterator (i.e., appropriate for for-loops).  The various iterators should return a dictionary which is a rough equivalent of the existing <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAdLogEntry\" title=\"Class Ad Log Entry\">ClassAdLogEntry</a></span>.  Note this inverts the control flow from the existing <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAdLogReader\" title=\"Class Ad Log Reader\">ClassAdLogReader</a></span> (which is callback-based) to allow better interaction with event loops.</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Feb-19 12:26:05 by smoler:</em> <br/>\n\nThere is no documentation yet for this new class.  This ticket is to remain open until the documentation is complete.\n\n<p></p><hr/>\n<em>2015-Feb-21 11:37:52 by bbockelm:</em> <br/>\n\nHi Karen,\n\n<p>Sorry for the belated documentation.  Here's a few explanations:\n\n</p><p><span class=\"subsection\"></span></p><h3>LogReader </h3>\nThe <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LogReader\" title=\"Log Reader\">LogReader</a></span> provides a parser for reading and tailing <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> transaction logs; the best example of a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> transaction log is the one kept by the schedd in <code>job_queue.log</code>.\n\n<p>This is meant to allow a python program to mirror the contents of a schedd's log.\n\n</p><p>The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LogReader\" title=\"Log Reader\">LogReader</a></span> is iterable, meaning it can be used in loop constructs, such as:\n\n</p><p></p><div class=\"verbatim\">\n<pre>for event in LogReader(\"/var/lib/condor/spool/job_queue.log\"):\n  print event\n</pre></div>\n\n\n<p>The events produced by the iterator are python dictionaries describing the next event in the log file.\n\n</p><p><span class=\"subsection\"></span></p><h3>LogReader methods</h3>\n\n<p></p><ul>\n<li>Constructor: Takes in the name of a file to parse.\n</li><li><strong>next()</strong>: Returns a python dictionary containing the next event in the log file.  If blocking mode is enabled, this blocks indefinitely until a new event is available.  If blocking mode is disabled, this raises a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StopIteration\" title=\"Stop Iteration\">StopIteration</a></span> exception when no new event is available.\n</li><li><strong>poll(timeout)</strong>: Returns a python dictionary containing the next event in the log file.  This will block until a new event is available or a timeout is hit.  The timeout parameter is specified in milliseconds; set 0 to return immediately or -1 to block indefinitely.  Returns None on timeout.\n</li><li><strong>setBlocking(blocking)</strong>: Set whether or not the next() function should block when no event is available.  Returns the previous value of the object's blocking state.\n</li><li><strong>wait()</strong>: Wait until a new event is available; no value is returned.\n</li><li><strong>watch()</strong>: Returns a file descriptor.  When select() indicates there is data available on this descriptor, a new event may be available.  If -1 is returned, the API is not available on the current platform.</li></ul>\n</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=5945\" onclick=\"get_ticket_and_populate_wrapper('5945'); return false;\" title=\"Documentation for Pyton LogReader binding missing\">#5945</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nDocumentation for Pyton <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LogReader\" title=\"Log Reader\">LogReader</a></span> binding missing</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Feb-24 11:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=43455\">[43455]</a></span>: fix for EL5 PROPER build <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4588\" onclick=\"get_ticket_and_populate_wrapper('4588'); return false;\" title=\"Export a log reader API from the python bindings\">#4588</a></span> See also: <a class=\"external\" href=\"https://jira.opensciencegrid.org/browse/SOFTWARE-1807\">https://jira.opensciencegrid.org/browse/SOFTWARE-1807</a>  (By Carl Edquist )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Feb-19 12:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=43416\">[43416]</a></span>: add version history for totally undocumented <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LogReader\" title=\"Log Reader\">LogReader</a></span> class <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4588\" onclick=\"get_ticket_and_populate_wrapper('4588'); return false;\" title=\"Export a log reader API from the python bindings\">#4588</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-19 15:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41998\">[41998]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=41165\">[41165]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41168\">[41168]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41169\">[41169]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41171\">[41171]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41172\">[41172]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41204\">[41204]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41979\">[41979]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41980\">[41980]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41981\">[41981]</a></span>, Merge branch 'V8_3-gt4588'. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4588\" onclick=\"get_ticket_and_populate_wrapper('4588'); return false;\" title=\"Export a log reader API from the python bindings\">#4588</a></span> Conflicts: src/python-bindings/CMakeLists.txt  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-19 08:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41980\">[41980]</a></span>: Bugfixes for inotify and event tests. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4588\" onclick=\"get_ticket_and_populate_wrapper('4588'); return false;\" title=\"Export a log reader API from the python bindings\">#4588</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-19 07:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41979\">[41979]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=40764\">[40764]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40774\">[40774]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40776\">[40776]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40777\">[40777]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40778\">[40778]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40779\">[40779]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40795\">[40795]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40798\">[40798]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40799\">[40799]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40800\">[40800]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40810\">[40810]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40812\">[40812]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40839\">[40839]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40840\">[40840]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40843\">[40843]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40848\">[40848]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=40852\">[40852]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41178\">[41178]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41179\">[41179]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41180\">[41180]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41181\">[41181]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41182\">[41182]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41183\">[41183]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41184\">[41184]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41185\">[41185]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41186\">[41186]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41187\">[41187]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41302\">[41302]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41303\">[41303]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41304\">[41304]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41305\">[41305]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41306\">[41306]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=41307\">[41307]</a></span>,\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-19 07:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41977\">[41977]</a></span>: Rename enum entries to avoid macros on Solaris. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4588\" onclick=\"get_ticket_and_populate_wrapper('4588'); return false;\" title=\"Export a log reader API from the python bindings\">#4588</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Sep-22 08:24</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41204\">[41204]</a></span>: Improve event iterator. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4588\" onclick=\"get_ticket_and_populate_wrapper('4588'); return false;\" title=\"Export a log reader API from the python bindings\">#4588</a></span> This commit gives the event iterator the same test coverage and options for blocking as the log reader.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Sep-16 20:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41172\">[41172]</a></span>: Addition of the log reader API for python. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4588\" onclick=\"get_ticket_and_populate_wrapper('4588'); return false;\" title=\"Export a log reader API from the python bindings\">#4588</a></span> This is an iterator-based API for reading through a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> log (such as written by the schedd). The parser and probe is reused from the existing ClassAdLog* API, but the control flow was rewritten to match the inverted, iterator-based style preferred\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2016-Oct-04 10:53", "status": "resolved", "created": "2014-Sep-15 12:15", "fixed_version": "2014-Sep-15 12:15", "broken_version": "", "priority": "4", "subsystem": "Tools", "assigned_to": "tim", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "bbockelm@cse.unl.edu", "due_date": ""}