{"id": 6947, "title": "Ticket #6947: Extend PASSWORD auth to support multiple and derived secrets", "description": "<blockquote>\nWe would like the pool password mechanism to be extended such that the admin (or daemons) with access to the master password can create derived passwords with limited trust and that there can be multiple master passwords per pool.\n\n<p>Each pool should have a self-identified key domain which indicates to clients which set of derived passwords should be used.\n\n</p><p>See design doc (<a class=\"external\" href=\"https://docs.google.com/document/d/10uSYp6sePbHPFzKmkTMAwr1uKzuSxebr_Om89IUgyUs/edit\">https://docs.google.com/document/d/10uSYp6sePbHPFzKmkTMAwr1uKzuSxebr_Om89IUgyUs/edit</a>) for more details.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Mar-07 22:08:42 by bbockelm:</em> <br/>\n\nMilestone 1 in the design doc is posted here: <a class=\"external\" href=\"https://github.com/bbockelm/htcondor/tree/V8_9-password2\">https://github.com/bbockelm/htcondor/tree/V8_9-password2</a>\n\n<p>Introduces the PASSWORD2 protocol with an opaque string as the \"token\".  This token will later become the JWT used by the user.\n\n</p><p></p><hr/>\n<em>2019-Mar-08 11:36:46 by tlmiller:</em> <br/>\n\nI'll review the design doc (shouldn't be any major issues -- I think we agreed on all the major points of the plan in my office on Thursday) and then the existing code (per your request).\n\n<p></p><hr/>\n<em>2019-Mar-08 13:38:37 by bbockelm:</em> <br/>\n\nThanks!  I started to tinker with the next branch (JWT support; milestone 2 in the doc) and will be roughing out those pieces while you review the base functionality.\n\n<p></p><hr/>\n<em>2019-Mar-08 18:54:44 by tlmiller:</em> <br/>\n\n<strong>Design Review</strong>\n\n<p></p><ul>\n<li>It seems like the document is missing a detail about how two processes which both have access to the same master key communicate.  I assume they don't fall back to PASSWORDv1, but that when a daemon is acting as a client and has a master key, but it not otherwise configured, it will use some standard fixed identity (from which, of course, it can readily generate the derived keys when that becomes necessary).\n\n<p></p></li><li>I think the document should be explicit that \"associate it with additional metadata\" specifically includes simply passing an authenticated identity into HTCondor's existing authorization mechanisms, and that this will probably be the default.  (When the document says \"the set of authorizations\" later on, it makes this work sound very ambitious, inasmuch as HTCondor does not presently have a capabilities model.)\n\n<p></p></li><li>It might be helpful to mention the default settings and expected scenarios as they relate to the initial set-up of a secure pool, flocking (to and from another pool), connecting an annex, and Condor-C.  This would include ideas like using the first entry in the collector list as the default key domain, and -- since PASSWORDv2 should just disable itself without a password file -- a default configuration where all the admin has to do to turn on PASSWORDv2 is drop the client's keyblob in the conventional place on disk.\n</li></ul>\n\n<p></p><hr/>\n<em>2019-Mar-08 19:32:51 by bbockelm:</em> <br/>\n\n&gt; How two processes which both have access to the same master key communicate\n\n<p>Actually, if the token is an empty string, the PASSWORD2 protocol is equivalent to the PASSWORD1 wire protocol.\n\n</p><p>HOWEVER, since we're adding the multi-master-key support, the client will always have to generate a non-empty token solely to inform the server-side which key it used.\n\n</p><p>Rest of the comments will be addressed in a revised version of the doc, coming soon!\n\n</p><p></p><hr/>\n<em>2019-Mar-09 19:02:32 by tlmiller:</em> <br/>\n\n&gt; the client will always have to generate a non-empty token solely to inform the server-side which key it used.\n\n<p>That makes sense; I'm not sure if it would be more or less confusing to specify that any master key identity is 'condor_pool' (for compatibility with old PASSWORDv1 configurations), or if clients with the master key should identify themselves with the master key's ID (the name of the file).\n\n</p><p>However, as I understand the proposal, the PASSWORDv2 mechanism can't tell if the far side has the master key or if the master key holder actually authenticated the token in question.  I guess that isn't important as long as the client and server agree that certain identities (e.g., the master key ID?) always have certain authorizations (rootliness).\n\n</p><p></p><hr/>\n<em>2019-Mar-09 19:21:56 by tlmiller:</em> <br/>\n\nI guess SEC_DERIVED_SECRETS_MAX_AGE is a server-side knob; it seems odd for a client to limit the age of the keys somebody else gave it.\n\n<p>Otherwise the design doc changes look pretty good.\n\n</p><p></p><hr/>\n<em>2019-Mar-10 23:17:56 by bbockelm:</em> <br/>\n\n@tlmiller -\n\n<p>All milestones for this are done except for creating a new authentication token based on an existing session.\n\n</p><p>It'd be a good time to review the code as the changes are starting to get quite large.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2019-Mar-13 23:07:23 by bbockelm:</em> <br/>\n\nAll coding milestones completed.\n\n<p></p><hr/>\n<em>2019-Mar-14 13:47:16 by tlmiller:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>condo_io/authentication.cpp:252 -- Why the indirection through tmp_auth?  (Especially since the later code seems to depend on the fact that modifying tmp_auth will modify m_auth.)\n\n</p><p></p><div class=\"restricted\"><pre>condor_io/condor_auth_passwd.cpp:151  -- Good comment.\n                                :184  -- Why is an empty key ID OK?\n                                :260  -- Shouldn't it be 'PW2' as the prefix for (most of) the dprintf()s?\n                                :364  -- Not sure what memcpy() will do with NULL pointers, but it can't be good.\n                                :1263 -- Why used a vector if you're only ever going to cast it to a pointer?\n                                :2317 -- Maybe make this m_version == 2, instead?  (Not that I expect we'll want a v3, but...)\n                                :2288 -- Ditto.\n</pre></div>condor_io/condor_secman.cpp:2675 -- Do we want \"PASSWORD2\" or \"PASSWORDv2\"?\n\n<p>Should generate_keyfile be in tools/, instead?\n\n</p><p>condor_utils/param_info.in:2479 -- COLLECTOR_HOST may be a list, so we probably need to implement the default in code as \"the first entry\".\n\n</p><p>condor_utils/store_cred.*:* -- As far as I can tell, refreshNamedCredentials() is never called.  This should almost certainly be called on reconfig, and should maybe be called on a timer.\n\n</p><p>Someone with more legal fu than I needs to take a good look at all of the potential licensing issues.\n\n</p><p></p><hr/>\n<em>2019-Mar-14 14:05:11 by tlmiller:</em> <br/>\n\nI also corrected some typos and some whitespace mistakes; the pull request branch, including those fixes, is now available as V8_9-password2-branch (in the main repository).\n\n<p></p><hr/>\n<em>2019-Mar-14 23:18:49 by bbockelm:</em> <br/>\n\nOk, review items mostly addressed.\n\n<p>Refactored the UI and some of the parameter names as discussed today.\n\n</p><p>I think this one is ready to go!\n\n</p><p></p><hr/>\n<em>2019-Mar-15 14:20:39 by tlmiller:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>I removed SEC_TOKEN_USER_DIRECTORY because it was unused.\n\n</p><p>I added the token filename to the message printed when token decode fails.\n\n</p><p>Otherwise, the changes looks pretty good.  I'll do another look-over on Monday before declaring the code ready to merge.\n\n</p><p><strong>Next Steps</strong>\n\n</p><p>There's some other follow-up work (which Brian will elaborate on, I hope, if it's not already all in tickets), but at this point, it's on me to:\n\n</p><p></p><ul>\n<li>(A) write (functional) tests for TOKEN method\n</li><li>(B) document this ticket.\n</li></ul>\n\n<p></p><hr/>\n<em>2019-Mar-18 16:05:06 by tlmiller:</em> <br/>\n\nBrian remarks:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">Also, an important limitation - in the current `TOKEN` auth, the client always authenticates the server as `condor_pool@domain`.</pre></div>\n\n\n<p></p><hr/>\n<em>2019-Apr-02 17:07:52 by tlmiller:</em> <br/>\n\nTest is in.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=6951\" title=\"Allows schedd to mistrust certain startds\">#6951</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nAllows schedd to mistrust certain startds</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6956\" title='\"Match password auth\" for schedds'>#6956</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\n\"Match password auth\" for schedds</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=6962\" title=\"Test OpenSSL 1.1.0-only code in TOKEN authentication method\">#6962</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nTest OpenSSL 1.1.0-only code in TOKEN authentication method</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=6973\" title=\"Improve minicondor configuration / better secure-by-default\">#6973</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nImprove minicondor configuration / better secure-by-default</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6975\" title=\"Collector segfaults in cedar authorization checking limited password2\">#6975</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCollector segfaults in cedar authorization checking limited password2</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-May-27 20:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56971\">[56971]</a></span>: Add documentation for the TOKEN method. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Apr-02 13:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56486\">[56486]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) Update a comment. Activate additional debugging in case of later problems.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-30 20:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56472\">[56472]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) Improve lib_auth_protocol-token test: log the output of a failed tool invocation.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-30 20:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56470\">[56470]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) Add lib_auth_protocol-token test.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-22 16:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56432\">[56432]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) Use our version of readLine() rather than the POSIX version that's missing from Windows.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-22 11:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56421\">[56421]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) See if getline() can be made available.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-21 17:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56411\">[56411]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) ... actually /commit/ all the fixes for the broken #undef min, #under max business. <strong>sigh</strong>  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-21 16:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56410\">[56410]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) Actually disable min and max macros on Windows. (<strong>sigh</strong>)  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-21 16:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56409\">[56409]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) Fix up some #include ordering. Reimplement findToken() with safefile. Make write_out_token() common code and change to use safefile as well.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-21 15:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56408\">[56408]</a></span>: Fix multiple-password code build errors on macOS. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span> Older macOS versions use OpenSSL 0.9.8. Newer versions use LibreSSL. Both required some minor code changes due to API differences.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-21 14:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56407\">[56407]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) Even tools should #include \"condor_common.h\"; also, they needed a copyright notice.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-21 11:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56405\">[56405]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) Hopefully fix broken condor_base64_encode(). If this doesn't work, I'll just revert back to the original.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-20 16:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56402\">[56402]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) Centos7 (any RPM) build fix.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-20 16:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56401\">[56401]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) Windows build fixes, and more Fedora 27.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-20 15:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56400\">[56400]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>) Fedora 27 build fixes.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-14 23:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56371\">[56371]</a></span>: Rename issuer namespace to trust domain. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-14 23:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56369\">[56369]</a></span>: Switch user tokens to be kept in a directory, not a file. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-14 23:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56370\">[56370]</a></span>: Refactor token CLI. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span> We now have separate tools for token list, create, and fetching.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-14 23:15</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56368\">[56368]</a></span>: Address reviewer comments. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span> This begins some of the renaming discussed in person with ToddM, ZKM, and ToddT (additional pieces to follow). Biggest review piece not addressed is moving about the CLI; this will be done as part of the major CLI refactoring planned next.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-13 23:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56365\">[56365]</a></span>: Add support for fetching session token from daemons. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span> This adds a new daemon core command, DC_GET_SESSION_TOKEN, which returns a signed token equivalent to the session established with the daemon. This token can subsequently be used by a client to authenticate via the PASSWORD2 method and receive\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-10 23:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56363\">[56363]</a></span>: Create a derived secret if possible. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span> If a derived secret is not present, then create it if we have access to a relevant master password.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-10 21:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56362\">[56362]</a></span>: Parse JWT metadata. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span> This commit adds support for additional JWT metadata: - If present, the `scope` claim will limit the authorizations available to the generated token. - If present, the 'expires at' claim will limit a given derived secret's lifetime. - If the server has set `SEC_DERIVED_SECRETS_MAX_AGE`,\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-10 17:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56361\">[56361]</a></span>: Add support for multiple keys. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span> Add support on the server for advertising the keys and issuer available during the authentication negotiation. This enables the client to determine which derived key to send to the server.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-08 23:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56360\">[56360]</a></span>: Migrate the token format from <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> to JWT. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-08 23:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56359\">[56359]</a></span>: Introduce a JWT library for use in the PASSWORD2. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6947\" title=\"Extend PASSWORD auth to support multiple and derived secrets\">#6947</a></span> This is from jwt-cpp (<a class=\"external\" href=\"https://github.com/Thalhammer/jwt-cpp\">https://github.com/Thalhammer/jwt-cpp</a>), which is MIT licensed.  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-May-27 20:39", "status": "resolved", "created": "2019-Mar-07 22:07", "fixed_version": "2019-Mar-07 22:07", "broken_version": "", "priority": "3", "subsystem": "Security", "assigned_to": "tlmiller", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "bbockelman@morgridge.org tannenba@cs.wisc.edu tlmiller@cs.wisc.edu", "due_date": ""}