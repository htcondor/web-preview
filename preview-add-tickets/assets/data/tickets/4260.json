{"id": 4260, "title": "Ticket #4260: condor_submit segfaults", "description": "<blockquote>\nCMS would like to start testing the 8.1.x series, but cannot because condor_submit segfaults.  Valgrind reveals:\n\n<p></p><div class=\"verbatim\">\n<pre>==21912== Invalid read of size 8\n==21912==    at 0x4D82B78: find_macro_item(char const*, macro_set&amp;) (in /data/srv/glidecondor/lib/libcondor_utils_8_1_4.so)\n==21912==    by 0x4D82C0F: lookup_macro_exact(char const*, macro_set&amp;, int) (in /data/srv/glidecondor/lib/libcondor_utils_8_1_4.so)\n==21912==    by 0x4D82CCA: lookup_macro(char const*, char const*, macro_set&amp;, int) (in /data/srv/glidecondor/lib/libcondor_utils_8_1_4.so)\n==21912==    by 0x4D82F3B: expand_macro (in /data/srv/glidecondor/lib/libcondor_utils_8_1_4.so)\n==21912==    by 0x411315: SetArguments() (in /data/srv/glidecondor/bin/condor_submit)\n==21912==    by 0x41EF7E: queue(int) (in /data/srv/glidecondor/bin/condor_submit)\n==21912==    by 0x420ED2: read_condor_file(_IO_FILE*) (in /data/srv/glidecondor/bin/condor_submit)\n==21912==    by 0x4215F9: main (in /data/srv/glidecondor/bin/condor_submit)\n==21912==  Address 0x732d8d0 is 0 bytes after a block of size 512 alloc'd\n==21912==    at 0x4A07152: operator new[](unsigned long) (vg_replace_malloc.c:363)\n==21912==    by 0x4D83F6E: insert (in /data/srv/glidecondor/lib/libcondor_utils_8_1_4.so)\n==21912==    by 0x40D730: set_condor_param(char const*, char const*) (in /data/srv/glidecondor/bin/condor_submit)\n==21912==    by 0x41F579: queue(int) (in /data/srv/glidecondor/bin/condor_submit)\n==21912==    by 0x420ED2: read_condor_file(_IO_FILE*) (in /data/srv/glidecondor/bin/condor_submit)\n==21912==    by 0x4215F9: main (in /data/srv/glidecondor/bin/condor_submit)\n</pre></div>\n\n\n<p>It appears when the macro table is re-allocated, we don't update the current allocation size.  Thus, if we ever go over the default table size,\n</p><ul>\n<li>We reallocate the whole table each time we insert something.\n</li><li>We segfault if we insert more than twice the number of elements the table is initialized with (or more than 32 items if there is no default size).\n</li></ul>\n\n<p>So, the segfault can possibly trigger if there's ever more than 32 lines in a submit file.  This makes sense above because each macro item is 16 bytes and the default size is 32, explaining the 512-byte allocation.\n\n</p><p>As a meta-grumpy-comment: there's nothing here that can't be done with std::vector and std::algorithm's sort and binary_search.  Using the standard tools instead of rolling our own would have prevented this.</p></blockquote>", "remarks": "<blockquote>\nbug is fixed, version history needed.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-31 13:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39772\">[39772]</a></span>: minor 8.1.5 version history item edits for two tickets: <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4260\" onclick=\"get_ticket_and_populate_wrapper('4260'); return false;\" title=\"condor_submit segfaults\">#4260</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4256\" onclick=\"get_ticket_and_populate_wrapper('4256'); return false;\" title=\"param self-references to pre-defined param values don't work\">#4256</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-28 13:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39755\">[39755]</a></span>: Version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4260\" onclick=\"get_ticket_and_populate_wrapper('4260'); return false;\" title=\"condor_submit segfaults\">#4260</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-15 13:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39633\">[39633]</a></span>: Grow allocation size when we grow the vector. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4260\" onclick=\"get_ticket_and_populate_wrapper('4260'); return false;\" title=\"condor_submit segfaults\">#4260</a></span> Committer: John (TJ) Knoeller  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-15 11:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39632\">[39632]</a></span>: Grow allocation size when we grow the vector. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4260\" onclick=\"get_ticket_and_populate_wrapper('4260'); return false;\" title=\"condor_submit segfaults\">#4260</a></span>  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-Mar-28 13:27", "status": "resolved", "created": "2014-Mar-15 11:45", "fixed_version": "2014-Mar-15 11:45", "broken_version": "v080103", "priority": "2", "subsystem": "Tools", "assigned_to": "johnkn", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "tannenba@cs.wisc.edu", "due_date": ""}