{"id": 7740, "title": "Ticket #7740: Port BLAHP to gcc 10", "description": "<blockquote>\nSo, my little fedora box got a new version of gcc, and now the BLAHP fails to compile, or link really:\n\n<p>gcc -g -O0 -o BLClient BLClient.o blah_utils.o BLfunctions.o  -ldl -lpthread\n\n</p><p>/usr/bin/ld: BLfunctions.o:/home/gthain/condor/b/externals/bundles/blahp/1.16.5.1/blahp-prefix/src/blahp/src/BLfunctions.h:73:\n\n</p><p>multiple definition of `argv0'; BLClient.o:/home/gthain/condor/b/externals/bundles/blahp/1.16.5.1/blahp-prefix/src/blahp/src/./BLfunctions.h:73: first defined here\n\n</p><p>Hmm.\ngthain@gthain src]$ nm BLClient.o | grep argv0\n0000000000000000 B argv0\n[gthain@gthain src]$ nm BLfunctions.o | grep argv0\n0000000000000000 B argv0\n\n</p><p>Well, the linker seems to have a point here -- linking together two .o's, each with a global data variable with the same name (argv0).  And why did the compiler do that?\n\n</p><p>both BLClient.c and BLfunctions.c include BLfunctions.h, and in this header file, we see on line 73:\n\n</p><p>char *argv0;\n\n</p><p>no extern, no static, just a definition. And there's a bunch of other variables like this causing multiply-defined symbols, but let's ignore that for now.\n\n</p><p>So, how did this ever work, I ask myself?\n\n</p><p>Compiling this on older versions of gcc shows that older versions of gcc put these symbols in the \"C\"ommon block.\n\n</p><p>Turns out, there's a gcc command line option, -fcommon that controls whether global variables with \"tentative definitions\" are put into the Common block (-fcommon) or put into the BSS (-fno-common).  And, the default from time immemorial was -fcommon, but gcc 10 changed this to -fno-common, without much fanfare.\n\n</p><p>Note this is one of these oddball corners where C is different than C++: the c++ language definition says these can't go in the common block, and must create multiply defined symbols, and the blahp is written in C, not C++.\n\n</p><p>So, the immediate fix is to add -fcommon to the command line, but in the long term we should extern these in the header file and define them in a c file.</p></blockquote>", "remarks": "<blockquote>\n<em>2020-Jul-21 14:41:37 by jfrey:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>This change looks good.\n\n</p><p></p><hr/>\n<em>2020-Jul-21 14:48:56 by gthain:</em> <br/>\n\nInternal port, no docs needed.\n\n<p></p><hr/>\n<em>2020-Jul-27 11:27:00 by gthain:</em> <br/>\n\nDRMAA got hit by this, too.\n\n<p></p><hr/>\n<em>2020-Jul-27 15:58:13 by jfrey:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>The DRMAA change also looks good.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-26 23:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60229\">[60229]</a></span>: DRMAA needs same -fcommon flag for gcc 10 <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7740\" onclick=\"get_ticket_and_populate_wrapper('7740'); return false;\" title=\"Port BLAHP to gcc 10\">#7740</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-21 11:24</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60168\">[60168]</a></span>: Add final part of <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7740\" onclick=\"get_ticket_and_populate_wrapper('7740'); return false;\" title=\"Port BLAHP to gcc 10\">#7740</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-19 15:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60154\">[60154]</a></span>: Make sure previous commit also works on el7 <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7740\" onclick=\"get_ticket_and_populate_wrapper('7740'); return false;\" title=\"Port BLAHP to gcc 10\">#7740</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-19 00:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60153\">[60153]</a></span>: Port blahp to gcc 10 <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7740\" onclick=\"get_ticket_and_populate_wrapper('7740'); return false;\" title=\"Port BLAHP to gcc 10\">#7740</a></span> Also remove --std=c++!! flag, as the blahp doesn't use C++  (By Greg Thain )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2020-Jul-27 15:58", "status": "resolved", "created": "2020-Jul-19 00:33", "fixed_version": "2020-Jul-19 00:33", "broken_version": "v080000", "priority": "2", "subsystem": "Port", "assigned_to": "gthain", "derived_from": "", "creator": "gthain", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}