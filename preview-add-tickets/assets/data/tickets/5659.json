{"id": 5659, "title": "Ticket #5659: getHostFromAddr() misparses sinfuls with IPv6", "description": "<blockquote>\nWhen getHostFromAddr() is given a sinful string with an IPv6 address in the supplemental data (stuff after the '?'), it returns the wrong result. It falsely assumes that the only place a ']' will occur is in the initial IP address of the string.\n\n<p>For example, for the sinful string <code>&lt;128.142.201.170:51450?addrs=128.142.201.170-51450+[--1]-51450&gt;</code> , it returns <code>128.142.201.170:51450?addrs=128.142.201.170-51450+[--1</code> .\n\n</p><p>One result is that the HAD daemon fails to recognize the address of its Replication daemon in the configuration parameters.</p></blockquote>", "remarks": "<blockquote>\n<em>2016-May-05 16:31:28 by tlmiller:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>This looks like it should work, but I'm concerned about not using the Sinful class to do the parsing if we get a Sinful string; we've already got at least one Sinful format (v1) that the corrections won't handle, and we may make it (or a further revision) the default at some point.\n\n</p><p>We should also take a look at the callers of this function and determine if it must handle non-Sinful strings; if some callers know the string will be a Sinful, we should just switch them over to using the Sinful object so we don't have to worry about it in the future.  (We should also probably use the Sinful object in getHostFromAddr(), if it survives, but that's a bigger change for later.)\n\n</p><p>We should also worry about <em>why</em> the callers are obtaining the \"host name\" (or IP address -- in the Sinful parlance, the primary address), since we can no longer assume, with shared port and CCB, that those are unique identifiers.\n\n</p><p>I wrote up a ticket (<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=5664\" onclick=\"get_ticket_and_populate_wrapper('5664'); return false;\" title=\"Review usage of getHostFromAddr().\">#5664</a></span>) for the above but pass as a small, safe bugfix for the stable series.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-May-31 15:15</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48455\">[48455]</a></span>: Docs for getHostFromAddr() IPv6 bug fix. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5659\" onclick=\"get_ticket_and_populate_wrapper('5659'); return false;\" title=\"getHostFromAddr() misparses sinfuls with IPv6\">#5659</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-May-05 16:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48365\">[48365]</a></span>: Fix bugs with getHostFromAddr() and complex sinful strings. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5659\" onclick=\"get_ticket_and_populate_wrapper('5659'); return false;\" title=\"getHostFromAddr() misparses sinfuls with IPv6\">#5659</a></span> getHostFromAddr() fouled up handling sinful strings that had an IPv6 address in the supplemental portion (the part after the '?').  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-May-05 16:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48364\">[48364]</a></span>: Add more unit tests for getHostFromAddr(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5659\" onclick=\"get_ticket_and_populate_wrapper('5659'); return false;\" title=\"getHostFromAddr() misparses sinfuls with IPv6\">#5659</a></span>  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2016-May-31 15:16", "status": "resolved", "created": "2016-May-05 14:41", "fixed_version": "2016-May-05 14:41", "broken_version": "v080400", "priority": "3", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "tlmiller@cs.wisc.edu,jfrey@cs.wisc.edu", "due_date": ""}