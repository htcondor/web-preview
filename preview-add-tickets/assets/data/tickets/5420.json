{"id": 5420, "title": "Ticket #5420: HTCondor incorrectly preempting jobs", "description": "<blockquote>\nOn both the LIGO and CMS glidein pools, we see consistent issue with slots being preempted despite the fact preemption is disabled.\n\n<p>I suspect there's a lack of transaction safety here - the negotiator has a private ad corresponding to a preempting claim but a public ad corresponding to when the slot was unclaimed.\n\n</p><p>Two suggestions:\n</p><ol>\n<li>In the private ad, record the current state/activity.  If it does not match the state/activity of the public ad, do not hand out a claim.\n</li><li>Add a counter to the private and public ad; reject the private ad if the counters do not match in the negotiator.\n</li></ol>\n\n<p>In other words, we try to make sure the private ad reasonably matches the public ad.  The latter is more foolproof (consider what happens if a slot goes unclaimed-&gt;claimed-&gt;unclaimed between the two ad queries), the first would likely have a smaller performance impact.</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Nov-30 17:08:02 by tannenba:</em> <br/>\n\nHi Brian,\n\n<p>First a few questions:\n\n</p><p></p><ol>\n<li>Are the slots you observe being preempted static slots or dynamic slots? (my guess is dynamic slots)\n\n<p></p></li><li>Are both pools using a \"collector tree\"?\n\n<p></p></li><li>How did you observe the situation where \"the negotiator has a private ad corresponding to a preempting claim but a public ad corresponding to when the slot was unclaimed\" ?\n</li></ol>\n\n<p>Now some brainstorming:\n\n</p><p>I cannot see how this would happen with static slots, but I imagine it could potentially happen with dynamic slots.  In addition to your suggestions above, a third option would be to do away with private ads all together and instead have the startd put the claim right into the public ad as a private attribute. This would fix any transaction safety issue, potentially make the central manager more scalable (not sure about this, as we'd save the time by not creating a new classad but potentially take up time encrypting/decrypting the private attribute), always encrypt the capability between the startd and collector, and simplify the collector code moving forward.\n\n</p><p>If you come back and say that this unwanted preemption is happening on static slots, then I would be baffled because of how things are supposed to be implemented (according to the design) with respect to static slots:\n</p><ul>\n<li>The startd is supposed to always generate fresh new claim ids (both public and private) whenever a slot enters back into unclaimed.\n</li><li>Updates sent to the collector from the startd should contain both the public and private ads in the same message, thus the updates should arrive atomically.\n</li><li>The collector does do two separate queries, but it should query the private ads first and then subsequently fetch all the public ads.\n</li></ul>\n\n<p>Given the above three design rules, it is hard to see how the matchmaker could end up with a preempting claim in the private ad and an unclaimed public ad when using static slots.  Unless of course there is an implementation bug or regression. :O.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "incident", "last_change": "2015-Nov-30 17:08", "status": "active", "created": "2015-Nov-30 14:26", "fixed_version": "2015-Nov-30 14:26", "broken_version": "", "priority": "3", "subsystem": "DaemonsCM", "assigned_to": "tannenba", "derived_from": "#4490", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "", "due_date": ""}