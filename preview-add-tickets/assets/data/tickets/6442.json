{"id": 6442, "title": "Ticket #6442: Be paranoid about CommitTransaction()'s implicit semantics", "description": "<blockquote>\nWe changed the semantics of CommitTransaction() at some point from always dying on failure to occasionally returning negative numbers (and sometimes error stacks).  It worries me that we haven't changed the code in a number of places to reflect this change.  Initially, I propose to change the names of the calls to match their implicit semantics, and dprintf() warnings if any of the new functions -- which should behave identically to the original aside from this -- are used improperly.  If that works for a while, it'd be nice to convert the checks to assertions.  After discussion with TJ, he agreed that the dprintf()d warning should trigger test-suite failures.</blockquote>", "remarks": "<blockquote>\n<em>2017-Oct-11 15:00:30 by tlmiller:</em> <br/>\n\nIt seemed prudent to this checked, even though it's going into the master branch, since CommitTransaction() is kind of important.  TJ wanted a ticket, so here it is.\n\n<p></p><hr/>\n<em>2017-Oct-11 21:20:51 by bbockelm:</em> <br/>\n\nNote that there's quite a bit of available help you can get from the compiler.  See: <a class=\"external\" href=\"https://gcc.gnu.org/onlinedocs/gcc-4.6.0/gcc/Function-Attributes.html\">https://gcc.gnu.org/onlinedocs/gcc-4.6.0/gcc/Function-Attributes.html</a>\n\n<p>In particular, you can mark functions as:\n\n</p><p></p><ul>\n<li><code>noreturn</code>: function doesn't return and should always call exit/abort .  See <a class=\"external\" href=\"https://github.com/htcondor/htcondor/blob/master/src/condor_includes/condor_header_features.h#L80\">https://github.com/htcondor/htcondor/blob/master/src/condor_includes/condor_header_features.h#L80</a>\n</li><li><code>warn_unused_result</code>: compiler should emit a warning if the function is called but the return value goes ignored.\n</li></ul>\n\n<p></p><hr/>\n<em>2017-Oct-12 10:38:44 by tlmiller:</em> <br/>\n\nI'd forgotten about these two options, so thanks for the heads-up.  However, I don't immediately see the utility of <code>noreturn</code> in this situation -- <code>CommitTransaction()</code> is in fact expected to return, just never with errors.\n\n<p>I'll look into <code>warn_unused_result</code>.\n\n</p><p></p><hr/>\n<em>2017-Dec-13 11:43:30 by johnkn:</em> <br/>\n\n<strong>CODE_REVIEW</strong> changes look good.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Oct-12 15:28</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=52564\">[52564]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6442\" title=\"Be paranoid about CommitTransaction()'s implicit semantics\">#6442</a></span>) Add warn_unused_result attribute to CommitTransactionAndLive().  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Oct-11 13:24</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=52553\">[52553]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6442\" title=\"Be paranoid about CommitTransaction()'s implicit semantics\">#6442</a></span>) Be explicit about the \"or-die-trying\" part of CommitTransaction(), except where the code explicitly handles errors. dprintf() \"ERROR:\" messages if the newly-explicit API is ever misused.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2017-Dec-13 11:45", "status": "resolved", "created": "2017-Oct-11 14:59", "fixed_version": "2017-Oct-11 14:59", "broken_version": "", "priority": "2", "subsystem": "DaemonsSubmitNode", "assigned_to": "johnkn", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}