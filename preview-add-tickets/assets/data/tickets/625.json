{"id": 625, "title": "Ticket #625: Rework how startd handles VM resources", "description": "<blockquote>\nThe startd handles system resources for VM universe jobs like a poor man's dynamic slot partitioning. All slots advertise the total number of cpus and memory left for use by VM jobs on the machine. When a VM job is matched and starts executing, the cpu and memory totals advertised by all slots are decremented. The VM cpus and memory can be over-provisioned in a given negotiation cycle, as all slots advertise the total amounts available.\n\n<p>This VM universe-specific behavior is confusing to users and unnecessary. The same effects can be obtained using slot-specific requirements and dynamic slot partitioning. The VM-specific cpu and memory totals should be eliminated and the standard per-slot allocations used.\n\n</p><p>Each slot ad currently contains a list of all IPs and MACs for running VMs. Each slot should contain just the IP and MAC for the VM running on that slot.</p></blockquote>", "remarks": "<blockquote>\n<em>2010-Aug-12 05:54:14 by matt:</em> <br/>\n\nLet's consider generalizing these ideas into startd limits, the machine local version of pool wide concurrency limits.\n\n<p></p><hr/>\n<em>2012-Oct-17 07:45:37 by tstclair:</em> <br/>\n\nThis seems to have languished for some time, I still see parts of it as true, but it's a question of whether anyone cares.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2012-Oct-17 07:45", "status": "new", "created": "2009-Jul-14 14:15", "fixed_version": "2009-Jul-14 14:15", "broken_version": "v070300", "priority": "4", "subsystem": "VM", "assigned_to": "", "derived_from": "#523", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tstclair@redhat.com, jfrey@cs.wisc.edu", "due_date": ""}