{"id": 2186, "title": "Ticket #2186: groups are not sorted in starvation order", "description": "<blockquote>\nIt used to be the case that groups were sorted by the fraction of their quota that they were using.  Those starving the most were considered first. This behavior was inadvertently dropped in the introduction of hierarchical groups.\n\n<p>This is resulting in some cases of starvation of groups who are unlucky and happen to fall near the end of the order in which negotiation happens.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-May-25 00:56:50 by eje:</em> <br/>\n\nRepro/test\n\n<p>Using this configuration:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">$ cat 95.starvation_order.config\nNEGOTIATOR_DEBUG = D_FULLDEBUG\nNEGOTIATOR_USE_SLOT_WEIGHTS = FALSE\nNEGOTIATOR_INTERVAL = 30\n\nSCHEDD_INTERVAL\t= 15\n\nCLAIM_WORKLIFE = 0\n\nNUM_CPUS = 10\n\n# turn off round robin and multiple allocation rounds\nHFS_ROUND_ROBIN_RATE = 100000000\nHFS_MAX_ALLOCATION_ROUNDS = 1\n\nGROUP_NAMES = a, b\n\nGROUP_QUOTA_a = 5\nGROUP_QUOTA_b = 5\n\nGROUP_AUTOREGROUP = TRUE\n</pre></div>\n\n\n<p>submit this file, which generates some jobs for groups \"a\" and \"b\", which compete for the same five slots (therefore setting up potential starvation), and which have randomized durations 15-45 seconds:\n</p><div class=\"code\">\n<pre class=\"code\">$ cat starvation_order.submit\nuniverse = vanilla\ncmd = /bin/sleep\n# random sleep durations from 15 to 45 seconds\narguments = $$([15 + random(46)])\n# set up \"a\" and \"b\" to compete for sub-pool:\nRequirements = (SlotID &lt;= 5)\n+AccountingGroup = \"a.user\"\nqueue 50\n+AccountingGroup = \"b.user\"\nqueue 50\n</pre></div>\n\n\n<p>Before restoring starvation order, we see this behavior on negotiation, where group \"a\" always negotiates first, and starves group \"b\":\n</p><div class=\"code\">\n<pre class=\"code\">$ tail -f NegotiatorLog | grep -e 'group quotas: Group.*allocated=.*usage= ' -e 'Round.*totals:'\n05/24/11 22:28:34 group quotas: Group a  allocated= 0  usage= 0\n05/24/11 22:28:34 group quotas: Group b  allocated= 0  usage= 0\n05/24/11 22:28:34 Round 1 totals: allocated= 0  usage= 0\n05/24/11 22:28:54 group quotas: Group &lt;none&gt;  allocated= 0  usage= 0\n05/24/11 22:28:54 group quotas: Group a  allocated= 5  usage= 5\n05/24/11 22:28:54 group quotas: Group b  allocated= 5  usage= 0\n05/24/11 22:28:54 Round 1 totals: allocated= 10  usage= 5\n05/24/11 22:29:24 group quotas: Group &lt;none&gt;  allocated= 0  usage= 0\n05/24/11 22:29:24 group quotas: Group a  allocated= 5  usage= 5\n05/24/11 22:29:24 group quotas: Group b  allocated= 5  usage= 0\n05/24/11 22:29:24 Round 1 totals: allocated= 10  usage= 5\n05/24/11 22:29:55 group quotas: Group &lt;none&gt;  allocated= 0  usage= 0\n05/24/11 22:29:55 group quotas: Group a  allocated= 5  usage= 5\n05/24/11 22:29:55 group quotas: Group b  allocated= 5  usage= 0\n05/24/11 22:29:55 Round 1 totals: allocated= 10  usage= 5\n05/24/11 22:30:26 group quotas: Group &lt;none&gt;  allocated= 0  usage= 0\n05/24/11 22:30:26 group quotas: Group a  allocated= 5  usage= 5\n05/24/11 22:30:26 group quotas: Group b  allocated= 5  usage= 0\n05/24/11 22:30:26 Round 1 totals: allocated= 10  usage= 5\n...\n</pre></div>\n\n\n<p>After patch to restore starvation ordering, we see groups negotiate in changing order, by who is 'most starved':  both groups get a balanced allocation of jobs over time:\n</p><div class=\"code\">\n<pre class=\"code\">$ tail -f NegotiatorLog | grep -e 'group quotas: Group.*allocated=.*usage= ' -e 'Round.*totals:' -e 'starvation='\n05/24/11 22:35:35 Group a - starvation= 0 (0/5)  prio= 0.5\n05/24/11 22:35:36 Group b - starvation= 0 (0/5)  prio= 0.5\n05/24/11 22:35:36 Group &lt;none&gt; - starvation= 1.79769e+308 (0/0)  prio= 0.5\n05/24/11 22:35:36 group quotas: Group &lt;none&gt;  allocated= 0  usage= 0\n05/24/11 22:35:36 group quotas: Group a  allocated= 5  usage= 5\n05/24/11 22:35:36 group quotas: Group b  allocated= 5  usage= 0\n05/24/11 22:35:36 Round 1 totals: allocated= 10  usage= 5\n05/24/11 22:36:06 Group b - starvation= 0 (0/5)  prio= 0.5\n05/24/11 22:36:07 Group a - starvation= 0.6 (3/5)  prio= 0.501091\n05/24/11 22:36:07 Group &lt;none&gt; - starvation= 1.79769e+308 (0/0)  prio= 0.5\n05/24/11 22:36:07 group quotas: Group &lt;none&gt;  allocated= 0  usage= 0\n05/24/11 22:36:07 group quotas: Group a  allocated= 5  usage= 3\n05/24/11 22:36:07 group quotas: Group b  allocated= 5  usage= 2\n05/24/11 22:36:07 Round 1 totals: allocated= 10  usage= 5\n05/24/11 22:36:37 Group a - starvation= 0.2 (1/5)  prio= 0.501712\n05/24/11 22:36:38 Group b - starvation= 0.4 (2/5)  prio= 0.500365\n05/24/11 22:36:38 Group &lt;none&gt; - starvation= 1.79769e+308 (0/0)  prio= 0.5\n05/24/11 22:36:38 group quotas: Group &lt;none&gt;  allocated= 0  usage= 0\n05/24/11 22:36:38 group quotas: Group a  allocated= 5  usage= 3\n05/24/11 22:36:38 group quotas: Group b  allocated= 5  usage= 2\n05/24/11 22:36:38 Round 1 totals: allocated= 10  usage= 5\n05/24/11 22:37:08 Group b - starvation= 0.2 (1/5)  prio= 0.500738\n05/24/11 22:37:09 Group a - starvation= 0.4 (2/5)  prio= 0.502325\n05/24/11 22:37:09 Group &lt;none&gt; - starvation= 1.79769e+308 (0/0)  prio= 0.5\n05/24/11 22:37:09 group quotas: Group &lt;none&gt;  allocated= 0  usage= 0\n05/24/11 22:37:09 group quotas: Group a  allocated= 5  usage= 2\n05/24/11 22:37:09 group quotas: Group b  allocated= 5  usage= 3\n05/24/11 22:37:09 Round 1 totals: allocated= 10  usage= 5\n...\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-May-26 11:08:23 by danb:</em> <br/>\n\nErik,\n\n<p>Thanks for the quick fix.  This patch looks good to me for inclusion in 7.6.\n\n</p><p>--Dan</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2240\" onclick=\"get_ticket_and_populate_wrapper('2240'); return false;\" title=\"RFE: secondary submitter sort using starvation in negotiateWithGroup\">#2240</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nRFE: secondary submitter sort using starvation in negotiateWithGroup</td></tr>\n</tbody></table>", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/356/gt2186_starvation_order.patch\">gt2186_starvation_order.patch</a>\n3434 bytes added by eje on 2011-May-25 05:47:38 UTC.\n<br/>\nPatch to restore starvation ordering to HGQ<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-May-25 12:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21979\">[21979]</a></span>: Restore starvation ordering to group quota negotiation order. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2186\" onclick=\"get_ticket_and_populate_wrapper('2186'); return false;\" title=\"groups are not sorted in starvation order\">#2186</a></span>  (By Erik Erlandson )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Oct-19 09:32", "status": "resolved", "created": "2011-May-23 13:10", "fixed_version": "2011-May-23 13:10", "broken_version": "v070506", "priority": "2", "subsystem": "", "assigned_to": "eje", "derived_from": "", "creator": "danb", "rust": "a22176", "customer_group": "atlas", "visibility": "public", "notify": "dan@hep.wisc.edu, eje@cs.wisc.edu, tstclair@redhat.com", "due_date": ""}