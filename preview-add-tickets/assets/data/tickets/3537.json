{"id": 3537, "title": "Ticket #3537: Use euidaccess() instead of manually checking file permissions", "description": "<blockquote>\nWe provide our own replacement for the access() system call that uses the effective uid instead of the real uid. Our replacement is call access_euid(). One problem it has is that when checking for execute permission on a directory, it only compares the file's owner and group to the effective uid and gid of the process. This ignores ACLs and secondary groups. This can lead to access() calls returning failure when the process does have the requisite permissions.\n\n<p>On many (all recent?) versions of linux, there is a function to do this check correctly, called euidaccess(). It behaviors the same as access(), but uses the current process's effective uid and gid.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2013-Mar-11 18:14", "status": "new", "created": "2013-Mar-11 18:14", "fixed_version": "2013-Mar-11 18:14", "broken_version": "v070800", "priority": "4", "subsystem": "Libs", "assigned_to": "", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "users", "visibility": "public", "notify": "", "due_date": ""}