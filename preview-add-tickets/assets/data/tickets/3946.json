{"id": 3946, "title": "Ticket #3946: Bad collector name crashes daemons and tools", "description": "<blockquote>\nIf COLLECTOR_HOST includes a bad hostname (i.e. one that can't be resolved to an IP address), various tools and and daemons can crash. This is due to the blacklist Timeslice map in DCCollector. It's keyed on the sinful string, as returned by the addr() method. But if the hostname is bad, addr() returns NULL, which results in an exception when doing a lookup in the map.\n\n<p>Here is a stack trace:\n</p><div class=\"code\">\n<pre class=\"code\">#0  0x00000037838328e5 in raise () from /lib64/libc.so.6\n#1  0x00000037838340c5 in abort () from /lib64/libc.so.6\n#2  0x000000378dcbea5d in __gnu_cxx::__verbose_terminate_handler() ()\n   from /usr/lib64/libstdc++.so.6\n#3  0x000000378dcbcbe6 in ?? () from /usr/lib64/libstdc++.so.6\n#4  0x000000378dcbcc13 in std::terminate() () from /usr/lib64/libstdc++.so.6\n#5  0x000000378dcbcd0e in __cxa_throw () from /usr/lib64/libstdc++.so.6\n#6  0x000000378dc61837 in std::__throw_logic_error(char const*) ()\n   from /usr/lib64/libstdc++.so.6\n#7  0x000000378dc9ce59 in ?? () from /usr/lib64/libstdc++.so.6\n#8  0x000000378dc9cf33 in std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;) ()\n   from /usr/lib64/libstdc++.so.6\n#9  0x00007ffff7c77d08 in DCCollector::getBlacklistTimeslice (this=0x637860)\n    at /u/j/f/jfrey/condor/CONDOR_SRC/src/condor_daemon_client/dc_collector.cpp:919\n#10 0x00007ffff7c77f5c in DCCollector::isBlacklisted (this=0x637860)\n    at /u/j/f/jfrey/condor/CONDOR_SRC/src/condor_daemon_client/dc_collector.cpp:940\n#11 0x00007ffff7c74350 in CollectorList::query (this=0x6375f0, cQuery=...,\n    adList=..., errstack=0x7fffffffddb0)\n    at /u/j/f/jfrey/condor/CONDOR_SRC/src/condor_daemon_client/daemon_list.cpp:307\n#12 0x000000000040ac9a in main (argc=1, argv=0x7fffffffe358)\n    at /u/j/f/jfrey/condor/CONDOR_SRC/src/condor_status.V6/status.cpp:454\n</pre></div>\n\n\n<p>I've observed crashes in condor_status and condor_negotiator.</p></blockquote>", "remarks": "<blockquote>\nCODE REVIEW: looks good - tj</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Dec-03 10:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=38912\">[38912]</a></span>: edit 8.0.5 version history item <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3946\" onclick=\"get_ticket_and_populate_wrapper('3946'); return false;\" title=\"Bad collector name crashes daemons and tools\">#3946</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Nov-26 15:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=38863\">[38863]</a></span>: Docs for bad collector name crash bug fix. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3946\" onclick=\"get_ticket_and_populate_wrapper('3946'); return false;\" title=\"Bad collector name crashes daemons and tools\">#3946</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Nov-26 15:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=38861\">[38861]</a></span>: Don't crash when querying a collector whose name doesn't resolve. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3946\" onclick=\"get_ticket_and_populate_wrapper('3946'); return false;\" title=\"Bad collector name crashes daemons and tools\">#3946</a></span> In CollectorList::query(), check for daemon-&gt;addr() being NULL before checking if it's blacklisted, as the blacklist check asssumes addr() isn't NULL.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2013-Nov-26 16:18", "status": "resolved", "created": "2013-Sep-25 15:39", "fixed_version": "2013-Sep-25 15:39", "broken_version": "v080000", "priority": "2", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "#3828", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}