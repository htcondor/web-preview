{"id": 4035, "title": "Ticket #4035: precomputing surplus does not work with HGQ and slot weights", "description": "<blockquote>\nThe current negotiator logic where quota surplus is computed prior to actual negotiation prevents certain categories of use cases for group quotas and slot weights.\n\n<p>Example:\n\n</p><p></p><div class=\"verbatim\">\n<pre>&lt;tannenba&gt; Imagine a parent group P (quota 100, no surplus), and child groups A (quota 50 w/ surplus) and B (quota 50 w/ surplus).  Group A has 100 jobs submitted, group B has 5.\n&lt;tannenba&gt; Negotiation starts.\n&lt;tannenba&gt; Negotiator starts negotiating with group A, cuz it is furthest from its quota.\n&lt;tannenba&gt; it compues for group A a scheduler limit of 95, which is the sum of 50 (its quota) plus 45 (its surplus).\n&lt;tannenba&gt; so its starts negotiating w/ group A with a scheduler limit of 95.\n&lt;tannenba&gt; turns out that all of group A's jobs request 25 cores each.\n&lt;tannenba&gt; if slotweight=CPU, the negotiator will stop after it matches 3 jobs from group A, since the slot weight for each job is 25.\n&lt;tannenba&gt; and 3 jobs * 25 slot weight &lt; 95\n&lt;tannenba&gt; lets also assume that all the jobs from group B are 25 cores, to make things simple\n&lt;tannenba&gt; What SHOULD have happened is group A should have 2 jobs, and group B should have 2 jobs. But what WILL happen (i think) is group A will get 3 jobs, and group B will only be left running 1 job.\n&lt;tannenba&gt; Because of how HGQ computes surplus, the policy is off by 25%\n&lt;tannenba&gt; again, this problem does not happen unless you have surplus enabled (but without enabling surplus, you don't have hierarchical groups).\n</pre></div>\n\n\n<p>Ideally, jobs could match and have their usages updated by whatever slot weight the match cost.  If a particular submitter runs out of jobs that can match, slot quotas can be re-computed without that submitter, and with remaining resources,\nand negotiation can proceed.  That form of 'surplus' inherently takes into account what matches are costing, as they happen.  This would make quota allocations work analogously to how submitter shares are recomputed now.\n\n</p><p>A side effect of this would be that GROUP_QUOTA_ROUND_ROBIN_RATE and GROUP_QUOTA_MAX_ALLOCATION_ROUNDS (and associated loops) would become irrelevant.</p></blockquote>", "remarks": "<blockquote>\n<em>2018-Feb-09 10:51:42 by tannenba:</em> <br/>\n\nAbandoning this ticket.... HTCondor has been modified so that if slot weights only references attributes Cpus and Memory, then it will work with HGQ surplus...</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2018-Feb-09 10:51", "status": "abandoned", "created": "2013-Nov-02 10:47", "fixed_version": "2013-Nov-02 10:47", "broken_version": "v070800", "priority": "2", "subsystem": "DaemonsCM", "assigned_to": "eje", "derived_from": "", "creator": "eje", "rust": "", "customer_group": "atlas", "visibility": "public", "notify": "eje@cs.wisc.edu, matt@cs.wisc.edu, tstclair@redhat.com, tannenba@cs.wisc.edu, gthain@cs.wisc.edu", "due_date": ""}