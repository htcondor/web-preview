{"id": 6048, "title": "Ticket #6048: Have separate Dag objects for splices?", "description": "<blockquote>\nThinking about the option of having separate Dag objects for splices, instead of \"lifting\" the splice nodes into the parent Dag object.\n\n<p>This would make a whole lot of other things way simpler to implement:\n</p><ul>\n<li>PRE/POST scripts on splices.\n</li><li>Per-splice throttling (<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=5653\" onclick=\"get_ticket_and_populate_wrapper('5653'); return false;\" title=\"Add per-splice DAG throttling\">#5653</a></span>).\n</li><li>Retries on splices.\n</li><li>DIR on splices (<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=4824\" onclick=\"get_ticket_and_populate_wrapper('4824'); return false;\" title=\"Should DIR for splices work the same as for sub-DAGs?\">#4824</a></span>).\n</li><li>Lazy creation of splice DAG files.\n</li></ul>\n\n<p>Also see <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=2980\" onclick=\"get_ticket_and_populate_wrapper('2980'); return false;\" title=\"RFC: Unify SPLICE and SUBDAG EXTERNAL in DAGman\">#2980</a></span>: RFC: Unify SPLICE and SUBDAG EXTERNAL in DAGman.\n\n</p><p>The biggest problem I see with this is how it would work with splice connections.  (In a way, now, I'm kind of unhappy with the splice connection feature, because it really breaks the correspondence between sub-DAGs and splices.)  Maybe we could have cross-Dag-object dependencies?  I'm not sure how hard that would be.\n\n</p><p>Anyhow, one way that we could avoid that problem is by making a new \"sub-DAG internal\" feature, that would be like splices (no extra DAGMan instance) other than that it wouldn't allow splice connections.  The main problem I see with that is that we'd then have <strong>three</strong> sets of code to maintain, whereas now we only have two.  Maybe we could initially implement a separate sub-DAG internal feature, and then eventually merge it with splices?\n\n</p><p>Maybe we want a separate sub-DAG internal feature anyhow, though, because splice connections really <strong>conceptually</strong> complicate some of the other things we want to do with splices.  For example, if you have PRE and POST scripts on a splice that has splice connections, when should they get run?\n\n</p><p>I guess a lot of this depends on how far we want to go with making splices and sub-DAGs work alike -- if we just want to add PRE and POST scripts to splices, it would be way easier, I think, to just add socket nodes.  But if we really want to do retries on splices, per-splice throttling, etc., it probably makes more sense to convert to separate Dag objects.  Unfortunately, we kind of need to decide that up front, because if we implement socket nodes, and then later go to separate Dag objects, the socket node work will be pretty much wasted...</p></blockquote>", "remarks": "<blockquote>\n<em>2017-May-16 13:29:24 by wenger:</em> <br/>\n\nAnother advantage of this I just thought of:  it would probably make it easier to be able to have individual configuration for a splice (e.g., different MAXIDLE settings for splices within the DAG).</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2017-May-16 13:48", "status": "new", "created": "2016-Dec-12 16:09", "fixed_version": "2016-Dec-12 16:09", "broken_version": "v080508", "priority": "4", "subsystem": "Dag", "assigned_to": "coatsworth", "derived_from": "#3587", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu, coatsworth@cs.wisc.edu", "due_date": ""}