{"id": 2679, "title": "Ticket #2679: RFE: Alter semantic of GROUP_AUTOREGROUP to replicate legacy behavior", "description": "<blockquote>\nSome customers would like a way to preserve the pre-HGQ legacy behavior where submitters against groups with quotas get to negotiate first (up to their quota), and then all other non-group submitters negotiate, with the option of also allowing groups with acct groups to get thrown in as well if \"autoregroup\" is enabled.\n\n<p>Part of this request is addressed by <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2678\" onclick=\"get_ticket_and_populate_wrapper('2678'); return false;\" title=\"RFE: expose accounting group negotiation-ordering to configuration\">#2678</a></span> (none can be ordered last).\n\n</p><p>The second part (supporting legacy autoregroup behavior) can be done in the following way:\n\n</p><p>If either GROUP_AUTOREGROUP or any of GROUP_AUTOREGROUP_&lt;groupname&gt; are set to TRUE, then the submitter-list associated with &lt;none&gt; will have <strong>all</strong> submitters attached to it.\n\n</p><p>GROUP_ACCEPT_SURPLUS will continue to have its current semantic, of controlling the \"allocation-proportional\" surplus allocation.\n\n</p><p>One open question: should we have GROUP_AUTOREGROUP <strong>disable</strong> the proportional-surplus algorithm, or allow their operation to be orthogonal? (in that scheme, proportional surplus would only operate if at least one of GROUP_ACCEPT_SURPLUS was set to true)  For example, you could keep proportional surplus, but still have &lt;none&gt; negotiate last and allow everybody to negotiate as part of &lt;none&gt;.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Dec-01 14:11:51 by tannenba:</em> <br/>\n\nUgh, having their operation be orthogonal hurts my head. :).  Seems like folks should pick one or the other.\n\n<p></p><hr/>\n<em>2011-Dec-08 22:08:35 by eje:</em> <br/>\n\nSemantic of GROUP_AUTOREGROUP and GROUP_AUTOREGROUP_&lt;grpname&gt; have been de-coupled from GROUP_ACCEPT_SURPLUS so that enabling autoregroup now emulates pre-HGQ legacy behavior: the root \"none\" group negotiates last, and any submitters from groups with autoregroup enabled are also appended to negotiate with \"none.\"\n\n<p>If no autoregroup is set, then the current \"proportional surplus\" allocation is used, and \"none\" is ordered and negotiates in the same way as all other groups.\n\n</p><p></p><hr/>\n<em>2011-Dec-08 22:40:58 by eje:</em> <br/>\n\nTESTING\n\n<p>Begin with the following configuration, which enables accept-surplus and does not enable autoregroup:\n</p><div class=\"code\">\n<pre class=\"code\">NEGOTIATOR_DEBUG = D_FULLDEBUG\nNEGOTIATOR_USE_SLOT_WEIGHTS = FALSE\nNEGOTIATOR_INTERVAL = 30\n\nSCHEDD_INTERVAL\t= 15\n\nCLAIM_WORKLIFE = 0\n\nNUM_CPUS = 20\n\n# turn off round robin and multiple allocation rounds\nHFS_ROUND_ROBIN_RATE = 100000000\nHFS_MAX_ALLOCATION_ROUNDS = 1\n\nGROUP_NAMES = a, b\n\n# 10 slots are left over for root group \"none\"\nGROUP_QUOTA_a = 5\nGROUP_QUOTA_b = 5\n\n# autoregroup is off\nGROUP_ACCEPT_SURPLUS = TRUE\nGROUP_AUTOREGROUP = FALSE\n</pre></div>\n\n\n<p>Using the following submission:\n</p><div class=\"code\">\n<pre class=\"code\">universe = vanilla\ncmd = /bin/sleep\nargs = 60\nshould_transfer_files = if_needed\nwhen_to_transfer_output = on_exit\n+AccountingGroup=\"a.user\"\nqueue 10\n+AccountingGroup=\"b.user\"\nqueue 10\n</pre></div>\n\n\n<p>Submitting the jobs verifies current behavior:\n</p><div class=\"code\">\n<pre class=\"code\">$ tailf NegotiatorLog | grep -e 'Started Negotiation' -e 'group quotas: group=.*quota=.*requested=.*' -e 'Group.* - BEGIN' -e 'Negotiating with .* at' -e 'autoregroup'\n12/08/11 20:37:02 ---------- Started Negotiation Cycle ----------\n12/08/11 20:37:03 group quotas: group= &lt;none&gt;  quota= 10  requested= 0  allocated= 0  unallocated= 0\n12/08/11 20:37:03 group quotas: group= a  quota= 5  requested= 10  allocated= 10  unallocated= 0\n12/08/11 20:37:03 group quotas: group= b  quota= 5  requested= 10  allocated= 10  unallocated= 0\n12/08/11 20:37:03 Group a - BEGIN NEGOTIATION\n12/08/11 20:37:03   Negotiating with a.user@localdomain at &lt;192.168.1.2:42279&gt;\n12/08/11 20:37:03 Group b - BEGIN NEGOTIATION\n12/08/11 20:37:03   Negotiating with b.user@localdomain at &lt;192.168.1.2:42279&gt;\n</pre></div>\n\n\n<p>All 20 jobs negotiate in the above cycle, using proportional surplus allocation:\n</p><div class=\"code\">\n<pre class=\"code\">$ qvhist AccountingGroup JobStatus\n     10 a.user | 2\n     10 b.user | 2\n     20 total\n</pre></div>\n\n\n<p>To test new autoregroup semantic, enable GROUP_AUTOREGROUP in the config above:\n</p><div class=\"code\">\n<pre class=\"code\">GROUP_AUTOREGROUP = TRUE\n</pre></div>\n\n\n<p>re-submit the jobs, and this time all twenty jobs should negotiate, but the 10 extra jobs from \"a\" and \"b\" should negotiate under \"&lt;none&gt;\", and after the \"a\" and \"b\" groups negotiate:\n</p><div class=\"code\">\n<pre class=\"code\">12/08/11 20:39:26 ---------- Started Negotiation Cycle ----------\n12/08/11 20:39:26 group quotas: autoregroup mode: appended 2 submitters to group &lt;none&gt; negotiation\n12/08/11 20:39:26 group quotas: autoregroup mode: proportional surplus allocation disabled\n12/08/11 20:39:26 group quotas: autoregroup mode: allocating 20 to group &lt;none&gt;\n12/08/11 20:39:26 group quotas: group= &lt;none&gt;  quota= 10  requested= 20  allocated= 20  unallocated= 0\n12/08/11 20:39:26 group quotas: group= a  quota= 5  requested= 10  allocated= 5  unallocated= 5\n12/08/11 20:39:26 group quotas: group= b  quota= 5  requested= 10  allocated= 5  unallocated= 5\n12/08/11 20:39:26 group quotas: autoregroup mode: forcing group &lt;none&gt; to negotiate last\n12/08/11 20:39:26 Group a - BEGIN NEGOTIATION\n12/08/11 20:39:26   Negotiating with a.user@localdomain at &lt;192.168.1.2:42279&gt;\n12/08/11 20:39:26 Group b - BEGIN NEGOTIATION\n12/08/11 20:39:26   Negotiating with b.user@localdomain at &lt;192.168.1.2:42279&gt;\n12/08/11 20:39:26 Group &lt;none&gt; - BEGIN NEGOTIATION\n12/08/11 20:39:26 group quotas: autoregroup mode: negotiating with legacy mode for &lt;none&gt;\n12/08/11 20:39:26   Negotiating with b.user@localdomain at &lt;192.168.1.2:42279&gt;\n12/08/11 20:39:26   Negotiating with a.user@localdomain at &lt;192.168.1.2:42279&gt;\n12/08/11 20:39:27   Negotiating with a.user@localdomain at &lt;192.168.1.2:42279&gt;\n</pre></div>\n\n<div class=\"code\">\n<pre class=\"code\">$ qvhist AccountingGroup JobStatus\n     10 a.user | 2\n     10 b.user | 2\n     20 total\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Dec-16 14:58:59 by danb:</em> <br/>\n\n\n<p>Code review:\n\n</p><p>(Thanks for the patch!)\n\n</p><p>Perhaps the negotiator should EXCEPT if ACCEPT_SURPLUS is true when AUTOREGROUP is also true.  The negotiator currently only supports one or the other, not both at the same time, right?  It wouldn't be obvious to me as a user that turning on autoregroup for one group would stomp on ACCEPT_SURPLUS for all the other groups, so I think it would be best to be as strict as possible in the configuration we accept.\n\n</p><p>What is the justification for the following change in negotiateWithGroup()?  Is it specific to this issue or is it fixing a more general problem?  Why is this code being removed but not the similar code for weighted slots?\n\n</p><p></p><pre>   -\t\tif ( numStartdAds &gt; groupQuota ) {\n   -\t\t\tnumStartdAds = groupQuota;\n   -\t\t}\n</pre>\n\n<p>In at least one dprintf, autoregroup mode is referred to as \"legacy mode\".  Since this may stick around for a while, and people may not know the order in which features were added, perhaps it would be better to just stick to calling it \"autoregroup mode\".  I suppose \"final free-for-all negotiation round\" would be an apt description as well.\n\n</p><p></p><hr/>\n<em>2011-Dec-16 17:05:53 by eje:</em> <br/>\n\nThanks for the feedback!\n\n<p>Since this ticket is reneging on the previous convention of autoregroup being synonymous with accept-surplus, I wonder if it's better to log a warning when both are detected, as a deprecation, instead of except-ing.\n\n</p><p>I removed the check for \"if ( numStartdAds &gt; groupQuota )\" because it is more or less a no-op (it's only used for a bit of log output) and also it was misleading: the number of startd ads doesn't need to be clipped by quota (in fact that doesn't really make sense), only the (weighted) resources needs to be clipped, as it is used for computing submitter limits.  (I'm not really sure why allocation wasn't just sent down as the weighted resources parameter, now that I look, but that's another story)\n\n</p><p>I agree \"autoregroup mode\" will be more clear than \"legacy mode\" in the log output.\n\n</p><p></p><hr/>\n<em>2011-Dec-16 17:06:41 by eje:</em> <br/>\n\nI will await approval of <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2678\" onclick=\"get_ticket_and_populate_wrapper('2678'); return false;\" title=\"RFE: expose accounting group negotiation-ordering to configuration\">#2678</a></span> for this, since I wrote this patch on top of that one.\n\n<p></p><hr/>\n<em>2011-Dec-16 17:37:34 by danb:</em> <br/>\n\nPeople often don't notice warnings buried in log files.  Since this is a significant change in semantics, I'd err on the side of being strict.  Better to call their attention to a problem right away when they upgrade than to have them discover it the hard way after a week or two goes by.</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/505/gt2679-legacy-autoregroup.patch\">gt2679-legacy-autoregroup.patch</a>\n9190 bytes added by eje on 2011-Dec-09 03:54:12 UTC.\n<br/>\nPatch against V7_6-branch plus patch for <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2678\" onclick=\"get_ticket_and_populate_wrapper('2678'); return false;\" title=\"RFE: expose accounting group negotiation-ordering to configuration\">#2678</a></span>.  Changes semantic of GROUP_AUTOREGROUP and GROUP_AUTOREGROUP_&lt;grpname&gt; to be decoupled from GROUP_ACCEPT_SURPLUS and instead to emulate legacy (pre-HGQ) auto-regroup behavior where acct groups negotiate, and then \"none\" group negotiates with submitters from any other groups enabled with autoregroup also included.<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-20 14:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28873\">[28873]</a></span>: further version history documentation for <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2679\" onclick=\"get_ticket_and_populate_wrapper('2679'); return false;\" title=\"RFE: Alter semantic of GROUP_AUTOREGROUP to replicate legacy behavior\">#2679</a></span>, which also must be in the version history subsection of Release Notes, as it is not a bug fix.  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-20 14:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28865\">[28865]</a></span>: Comment out unusable documentation for last-minute 7.6.5 addition <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2678\" onclick=\"get_ticket_and_populate_wrapper('2678'); return false;\" title=\"RFE: expose accounting group negotiation-ordering to configuration\">#2678</a></span>, and reword version item to go with <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2679\" onclick=\"get_ticket_and_populate_wrapper('2679'); return false;\" title=\"RFE: Alter semantic of GROUP_AUTOREGROUP to replicate legacy behavior\">#2679</a></span>.  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-19 17:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28859\">[28859]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=28858\">[28858]</a></span>, merge uw/V7_7_4-branch ===GT=== <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2678\" onclick=\"get_ticket_and_populate_wrapper('2678'); return false;\" title=\"RFE: expose accounting group negotiation-ordering to configuration\">#2678</a></span> <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2679\" onclick=\"get_ticket_and_populate_wrapper('2679'); return false;\" title=\"RFE: Alter semantic of GROUP_AUTOREGROUP to replicate legacy behavior\">#2679</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-19 17:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28857\">[28857]</a></span>: fix for merge from uw/V7_6-branch ===GT=== <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2679\" onclick=\"get_ticket_and_populate_wrapper('2679'); return false;\" title=\"RFE: Alter semantic of GROUP_AUTOREGROUP to replicate legacy behavior\">#2679</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-19 16:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28853\">[28853]</a></span>: ===VersionHistory:Complete=== ===GT=== <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2678\" onclick=\"get_ticket_and_populate_wrapper('2678'); return false;\" title=\"RFE: expose accounting group negotiation-ordering to configuration\">#2678</a></span> and ===GT=== <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2679\" onclick=\"get_ticket_and_populate_wrapper('2679'); return false;\" title=\"RFE: Alter semantic of GROUP_AUTOREGROUP to replicate legacy behavior\">#2679</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-19 16:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28852\">[28852]</a></span>: Change the semantic for GROUP_AUTOREGROUP to emulate pre-HGQ legacy behavior ===GT:Fixed=== <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2679\" onclick=\"get_ticket_and_populate_wrapper('2679'); return false;\" title=\"RFE: Alter semantic of GROUP_AUTOREGROUP to replicate legacy behavior\">#2679</a></span>  (By Erik Erlandson )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2012-Oct-18 07:08", "status": "pending", "created": "2011-Dec-01 13:56", "fixed_version": "2011-Dec-01 13:56", "broken_version": "", "priority": "3", "subsystem": "Daemons", "assigned_to": "eje", "derived_from": "", "creator": "eje", "rust": "", "customer_group": "other", "visibility": "public", "notify": "eje@cs.wisc.edu, tannenba@cs.wisc.edu, dan@hep.wisc.edu, tstclair@redhat.com,  jthomas@redhat.com", "due_date": ""}