{"id": 5979, "title": "Ticket #5979: Full disk + shared port = broken ssh-to-job", "description": "<blockquote>\nBased on an incident today, it appears that having a full disk while running shared port breaks ssh-to-job, because the starter(?) needs to create a new listen socket for the remote client, which means that the shared port daemon's address needs to be known.  On matlab-build-1, we look this up out of /var/lock/condor/SharedPortAd, which is not the \"usual\" address file.  That file was of length 0 at the time I observed it with the full disk.\n\n<p>This is probably because this file is updated regularly with certain metrics, and the update process probably truncates the file, either before writing or after writing but without checking to see if the write was for the full length of the buffer.  (On a full disk, a write of 0, etc...)  This behaviour is bad if we really care about the metrics; if we don't, we should store them in a file whose absence doesn't cause things to break.</p></blockquote>", "remarks": "<blockquote>\n<em>2016-Oct-25 16:46:02 by tlmiller:</em> <br/>\n\nIf we decide to split into two files, the \"real\" file will need to be update and reconfigs, as well.  We need to think carefully about what failure in that case would really mean (do we currently arrange for the shared port daemon to reconfig first, so nobody else has to change their address twice if that's going to happen?).</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2016-Oct-25 16:46", "status": "new", "created": "2016-Oct-25 16:43", "fixed_version": "2016-Oct-25 16:43", "broken_version": "", "priority": "4", "subsystem": "DaemonSharedP", "assigned_to": "", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}