{"id": 5916, "title": "Ticket #5916: Warn when we encounter only invalid VOMS ACs", "description": "<blockquote>\nWhen an invalid VOMS AC is encountered, it is silently ignored by the VOMS library.   This will occur either because it actually is invalid - or VOMS has not been configured correctly on this host), it is silently ignored.\n\n<p>While maliciously faked VOMS ACs are rare, this can be triggered by a common misconfiguration and cause HTCondor to behave in unexpected ways (i.e., mappings that are based on VOMS information will no longer match).\n\n</p><p>I propose that, whenever VOMS verification is enabled, we call <code>VOMS_Retrieve</code> twice: once with verification enabled and once without.  If we get zero attributes the first time and nonzero attributes the second time, we print out a loud warning message about failed verification.\n\n</p><p>If there are actually zero attributes at all (plain-old grid proxy), then we pay a minimal overhead: basically, the VOMS library will iterate through the list of attributes, see the lack of VOMS information, and return.\n\n</p><p>While this approach isn't perfect (it doesn't handle the cases where there are N attributes and only N-1 are invalid), it's probably going to catch almost all the errors - while minimizing the impact on valid proxies.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-May-31 14:33:52 by bbockelm:</em> <br/>\n\nApproach looks good to me.  Any reason to not merge?\n\n<p></p><hr/>\n<em>2019-Jun-03 11:50:14 by jfrey:</em> <br/>\n\nI wanted someone who can easily generate VOMS extensions to test it first. Brian Lin said he could.\n\n<p></p><hr/>\n<em>2019-Jun-05 12:00:17 by blin:</em> <br/>\n\nCarl, could you please cut an 8.8 scratch build with Jaime's patch for me?\n\n<p></p><hr/>\n<em>2019-Jun-05 13:59:35 by edquist:</em> <br/>\n\nKickin it.\n\n<p><a class=\"external\" href=\"https://koji.chtc.wisc.edu/koji/taskinfo?taskID=293561\">https://koji.chtc.wisc.edu/koji/taskinfo?taskID=293561</a>\n\n</p><p><a class=\"external\" href=\"https://koji.chtc.wisc.edu/koji/taskinfo?taskID=293562\">https://koji.chtc.wisc.edu/koji/taskinfo?taskID=293562</a>\n\n</p><p></p><hr/>\n<em>2019-Jun-17 17:04:59 by blin:</em> <br/>\n\nI'm not sure this is working as expected (using Carl's build). I added the necessary VOMS info for a fake VO \"osgtest\" and verified a successful mapping [1][2] using <code>condor_ping</code>. But when I created a proxy with an invalid VOMS AC, I didn't see the expected error message [3][4].\n\n<p><span class=\"chng\"><a href=\"chngview?cn=1\">[1]</a></span>\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">$ voms-proxy-info -all\nsubject   : /DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest/CN=proxy\nissuer    : /DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest\nidentity  : /DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest\ntype      : proxy\nstrength  : 1024 bits\npath      : /tmp/x509up_u1002\ntimeleft  : 11:56:27\nkey usage : Digital Signature, Key Encipherment, Data Encipherment\n=== VO osgtest extension information ===\nVO        : osgtest\nsubject   : /DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest\nissuer    : /DC=org/DC=incommon/C=US/ST=IL/L=Batavia/O=Fermi Research Alliance/OU=Fermilab/CN=fermicloud068.fnal.gov\nattribute : /osgtest/Role=Pilot/Capability=NULL\ntimeleft  : 11:56:27\nuri       : fermicloud068.fnal.gov:15001\n</pre></div>\n\n\n<p><span class=\"chng\"><a href=\"chngview?cn=2\">[2]</a></span>\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">06/17/19 16:55:51 (D_SECURITY) DC_AUTHENTICATE: received DC_AUTHENTICATE from &lt;131.225.155.18:20721&gt;\n06/17/19 16:55:51 (D_SECURITY) DC_AUTHENTICATE: generating 3DES key for session fermicloud068:23667:1560808551:3...\n06/17/19 16:55:51 (D_SECURITY) SECMAN: new session, doing initial authentication.\n06/17/19 16:55:51 (D_SECURITY) Returning to DC while we wait for socket to authenticate.\n06/17/19 16:55:51 (D_SECURITY) AUTHENTICATE: setting timeout for (unknown) to 20.\n06/17/19 16:55:51 (D_SECURITY) HANDSHAKE: in handshake(my_methods = 'GSI')\n06/17/19 16:55:51 (D_SECURITY) HANDSHAKE: handshake() - i am the server\n06/17/19 16:55:51 (D_SECURITY) HANDSHAKE: client sent (methods == 32)\n06/17/19 16:55:51 (D_SECURITY) HANDSHAKE: i picked (method == 32)\n06/17/19 16:55:51 (D_SECURITY) HANDSHAKE: client received (method == 32)\n06/17/19 16:55:51 (D_ALWAYS:2) This process has a valid certificate &amp; key\n06/17/19 16:55:51 (D_SECURITY) Will return to DC because authentication is incomplete.\n06/17/19 16:55:51 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 16:55:51 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 16:55:51 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 16:55:51 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 16:55:51 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 16:55:51 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 16:55:51 (D_ALWAYS:2) ZKM: setting FQAN: /DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest,/osgtest/Role=Pilot/Capability=NULL\n06/17/19 16:55:51 (D_ALWAYS:2) Finishing authenticate_server_gss_post with status=1\n06/17/19 16:55:51 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 16:55:51 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 16:55:51 (D_ALWAYS:2) Finishing authenticate_server_gss_post with status=1\n06/17/19 16:55:51 (D_SECURITY) Authentication was a Success.\n06/17/19 16:55:51 (D_SECURITY) ZKM: setting default map to gsi@unmapped\n06/17/19 16:55:51 (D_SECURITY) ZKM: name to map is '/DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest'\n06/17/19 16:55:51 (D_SECURITY) ZKM: pre-map: current user is 'gsi'\n06/17/19 16:55:51 (D_SECURITY) ZKM: pre-map: current domain is 'unmapped'\n06/17/19 16:55:51 (D_SECURITY) ZKM: map file already loaded.\n06/17/19 16:55:51 (D_SECURITY) ZKM: attempting to map '/DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest'\n06/17/19 16:55:51 (D_SECURITY) ZKM: GSI was used, and FQAN is present.\n06/17/19 16:55:51 (D_SECURITY) ZKM: 1: attempting to map '/DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest,/osgtest/Role=Pilot/Capability=NULL'\n06/17/19 16:55:51 (D_SECURITY) ZKM: 2: mapret: 0 included_voms: 1 canonical_user: GSS_ASSIST_GRIDMAP\n06/17/19 16:55:51 (D_ALWAYS:2) ZKM: successful mapping to GSS_ASSIST_GRIDMAP\n06/17/19 16:55:51 (D_SECURITY) Globus-based mapping was successful.\n06/17/19 16:55:51 (D_SECURITY) ZKM: post-map: current user is 'osgtest'\n06/17/19 16:55:51 (D_SECURITY) ZKM: post-map: current domain is 'users.opensciencegrid.org'\n06/17/19 16:55:51 (D_SECURITY) ZKM: post-map: current FQU is 'osgtest@users.opensciencegrid.org'\n06/17/19 16:55:51 (D_SECURITY) AUTHENTICATE: Exchanging keys with remote side.\n06/17/19 16:55:51 (D_SECURITY) AUTHENTICATE: Result of end of authenticate is 1.\n06/17/19 16:55:51 (D_SECURITY) DC_AUTHENTICATE: authentication of 131.225.155.18 complete.\n06/17/19 16:55:51 (D_SECURITY) DC_AUTHENTICATE: message authenticator enabled with key id fermicloud068:23667:1560808551:3.\n06/17/19 16:55:51 (D_SECURITY) DC_AUTHENTICATE: Success.\n06/17/19 16:55:51 (D_ALWAYS) PERMISSION GRANTED to osgtest@users.opensciencegrid.org from host 131.225.155.18 for command 60021 (DC_NOP_WRITE), access level WRITE: reason: cached result for WRITE; see first case for the full reason\n06/17/19 16:55:51 (D_SECURITY) DC_AUTHENTICATE: added incoming session id fermicloud068:23667:1560808551:3 to cache for 80 seconds (lease is 3620s, return address is unknown).\n06/17/19 16:55:51 (D_ALWAYS) SECMAN: Succesfully sent DC_SEC_QUERY classad to &lt;131.225.155.18:20721&gt;!\nAuthorizationSucceeded = true\n</pre></div>\n\n\n<p><span class=\"chng\"><a href=\"chngview?cn=3\">[3]</a></span>\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">$ voms-proxy-info -all\nsubject   : /DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest/CN=proxy\nissuer    : /DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest\nidentity  : /DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest\ntype      : proxy\nstrength  : 1024 bits\npath      : /tmp/x509up_u1002\ntimeleft  : 11:59:58\nkey usage : Digital Signature, Key Encipherment, Data Encipherment\n=== VO osgtest extension information ===\nVO        : osgtest\nsubject   : /DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest\nissuer    : /DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest\nattribute : /osgtest/Role=Pilot/Capability=NULL\ntimeleft  : 11:59:58\nuri       : fermicloud068.fnal.gov:15001\n</pre></div>\n\n\n<p><span class=\"chng\"><a href=\"chngview?cn=4\">[4]</a></span>\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">06/17/19 17:02:34 (D_SECURITY) DC_AUTHENTICATE: received DC_AUTHENTICATE from &lt;131.225.155.18:20988&gt;\n06/17/19 17:02:34 (D_SECURITY) DC_AUTHENTICATE: generating 3DES key for session fermicloud068:24681:1560808954:0...\n06/17/19 17:02:34 (D_SECURITY) SECMAN: new session, doing initial authentication.\n06/17/19 17:02:34 (D_SECURITY) Returning to DC while we wait for socket to authenticate.\n06/17/19 17:02:34 (D_SECURITY) AUTHENTICATE: setting timeout for (unknown) to 20.\n06/17/19 17:02:34 (D_SECURITY) HANDSHAKE: in handshake(my_methods = 'GSI')\n06/17/19 17:02:34 (D_SECURITY) HANDSHAKE: handshake() - i am the server\n06/17/19 17:02:34 (D_SECURITY) HANDSHAKE: client sent (methods == 32)\n06/17/19 17:02:34 (D_SECURITY) HANDSHAKE: i picked (method == 32)\n06/17/19 17:02:34 (D_SECURITY) HANDSHAKE: client received (method == 32)\n06/17/19 17:02:34 (D_ALWAYS:2) This process has a valid certificate &amp; key\n06/17/19 17:02:34 (D_SECURITY) Will return to DC because authentication is incomplete.\n06/17/19 17:02:34 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 17:02:34 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 17:02:34 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 17:02:34 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 17:02:34 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 17:02:34 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 17:02:34 (D_SECURITY) ZKM: VOMS FQAN not present (error 14), ignoring.\n06/17/19 17:02:34 (D_ALWAYS:2) Finishing authenticate_server_gss_post with status=1\n06/17/19 17:02:34 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 17:02:34 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 17:02:34 (D_ALWAYS:2) Finishing authenticate_server_gss_post with status=1\n06/17/19 17:02:34 (D_SECURITY) Authentication was a Success.\n06/17/19 17:02:34 (D_SECURITY) ZKM: setting default map to gsi@unmapped\n06/17/19 17:02:34 (D_SECURITY) ZKM: name to map is '/DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest'\n06/17/19 17:02:34 (D_SECURITY) ZKM: pre-map: current user is 'gsi'\n06/17/19 17:02:34 (D_SECURITY) ZKM: pre-map: current domain is 'unmapped'\n06/17/19 17:02:34 (D_SECURITY) ZKM: map file already loaded.\n06/17/19 17:02:34 (D_SECURITY) ZKM: attempting to map '/DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest'\n06/17/19 17:02:34 (D_SECURITY) ZKM: 1: attempting to map '/DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest'\n06/17/19 17:02:34 (D_SECURITY) ZKM: 2: mapret: 0 included_voms: 0 canonical_user: GSS_ASSIST_GRIDMAP\n06/17/19 17:02:34 (D_ALWAYS:2) ZKM: successful mapping to GSS_ASSIST_GRIDMAP\n06/17/19 17:02:34 (D_SECURITY) Globus-based mapping failed; will use gsi@unmapped.\n06/17/19 17:02:34 (D_SECURITY) ZKM: post-map: current user is 'gsi'\n06/17/19 17:02:34 (D_SECURITY) ZKM: post-map: current domain is 'unmapped'\n06/17/19 17:02:34 (D_SECURITY) ZKM: post-map: current FQU is 'gsi@unmapped'\n06/17/19 17:02:34 (D_SECURITY) AUTHENTICATE: Exchanging keys with remote side.\n06/17/19 17:02:34 (D_SECURITY) AUTHENTICATE: Result of end of authenticate is 1.\n06/17/19 17:02:34 (D_SECURITY) DC_AUTHENTICATE: authentication of 131.225.155.18 complete.\n06/17/19 17:02:34 (D_SECURITY) DC_AUTHENTICATE: message authenticator enabled with key id fermicloud068:24681:1560808954:0.\n06/17/19 17:02:34 (D_SECURITY) DC_AUTHENTICATE: Success.\n06/17/19 17:02:34 (D_SECURITY) IPVERIFY: for fermicloud068.fnal.gov matched 131.225.155.18 to 131.225.155.18\n06/17/19 17:02:34 (D_SECURITY) IPVERIFY: for fermicloud068.fnal.gov matched 131.225.155.18 to 131.225.155.18\n06/17/19 17:02:34 (D_SECURITY) IPVERIFY: for fermicloud068.fnal.gov matched 131.225.155.18 to 131.225.155.18\n06/17/19 17:02:34 (D_ALWAYS) PERMISSION DENIED to gsi@unmapped from host 131.225.155.18 for command 60021 (DC_NOP_WRITE), access level WRITE: reason: WRITE authorization policy contains no matching ALLOW entry for this request; identifiers used for this host: 131.225.155.18,fermicloud068.fnal.gov, hostname size = 1, original ip address = 131.225.155.18\n06/17/19 17:02:34 (D_ALWAYS) DC_AUTHENTICATE: Command not authorized, done!\n</pre></div>\n\n\n<p></p><hr/>\n<em>2019-Jun-17 17:10:08 by blin:</em> <br/>\n\nFWIW, I moved <code>/etc/grid-security/vomsdir</code> and <code>/etc/vomses</code> out of the way and it didn't look any better:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">06/17/19 17:08:29 (D_SECURITY) DC_AUTHENTICATE: received DC_AUTHENTICATE from &lt;131.225.155.18:16660&gt;\n06/17/19 17:08:29 (D_SECURITY) DC_AUTHENTICATE: generating 3DES key for session fermicloud068:25109:1560809309:1...\n06/17/19 17:08:29 (D_SECURITY) SECMAN: new session, doing initial authentication.\n06/17/19 17:08:29 (D_SECURITY) Returning to DC while we wait for socket to authenticate.\n06/17/19 17:08:29 (D_ALWAYS:2) -------- Begin starting jobs --------\n06/17/19 17:08:29 (D_ALWAYS:2) -------- Done starting jobs --------\n06/17/19 17:08:29 (D_SECURITY) AUTHENTICATE: setting timeout for (unknown) to 20.\n06/17/19 17:08:29 (D_SECURITY) HANDSHAKE: in handshake(my_methods = 'GSI')\n06/17/19 17:08:29 (D_SECURITY) HANDSHAKE: handshake() - i am the server\n06/17/19 17:08:29 (D_SECURITY) HANDSHAKE: client sent (methods == 32)\n06/17/19 17:08:29 (D_SECURITY) HANDSHAKE: i picked (method == 32)\n06/17/19 17:08:29 (D_SECURITY) HANDSHAKE: client received (method == 32)\n06/17/19 17:08:29 (D_ALWAYS:2) This process has a valid certificate &amp; key\n06/17/19 17:08:29 (D_SECURITY) Will return to DC because authentication is incomplete.\n06/17/19 17:08:29 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 17:08:29 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 17:08:29 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 17:08:29 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 17:08:29 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 17:08:29 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 17:08:29 (D_SECURITY) ZKM: VOMS FQAN not present (error 14), ignoring.\n06/17/19 17:08:29 (D_ALWAYS:2) Finishing authenticate_server_gss_post with status=1\n06/17/19 17:08:29 (D_SECURITY) AUTHENTICATE: auth would still block\n06/17/19 17:08:29 (D_SECURITY) Will return to DC to continue authentication..\n06/17/19 17:08:29 (D_ALWAYS:2) Finishing authenticate_server_gss_post with status=1\n06/17/19 17:08:29 (D_SECURITY) Authentication was a Success.\n06/17/19 17:08:29 (D_SECURITY) ZKM: setting default map to gsi@unmapped\n06/17/19 17:08:29 (D_SECURITY) ZKM: name to map is '/DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest'\n06/17/19 17:08:29 (D_SECURITY) ZKM: pre-map: current user is 'gsi'\n06/17/19 17:08:29 (D_SECURITY) ZKM: pre-map: current domain is 'unmapped'\n06/17/19 17:08:29 (D_SECURITY) ZKM: map file already loaded.\n06/17/19 17:08:29 (D_SECURITY) ZKM: attempting to map '/DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest'\n06/17/19 17:08:29 (D_SECURITY) ZKM: 1: attempting to map '/DC=org/DC=opensciencegrid/C=US/O=OSG Software/OU=People/CN=vdttest'\n06/17/19 17:08:29 (D_SECURITY) ZKM: 2: mapret: 0 included_voms: 0 canonical_user: GSS_ASSIST_GRIDMAP\n06/17/19 17:08:29 (D_ALWAYS:2) ZKM: successful mapping to GSS_ASSIST_GRIDMAP\n06/17/19 17:08:29 (D_SECURITY) Globus-based mapping failed; will use gsi@unmapped.\n06/17/19 17:08:29 (D_SECURITY) ZKM: post-map: current user is 'gsi'\n06/17/19 17:08:29 (D_SECURITY) ZKM: post-map: current domain is 'unmapped'\n06/17/19 17:08:29 (D_SECURITY) ZKM: post-map: current FQU is 'gsi@unmapped'\n06/17/19 17:08:29 (D_SECURITY) AUTHENTICATE: Exchanging keys with remote side.\n06/17/19 17:08:29 (D_SECURITY) AUTHENTICATE: Result of end of authenticate is 1.\n06/17/19 17:08:29 (D_SECURITY) DC_AUTHENTICATE: authentication of 131.225.155.18 complete.\n06/17/19 17:08:29 (D_SECURITY) DC_AUTHENTICATE: message authenticator enabled with key id fermicloud068:25109:1560809309:1.\n06/17/19 17:08:29 (D_SECURITY) DC_AUTHENTICATE: Success.\n06/17/19 17:08:29 (D_ALWAYS) PERMISSION DENIED to gsi@unmapped from host 131.225.155.18 for command 60021 (DC_NOP_WRITE), access level WRITE: reason: cached result for WRITE; see first case for the full reason\n06/17/19 17:08:29 (D_ALWAYS) DC_AUTHENTICATE: Command not authorized, done!\n</pre></div>\n\n\n<p></p><hr/>\n<em>2019-Jun-20 15:01:40 by jfrey:</em> <br/>\n\nIn my testing, VOMS extensions that can't be verified result in a different error code (VERR_SIGN or similar) than absence of extensions (VERR_NOEXT). I'll adjust my patch to retry without verification on any failure of VOMS_Retrieve().</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/1024/voms_warning.patch\">voms_warning.patch</a>\n1378 bytes added by jfrey on 2019-May-30 20:28:42 UTC.\n<br/>\nPatch to print a warning when a gsi proxy has unverified voms extensions.<br/>\n</li><li><a href=\"attach_get/1029/x509up_u1002\">x509up_u1002</a>\n5964 bytes added by blin on 2019-Jun-20 17:49:48 UTC.\n<br/>\nGenerated proxy with VOMS AC for testing<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-05 16:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57596\">[57596]</a></span>: Docs for new dprintf warning on unverified VOMS extensions. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5916\" title=\"Warn when we encounter only invalid VOMS ACs\">#5916</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jun-20 15:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57211\">[57211]</a></span>: Log warning when unverified VOMS extensions are observed. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5916\" title=\"Warn when we encounter only invalid VOMS ACs\">#5916</a></span> When verification of VOMS extensions is requested and there are extentions that can't be verified, print a warning in the daemon log.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-Sep-09 13:27", "status": "resolved", "created": "2016-Sep-21 16:26", "fixed_version": "2016-Sep-21 16:26", "broken_version": "", "priority": "4", "subsystem": "Libs", "assigned_to": "edquist", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "bbockelm@cse.unl.edu,blin@cs.wisc.edu,edquist@cs.wisc.edu", "due_date": ""}