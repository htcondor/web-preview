{"id": 410, "title": "Ticket #410: Collector bloat/leak", "description": "<blockquote>\nTwo major users are seeing massive collector bloat/leaks.  In both cases the startds reporting in are glideins and there is almost certainly regular churn and thus lots of new security sessions.\n\n<p>Igor Sfiligoi's main CMS collector is tracking about 12,000 startd ads.  These ads take about 80 MB (\"condor_status -l | wc\")  It's fed by 75 subordinate collectors running on the same machine. Nothing else submits ads to the collector.  There are regular queries.  The subordinate collectors are running about 70 MB each.  The main collector is <em>4.0 GB</em>. Yesterday it was 3.9 GB, suggesting a growth rate of 0.1 GB/day.  Given that the collector was started March 6th and is 4 GB on April 23rd, this rate seems about accurate. SEC_DEFAULT_SESSION_TIMEOUT is 50000 (about 14 hours).  The collector has been running long enough that security sessions should be timing out and shouldn't be responsible for the bloat.\n\n</p><p>Joe Boyd's CDF collector was born the afternoon of April 13 at about 2.4 GB.  It was steady at that level for about a day, grew slowly for another day, then bloated up to about 3.0 GB over the next 24 hours.  It stabilized for about half of a day, then jumped to 3.4 GB over about a day, another half-day of stability, then it shot up to 3.6 GB over another half-day.  SEC_DEFAULT_SESSION_TIMEOUT is 288000 (about 3.3 days).  We only have about 4.5 days of data, but this should still be long enough for security sessions to start rolling over.\n\n</p><p>CDF had been restarting their collector regularly with 7.0 because of this exact reason.  The above is with 7.2.1 and doesn't represent an improvement.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Apr-23 15:19:31 by adesmet:</em> <br/>\n\nTaking a core file of Igor's collector: \"strings core | strings | sort | uniq -c | sort -n | tail --lines=6\"\n<div class=\"code\">\n<pre class=\"code\">  54414 0000\n 114841  type)\n 163486 ype)\n 442905 ents\n113101938 MyAddress\n113102135 Name\n</pre></div>\n\n\n<p>The strings \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MyAddress\" title=\"My Address\">MyAddress</a></span>\" and \"Name\" are consuming 1.3 GB, 1.5 if they also include a trailing NULL.  There is no possible valid reason to have over 113 <em>million</em> copies of these string in memory.\n\n</p><p></p><hr/>\n<em>2009-Apr-23 16:07:41 by adesmet:</em> <br/>\n\nLikely bug: classad.old/attrlist.cpp, around line 2966, AttrList::CopyAttribute\n<div class=\"code\">\n<pre class=\"code\">\t\tExprTree *lhs = new Variable(strnewp(target_attr));\n</pre></div>\n\n\n<p>It appears the strnewp leaks, as Variable passes the string to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=VariableBase\" title=\"Variable Base\">VariableBase</a></span>, which either StrCpy()s it or get a SS_DUPed copy from <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StringSpace\" title=\"String Space\">StringSpace</a></span>.\n\n</p><p></p><hr/>\n<em>2009-Apr-23 16:10:07 by adesmet:</em> <br/>\n\nProps to danb for finding the suspicious lines leading to this.  The lead is in condor_collector.V6/collector_engine.cpp, line 625 inside CollectorEngine::collect\n\n<p></p><div class=\"code\">\n<pre class=\"code\">if( retVal ) {\n\tpvtAd-&gt;CopyAttribute( ATTR_MY_ADDRESS, retVal );\n\tpvtAd-&gt;CopyAttribute( ATTR_NAME, retVal );\n}\n</pre></div>\n\n\n<p></p><hr/>\n<em>2009-Jun-10 11:57:19 by danb:</em> <br/>\n\nThis memory leak was resolved by my patch in 7.2.3.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Apr-23 17:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14537\">[14537]</a></span>: Fixed a memory leak affecting the collector. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=410\" title=\"Collector bloat/leak\">#410</a></span> This bug was introduced in 7.2.0 (by me!).  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2010-Jan-31 14:01", "status": "resolved", "created": "2009-Apr-23 12:18", "fixed_version": "2009-Apr-23 12:18", "broken_version": "", "priority": "2", "subsystem": "Daemons", "assigned_to": "danb", "derived_from": "", "creator": "adesmet", "rust": "a19236", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}