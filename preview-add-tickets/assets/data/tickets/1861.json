{"id": 1861, "title": "Ticket #1861: RFE: JOB_FAMILY_MEMORY_LIMIT expression to control memory size", "description": "<blockquote>\nLIGO desires a feature where a starter can set the hard ulimit of the job family it starts up based upon slot attributes in the machine ad.\n\n<p>I propose a new machine classad attribute:\n\n</p><p><code>JOB_FAMILY_HARD_MEMORY_LIMIT = expr</code>\n\n</p><p>which is an expression and evaluated in context of the machine's slot ad as MY and the job ad as TARGET. If the result of the evaluation produces a defined integer greater than zero, it will be interpreted as the megabytes in size to which the job family will be hardlimited with <code>setrlimit()</code>. If less than zero, zero, or undefined, it will have no effect.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Jan-24 14:39:23 by gthain:</em> <br/>\n\nFirst, note this needs to be the virtual memory, not the physical memory, which could be a problem for some jobs.\n\n<p></p><hr/>\n<em>2012-Feb-10 14:51:43 by pfc:</em> <br/>\n\nMore generally, we'd like to know if Condor can help use to OS to enforce cpu/memory/disk limits.  If this if trickier that it seems to do comprehensively, we're still interesting in any low-hanging fruit that might help.\n\n<p>Updated priority to match Todd's new scheme (1=fire, 2=soon, 3=time permitting, 4=not yet prioritized, 5=wishlist/ideas).\n\n</p><p></p><hr/>\n<em>2012-Apr-06 13:59:00 by gthain:</em> <br/>\n\nWhich platforms do you need this for?  With cgroups, which I think is available on deb6, we should be able to limit the physical memory used by a job, which is ideal.  Or, would you like the ulimit stuff, which is universally available, but limits virtual memory?\n\n<p></p><hr/>\n<em>2012-Apr-20 13:27:35 by pfc:</em> <br/>\n\nLIGO only cares about x86_64 SL6 and Debian 6.\n\n<p></p><hr/>\n<em>2012-Apr-20 13:37:09 by pfc:</em> <br/>\n\nThis may or may not relate to <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2948\" onclick=\"get_ticket_and_populate_wrapper('2948'); return false;\" title=\"GPU jobs report incorrect ImageSize\">#2948</a></span> (GPU jobs report incorrect <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ImageSize\" title=\"Image Size\">ImageSize</a></span>).\n\n<p></p><hr/>\n<em>2012-Jun-26 14:12:07 by pfc:</em> <br/>\n\nGreg wrote in email:\n\n<p></p><pre>  In 7.9.0, there's a new starter knob, STARTER_RLIMIT_AS whose value should be a classad expression evaluated in the context of the machine ad (my) and the job ad (target).  If the result of this evaluation is an integer, it represents the number of megabytes the starter should setrlimit(RLIMIT_AS) to for each of the processes in the job.\n</pre>\n\n<p>Greg adds on the phone that everyone agrees cgroups is a better way to do this, but cgroups support in Debian 6 is poor so we may have to wait.\n\n</p><p></p><hr/>\n<em>2012-Jun-26 14:14:45 by pfc:</em> <br/>\n\nCurrently (7.8.0) for SL6, cgroups can more accurately measure your physical memory usage, and you can write a policy expression to preempt based on that.\n\n<p>In 7.9.x there will be a high-level knob to tell Condor to do this for us.\n\n</p><p></p><hr/>\n<em>2012-Jul-10 14:21:14 by pfc:</em> <br/>\n\n<span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=1663\" onclick=\"get_ticket_and_populate_wrapper('1663'); return false;\" title=\"condor_start setrlimit() based upon slot memory\">#1663</a></span> implements this high-level knob.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2012-Aug-21 14:11", "status": "defer", "created": "2011-Jan-20 10:31", "fixed_version": "2011-Jan-20 10:31", "broken_version": "v070400", "priority": "5", "subsystem": "", "assigned_to": "gthain", "derived_from": "", "creator": "psilord", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "psilord@cs.wisc.edu,pcouvare@caltech.edu", "due_date": ""}