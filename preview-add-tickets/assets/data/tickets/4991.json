{"id": 4991, "title": "Ticket #4991: Segfault when condor_schedd shuts down", "description": "<blockquote>\nCMS encountered the below segfault when restarting HTCondor (currently testing the upcoming 8.3.5).\n\n<p>It appears that the match_rec destructor is firing after the daemonCore object has been destroyed and set to null.  That destructor invokes DC without checking to see if the pointer is non-null.\n\n</p><p>Poking around with <code>git blame</code>, I don't see when exactly this behavior started.  None of us recall it in earlier 8.3.x releases, however.\n\n</p><p>Can we get this fixed before the 8.3.5 release?\n\n</p><p></p><div class=\"verbatim\">\n<pre>(gdb) bt\n#0  0x00007ff1599ae554 in WriteCoreDump () from /usr/lib64/libcondor_utils_8_3_5.so\n#1  0x00007ff159993f73 in linux_sig_coredump (signum=11) at /slots/10/dir_20281/userdir/.tmpSghLGH/BUILD/condor-8.3.5/src/condor_daemon_core.V6/daemon_core_main.cpp:735\n#2  &lt;signal handler called&gt;\n#3  DaemonCore::getSecMan (this=0x0) at /slots/10/dir_20281/userdir/.tmpSghLGH/BUILD/condor-8.3.5/src/condor_daemon_core.V6/daemon_core.cpp:10335\n#4  0x000000000047eae3 in match_rec::~match_rec() ()\n#5  0x000000000048090d in Scheduler::~Scheduler() ()\n#6  0x00007ff157ed5b22 in exit () from /lib64/libc.so.6\n#7  0x00007ff159968c45 in __wrap_exit (status=0) at /slots/10/dir_20281/userdir/.tmpSghLGH/BUILD/condor-8.3.5/src/condor_daemon_core.V6/daemon_core.cpp:5237\n#8  0x00007ff159996db9 in DC_Exit (status=&lt;value optimized out&gt;, shutdown_program=&lt;value optimized out&gt;)\n    at /slots/10/dir_20281/userdir/.tmpSghLGH/BUILD/condor-8.3.5/src/condor_daemon_core.V6/daemon_core_main.cpp:359\n#9  0x00000000004728ce in Scheduler::shutdown_fast() ()\n#10 0x00007ff159992b11 in handle_dc_sigquit () at /slots/10/dir_20281/userdir/.tmpSghLGH/BUILD/condor-8.3.5/src/condor_daemon_core.V6/daemon_core_main.cpp:1818\n#11 0x00007ff159975f2e in DaemonCore::Driver (this=0x15aa130)\n    at /slots/10/dir_20281/userdir/.tmpSghLGH/BUILD/condor-8.3.5/src/condor_daemon_core.V6/daemon_core.cpp:3185\n#12 0x00007ff159996079 in dc_main (argc=1, argv=0x7fff9927c370)\n    at /slots/10/dir_20281/userdir/.tmpSghLGH/BUILD/condor-8.3.5/src/condor_daemon_core.V6/daemon_core_main.cpp:2777\n#13 0x00007ff157ebed5d in __libc_start_main () from /lib64/libc.so.6\n#14 0x000000000041c369 in _start ()\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2015-Apr-08 10:26:21 by jfrey:</em> <br/>\n\nThis is a result of <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4910\" onclick=\"get_ticket_and_populate_wrapper('4910'); return false;\" title=\"Restore gnu linker option to wrap exit()\">#4910</a></span>, where we started calling exit() instead of _exit() when terminating daemons. That caused atexit() functions and global destructors to be called, after the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> object has been deleted.\n\n<p></p><hr/>\n<em>2015-Apr-08 11:46:11 by jfrey:</em> <br/>\n\nThis bug was never released, so no version history needed.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Apr-08 11:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=44565\">[44565]</a></span>: Fix schedd crash on exit deferencing NULL daemonCore. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4991\" onclick=\"get_ticket_and_populate_wrapper('4991'); return false;\" title=\"Segfault when condor_schedd shuts down\">#4991</a></span>  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Apr-13 16:12", "status": "resolved", "created": "2015-Apr-08 08:04", "fixed_version": "2015-Apr-08 08:04", "broken_version": "v080305", "priority": "1", "subsystem": "DaemonsSubmitNode", "assigned_to": "jfrey", "derived_from": "#4910", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "", "due_date": ""}