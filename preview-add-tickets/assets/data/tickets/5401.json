{"id": 5401, "title": "Ticket #5401: Server should not retry failed authentication methods", "description": "<blockquote>\nIf an authentication method fails for any reason, the client side removes the failed method from the list of methods it is willing to try and attempts to authenticate again.  Why is the removal of a failed method only done on the client side? Seems like it would be good design for the server to also remove the failed method from the list of methods it is willing to serve, so that a faulty client does not waste a lot of the server's precious time. Also in the event of a bug or path, it is a lot easier to upgrade just a server than upgrade every client....\n\n<p>In Authentication:authenticate_continue() we have the following code\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">  errstack-&gt;pushf(\"AUTHENTICATE\", AUTHENTICATE_ERR_METHOD_FAILED,\n     \"Failed to authenticate using %s\", m_method_name.c_str() );\n\n  //if authentication failed, try again after removing from client tries\n  if ( mySock-&gt;isClient() ) {\n</pre></div>\n\n\n<p>Seems like the conditional for isClient() should be removed, so the failed method is removed from both the client and server side.\n\n</p><p>(also see <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5101\" onclick=\"get_ticket_and_populate_wrapper('5101'); return false;\" title=\"Infinite loop in non-blocking authentication\">#5101</a></span>)</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2016-Nov-16 10:08", "status": "new", "created": "2015-Nov-16 15:29", "fixed_version": "2015-Nov-16 15:29", "broken_version": "", "priority": "3", "subsystem": "Security", "assigned_to": "zmiller", "derived_from": "", "creator": "tannenba", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}