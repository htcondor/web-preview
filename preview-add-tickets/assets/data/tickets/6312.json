{"id": 6312, "title": "Ticket #6312: Protocol errors in negotiation", "description": "<blockquote>\nI noticed there were quite a few high-priority CMS workflows on one schedd queued up for Nebraska but not running.  Further, low-prio jobs from other schedds were starting to run: this was starting to ring some alarm bells.\n\n<p>Looking at the problem schedd, I saw lots of negotiation that looked like this (from <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SchedLog\" title=\"Sched Log\">SchedLog</a></span>):\n\n</p><p></p><div class=\"verbatim\">\n<pre>06/21/17 03:48:21 (pid:9979) Activity on stashed negotiator socket: &lt;negotiator:1097&gt;\n06/21/17 03:48:21 (pid:9979) Using negotiation protocol: NEGOTIATE\n06/21/17 03:48:21 (pid:9979) Negotiating for owner: production.cmsdataops@cms\n06/21/17 03:48:21 (pid:9979) Negotiating owner=production.cmsdataops@cms jobprio restricted, min=900000 max=900000\n06/21/17 03:48:21 (pid:9979) Checking consistency running and runnable jobs\n06/21/17 03:48:21 (pid:9979) Tables are consistent\n06/21/17 03:48:21 (pid:9979) Rebuilt prioritized runnable job list in 0.040s.\n06/21/17 03:48:22 (pid:9979) Finished negotiating for production.cmsdataops in local pool: 0 matched, 16 rejected\n06/21/17 03:48:22 (pid:9979) Activity on stashed negotiator socket: &lt;negotiator:1097&gt;\n06/21/17 03:48:22 (pid:9979) Negotiator command was 425 (not NEGOTIATE_WITH_SIGATTRS or NEGOTIATE) --- aborting\n</pre></div>\n\n\n<p>From the negotiator side, it would try to negotiate for prio 900k jobs -- succeed but produce no matches -- then negotiate for prio 600k jobs from the same user.  However, when done with prio 600k, it would get a generic socket failure.\n\n</p><p>It seems like the schedd and negotiator disagree where they are in the protocol.  Command # 425 from the negotiator is\n<code>END_NEGOTIATE</code>, but schedd thought it already finished negotiating.\n\n</p><p>It seemed to be blocking the prio 600k jobs so I did a qedit of all the stuck workflows to set <code><span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobPrio\" title=\"Job Prio\">JobPrio</a></span> = 900000</code>: they immediately started running, again pointing to a negotiation problem.\n\n</p><p>My working theory is there is a problem in the negotiator when prefetching is enabled and global job prios are used, causing it to send the <code>END_NEGOTIATE</code> command twice.\n\n</p><p>Looking through the Negotiator logs for socket write failures, it seems to occur with every busy schedd.</p></blockquote>", "remarks": "<blockquote>\n<em>2017-Jun-21 16:40:59 by jfrey:</em> <br/>\n\nMy simple attempts to reproduce this error have been unsuccessful.\n\n<p>The logs indicate that the schedd considered the negotiation over without receiving an END_NEGOTIATE command (otherwise, it would log \"Lost priority - X jobs matched\"). It only does this if it receives SEND_JOB_INFO or SEND_RESOURCE_REQUEST_LIST and immediately responds with NO_MORE_JOBS.\nThis implies that prefetch didn't get all of the request ads. The negotiator asked for more during the regular cycle, and after it got them all, sent a superfluous END_NEGOTIATE.\n\n</p><p>I've yet to find a way to trigger that set of events. Could I get login permission on one or more of the affected submit machines?\n\n</p><p></p><hr/>\n<em>2017-Jun-21 21:17:30 by bbockelm:</em> <br/>\n\nI'm not sure about a login, but here's some output from the <code>NegotiatorLog</code>:\n\n<p></p><div class=\"verbatim\">\n<pre>06/22/17 03:44:29   Negotiating with production.cmsdataops@cms at &lt;scheddA:4080?addrs=scheddA-4080&amp;noUDP&amp;sock=7892_d584_3&gt;\n06/22/17 03:44:29 0 seconds so far for this submitter\n06/22/17 03:44:29 2 seconds so far for this schedd\n06/22/17 03:44:29     USE_GLOBAL_JOB_PRIOS limit to jobprios between 600000 and 600000\n06/22/17 03:44:29     Request 16236.00113: autocluster 4 (request count 1 of 427)\n06/22/17 03:44:29       Rejected 16236.113 production.cmsdataops@cms &lt;scheddA:4080?addrs=scheddA-4080&amp;noUDP&amp;sock=7892_d584_3&gt;: no match found\n06/22/17 03:44:29     Request 16604.00001: autocluster 27 (request count 1 of 2)\n06/22/17 03:44:29       Rejected 16604.1 production.cmsdataops@cms &lt;scheddA:4080?addrs=scheddA-4080&amp;noUDP&amp;sock=7892_d584_3&gt;: no match found\n06/22/17 03:44:29     Request 16604.00003: autocluster 51 (request count 1 of 2)\n06/22/17 03:44:29       Rejected 16604.3 production.cmsdataops@cms &lt;scheddA:4080?addrs=scheddA-4080&amp;noUDP&amp;sock=7892_d584_3&gt;: no match found\n06/22/17 03:44:29     Request 16604.00005: autocluster 160 (request count 1 of 2)\n06/22/17 03:44:29       Rejected 16604.5 production.cmsdataops@cms &lt;scheddA:4080?addrs=scheddA-4080&amp;noUDP&amp;sock=7892_d584_3&gt;: no match found\n06/22/17 03:44:29     Request 16607.00007: autocluster 12 (request count 1 of 2)\n06/22/17 03:44:29       Rejected 16607.7 production.cmsdataops@cms &lt;scheddA:4080?addrs=scheddA-4080&amp;noUDP&amp;sock=7892_d584_3&gt;: no match found\n06/22/17 03:44:29     Request 16628.00003: autocluster 47 (request count 1 of 2)\n06/22/17 03:44:29       Rejected 16628.3 production.cmsdataops@cms &lt;scheddA:4080?addrs=scheddA-4080&amp;noUDP&amp;sock=7892_d584_3&gt;: no match found\n06/22/17 03:44:29     Got NO_MORE_JOBS;  schedd has no more requests\n\n(... snip ... lots of other negotiating, another pie spin)\n\n06/22/17 03:46:36 Group production - BEGIN NEGOTIATION\n06/22/17 03:46:36 Phase 3:  Sorting submitter ads by priority ...\n06/22/17 03:46:36 Starting prefetch round; 29 potential prefetches to do.\n06/22/17 03:46:36 Starting prefetch negotiation for production.cmsdataops@cms.\n06/22/17 03:46:36     USE_GLOBAL_JOB_PRIOS limit to jobprios between 50900000 and 50900000\n06/22/17 03:46:36 condor_write(): Socket closed when trying to write 655 bytes to schedd production.cmsdataops@cms, fd is 62\n06/22/17 03:46:36 Buf::write(): condor_write() failed\n06/22/17 03:46:36     Failed to send submitterName/eom to production.cmsdataops@cms (&lt;scheddA:4080?addrs=scheddA-4080&amp;noUDP&amp;sock=7892_d584_3&gt;)\n06/22/17 03:46:36 Failed to prefetch resource request lists for production.cmsdataops@cms(&lt;scheddA:4080?addrs=scheddA-4080&amp;noUDP&amp;sock=7892_d584_3&gt;).\n</pre></div>\n\n\n<p>Here's the corresponding <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ScheddLog\" title=\"Schedd Log\">ScheddLog</a></span>:\n\n</p><p></p><div class=\"verbatim\">\n<pre>06/22/17 03:44:26 (pid:2972902) Activity on stashed negotiator socket: &lt;negotiator:28694&gt;\n06/22/17 03:44:26 (pid:2972902) Using negotiation protocol: NEGOTIATE\n06/22/17 03:44:26 (pid:2972902) Negotiating for owner: production.cmsdataops@cms\n06/22/17 03:44:26 (pid:2972902) Negotiating owner=production.cmsdataops@cms jobprio restricted, min=900000 max=900000\n06/22/17 03:44:28 (pid:2972902) Finished negotiating for production.cmsdataops in local pool: 0 matched, 63 rejected\n06/22/17 03:44:28 (pid:2972902) Increasing flock level for production.cmsdataops to 2 from 0.\n06/22/17 03:44:29 (pid:2972902) Activity on stashed negotiator socket: &lt;negotiator:28694&gt;\n06/22/17 03:44:29 (pid:2972902) Using negotiation protocol: NEGOTIATE\n06/22/17 03:44:29 (pid:2972902) Negotiating for owner: production.cmsdataops@cms\n06/22/17 03:44:29 (pid:2972902) Negotiating owner=production.cmsdataops@cms jobprio restricted, min=600000 max=600000\n06/22/17 03:44:29 (pid:2972902) Checking consistency running and runnable jobs\n06/22/17 03:44:29 (pid:2972902) Tables are consistent\n06/22/17 03:44:29 (pid:2972902) Rebuilt prioritized runnable job list in 0.045s.\n06/22/17 03:44:29 (pid:2972902) Finished negotiating for production.cmsdataops in local pool: 0 matched, 6 rejected\n06/22/17 03:44:29 (pid:2972902) Activity on stashed negotiator socket: &lt;negotiator:28694&gt;\n06/22/17 03:44:29 (pid:2972902) Negotiator command was 425 (not NEGOTIATE_WITH_SIGATTRS or NEGOTIATE) --- aborting\n</pre></div>\n\n\n<p>Note the timestamps - the schedd hung up on the negotiator at 03:44:29, but the negotiator didn't notice this until 03:46:36.\n\n</p><p></p><hr/>\n<em>2017-Jun-26 15:19:44 by jfrey:</em> <br/>\n\nThe negotiator not noticing the closed connection for two minutes isn't surprising. It's going to ignore the socket until the next time it wants to talk to that schedd.\n\n<p></p><hr/>\n<em>2017-Jun-30 12:58:35 by jfrey:</em> <br/>\n\nThe problem is related to prefetching, but not global job priorities. It can be triggered when there are multiple request ads for the some autocluster, due to interleaving job priorities. When prefetch gets all of the request ads and the last ad is in the same autocluster as a previous ad that didn't get matched, the negotiator sends an extra SEND_RESOURCE_REQUEST_LIST (which won't return any new ads) followed an unnecessary END_NEGOTIATE (which the schedd isn't expecting).\n\n<p>In <code>ResourceRequestList::getRequest()</code>, if the boolean <code>m_send_end_negotiate</code> is true, then prefetch saw a NO_MORE_JOBS from the schedd and the negotiator shouldn't try to fetch any more request ads. The function should return false immediately if there are no more ads (<code>cached_resource_request</code> is exhausted and <code>m_ads</code> is empty). We check this once before trying to pull another ad from <code>m_ads</code>. But if the remaining ads in <code>m_ads</code> are in autoclusters that have already been exhausted, the function ends up querying the schedd for more ads when it shouldn't. If the schedd responds with NO_MORE_JOBS (the usual case), it will consider the negotiation complete. But the calling function in the negotiator thinks it still needs to send an END_NEGOTIATE.\n\n</p><p>The check of <code>m_send_end_negotiate</code> needs to move inside the while loop looking to populate <code>front</code>.\n\n</p><p></p><hr/>\n<em>2017-Jul-03 09:18:01 by bbockelm:</em> <br/>\n\nGreat detective work!\n\n<p>Can I request a backport to the stable series also?  While not essential for CMS, I think it sounds like other users of prefetching might also trigger this problem.\n\n</p><p>If this clears out all the prefetch errors, then maybe (in a separate ticket) we should consider turning it on by default.\n\n</p><p></p><hr/>\n<em>2017-Jul-31 15:08:52 by johnkn:</em> <br/>\n\n<strong>CODE_REVIEW</strong> change looks good.  I believe that this change makes this code just before the while loop unnecessary\n\n<p></p><div class=\"code\">\n<pre class=\"code\">\t\t\t// The prefetch of RRLs saw a NO_MORE_JOBS from the schedd.\n\t\t\t// Hence, once m_ads is empty and we run out or resource_request_count,\n\t\t\t// then we ought to return false.\n\t\t\t//\n\t\t\t// In this case, we never ask the schedd to send job info, so we must\n\t\t\t// send an explicit END_NEGOTIATE to inform it we are done.\n\t\tif (m_send_end_negotiate &amp;&amp; m_ads.empty())\n\t\t{\n\t\t\treturn false;\n\t\t}\n</pre></div>\n\n\n<p></p><hr/>\n<em>2017-Sep-06 14:04:23 by jfrey:</em> <br/>\n\nI agree that indicated code above the loop is unnecessary after this change.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6336\" title=\"Schedd skips jobs when negotiator prefetch enabled\">#6336</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nSchedd skips jobs when negotiator prefetch enabled</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jul-31 16:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=51967\">[51967]</a></span>: Docs for negotiator prefetch bug fixes. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6336\" title=\"Schedd skips jobs when negotiator prefetch enabled\">#6336</a></span> <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6312\" title=\"Protocol errors in negotiation\">#6312</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jul-03 16:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=51814\">[51814]</a></span>: Fix negotiation protocol error when doing request prefetch. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6312\" title=\"Protocol errors in negotiation\">#6312</a></span> When prefetch sees NO_MORE_JOBS from the schedd, don't ask for more request ads during normal negotiation. This was happening inadvertantly when the last of the prefetched request ads were tossed because they were in an autocluster that\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2018-Sep-14 14:41", "status": "resolved", "created": "2017-Jun-21 13:54", "fixed_version": "2017-Jun-21 13:54", "broken_version": "", "priority": "2", "subsystem": "DaemonsCM", "assigned_to": "tannenba", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "bbockelm@cse.unl.edu", "due_date": ""}