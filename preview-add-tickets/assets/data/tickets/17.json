{"id": 17, "title": "Ticket #17: Add support for kernel threads to facilitate non-blocking i/o", "description": "<blockquote>\n<strong>Problem:</strong>\n\n<p>US CMS has 10,000+ node glidein pools, and needs to authenticate all communications with GSI.  Furthermore, these glidein pools have execute nodes all over the world, so network latency between collector and startd can be very large.  When a startd first fires up, it takes 6 round trips w/ the collector to GSI authenticate - this can take more than a second.  Most of this time (over 90% by our measurements) is spent down inside the gsi/ssl libraries blocked waiting on network I/O. The end result is currently as a workaround, CMS needs to run 20 collectors working together to handle a 10,000 node distributed glidein pool.  :(.\n\n</p><p><strong>Proposed Solution:</strong>\n\n</p><p>The time has come to add kernel-level threading to Condor.  I know what you are thinking.  <em>Threads?</em>  Wtf?  Todd, have you lost your mind?  In a distributed system like Condor, adding threads will have us hunting down  non-deterministic bugs for the rest of our lives!!!\n\n</p><p>Don't fret, my fellow thread-fearing friends.\n\n</p><p>The plan is to implement a threading model that is opposite of the traditional pthread idea.  With pthreads, the basic idea is all threads run concurrently except for code that is explicitly marked as a critical section.  Our plan here is to create a thread pool and only allow one kernel thread to run at a time, except in code sections that are <em>explicitly</em> marked as \"thread safe\".\n\n</p><p>So in step one, the only code marked thread safe will be the network i/o kernel calls <em>select()</em>, <em>send()</em>, and <em>recv()</em>.  Higher levels of the code will be able to easily turn threading on and off, which essentially says if Condor should yield a thread during network I/O or not.\n\n</p><p>To solve the immediate problem, the solely the code in daemoncore which services the DC_AUTHENTICATE command will yield on I/O.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Jan-22 00:05:26 by psilord:</em> <br/>\n\nHow does GCB interact with threads since GCB uses the linker trick to wrap <em>select()</em>, <em>send()</em>, and <em>recv()</em> and the wrapped function may use global variables for GCB initialization purposes?\n\n<p></p><hr/>\n<em>2009-Jan-22 10:47:20 by tannenba:</em> <br/>\n\nRe GCB, eventually GCB will need to support a callback function.\n<hr/>\n<em>2010-Oct-20 15:59:08 by jfrey:</em> <br/>\n\nBulk change of target version from v070504 to v070505 using ./ticket-target-mover.\n<hr/>\n<em>2011-Jan-27 14:21:33 by danb:</em> <br/>\n\nBulk change of target version from v070505 to v070506 using ./ticket-target-mover.\n<hr/>\n<em>2011-Feb-01 14:49:30 by tannenba:</em> <br/>\n\nBulk change of target version from v070506 to NULL using ./ticket-target-mover.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=446\" title=\"collector is freezing up after a forked child exits\">#446</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\ncollector is freezing up after a forked child exits</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=447\" title=\"Deal properly w/ unix signal handling when using a thread pool\">#447</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nDeal properly w/ unix signal handling when using a thread pool</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=482\" title=\"Thread Local storage breaks cross tests from 32b rhel 3-&gt;64 bit rhel3\">#482</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nThread Local storage breaks cross tests from 32b rhel 3-&gt;64 bit rhel3</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4089\" title=\"errno trashed by threading code for some IO operations\">#4089</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nerrno trashed by threading code for some IO operations</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Oct-14 17:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=16057\">[16057]</a></span>: For now, only allow thread pools to be enabled for the Collector (<span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>).  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-21 12:24</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15434\">[15434]</a></span>: Added dprintfs to log when our thread pool grows or is exhausted. (<span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>)  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-17 09:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15382\">[15382]</a></span>: Make pthread mutexes recursive (the same thread can grab the lock again). By doing so, we (1) match the semantics on Win32, (2) safeguard against a common deadlock situation w/ only a small performance penalty. Note this commit is not portable beyond Linux. Some configure magic will need to be added\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Apr-29 12:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14588\">[14588]</a></span>: Fix bug introduced w/ thread merge that broke Chirp. (gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>) Specifically, it broke any registered command handler outside of daemonCore that did its own accept(), because accept() was already being invoked (in error) on the socket inside daemonCore itself.  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Apr-27 17:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14566\">[14566]</a></span>: Hopefully allow threads code to build on BSD and MacOS (<span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>).  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Apr-27 16:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14565\">[14565]</a></span>: Revert \"Do not include pthread.h unless the platform also has TLS and pthreads.\" It just made things worse. :( (gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>) This reverts commit 87ab7f52921373fe67d676976583ea0fcfa3b589.  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Apr-24 17:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14551\">[14551]</a></span>: Fixed syntax problem setting up PTHREAD defines for DRMAA. (<span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>)  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Apr-24 16:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14550\">[14550]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=13420\">[13420]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13421\">[13421]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13422\">[13422]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13423\">[13423]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13424\">[13424]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13425\">[13425]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13426\">[13426]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13427\">[13427]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13428\">[13428]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13429\">[13429]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13430\">[13430]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13431\">[13431]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13432\">[13432]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13433\">[13433]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13434\">[13434]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13435\">[13435]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13436\">[13436]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13437\">[13437]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13438\">[13438]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=13439\">[13439]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=14511\">[14511]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=14543\">[14543]</a></span>, Merge branch 'V7_3-Threads-branch' (gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>)\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Apr-24 13:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14543\">[14543]</a></span>: Do not include pthread.h unless the platform also has TLS and pthreads. Hopefully this will fix some build issues on MacOS and BSD. (gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>)  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Apr-20 08:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14511\">[14511]</a></span>: Fixed threading race condition and UDP support w/ threading. (gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>)  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Feb-12 14:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13916\">[13916]</a></span>: Revert \"Removed HAS_PTHREADS test in configure.ac for DRMAA, never used\"... The HAS_PTHREADS test is still used and may be removed when the thread changes for ticket <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span> are merged to the trunk. This reverts commit 32ef85f4f87f137d928c3a40c26019c7a8d83744.  (By bgietzel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 14:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13439\">[13439]</a></span>: Fix use of __FUNCTION__ macro on on Win32 VS 2008. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 14:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13438\">[13438]</a></span>: Tell VS 2008 about new source files for thread support. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 14:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13437\">[13437]</a></span>: Change thread code to follow rules of great renaming (.cpp instead of .C) <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 14:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13436\">[13436]</a></span>: Fixed various build errors when building on platoforms w/o pthreads. Also fixes errors building on platforms which have pthreads, but where we don't (yet) explicitly want pthread support. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span> (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 14:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13435\">[13435]</a></span>: Fix errors compiling std universe test programs. Changes make -lpthread option appear for Condor daemons/tools, but do NOT include -lpthread when compiling test programs in the test suite. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span> (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 14:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13434\">[13434]</a></span>: Fix problems with statically linking Condor after Thread branch merge. The change is now pthread library needs to be linked in everywhere the util lib is, since dprintf is now thread safe via pthread mutexes. \u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 14:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13433\">[13433]</a></span>: Threads instantiation compilation fix: template X -&gt; template class X Committer: Todd Tannenbaum <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span> (By Matthew Farrellee )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 13:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13432\">[13432]</a></span>: Fixed linking of standard universe binaries on platforms w/ Condor thread support. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span> (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13431\">[13431]</a></span>: Added an EXCEPT if a socket cannot be cancelled immediately + cleanup. For now, we EXCEPT if a socket is Canceled while it is in use by another thread. Soon this should be changed so that the thread doing the cancel yields until it is safe to cancel the socket. The reason for doing it this way is because\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13430\">[13430]</a></span>: Moved curr_dataptr and curr_regdataptr data members to be globals. The curr_dataptr and curr_regdataptr no longer members of the daemon core class, but instead are global variables declared inside daemon_core.C. This was done because thread local storage did not work with these variables when they were\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13429\">[13429]</a></span>: Get <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CurrentTid\" title=\"Current Tid\">CurrentTid</a></span> tls global to build correctly on VC++ and gcc. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13428\">[13428]</a></span>: Use thread local storage variable <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CurrentTid\" title=\"Current Tid\">CurrentTid</a></span> to display tid in log messages. This is faster/better/safer than calling CondorThreads_gettid() since it allows us to avoid grabbing locks. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13427\">[13427]</a></span>: Changes to Daemon Core to support socket handlers in a seperate thread. + Put daemonCore Data Pointer members into thread local storage. + In the socket table, keep track if a thread is currently servicing a socket so we don't re-enter into the same socket handler on mistake. + Upon Cancel_Socket, delay\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13426\">[13426]</a></span>: Put current tid into TLS variable <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CurrentTid\" title=\"Current Tid\">CurrentTid</a></span>, consolidate some functions. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13425\">[13425]</a></span>: Use configure to ultimately set HAVE_TLS and THREAD_LOCAL_STORAGE constants. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:29</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13424\">[13424]</a></span>: Decreased the verbosity of thread debug messages. 1. Got rid of most spurious RUNNING-&gt;READY, READY-&gt;RUNNING messages when not switching to a different thread. 2. Detailed info about thread safe blocks only logged if D_THREADS and D_FULLDEBUG are both selected. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span> (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:28</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13423\">[13423]</a></span>: Added the tid to all dprintf lines if thread pool is being used. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:28</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13422\">[13422]</a></span>: Made dprintf() thread safe on Unix. Achieved via a pthread mutex, if pthreads is available. Note code already existed to do the same thing on Win32. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13421\">[13421]</a></span>: Changes to allow the thread code to frank on Unix. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-14 12:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13420\">[13420]</a></span>: Initial commit adding threads. At this point, daemon core command handlers will start in a new thread and authentication will happen in parallel. <span class=\"ticket\"><a class=\"stalled\" href=\"tktview?tn=17\" title=\"Add support for kernel threads to facilitate non-blocking i/o\">#17</a></span>  (By Todd Tannenbaum )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2014-Jul-28 13:05", "status": "stalled", "created": "2009-Jan-14 10:57", "fixed_version": "2009-Jan-14 10:57", "broken_version": "", "priority": "5", "subsystem": "Daemons", "assigned_to": "tannenba", "derived_from": "", "creator": "tannenba", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "", "due_date": "PARENT"}