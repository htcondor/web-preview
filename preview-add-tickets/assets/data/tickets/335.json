{"id": 335, "title": "Ticket #335: condor_starter 7.3.0 segfault", "description": "<blockquote>\nFound this in a starter 7.3.0 starter log on k2.cs.wisc.edu:\n\n<p></p><div class=\"verbatim\">\n<pre>03/19 15:15:59 ********** STARTER starting up ***********\n03/19 15:15:59 ** $CondorVersion: 7.3.0 Feb 17 2009 BuildID: 132922 $\n03/19 15:15:59 ** $CondorPlatform: I386-LINUX_RHEL5 $\n03/19 15:15:59 ******************************************\n03/19 15:15:59 Submitting machine is \"sleepy.cs.wisc.edu\"\n03/19 15:15:59 EventHandler {\n03/19 15:15:59  func = 0x8105fc8\n03/19 15:15:59  mask = SIGALRM SIGHUP SIGINT SIGUSR1 SIGUSR2 SIGCHLD SIGTSTP\n03/19 15:15:59 }\n03/19 15:16:23 condor_read(): recv() returned -1, errno = 104, assuming failure\nreading 5 bytes from unknown source.\n03/19 15:16:23 IO: Failed to read packet header\nStack dump for process 19569 at timestamp 1237493783 (12 frames)\ncondor_starter(dprintf_dump_stack+0xd0)[0x8101b01]\ncondor_starter[0x8101cbe]\n[0xfe1420]\n/lib/libc.so.6(abort+0x101)[0xbbf691]\n/lib/libc.so.6(__assert_fail+0xfb)[0xbb71fb]\ncondor_starter(REMOTE_CONDOR_register_fs_domain+0x148)[0x80ec460]\ncondor_starter(_Z21init_environment_infov+0x2b)[0x80dbf5d]\ncondor_starter(_Z4initv+0x10)[0x80dd3f6]\ncondor_starter(_ZN12StateMachine7executeEv+0x181)[0x8106237]\ncondor_starter(main+0x179)[0x80dd5f5]\n/lib/libc.so.6(__libc_start_main+0xdc)[0xbaae8c]\ncondor_starter(realloc+0x79)[0x80dbc11]\n</pre></div>\n\n\n<p>Looks bad and needs work.\n\n</p><p>Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=183\" title=\"on linux an abort in glibc causes infinite loop with google coredumper\">#183</a></span>, though closed at the time of this writing, may be related.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Oct-08 16:35:55 by danb:</em> <br/>\n\nI think the real problem here is that the standard universe starter calls abort() via assert in expected code paths, such as the path followed when there are communication failures with the shadow.  This results in core files being generated and people wasting time trying to find bugs where there are none.\n\n<p>I created a new ticket <span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=828\" title=\"standard univ starter asserts and dumps core in expected code paths\">#828</a></span> about this unfortunate behavior in the std. univ. starter.</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=828\" title=\"standard univ starter asserts and dumps core in expected code paths\">#828</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nstandard univ starter asserts and dumps core in expected code paths</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2010-Jan-31 13:40", "status": "resolved", "created": "2009-Mar-20 13:07", "fixed_version": "2009-Mar-20 13:07", "broken_version": "v070300", "priority": "3", "subsystem": "Daemons", "assigned_to": "danb", "derived_from": "", "creator": "psilord", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}