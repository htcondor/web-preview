{"id": 2249, "title": "Ticket #2249: back to back condor_hold + release can cause job removal", "description": "<blockquote>\nSteps to repro:\n<ul>\n<li>get a series of long running sleep jobs to execute:\n</li><li>once your schedd is sufficiently busy run 2 times in a row\"_condor_q &amp;&amp; condor_hold -a &amp;&amp; sleep 1 &amp;&amp; condor_release -a &amp;&amp; condor_q_\"\n</li><li>watch your queue decrease in size.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2011-Jun-16 15:27:34 by tstclair:</em> <br/>\n\nwhen looking through the Log you will notice a lot of\n\n<p>Job #.-1: not runnable\n\n</p><p>^^ then they are removed from the queue\n\n</p><p></p><hr/>\n<em>2011-Jun-16 15:55:37 by jfrey:</em> <br/>\n\nI just reproduced with 30 running jobs. Only one of them left the queue during the second hold/release cycle. I see a lot of 'Job 253.-1: not runnable' in the schedd log, so I'm not convinced that's directly related to the problem. Also, the details look different than <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1900\" onclick=\"get_ticket_and_populate_wrapper('1900'); return false;\" title=\"Running jobs leave queue when held\">#1900</a></span>. That is, the shadow isn't setting <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobStatus\" title=\"Job Status\">JobStatus</a></span> to 6 (TRANSFERRING_OUTPUT) in the schedd just before exiting.\n\n<p></p><hr/>\n<em>2011-Jun-16 16:46:17 by tstclair:</em> <br/>\n\nIn tracing it looks to be a race condition on shutdown, because it appears that the shadows are cleaning up after the status has changed from the 2nd modification.  Maybe there needs to be some additional logic here.\n\n<p></p><div class=\"code\">\n<pre class=\"code\">case JOB_KILLED:\n\t// If the job isn't being HELD, we'll remove it\n\tif ( q_status != HELD ) {\n\tset_job_status( job_id.cluster, job_id.proc, REMOVED );\n\t}\nbreak;\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Jun-17 09:28:35 by matt:</em> <br/>\n\nI'm able to reproduce by removing the \"sleep 1\" and running &gt;30 jobs. Only the running jobs appear to be removed, which supports with Tim's theory.\n\n<p>This bug is possible from the beginning of time itself. A pain to track down due to numerous code reformattings.\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">commit e36960755e96ac142669df746b95ed43a7111668\nAuthor: wright &lt;wright&gt;\nDate:   Thu Mar 15 21:48:08 2001 +0000\n\n    Fixed bug for condor_hold on NT (and any using of the new shadow).  If\n    the job we put on hold was running, we used to remove it from the\n    queue.  Now, in child_exit(), we check the status of the job in the\n    queue, and if it's HELD, we don't change the job status when the\n    shadow exits w/ JOB_KILLED, JOB_COREDUMPED, etc.  This insures that\n    check_zombie() won't remove the job from the queue.\n\ncommit 209f5873b9c08fe2d7ef7d837ff0f20b985deba9\nAuthor: adiel &lt;adiel&gt;\nDate:   Thu Feb 19 21:40:45 1998 +0000\n\n    Jobs that are killed/coredumped are set to status REMOVED instead of COMPLETED\n</pre></div>\n\n\n<p>Before this the race would have show up as COMPLETED jobs, oops.\n\n</p><p></p><hr/>\n<em>2011-Jun-17 10:06:22 by tstclair:</em> <br/>\n\nSo making a simple switch to:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">case JOB_KILLED:\n\t// If the job isn't being HELD, we'll remove it\n\tif ( q_status != HELD &amp;&amp; q_status != IDLE ) {\n\tset_job_status( job_id.cluster, job_id.proc, REMOVED );\n\t}\nbreak;\n</pre></div>\n\n\n<p>fixes this particular issue, but I wonder if it handles all.\n\n</p><p>So the question would be:\n\n</p><p>Is there ever a case where the shadow exits 102, +JOB is marked as idle, and  the job should be removed?  Logic tells me it should be no.\n\n</p><p></p><hr/>\n<em>2011-Jun-17 10:30:45 by matt:</em> <br/>\n\nReproduced on...\n\n<p></p><div class=\"code\">\n<pre class=\"code\">$CondorVersion: 7.0.2 Jun 12 2008 $\n$CondorPlatform: X86_64-LINUX_RHEL5 $\n</pre></div>\n\n\n<p>With...\n</p><div class=\"code\">\n<pre class=\"code\">Config: NUM_CPUS = 50\nSubmit: echo -e 'universe=vanilla\\ncmd=/bin/sleep\\nargs=1d\\nqueue 100' | condor_submit &lt;-- had to set the universe, wow!!\nRunning: condor_q | tail -n1 ; condor_hold -a ; condor_release -a ; condor_q | tail -n1 &lt;-- after jobs start running, e.g.\n\n$ condor_q | tail -n1 ; condor_hold -a ; condor_release -a ; condor_q | tail -n1\n100 jobs; 50 idle, 50 running, 0 held\nAll jobs held.\nAll jobs released.\n100 jobs; 100 idle, 0 running, 0 held\n$ condor_q | tail -n1 ; condor_hold -a ; condor_release -a ; condor_q | tail -n1\n50 jobs; 0 idle, 50 running, 0 held\nAll jobs held.\nAll jobs released.\n50 jobs; 50 idle, 0 running, 0 held\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Jun-17 10:38:32 by matt:</em> <br/>\n\nAlso reproduced on...\n\n<p></p><div class=\"code\">\n<pre class=\"code\">$CondorVersion: 7.2.0 Jan  9 2009 BuildID: RH-7.2.0-3.el5 $\n$CondorPlatform: X86_64-LINUX_RHEL5 $\n</pre></div>\n\n\n<p>and...\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">$CondorVersion: 7.4.1 Dec 11 2009 BuildID: RH-7.4.1-0.7.1.el5 PRE-RELEASE $\n$CondorPlatform: X86_64-LINUX_RHEL5 $\n</pre></div>\n</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/378/SchedLog_condor_hold_release\">SchedLog_condor_hold_release</a>\n76749 bytes added by tstclair on 2011-Jun-16 20:26:20 UTC.\n<br/>\ntail -f of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SchedLog\" title=\"Sched Log\">SchedLog</a></span> during the test<br/>\n</li><li><a href=\"attach_get/379/run_details_condor_hold_release\">run_details_condor_hold_release</a>\n34843 bytes added by tstclair on 2011-Jun-16 20:45:46 UTC.\n<br/>\nOutput from the commands to see what jobs get nixed<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-17 15:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22227\">[22227]</a></span>: === GT <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2249\" onclick=\"get_ticket_and_populate_wrapper('2249'); return false;\" title=\"back to back condor_hold + release can cause job removal\">#2249</a></span> === Fix for back to back condor_hold + release caused job removal for running jobs where the shadow exited 102 after the job has switched back to IDLE.  (By Timothy St. Clair )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Jun-17 15:06", "status": "resolved", "created": "2011-Jun-16 15:25", "fixed_version": "2011-Jun-16 15:25", "broken_version": "v070600", "priority": "2", "subsystem": "Tools", "assigned_to": "tstclair", "derived_from": "#1900", "creator": "tstclair", "rust": "", "customer_group": "users", "visibility": "public", "notify": "matt@cs.wisc.edu, tstclair@redhat.com, jfrey@cs.wisc.edu, psilord@cs.wisc.edu", "due_date": ""}