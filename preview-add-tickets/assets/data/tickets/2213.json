{"id": 2213, "title": "Ticket #2213: Condor_hold + condor_rm of DAG doesn't create rescue DAG", "description": "<blockquote>\nIf you do condor_hold of a running DAGMan job, and then condor_rm it without releasing it, you won't get a rescue DAG.  To pick up from where you left off, you have to do the non-standard procedure of condor_submitting the .condor.sub file, instead of doing condor_submit_dag.</blockquote>", "remarks": "<blockquote>\n<em>2011-Sep-19 11:25:46 by wenger:</em> <br/>\n\nWe've talked about changing the behavior of condor_hold on DAGMan to fix this -- instead of condor_hold actually killing the DAGMan process, it would just have DAGMan set some internal flag telling it not to submit jobs; condor_release would obviously reset the flag.  (One issue with this is how to get DAGMan into recovery mode for testing.)\n\n<p>Something else that just came up -- Bill ran into a situation that he wanted to put some DAGs on hold because the load on submit.chtc was super-high -- but the load was so high that the condor_hold failed.  So I'm wondering if we should have some out-of-band solution for telling DAGMan to not submit any more jobs.  If we did that, maybe it could take care of LIGO's problem.\n\n</p><p>Hmm -- something else I just thought of -- maybe we could have configuration for whether condor_hold actually kills the process or not.\n\n</p><p></p><hr/>\n<em>2011-Nov-04 13:58:14 by wenger:</em> <br/>\n\nJust discussed this more on today's LIGO phone call -- their use case is that they'd really like a way to stop DAGMan from submitting any new jobs, wait until the currently-running jobs are finished, and then exit, creating a rescue DAG.  There's really no way you can do that now, because if you do a condor_hold, wait for the jobs to finish, and then a condor_rm, you don't get a rescue DAG; and if you do a condor_release and then a condor_rm, you might get some new jobs submitted.\n\n<p>One option that was discussed was to have something like a condor_hold -peaceful or -graceful.\n\n</p><p>Another (kind of kludgey, but pretty easy-to-implement) idea is this:  if the file &lt;dagfile&gt;.hold exists, DAGMan will not submit any new jobs, and when the submitted jobs are all finished, it will exit with a rescue DAG.  If the hold file is removed, submission of jobs will continue.  (If we do this, condor_submit should always remove the hold file if it exists.)\n\n</p><p></p><hr/>\n<em>2011-Nov-22 06:31:05 by matt:</em> <br/>\n\n+1 for not making scheduler universe semantics diverge more from local universe\n\n<p>Interesting idea to have a /proc-like control interface to dagman, maybe it can be expanded to include dagfile.reload to assist editing a running dag.\n\n</p><p></p><hr/>\n<em>2011-Nov-28 22:05:24 by nwp:</em> <br/>\n\nI have reviewed this and it appears correct in all respects.  Merge with all due haste.\n\n<p></p><hr/>\n<em>2011-Nov-28 22:07:08 by nwp:</em> <br/>\n\nDocumentation appears to be complete, so status set to pending.\n\n<p></p><hr/>\n<em>2011-Nov-29 10:52:51 by wenger:</em> <br/>\n\nJust merged this to the master, so I'm going to resolve the ticket.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2663\" title=\"Create better interface to control a running DAG\">#2663</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCreate better interface to control a running DAG</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jan-10 10:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=29039\">[29039]</a></span>: Reword version history item. ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2213\" title=\"Condor_hold + condor_rm of DAG doesn't create rescue DAG\">#2213</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-02 13:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28547\">[28547]</a></span>: edit to new description of DAGMan halt file ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2213\" title=\"Condor_hold + condor_rm of DAG doesn't create rescue DAG\">#2213</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Nov-29 09:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28474\">[28474]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2213\" title=\"Condor_hold + condor_rm of DAG doesn't create rescue DAG\">#2213</a></span>: added more comments to clarify test script.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Nov-23 17:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28436\">[28436]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2213\" title=\"Condor_hold + condor_rm of DAG doesn't create rescue DAG\">#2213</a></span>: added message when transitioning from halted to running state; made improvements to the test.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Nov-21 17:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28389\">[28389]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2213\" title=\"Condor_hold + condor_rm of DAG doesn't create rescue DAG\">#2213</a></span>: all done except for the fact that the order of stuff in the node output file is probably not 100% deterministic -- need to change the test to deal with that.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Nov-13 12:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28232\">[28232]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2213\" title=\"Condor_hold + condor_rm of DAG doesn't create rescue DAG\">#2213</a></span>: added preliminary version of the dag_halt-A test script (doesn't check output yet).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Nov-13 11:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28231\">[28231]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2213\" title=\"Condor_hold + condor_rm of DAG doesn't create rescue DAG\">#2213</a></span>: hopefully final cleanup of the actual code (still need test script).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Nov-10 17:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28215\">[28215]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2213\" title=\"Condor_hold + condor_rm of DAG doesn't create rescue DAG\">#2213</a></span>: partially fixed problem with PRE scripts not starting after halt/un-halt; improved test jobs/scripts so output file more accurately reflects the order that things happen.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Nov-10 15:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28209\">[28209]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2213\" title=\"Condor_hold + condor_rm of DAG doesn't create rescue DAG\">#2213</a></span>: created a test DAG for this (but not the actual test script yet); made a bunch of changes to get this to work better with PRE and POST scripts (but there are still problems -- the NodeY2 PRE script doesn't start after the DAG is un-halted, and the NodeC2 PRE script does run when it shouldn't...).\u00a0[...]\n (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Nov-07 18:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28163\">[28163]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2213\" title=\"Condor_hold + condor_rm of DAG doesn't create rescue DAG\">#2213</a></span>: the basic functionality is in place, but it needs tests, some code cleanup, and documentation.  (By Kent Wenger )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Nov-29 10:53", "status": "defer", "created": "2011-Jun-06 10:58", "fixed_version": "2011-Jun-06 10:58", "broken_version": "v070404", "priority": "5", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "wenger@cs.wisc.edu, tstclair@redhat.com,pcouvare@caltech.edu", "due_date": ""}