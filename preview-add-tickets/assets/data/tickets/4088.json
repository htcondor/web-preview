{"id": 4088, "title": "Ticket #4088: Use of select() overrunning bit array bounds", "description": "<blockquote>\nIn a couple spots of Condor, we're calling select() with single fd_sets. This will corrupt memory on unix if any of the fds being selected on have values greater than 1023. We have the Selector class in the util lib to handle high-numbered fds safely. It should be used in these cases.\n\n<p>Calls to select() with fd_sets happen in the following locations:\n\n</p><p></p><ul>\n<li><code>src/condor_ckpt/file_state.cpp</code>: <code>CondorFileTable::select()</code>\nDo we want and need to touch the checkpointing code?\n\n<p></p></li><li><code>src/condor_ckpt_server/server2.cpp</code>: <code>Server::Execute()</code>\nAlways uses a handful of fds that are created at startup. Should not be a problem, but can use Selector class.\n\n<p></p></li><li><code>src/condor_procd/named_pipe_reader.unix.cpp</code>:\n  <code>NamedPipeReader::read_data()</code>, <code>NamedPipeReader::poll()</code>\nShould use Selector class.\n\n<p></p></li><li><code>src/condor_procd/named_pipe_writer.unix.cpp</code>:\n  <code>NamedPipeWriter::write_data()</code>\nShould use Selector class.\n\n<p></p></li><li><code>src/condor_shadow.std/shadow.cpp</code>:\n  <code>HandleSyscalls()</code>\nSelects on RSC_SOCK and CLIENT_LOG.\nThese seem to be defined and set in the syscall lib.\n\n<p></p></li><li><code>src/condor_syscall_lib/*</code>:\nHere there be dragons!\n</li></ul>\n\n<p>We have observed this bug cause a heavily-loaded schedd to crash while trying to talk to the procd when creating a starter for a local universe job.</p></blockquote>", "remarks": "<blockquote>\nThis will also fix <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4009\" title=\"Schedd crashes when using clone on F19 &amp; &gt;\">#4009</a></span>\n\n<p></p><hr/>\n<em>2013-Nov-20 12:06:50 by gthain:</em> <br/>\n\n<strong>CODE REVIEW</strong>  What's with the saving of errno in condor_rw.cpp around the stop_thread_safe call after recv?\n\n<p></p><hr/>\n<em>2013-Nov-20 13:40:48 by jfrey:</em> <br/>\n\nstop_thread_safe makes calls to dprintf() and can end up overwriting errno.\n\n<p></p><hr/>\n<em>2013-Nov-20 13:51:20 by gthain:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>OK, the select changes look good, but let's break out the errno saving around stop_thread_safe into a separate ticket.\n\n</p><p></p><hr/>\n<em>2013-Nov-20 14:31:57 by jfrey:</em> <br/>\n\nOne more code review needed. I added a change in src/condor_ckpt_server/server2.cpp in the commit I pushed to V8_0-branch.\n\n<p></p><hr/>\n<em>2013-Nov-22 13:31:02 by gthain:</em> <br/>\n\n<strong>CODE REVIEW</strong>  Latest patch looks good.</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/812/selector.patch\">selector.patch</a>\n13078 bytes added by jfrey on 2013-Nov-20 16:58:05 UTC.\n<br/>\nPatch to use Selector class in do_connect.cpp and procd communications code.<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Nov-20 16:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=38780\">[38780]</a></span>: Docs for select() fd_set stack corruption bug. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4088\" title=\"Use of select() overrunning bit array bounds\">#4088</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Nov-20 14:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=38778\">[38778]</a></span>: Use Selector class in more places to avoid buffer overflows. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4088\" title=\"Use of select() overrunning bit array bounds\">#4088</a></span> Using select() with simple fd_sets leads to buffer overflows if any of the selected fds have values greater than 1023. We've seen a crash in the procd communication code because of this. Now, we use the Selector class everywhere outside\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Nov-20 14:24</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=38777\">[38777]</a></span>: Save timeout across multiple calls to Selector::execute() <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4088\" title=\"Use of select() overrunning bit array bounds\">#4088</a></span> The value of the timeout argument to select() is undefined after the call returns. Save the desired timeout in the Selector object so that multiple calles to Selector::execute() behave in a defined manner. This will be useful for some new\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2013-Nov-22 13:31", "status": "resolved", "created": "2013-Nov-20 10:51", "fixed_version": "2013-Nov-20 10:51", "broken_version": "v080000", "priority": "2", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "#4009", "creator": "jfrey", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "jfrey@cs.wisc.edu", "due_date": ""}