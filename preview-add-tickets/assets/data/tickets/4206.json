{"id": 4206, "title": "Ticket #4206: Reduce unused memory in DaemonCore data structures", "description": "<blockquote>\nThe <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> code wastes some memory in its data structures for callback handlers registered for various events. It uses unnecessarily large static arrays of structs with noticeable internal fragmentation. The amount of wasted memory is minor in most cases, but adds up quickly on a submit machine with a large number of shadow processes.\n\n<p>Code for this ticket is committed on the branch <code>V8_1-gt4206-daemoncore_diet</code>.\n\n</p><p>Most of event handler structs (<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CommandEnt\" title=\"Command Ent\">CommandEnt</a></span>, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SignalEnt\" title=\"Signal Ent\">SignalEnt</a></span>, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SockEnt\" title=\"Sock Ent\">SockEnt</a></span>, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PipeEnt\" title=\"Pipe Ent\">PipeEnt</a></span>, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ReapEnt\" title=\"Reap Ent\">ReapEnt</a></span>) are laid out inefficiently, leading to a lot of internal fragmentation. Their elements can be reordered to decrease the overall size of the struct.\n\n</p><p>The event handler arrays comTable, sigTable, and reapTable are statically allocated with many more entries than required. They can be changed to dynamically-extendable arrays that start at a small size.\n\n</p><p>Some additional changes to consider:\n</p><ul>\n<li>Use <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StringSpace\" title=\"String Space\">StringSpace</a></span> to store handler description strings. These are usually strdup()'d from static strings and many handlers may have the same description.\n</li><li>Collapse the handler and handlercpp elements into a union, since both aren't used at the same time.\n</li><li>Control the size of the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExtArrays\" title=\"Ext Arrays\">ExtArrays</a></span> more tightly. The default is to double the size when they need to be expanded. Trade-off of space vs. process startup time.\n</li><li>Keep the arrays comTable, sigTable, and reapTable sorted by the <code>num</code> element, allowing faster lookup.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-27 09:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39723\">[39723]</a></span>: add version history item for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4206\" title=\"Reduce unused memory in DaemonCore data structures\">#4206</a></span>, and re-order 8.1.5 version history items to place more important items at the to of the list.  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-06 09:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39535\">[39535]</a></span>: Shrink space used by priv-switching history. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4206\" title=\"Reduce unused memory in DaemonCore data structures\">#4206</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-10 11:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39371\">[39371]</a></span>: Reduce internal fragmentation in daemoncore handler structs. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4206\" title=\"Reduce unused memory in DaemonCore data structures\">#4206</a></span> Change the layout of the handler structs so that they they are more compact.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-10 11:34</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39370\">[39370]</a></span>: Change daemoncore handler tables into dynamically-resizeable arrays. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4206\" title=\"Reduce unused memory in DaemonCore data structures\">#4206</a></span> The arrays comTable, sigTable, and reapTable were statically allocated with many more entries than are typically used. Now they dynamically resizeable with a small initial size. One potential drawback is that lookup time is now\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2014-Mar-18 13:44", "status": "resolved", "created": "2014-Feb-10 11:25", "fixed_version": "2014-Feb-10 11:25", "broken_version": "v080000", "priority": "3", "subsystem": "Daemons", "assigned_to": "jfrey", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "jfrey@cs.wisc.edu,tannenba@cs.wisc.edu,eje@cs.wisc.edu", "due_date": ""}