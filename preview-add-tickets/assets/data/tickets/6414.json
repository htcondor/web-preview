{"id": 6414, "title": "Ticket #6414: cgroup limits not getting set on some OSes due to signed'ness of memsw", "description": "<blockquote>\nThe starter reuses its cgroup from one invocation to the next.  When setting the memsw limit, it must always be higher than the memory limit.  This is hard to ensure, given that a 2nd run of the starter doesn't know what the previous settings of memsw and mem were.  To fix this, the starter first sets memsw to a very high value, then sets memory to the correct value, then lowers memsw to the correct value.\n\n<p>We were setting memsw to a high value by setting it to ULONG_MAX, the max unsigned value.  However, some kernels (RHEL6, but not the Fedora 25 kernel) threw an error with ULONG_MAX, and then refused to set any other cgroup memory or cpu limits thereafter.\n\n</p><p>Changing the \"high value\" setting to LONG_MAX seems to fix the problem on all platforms.</p></blockquote>", "remarks": "<blockquote>\n<em>2017-Oct-25 13:40:53 by tim:</em> <br/>\n\n<strong>Code and Doc review:</strong> OK</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Oct-25 18:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=52660\">[52660]</a></span>: Transplant version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6401\" onclick=\"get_ticket_and_populate_wrapper('6401'); return false;\" title=\"MOUNT_UNDER_SCRATCH doesn't accept exprs in docker universe\">#6401</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6414\" onclick=\"get_ticket_and_populate_wrapper('6414'); return false;\" title=\"cgroup limits not getting set on some OSes due to signed'ness of memsw\">#6414</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6423\" onclick=\"get_ticket_and_populate_wrapper('6423'); return false;\" title=\"docker universe should set cpu share to 100 * cores, like vanilla uni\">#6423</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6424\" onclick=\"get_ticket_and_populate_wrapper('6424'); return false;\" title=\"Make STARTD_RECOMPUTE_DISK_FREE default to false\">#6424</a></span> to V8_6_7-branch  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Oct-24 16:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=52643\">[52643]</a></span>: Document <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6414\" onclick=\"get_ticket_and_populate_wrapper('6414'); return false;\" title=\"cgroup limits not getting set on some OSes due to signed'ness of memsw\">#6414</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Sep-21 16:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=52405\">[52405]</a></span>: Fix problem with cgroup memory limits not getting set on some kernels <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6414\" onclick=\"get_ticket_and_populate_wrapper('6414'); return false;\" title=\"cgroup limits not getting set on some OSes due to signed'ness of memsw\">#6414</a></span> When setting memory.memsw.limit_in_bytes to a max value, use a signed max, not unsigned  (By Greg Thain )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2017-Oct-25 13:41", "status": "resolved", "created": "2017-Sep-21 16:14", "fixed_version": "2017-Sep-21 16:14", "broken_version": "v080600", "priority": "1", "subsystem": "DaemonsExecNode", "assigned_to": "gthain", "derived_from": "", "creator": "gthain", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}