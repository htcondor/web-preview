{"id": 3522, "title": "Ticket #3522: \"condor_tail\" tool for viewing remote job sandbox", "description": "<blockquote>\nOn the OSG, condor_ssh_to_job is often inoperable - often due to site security policy or remote site configuration.\n\n<p>I propose a new client command, condor_peek (later renamed to condor_tail), which allows the user to take a look at the output sandbox.  This is loosely modelled on LSF's bpeek.\n\n</p><p>This command is meant to be simpler and more restricted than condor_ssh_to_job (no arbitrary command execution) in order to increase likelihood of success.\n\n</p><p>The implementation is meant to be straightforward, based upon the sources of condor_ssh_to_job and condor_fetchlog.\n\n</p><p>Design document and code (branch \"V7_9-peek-branch\") will be attached shortly.</p></blockquote>", "remarks": "<blockquote>\n<em>2013-Mar-03 21:57:06 by sfiligoi:</em> <br/>\n\nThe document states that you limit the transfer to \"job\u2019s stderr, stdout, or in the transfer_output_files\".\n\n<p>Why?\n\n</p><p>Why should the user not access any arbitrary file he owns?\n\n</p><p>Why not support the full \"FTP\" logic, including directory listings etc.?\n\n</p><p></p><hr/>\n<em>2013-Mar-04 08:01:14 by bbockelm:</em> <br/>\n\nHi Igor,\n\n<p></p><ul>\n<li>Why limit to the output sandbox?  Mostly out of caution.  I figured there is no security concerns to be had if the files are in the output sandbox anyway.\n</li><li>Why not extend this to a full FTP?  It would be significantly more work and, I think, there is diminishing returns after being able to view the output.  If I would go this direction, the project scope would expand significantly as I would be inclined to just embed the chirp server into the starter.\n<ul>\n<li>What value / use cases do you see here?\n</li></ul>\n</li></ul>\n\n<p>I should add that the wire protocol is versioned and it should be possible to add these features at a later time and be forward/backward-compatible.  So, we have the ability to start with a minimal set of features and add functionality.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2013-Mar-04 10:10:52 by sfiligoi:</em> <br/>\n\nMany/most users don't specify the list of output files, and rely on HTCondor to find and return all the created/modified files.\n\n<p>How will it work in this use case?\n\n</p><p></p><hr/>\n<em>2013-Mar-04 11:06:11 by bbockelm:</em> <br/>\n\n<ul>\n<li>Igor:  In that case, they'd only be able to access stdout/err for their jobs.  I think it would be reasonable to relax the limitation to \"any file in the sandbox\".  I'm still a bit nervous about \"any user-accessible file\".\n</li></ul>\n\n<p></p><hr/>\n<em>2013-Mar-04 11:29:46 by sfiligoi:</em> <br/>\n\nI think the current approach is too limiting; I fully appreciate the security considerations, but I am afraid the net result will be a useless tool.\n\n<p>How about we add a \"monitor_file_list\"?<br/>\n\nMany users don't want to just transfer back everything they produce; they may process, tar, etc. them before returning to get a manageable amount of data back.<br/>\n But peeking at the raw data would still be interesting.\n\n</p><p>Providing an explicit list of files to be monitored should address your security needs, while keeping enough flexibility for a high percentage of users.\n\n</p><p></p><hr/>\n<em>2013-Mar-04 13:19:10 by bbockelm:</em> <br/>\n\nHi Igor,\n\n<p>I would prefer just enabling everything in the sandbox over a new submit attribute. What do you see as the relative advantages of the \"monitor_file_list\" route?\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2013-Mar-04 14:18:51 by bbockelm:</em> <br/>\n\nAfter talking to a few sysadmins here, I think I've convinced myself that having \"tail -f\" capabilities is relatively important for the V1 client:\n\n<p></p><ul>\n<li>It's really a handy feature for the impatient.\n</li><li>Users are going to do this anyway.\n</li><li>Repeated queries can be more efficiently done in-process as opposed to stringing together multiple processes.  This is because the schedd interaction (starter location and security session generation) is necessary only for the first query.  All the subsequent queries can only involve the starter.\n</li></ul>\n\n<p>This would be a modest addition to the wire protocol - clients will need to be able to specify an offset for their requested files and the server will need to return the offset it started with.\n\n</p><p></p><hr/>\n<em>2013-Mar-04 14:19:51 by sfiligoi:</em> <br/>\n\nI am fine with \"anything in the sandbox\" approach.\n\n<p>But it is way more open that \"this is the list of files I will ever serve back\" from a security point of view.<br/>\n\nIf you want to minimize the exposure, the difference is substantial.\n\n</p><p></p><hr/>\n<em>2013-Mar-04 14:21:15 by bbockelm:</em> <br/>\n\nDan and Todd showed interest earlier.  I'll CC them and Zach to get a wider opinion.\n\n<p></p><hr/>\n<em>2013-Mar-05 22:09:06 by bbockelm:</em> <br/>\n\nOk, some new code pushed (and at least one file I missed in the first commit.  Doh!).  Features:\n<ul>\n<li>condor_peek -&gt; condor_tail.\n</li><li>\"-f\" is implemented.  The CLI will only authenticate for the first attempt.\n</li></ul>\n\n<p>No python bindings; no support for Igor's suggested syntax (still waiting on further opinions about semantics).\n\n</p><p></p><hr/>\n<em>2013-Mar-08 13:10:34 by bbockelm:</em> <br/>\n\nFirst version of this functionality has been pushed to master in order to make the 7.9.5 code freeze.\n\n<p>I am leaving this ticket open as we expect to continue to evolve this feature with respect to the internals and the security.\n\n</p><p></p><hr/>\n<em>2013-Mar-08 14:50:55 by smoler:</em> <br/>\n\nMan page to cover usage info:\n\n<p></p><div class=\"verbatim\">\n<pre>Usage: condor_tail [options] &lt;job-id&gt; [filename1[, filename2[, ...]]]\nView a file in a running job's sandbox.\nThe options are:\n    -help             Display options\n    -version          Display HTCondor version\n    -pool &lt;hostname&gt;  Use this central manager\n    -name &lt;name&gt;      Query this schedd\n    -debug            Show extra debugging info\n    -maxbytes         The maximum number of bytes to transfer.  Defaults to 1024\n    -auto-retry       Auto retry if job is not running yet.\n    -f,-follow        Follow the contents ofafile.\nThe filename may be any file in the job's transfer_output_files.\nAlternately, you may specify one of the following options.\n    -stdout           Peek at the job's stdout\n    -stderr           Peek at the job's stderr\n</pre></div>\n\n\n<p></p><hr/>\n<em>2013-Mar-08 16:21:54 by tannenba:</em> <br/>\n\n<strong>DESIGN REVIEW</strong>\n\n<p>Design\n\n</p><p></p><ol>\n<li>Security: how does starter ENSURE that only files\nrelated to the job can be transferred?  Because the\nfile names to peek at are coming from the users, I would like\nto see this algorithm spelled out in design doc.  Seems like just doing a string compare does not cut it (think about '..', symlink following, etc) - I would have expected to see calls to <code>realpath()</code> in the code that confirms the files are part of the sandbox.\n\n<p></p></li><li>In addition to the list of allowed-to-peek files mentioned in the design (stdout,stderr,transfer_output_files), I would like any file in the starter execute directory for the job to be peekable.  (again, describe how this will happen securely, likely with use of <code>realpath()</code> or ...).\n\n<p></p></li><li>User interface - suggest that if no file is specified that the default is stdout.  I also think it would be much better named <code>condor_tail</code> (instead of <code>condor_peek</code>).  Of course, <code>peek.cpp</code> should change to <code>tail.cpp</code>  in that case as well.\n\n<p></p></li><li>Agree totally that a <code>-f</code> follow option is needed in version one.\n\n<p></p></li><li>Nothing in the design document talks about how the starter is able to authenticate that the connecting peer (aka condor_tail) is actually authorized to see job results.  Please add a paragraph explaining how this is done (so sorry there is no historical ssh_to_job design doc).\n\n<p></p></li><li>This implementation seems like it could be very troubling on Windows.  On Windows the schedd will make blocking calls to the startd and starter, and also seems like the schedd and starter could get into deadlock.  How will this be addressed?  Warning that this tool is unstable on Windows? Just disable this tool on Windows for now?  Or?\n\n<p></p></li><li>On the section for version 2 (aka future work), please update to reflect what already happened in version 1.  I think particularly important for future work is the code to start a new session be handled differently than by forking in the schedd.\n\n<p></p></li><li>In the design doc under mechanisms to monitor a job while it is running, you forgot to mention streaming stdout/err that is available in some universes (like vanilla).  Of course, the downside of streaming stdout/err is that it is costly - resources are used to stream even if the end-user never bothers to look at the results.\n\n<p></p></li><li>Seems like condor_tail as initially proposed in design document could completely bypass the sandbox transfer scheduling happening in the schedd. Looks like this was addressed via check-in <span class=\"chng\"><a href=\"chngview?cn=35148\">[35148]</a></span>.  User-interface wise, this code should be improved so that if condor_tail is blocked for a long time waiting for a transfer token it should inform the user what is happening (via output to stderr of condor_tail?).  Also, it seems a real shame to get a transfer token if the output is very small (like a KB or less), which may be very common doing a tail -f of stdout.  Ideally we'd only grab a token if the amount of data condor_tail needs to transfer is more than some threshold.  Perhaps an algorithm like if condor_tail fails to get a transfer token within a couple seconds, it connects and transfers a max of 2KB (or some such tiny amount) from the starter, and in the reply classad the starter says how much more data is sitting there.  If there is no more waiting data, condor_tail doesn't need to bother getting a token...  Besides not needing a token if the amount of data being moved is trivial, I also don't think we need a token if condor_tail is running on a different machine than the submit machine.\n\n<p></p></li><li>DoS concerns: I don't see any \"circuit breakers\" in the design.  What happens if a user runs condor_tail over and over in a tight loop?  Seems like the schedd RPC to create a security session should have a rate limit per job id or ?\n\n<p></p></li><li>Part of the motivation is to provide a tool that would always work esp in distributed ownership environments such as OSG (as opposed to ssh_to_job that relies on the slot user having a shell, etc).  How will <code>condor_tail</code> work if the execute machine is configured to use glexec or privsep?  By the current implementation, I dont think it will work. This seems like a serious blow to universal usability, which is a primary motivator for having condor_tail in the first place.  Not sure how to fix this, but want to see the plan/design. At first blush seems like you want split off the part that does the actual interaction with the file to be a separate process that is spawned by the starter using the same path that spawns a job (or the sshd).\n</li></ol>\n\n<p>Code\n\n</p><p></p><ol>\n<li>Some cut-n-paste leftovers, like failing to send STARTER_PEEK command results in a \"Failed to send START_SSHD to starter\" error message.\n\n<p></p></li><li>Why the direct calls to <code>fstat</code> instead of the preferred method of using the <code>StatInfo</code> class in the util lib?\n\n<p></p></li><li>Processing of the command flags should use methods in <code>match_prefix.h</code> instead of <code>strcmp()</code> to match our other tools.  So instead of \"-debug\" i can do \"-d\", or \"-deb\", etc.\n</li></ol>\n\n<p></p><hr/>\n<em>2013-Mar-08 17:34:03 by bbockelm:</em> <br/>\n\nHi Todd,\n\n<p>Thanks for the feedback!  I'll work over the next few days to integrate it in.\n\n</p><p>The only <strong>critical</strong> piece I'd like to get into 7.9.5 is the improvements for realpath and switch safe_open_wrapper_follow -&gt; safe_open_wrapper.\n\n</p><p>Everything else can wait, right?\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2013-Mar-08 17:38:18 by sfiligoi:</em> <br/>\n\nAgreeing on the binary name and the arguments should also happen before 7.9.5 is out, right?\n\n<p>I for one would be very unhappy if that changed in a major way between versions.\n\n</p><p></p><hr/>\n<em>2013-Mar-08 17:40:58 by bbockelm:</em> <br/>\n\nThe name was already changed.  \"-f\" was already added (see smoler's posting of the \"-help\" output).\n\n<p>I guess the only suggested CLI change is making \"-stdout\" on by default.  That means we'd need a different flag to designate \"-no-stdout\".\n\n</p><p>How about this: stdout / err are returned by default and we instead use \"-no-stdout\" and \"-no-stderr\" to turn them off.\n\n</p><p></p><hr/>\n<em>2013-Mar-08 17:57:06 by sfiligoi:</em> <br/>\n\nHTCondor does not interleave stdout and stderr, right?<br/>\n\nSo how would you return both? One after the other?\n\n<p>I don't think most users would appreciate it.<br/>\n\nI think it is better to stick to stdout alone.\n\n</p><p></p><hr/>\n<em>2013-Mar-08 18:00:16 by sfiligoi:</em> <br/>\n\nAs for the binary name, may I suggest<br/>\n\ncondor_job_tail<br/>\n\n?\n\n<p>condor_tail is too generic, and it is far from obvious it refers to a job property.\n\n</p><p></p><hr/>\n<em>2013-Mar-19 12:59:15 by tannenba:</em> <br/>\n\nJust added more thoughts to my above Design Review comment (design items 9 and 10, and code review item 3).\n\n<p></p><hr/>\n<em>2013-Mar-22 11:21:37 by tannenba:</em> <br/>\n\nJust added item 11 to the Design Review above.  Unfortunately, seems like the current condor_tail design forgets about compatibility with priv sep and glexec paths. This is not good. :( :( :(</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/690/condor_peek+design+doc.docx\">condor_peek design doc.docx</a>\n121872 bytes added by bbockelm on 2013-Mar-04 02:58:13 UTC.\n<br/>\nInitial design document.<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-20 17:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35223\">[35223]</a></span>: fix <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3522\" onclick=\"get_ticket_and_populate_wrapper('3522'); return false;\" title='\"condor_tail\" tool for viewing remote job sandbox'>#3522</a></span> to build on windows (added #define for realPath) ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-20 14:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35217\">[35217]</a></span>: complete man page for new condor_tail tool ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3522\" onclick=\"get_ticket_and_populate_wrapper('3522'); return false;\" title='\"condor_tail\" tool for viewing remote job sandbox'>#3522</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-19 13:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35208\">[35208]</a></span>: Make sure we check return values. Default to send stdout. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3522\" onclick=\"get_ticket_and_populate_wrapper('3522'); return false;\" title='\"condor_tail\" tool for viewing remote job sandbox'>#3522</a></span>.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-19 13:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35209\">[35209]</a></span>: Refine security design - only allow transfers of files in the sandbox. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3522\" onclick=\"get_ticket_and_populate_wrapper('3522'); return false;\" title='\"condor_tail\" tool for viewing remote job sandbox'>#3522</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-13 21:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35148\">[35148]</a></span>: Add transfer queue management to condor_tail. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3522\" onclick=\"get_ticket_and_populate_wrapper('3522'); return false;\" title='\"condor_tail\" tool for viewing remote job sandbox'>#3522</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-11 16:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35124\">[35124]</a></span>: Initial incomplete (and incorrect, as the tool is evolving) documentation of new condor_tail tool. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3522\" onclick=\"get_ticket_and_populate_wrapper('3522'); return false;\" title='\"condor_tail\" tool for viewing remote job sandbox'>#3522</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-08 12:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35111\">[35111]</a></span>: Implement condor_tail for viewing files in a running job sandbox. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3522\" onclick=\"get_ticket_and_populate_wrapper('3522'); return false;\" title='\"condor_tail\" tool for viewing remote job sandbox'>#3522</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-08 12:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35110\">[35110]</a></span>: Fix tailing of files in the output sandbox. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3522\" onclick=\"get_ticket_and_populate_wrapper('3522'); return false;\" title='\"condor_tail\" tool for viewing remote job sandbox'>#3522</a></span>.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-05 22:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35074\">[35074]</a></span>: Implement condor_tail with the 'follow' option. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3522\" onclick=\"get_ticket_and_populate_wrapper('3522'); return false;\" title='\"condor_tail\" tool for viewing remote job sandbox'>#3522</a></span>.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-03 21:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35052\">[35052]</a></span>: Implement condor_peek for viewing files in a running job sandbox. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3522\" onclick=\"get_ticket_and_populate_wrapper('3522'); return false;\" title='\"condor_tail\" tool for viewing remote job sandbox'>#3522</a></span>  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2015-Aug-01 21:14", "status": "resolved", "created": "2013-Mar-03 20:53", "fixed_version": "2013-Mar-03 20:53", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "bbockelm", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "bbockelm@cse.unl.edu, isfiligoi@ucsd.edu, tstclair@redhat.com, tannenba@cs.wisc.edu, zmiller@cs.wisc.edu, dan@hep.wisc.edu", "due_date": ""}