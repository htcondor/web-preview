{"id": 5209, "title": "Ticket #5209: cannot shutdown condor_shared_port on Windows", "description": "<blockquote>\ncondor_master is unable to shut condor_shared_port down cleanly. Instead it will wait 10 minutes before killing it. This is generally undesirable and means many tests fail.\n\n<p>condor_shared_port's ideal behavior is that a process connects to it, provides a shared port ID (\"sock\"), and then condor_shared_port hands the file descriptor off to the correct daemon. On Linux the file descriptor is handed through a named pipe.\n\n</p><p>If no shared port ID is provided, the connection is handed off to the condor_collector. This allows a process to find the collector without knowing the shared port ID in advance; it can then learn full Sinful addresses, including the shared port ID, from the collector.\n\n</p><p>On shutdown condor_master sends SIGTERM to the child processes, including condor_shared_port. This works fine on Linux. But on Windows sending a signal is implemented by sending a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> command.  The condor_master sends that command <em>without a shared port ID</em> because condor_shared_port has no ID.  condor_shared_port proceeds to send the command to the condor_collector.  If the collector is already gone (and it likely is), condor_shared_port eventually times out, the command undelivered.\n\n</p><p>Relatedly, it appears that (based on behavior) that condor_shared_port proxies data to the collector when no shared port ID is present on Windows. We haven't looked into exactly which cases this behavior happens in (does it on Linux? Always on Windows?). (After quick investigation, I can't find logic that would do proxying. But condor_shared_port was definitely logging complaints when a condor_config_val -dump to the collector was interrupted. Something about the pipe being used to hand the information over?)\n\n</p><p>At some point we should overhaul the \"signal\" delivery system on Windows, but that is a much bigger task.\n\n</p><p>Possible solutions:\n\n</p><p></p><ol>\n<li>condor_shared_port already processes at least one command (SHARED_PORT_CONNECT) to take a shared port ID and hand the FD off. Perhaps it should process a few administrative commands directly, maybe just DC_RAISESIGNAL. So long as anyone sending administrative commands intended for the collector has the full Sinful, they'll work find since they have a shared port ID.  condor_master almost certainly does. (Question, why doesn't condor_shared_port already handle DC_RAISESIGNAL? Is it avoiding InitDCCommandSocket? Come to think of it, why is DC_RAISESIGNAL set in InitDCCommandSocket and not in dc_main (<a class=\"file\" href=\"rlog?f=src/condor_daemon_core.V6/daemon_core_main.cpp\">/src/condor_daemon_core.V6/daemon_core_main.cpp</a> ) like the rest?)\n\n<p></p></li><li>condor_shared_port should have a special shared port ID that means \"myself\" which it should ensure the condor_master has to use.</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2015-Aug-17 10:46:19 by adesmet:</em> <br/>\n\nOverlooked and caught by ToddM: authentication is its own Daemon Core command, and condor_shared_port has to pass that to the collector since it has no idea who the authentication command is intended for.\n\n<p>Possible solutions:\n\n</p><p></p><ol>\n<li>condor_shared_port accepts the authentication, and if the following command should go to the collector, re-authenticates to the collector, then hands off the command. Seems likely to be complex.\n\n<p></p></li><li>Establish a trusted connection between the master and shared_port daemons. Can we re-use the channel used for child \"I'm still Alive\" messages?  Either implement a one off \"treat this as SIGTERM\", or allow sending of arbitrary \"signals\".\n\n<p></p></li><li>Add a new command DC_SHUTDOWN_WITH_COOKIE, which is sent without authentication. It has no authentication, but ignores any commands without a correct cookie attached.  The cookie was created by the master and passed to the shared_port daemon on startup using some secure channel (we have one, right?).\n\n<p></p></li><li>Support WM_CLOSE.\n\n<p></p></li><li>TJ's vision for better signal handling.  Need to get details on that.\n</li></ol>\n\n<p></p><hr/>\n<em>2015-Aug-21 13:53:43 by tlmiller:</em> <br/>\n\nCreated special socket ID, \"self\", which causes the shared port daemon to handle all subsequent commands on that connection itself.  Updated master (with an ugly hack) to use this special ID when communicating with the shared port daemon.\n\n<p>Asking Zach to review, because this depends on a trick: restarting the daemon[core] command protocol (with a new object) on an existing socket.  This probably works because the old DCP object won't do anything to the socket until the command handler I'm calling the new one from returns, but I'd like someone who knows the DCP to review  for potential problems.  For instance, this ability has only ever been tested local to a machine (with FS).  Will Terrible Things happen if someone tries to do this with GSI?\n\n</p><p></p><hr/>\n<em>2015-Aug-24 10:34:18 by tim:</em> <br/>\n\nI am confused about the state of this ticket. It is marked for 8.5.0, but the commit is on 8.3.8. Updating the target.\n\n<p></p><hr/>\n<em>2015-Aug-24 16:06:06 by tlmiller:</em> <br/>\n\nSorry about that.  I'd originally intended it for 8.5.0, but TJ wanted it in 8.3.8 and I neglected to update the ticket.\n\n<p></p><hr/>\n<em>2017-Jun-26 13:23:21 by zmiller:</em> <br/>\n\n<strong>CODE REVIEW</strong>: Has been in the codebase since 8.4.0.  Resolving.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Aug-25 11:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=45664\">[45664]</a></span>: edit both 8.3.8 version history items for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5209\" onclick=\"get_ticket_and_populate_wrapper('5209'); return false;\" title=\"cannot shutdown condor_shared_port on Windows\">#5209</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Aug-24 16:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=45663\">[45663]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5209\" onclick=\"get_ticket_and_populate_wrapper('5209'); return false;\" title=\"cannot shutdown condor_shared_port on Windows\">#5209</a></span>) Version history items.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Aug-21 13:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=45650\">[45650]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5209\" onclick=\"get_ticket_and_populate_wrapper('5209'); return false;\" title=\"cannot shutdown condor_shared_port on Windows\">#5209</a></span>) Add special \"self\" socket name that causes the shared port daemon to keep the connection. Update master to use it when communicating with the shared port daemon.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2017-Jun-26 13:23", "status": "resolved", "created": "2015-Aug-10 15:43", "fixed_version": "2015-Aug-10 15:43", "broken_version": "v080306", "priority": "3", "subsystem": "DaemonSharedP", "assigned_to": "tlmiller", "derived_from": "#5103", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}