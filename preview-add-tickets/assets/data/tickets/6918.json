{"id": 6918, "title": "Ticket #6918: multicore jobs via python API scheduled onto single core static slots", "description": "<blockquote>\nCMS reported that multicore jobs can end up matched to single core static slots.\n\n<p>There are two issues at work here:\n\n</p><p></p><ol>\n<li>When submitting jobs via the Python API <code>schedd.submit()</code> or <code>schedd.submitMany()</code>, HTCondor fails to modify the job's requirements expression to contain the clause <em>TARGET.Cpus &gt;= RequestCpus</em>.\n</li><li>Unlike partitionable or dynamic slots, static slots do not have a clause in the slot requirement expression that checks that the slot has enough resources to satisfy the job.  Static slots apparently rely on the job ad requirements to enforce this.\n</li></ol>\n\n<p>In some sense, issue (1) above is expected, because the <code>schedd.submit()</code> methods are supposed to be handed a complete job classad from the user, which should already include a satisfactory <code>Requirements</code> expression. If the Python user wants HTCondor to construct a job classad (including the Requirements expression) from a job submit description in the same manner as the <code>condor_submit</code> command line tool, the Python API <code>Submit</code> class should be used.  In fact, 99.99% of the time seems like users  should use the <code>Submit</code> class and not the primitive/low-level <code>Schedd.submit()</code> method.\n\n</p><p>To address this, in the v8.8.1 stable series we will patch the Python methods noted in issue (1) above to add restriction clauses for CPU and GPU resources.\n\n</p><p>In the v8.9.x developer series in child ticket XXX, the <code>Schedd.submit()</code> methods will be renamed to be <code>submit_raw_jobad()</code> (or some such) to highlight the fact that no processing will be performed on the given job classad, and to encourage new development to use the <code>Submit</code> class instead.  Also in the v8.9.x series, we will address issue (2) above so that static slot requirement expressions will ensure the job fits.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Feb-18 17:23:11 by tannenba:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>TJ reviewed the code patch before I pushed it.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-18 22:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56216\">[56216]</a></span>: Fix manual breakage <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6918\" title=\"multicore jobs via python API scheduled onto single core static slots\">#6918</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-18 17:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56214\">[56214]</a></span>: Documentation for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6918\" title=\"multicore jobs via python API scheduled onto single core static slots\">#6918</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-18 17:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56213\">[56213]</a></span>: Python Schedd.submit() now considers CPUs and GPUs in Requirements. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6918\" title=\"multicore jobs via python API scheduled onto single core static slots\">#6918</a></span> Also ensure the job ad given to submit() includes resource requests attrs before editing Requirements expression referencing them.  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-18 17:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56212\">[56212]</a></span>: Warn that python Schedd.submit() and submitMany() are deprecated. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6918\" title=\"multicore jobs via python API scheduled onto single core static slots\">#6918</a></span> Folks should really use the python Submit class instead.  (By Todd Tannenbaum )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Feb-18 17:23", "status": "resolved", "created": "2019-Feb-18 16:16", "fixed_version": "2019-Feb-18 16:16", "broken_version": "v080800", "priority": "2", "subsystem": "PythonBinding", "assigned_to": "tannenba", "derived_from": "", "creator": "tannenba", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "", "due_date": ""}