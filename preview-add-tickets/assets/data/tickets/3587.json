{"id": 3587, "title": "Ticket #3587: Add \"socket\" nodes for splices", "description": "<blockquote>\nHmm, I don't know why we didn't have a ticket for this before (this is something we thought of back when splices were first implemented).\n\n<p>Anyhow, the idea is to create an extra node (with a NOOP job) before and after a splice.  There are at least two advantages to this:\n</p><ul>\n<li>Splices could have PRE and POST scripts.\n</li><li>In some cases the \"cross splice boundary\" dependencies would be greatly simplified.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2015-Jul-30 15:15:11 by tannenba:</em> <br/>\n\nNote that users have requested this; see <a class=\"external\" href=\"https://goo.gl/OZbpq6\">https://goo.gl/OZbpq6</a> for instance.\n\n<p></p><hr/>\n<em>2016-Feb-10 11:59:32 by wenger:</em> <br/>\n\nAnother advantage to having socket nodes:  it would make it much easier to allow pin_in and pin_out connections to splices.\n\n<p>Anyhow, I was just thinking about this, and I think the thing to do would be to create the socket nodes in the top-level DAG at the point that the splice command is parsed.  That way, things like SCRIPT commands would have something to attach their script to even before the splices are \"lifted\".\n\n</p><p>I think the thing to do would be to have the socket nodes have special names, like &lt;splice_name&gt;_socketpre and &lt;splice_name&gt;_socketpost.  Then, the Dag::FindNodeByName() method would need an extra argument that would specify one of three choices:\n</p><ul>\n<li>Never give me a socket node\n</li><li>Give me the socket pre node if a node with the specified name doesn't exist\n</li><li>Give me the socket post node if a node with the specified name doesn't exist\n</li></ul>\n\n<p></p><hr/>\n<em>2016-Apr-27 11:04:02 by wenger:</em> <br/>\n\nHmm -- now I'm thinking that we'd be better off having the PRE socket node just have the splice name, and then have the POST socket node have some special name; the PRE socket node would also have to have a flag that it's a PRE socket node.  (Hmm -- maybe the flag could just be a pointer to the POST node, and have it be null for anything but a PRE node...)\n\n<p>Then, if you have a command like:\n\n</p><p></p><pre>  SCRIPT PRE &lt;splice&gt; ...\n</pre>\n\n<p>the code could just search for the node with the appropriate name, and add the PRE script to it.\n\n</p><p>For\n\n</p><p></p><pre>  SCRIPT POST &lt;splice&gt; ...\n</pre>\n\n<p>the code would find the PRE node, but because we're adding a POST script, we'd know that we have to add it to the POST node.\n\n</p><p>Similarly, for PARENT/CHILD relationships, PARENT could only get added to a POST node, and CHILD could only get added to a PRE node (except when we're \"lifting\" the actual splice nodes -- obviously some nodes in the splice would be children of the PRE node, and some would be parents of the POST node.\n\n</p><p></p><hr/>\n<em>2016-Apr-28 13:12:51 by wenger:</em> <br/>\n\nHmm -- need to think about how this would work (if at all) with the new splice connect feature.  You couldn't just have a PRE node that's a parent of everything in the splice, and a POST node that's a child of everything -- in that case, you'd end up with just a regular parent/child relationship between the splices, unless the POST node of the first splice wasn't the parent of the PRE node of the second splice.  (And if that were the case, what would be the parent of the PRE node of the second splice?  <strong>Something</strong> would have to be the parent, so that the PRE node wouldn't run right at the beginning of the DAG...)\n\n<p></p><hr/>\n<em>2016-Apr-28 15:11:10 by wenger:</em> <br/>\n\nHmm -- just thinking about <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=5653\" onclick=\"get_ticket_and_populate_wrapper('5653'); return false;\" title=\"Add per-splice DAG throttling\">#5653</a></span>: Add per-splice DAG throttling, and I'm wondering whether, instead of \"lifting\" the splice nodes as we do now, we should have a Dag object for the splice attached to the Job object that represents the splice in the upper-level DAG.\n\n<p>My idea is then that when ProcessLogEvents() gets called in the top-level DAG, that would call ProcessLogEvents() for any \"active\" splices, and similarly for SubmitReadyJobs(), etc.\n\n</p><p>I have to really think about this, because it would be a pretty major change, but it would have several advantages:\n</p><ul>\n<li>It would simplify the splice code by getting rid of the \"lifting\".\n</li><li>It would make it possible to implement per-splice throttles (see <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=5653\" onclick=\"get_ticket_and_populate_wrapper('5653'); return false;\" title=\"Add per-splice DAG throttling\">#5653</a></span>) more easily.\n</li><li>A splice would only have to be represented by one node in the upper-level DAG, not a PRE and a POST node.\n</li></ul>\n\n<p>Hmm -- if we did this, something else to think about is whether the splice should then have its own workflow log...\n\n</p><p>Something else to think about:  would this break pin connections?  It might...\n\n</p><p></p><hr/>\n<em>2016-Apr-28 15:52:36 by wenger:</em> <br/>\n\nHmm -- another advantage of incorporating a per-splice Dag object into a \"splice node\" is that we could do retries on splices.\n\n<p></p><hr/>\n<em>2017-May-23 17:32:16 by wenger:</em> <br/>\n\nAs per today's discussion with Miron:  release a version of DAGMan that has socket nodes with no additional functionality; have that run in the outside world for a while before adding any new functionality such as PRE/POST scripts on splices.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=6048\" onclick=\"get_ticket_and_populate_wrapper('6048'); return false;\" title=\"Have separate Dag objects for splices?\">#6048</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nHave separate Dag objects for splices?</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2019-Jan-03 11:27", "status": "stalled", "created": "2013-Apr-22 19:31", "fixed_version": "2013-Apr-22 19:31", "broken_version": "v070906", "priority": "3", "subsystem": "Dag", "assigned_to": "coatsworth", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "users", "visibility": "public", "notify": "wenger@cs.wisc.edu, coatsworth@cs.wisc.edu", "due_date": ""}