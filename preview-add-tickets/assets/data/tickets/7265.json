{"id": 7265, "title": "Ticket #7265: Negotiator-free scheduling for reserved resources", "description": "<blockquote>\nConsider a pool which wishes to reserve resources to run Jupyter jobs (primarily but not exclusively so that they start faster).  In a pool where the Jupyter jobs all live a single schedd (and why wouldn't they?), there's no need to negotiate for the reserved resources, because we know where they're going to end up.\n\n<p>Instead, the schedd should be able to hold onto claims for reserved resources indefinitely, which will allow it to start a job immediately on submission.  Internally, the schedd would need to switch from organizing claims by owner to organizing them by accounting group (because DESY's Jupyter users need their AFS tokens, neither slot users nor a dedicate Jupyter user are options).  Externally, HTCondor would need a way to designate and/or generate these claims.  One possibility is to specify a schedd to dedicate a slot to in the startd configuration.  I think it would be neat to allow special jobs to generate these kinds of claims when they're (initially) matched, but I haven't thought that all the way through.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2019-Sep-17 15:16", "status": "new", "created": "2019-Sep-17 15:16", "fixed_version": "2019-Sep-17 15:16", "broken_version": "", "priority": "4", "subsystem": "DaemonsSubmitNode", "assigned_to": "", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}