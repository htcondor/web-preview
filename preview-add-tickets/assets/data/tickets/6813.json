{"id": 6813, "title": "Ticket #6813: Starter-Side Grid Jobs", "description": "<blockquote>\nIt would be neat if the starter could launch grid universe jobs.  See the <a class=\"external\" href=\"https://docs.google.com/document/d/1HUrntrevQjfi4XaoAeeV0BwZ54QmhJpma4oxZP0Mr2Y/\">design doc</a>.  (<a class=\"external\" href=\"https://docs.google.com/document/d/1t1857jcWLlXS80eOC6xemAOrKT2bVhncKuf4U_lXVYM\">possible follow-up</a>)</blockquote>", "remarks": "<blockquote>\n<em>2018-Oct-30 14:17:03 by tlmiller:</em> <br/>\n\nRegarding <span class=\"chng\"><a href=\"chngview?cn=55662\">[55662]</a></span>:\n\n<p></p><ul>\n<li>Jaime notes that the \"starter mode\" grid manager should skip the whole grid manager ad thing entirely.  There are probably other optimizations to be made to this patch.\n</li><li>The patch doesn't handle stdin being a sequence of ads, but starter mode should be able to accept its own output as input.  This will be convenient for testing as well as recovery (the starter and/or startd don't need to do anything, just pass the file along).\n</li><li>Where would otherwise be calling <strong>CommitTransaction()</strong>, we should instead be calling <strong>fflush()</strong> or <strong>fsync()</strong>.\n</li></ul>\n\n<p></p><hr/>\n<em>2019-Jan-09 14:57:27 by tlmiller:</em> <br/>\n\nMiron wanted to see a write-up of what it takes to move a sandbox into and out of a VM, so <a class=\"external\" href=\"https://docs.google.com/document/d/1NpmwIpBFRbVDfDsNu0GtAhzGFI_Z9PhhTpcYjDU8_s4\">here it is</a>.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Dec-07 16:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55871\">[55871]</a></span>: (<span class=\"ticket\"><a class=\"active\" href=\"tktview?tn=6813\" title=\"Starter-Side Grid Jobs\">#6813</a></span>) Terminate instances when their job is removed or held.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Dec-06 17:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55855\">[55855]</a></span>: (<span class=\"ticket\"><a class=\"active\" href=\"tktview?tn=6813\" title=\"Starter-Side Grid Jobs\">#6813</a></span>) Start grid manager for ec2_proc jobs. Catch grid manager exits and dump its log (this should be periodic). Also need to implement instance termination (on remove or hold). Also figure out who should be writing the job event log, which is currently all horked up.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Dec-05 17:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55840\">[55840]</a></span>: (<span class=\"ticket\"><a class=\"active\" href=\"tktview?tn=6813\" title=\"Starter-Side Grid Jobs\">#6813</a></span>) Dispatch VM universe jobs with WantStarterEC2 set to new (null) ec2_proc object.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Oct-30 14:15</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55662\">[55662]</a></span>: (<span class=\"ticket\"><a class=\"active\" href=\"tktview?tn=6813\" title=\"Starter-Side Grid Jobs\">#6813</a></span>) Implement \"starter mode\" as 'condor_gridmanager -B'.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-Jan-09 14:57", "status": "active", "created": "2018-Oct-30 14:13", "fixed_version": "2018-Oct-30 14:13", "broken_version": "", "priority": "2", "subsystem": "DaemonsExecNode", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}