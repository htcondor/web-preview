{"id": 2824, "title": "Ticket #2824: add DEFAULT_REQUIREMENTS as a schedd config expr", "description": "<blockquote>\nOnly after suggesting to someone that they use DEFAULT_RANK and DEFAULT_REQUIREMENTS earlier today did I realize that, inexplicably, only DEFAULT_RANK seems to actually exist as a schedd config expression.  Both have APPEND_* variants, but only rank has the DEFAULT_ expr.\n\n<p>Assuming there's no deep reason for this, how hard would it be to add an analagous DEFAULT_REQUIREMENTS?  (I.e., a requirements expression added to any job that doesn't specify one itself.)\n\n</p><p>It seems like this would be extraordinarily useful in all sorts of situations -- and a side-benefit you could move the current (hard-coded) default job requirements from the code into the config file where people can see it, which is always a good thing.</p></blockquote>", "remarks": "<blockquote>\n<em>2012-Feb-13 19:11:28 by matt:</em> <br/>\n\nThe current default generated by condor_submit isn't hardcoded, it's very dependent on the job itself and sensitive to user specified requirements. If it could be turned into a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> expression, it would be a monstrosity.\n\n<p>Maybe a sign it needs some simplification first.\n\n</p><p>There will be complications moving Requirements generation into the Schedd. For instance, condor_submit -remote, condor_submit knows the local Arch/OpSys while the Schedd may not.\n\n</p><p>But then again, maybe condor_submit should record attributes of the system, allowing for simplification and requirements generation on the Schedd side.\n\n</p><p>There is a good deal to consider here.\n\n</p><p></p><hr/>\n<em>2012-Mar-06 08:13:58 by pfc:</em> <br/>\n\nOkay, I retract the suggestion to move Condor's universe-specific defaults into the config file.\n\n<p>However, please don't bury the request to support a DEFAULT_REQUIREMENTS expression under the weight of the condor_submit -remote corner-case.  The expression could come with an explicit caveat in the docs that it can only expand job attributes known to the schedd, etc.\n\n</p><p>Bottom line, this would solve a big problem for us that can only be solved currently with a hideous (and fragile) condor_submit wrapper.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2015-Sep-21 11:34", "status": "defer", "created": "2012-Feb-13 16:29", "fixed_version": "2012-Feb-13 16:29", "broken_version": "v070704", "priority": "5", "subsystem": "Daemons", "assigned_to": "", "derived_from": "", "creator": "pfc", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "pcouvare@caltech.edu", "due_date": ""}