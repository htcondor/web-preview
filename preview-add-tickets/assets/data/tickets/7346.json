{"id": 7346, "title": "Ticket #7346: Docker universe jobs should pull latest version of image", "description": "<blockquote>\nCurrently, for Docker universe jobs, the startd does not check that the local image is the latest version of that image. This can be frustrating for users who aren't aware of this behavior and instead expect the execution image to be updated when they push to the same tag (i.e., <code>latest</code>) on <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DockerHub\" title=\"Docker Hub\">DockerHub</a></span>.\n\n<p>Instead, the <code>startd</code> should do one of these two things:\n</p><ol>\n<li>Run <code>docker pull &lt;image&gt;</code> before it creates the job container, which will update the local image to the latest version if it needs to.\n</li><li>Run <code>docker create</code> with the <code>--pull</code> tag which will be introduced in Docker 19.09, which has not been released at the time of writing this ticket.</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2019-Oct-29 07:03:15 by gthain:</em> <br/>\n\nWe will need to check to see if docker create container --pull automatically removes orphaned images when it updates.  If not, we will need to run docker image prune periodically.\n<hr/>\n<em>2020-Apr-10 07:46:37 by tim:</em> <br/>\n\nBulk change of target version from v080906 to v080907 using ticket-target-mover.\n\n<p></p><hr/>\n<em>2020-Apr-13 13:17:33 by gthain:</em> <br/>\n\nWell, the docker create --pull flag didn't make it into version 19.03.  Let's wait until 20.03 to see if we get this functionality.  Another open question is -- if one container is running from image foo:latest, and there's a new container starting up with a newer foo:latest, what happens to the first container?</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2020-Nov-09 12:26", "status": "new", "created": "2019-Oct-28 16:35", "fixed_version": "2019-Oct-28 16:35", "broken_version": "", "priority": "2", "subsystem": "DaemonsExecNode", "assigned_to": "gthain", "derived_from": "", "creator": "karpel", "rust": "", "customer_group": "other", "visibility": "public", "notify": "karpel@wisc.edu gthain@cs.wisc.edu", "due_date": ""}