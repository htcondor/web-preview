{"id": 4480, "title": "Ticket #4480: schedd crash on SWAMP", "description": "<blockquote>\n<div class=\"verbatim\">\n<pre>07/22/14 19:12:40 (pid:4099) DC_AUTHENTICATE: resuming session id ext-submit-dt-01:4099:1406056282:492 with return address &lt;128.104.100.29:9265&gt;:\n07/22/14 19:12:40 (pid:4099) SECMAN: other side is $CondorVersion: 8.0.5 Dec 02 2013 BuildID: 212140 $, NOT reauthenticating.\n07/22/14 19:12:40 (pid:4099) DC_AUTHENTICATE: Success.\n07/22/14 19:12:40 (pid:4099) PERMISSION GRANTED to batlab@mirsam.org from host 128.104.100.29 for command 488 (SPOOL_JOB_FILES_WITH_PERMS), access level WRITE: reason: cached result for WRITE; see first case for the full reason\nStack dump for process 4099 at timestamp 1406056360 (22 frames)\n/usr/lib64/condor/libcondor_utils_8_0_7.so(dprintf_dump_stack+0x12d)[0x7fa983fa17dd]\n/usr/lib64/condor/libcondor_utils_8_0_7.so(_Z18linux_sig_coredumpi+0x40)[0x7fa98408c500]\n/lib64/libpthread.so.0[0x3ab3e0f500]\n/lib64/libc.so.6(abort+0xd4)[0x3ab3a34024]\n/usr/lib64/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x12d)[0x3ab66bea5d]\n/usr/lib64/libstdc++.so.6[0x3ab66bcbe6]\n/usr/lib64/libstdc++.so.6[0x3ab66bcc13]\n/usr/lib64/libstdc++.so.6[0x3ab66bcd0e]\n/usr/lib64/libstdc++.so.6(_ZSt20__throw_out_of_rangePKc+0x67)[0x3ab6661db7]\ncondor_schedd[0x46bf9b]\n/usr/lib64/condor/libcondor_utils_8_0_7.so(_ZN10DaemonCore18CallCommandHandlerEiP6Streambbff+0x17e)[0x7fa9840b210e]\n/usr/lib64/condor/libcondor_utils_8_0_7.so(_ZN21DaemonCommandProtocol11ExecCommandEv+0x635)[0x7fa984093e25]\n/usr/lib64/condor/libcondor_utils_8_0_7.so(_ZN21DaemonCommandProtocol10doProtocolEv+0xe8)[0x7fa984094368]\n/usr/lib64/condor/libcondor_utils_8_0_7.so(_ZN10DaemonCore9HandleReqEP6StreamS1_+0x72)[0x7fa9840aa972]\n/usr/lib64/condor/libcondor_utils_8_0_7.so(_ZN10DaemonCore24CallSocketHandler_workerEibP6Stream+0x705)[0x7fa9840b2c95]\n/usr/lib64/condor/libcondor_utils_8_0_7.so(_ZN10DaemonCore35CallSocketHandler_worker_demarshallEPv+0x1d)[0x7fa9840b2ccd]\n/usr/lib64/condor/libcondor_utils_8_0_7.so(_ZN13CondorThreads8pool_addEPFvPvES0_PiPKc+0x40)[0x7fa983feab50]\n/usr/lib64/condor/libcondor_utils_8_0_7.so(_ZN10DaemonCore17CallSocketHandlerERib+0x147)[0x7fa9840ab0c7]\n/usr/lib64/condor/libcondor_utils_8_0_7.so(_ZN10DaemonCore6DriverEv+0x2834)[0x7fa9840add04]\n/usr/lib64/condor/libcondor_utils_8_0_7.so(_Z7dc_mainiPPc+0x1239 [0x7fa98408e159]\n/lib64/libc.so.6(__libc_start_main+0xfd)[0x3ab3a1ecdd]\ncondor_schedd[0x417579]\n07/22/14 19:12:50 (pid:16037) KEYCACHE: created: 0x2696990\n07/22/14 19:12:50 (pid:16037) Setting maximum file descriptors to 204800.\n07/22/14 19:12:50 (pid:16037) ******************************************************\n07/22/14 19:12:50 (pid:16037) ** condor_schedd (CONDOR_SCHEDD) STARTING UP\n07/22/14 19:12:50 (pid:16037) ** /usr/sbin/condor_schedd\n07/22/14 19:12:50 (pid:16037) ** SubsystemInfo: name=SCHEDD type=SCHEDD(5) class=DAEMON(1)\n07/22/14 19:12:50 (pid:16037) ** Configuration: subsystem:SCHEDD local:&lt;NONE&gt; class:DAEMON\n07/22/14 19:12:50 (pid:16037) ** $CondorVersion: 8.0.7 May 29 2014 BuildID: 250355 $\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2014-Jul-22 14:46:10 by tlmiller:</em> <br/>\n\nLog file:\n\n<p><a class=\"external\" href=\"http://cs.wisc.edu/~tlmiller/indexed/gt-4480.log\">http://cs.wisc.edu/~tlmiller/indexed/gt-4480.log</a>\n\n</p><p>Core file:\n\n</p><p><a class=\"external\" href=\"http://cs.wisc.edu/~tlmiller/indexed/gt-4480.core\">http://cs.wisc.edu/~tlmiller/indexed/gt-4480.core</a>\n\n</p><p></p><hr/>\n<em>2014-Jul-22 15:42:02 by tlmiller:</em> <br/>\n\nOur (thanks Jaime!) current hypothesis is that the jobs in question were removed by the remote schedd because they took too long to spool.  (Probably because of the problem in <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=4479\" onclick=\"get_ticket_and_populate_wrapper('4479'); return false;\" title=\"Invalid security sessions re-used repeatedly.\">#4479</a></span>.)  The daemon core command handler Scheduler::spoolJobFiles() has a number of problems if any of the job IDs sent by the client are invalid or owned by the wrong user, at least one of which (truncating a zero-length string) looks like it'd cause a crash.\n\n<p></p><hr/>\n<em>2014-Jul-22 16:14:35 by jfrey:</em> <br/>\n\nIn Scheduler::spoolJobFiles(), when receiving files, we read the number of jobs off of the wire, followed by the ids of the jobs. We call OwnerCheck() on each job id to ensure it's a valid job for this client to be doing a transfer on. If reading the job id fails or OwnerCheck() returns false, then we leave an uninitialized value in the array of job ids (<code>jobs</code>) and leave the job id out of the string of ids (<code>job_ids</code>).\n\n<p>If all of the jobs are invalid, then the string <code>job_ids_string</code> will be empty and we'll hit an exception when we try to remove two characters from it. If any jobs are invalid, we'll attempt to perform file transfers on invalid job ids in the worker thread.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "incident", "last_change": "2014-Jul-22 16:15", "status": "new", "created": "2014-Jul-22 14:39", "fixed_version": "2014-Jul-22 14:39", "broken_version": "v080007", "priority": "4", "subsystem": "DaemonsSubmitNode", "assigned_to": "", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "batlab", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}