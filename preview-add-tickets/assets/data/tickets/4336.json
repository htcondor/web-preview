{"id": 4336, "title": "Ticket #4336: Make dict-like objects in Python bindings even more dict-like", "description": "<blockquote>\nthe htcondor.param module in HTCondor's Python bindings is \"dictionary-like.\"  They should be even more dictionary-like, and in a perfect world would implement the complete dict interface.  Specifically requested are: keys, vals, items, __len__, __iter__, __contains__.</blockquote>", "remarks": "<blockquote>\n<em>2014-May-07 07:47:07 by bbockelm:</em> <br/>\n\nI just pushed this in checkin <span class=\"chng\"><a href=\"chngview?cn=40075\">[40075]</a></span> but forgot to reference the ticket from the commit.\n\n<p>I implemented everything requested except values(); this did not seem to have a reasonable use case.  If you really want it, you can now convert the htcondor.param object to a dict.\n\n</p><p>This forced some minor cleanup work <span class=\"chng\"><a href=\"chngview?cn=40072\">[40072]</a></span> in the config system.  In particular, I consolidated the boolean arguments to config_ex into the flags argument.  I also caught a few cases where calling config() can cause exit() being called despite CONFIG_OPT_NO_EXIT being given.  This means the python bindings will no longer exit the interpreter when the module is loaded.  Now, config() will just return false (note - I don't currently do much with this fact from within the python bindings).\n\n</p><p>The param object now returns the correct types; for example, htcondor.param[UPDATE_INTERVAL'] returns the integer 300 instead of '300'.  This forced some cleanups (<span class=\"chng\"><a href=\"chngview?cn=40073\">[40073]</a></span> <span class=\"chng\"><a href=\"chngview?cn=40074\">[40074]</a></span>) where the default values were not valid values for the given type.  For example, HAVE_EXT_KRB5 defaulted to the string \"HAVE_EXT_KRB5\" due to a problem in the code generator instead of \"1\".\n\n</p><p></p><hr/>\n<em>2014-May-07 13:52:54 by johnkn:</em> <br/>\n\nCODE REVIEW: review for parameter changes, not necessarily bindings\nThe parameter changes look good.  I particularly like the flags cleanup for config_ex().\n\n<p>I'm a little worried about treating the param table as a python dictionary though.  The values stored in the dictionary will have to be the 'cooked' values, which are valid only until the next call that changes the param table.\nAlso, there are several Boolean parameters that are type 'string' because the value is actually an expression that must be evaluated.  In the c++ code, this evaluation happens each time <code>param_boolean</code> is called, but it appears to me that with the dictionary, this evaluation will happen only for parameters that are type bool and only at the time the dictionary is created.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-07 15:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40091\">[40091]</a></span>: Avoid warnings on Fedora. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4336\" onclick=\"get_ticket_and_populate_wrapper('4336'); return false;\" title=\"Make dict-like objects in Python bindings even more dict-like\">#4336</a></span> Committer: John (TJ) Knoeller  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-07 07:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40076\">[40076]</a></span>: Avoid warnings on Fedora. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4336\" onclick=\"get_ticket_and_populate_wrapper('4336'); return false;\" title=\"Make dict-like objects in Python bindings even more dict-like\">#4336</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-06 20:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40073\">[40073]</a></span>: <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4336\" onclick=\"get_ticket_and_populate_wrapper('4336'); return false;\" title=\"Make dict-like objects in Python bindings even more dict-like\">#4336</a></span> Fix cases where parameter defaults were not valid values for the specified type (for example, a boolean value which defaulted to \"peer\").  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-06 20:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40074\">[40074]</a></span>: Fix macro implementation for param table. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4336\" onclick=\"get_ticket_and_populate_wrapper('4336'); return false;\" title=\"Make dict-like objects in Python bindings even more dict-like\">#4336</a></span> The result of PARAM_TABLE_QUOTEME(foo) was the token \"foo\"; one needs a second macro so we can first expand foo to its value, then stringify the value. \u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-06 20:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40075\">[40075]</a></span>: Make the htcondor.param object more dictionary-like <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4336\" onclick=\"get_ticket_and_populate_wrapper('4336'); return false;\" title=\"Make dict-like objects in Python bindings even more dict-like\">#4336</a></span> In particular, I added keys, update, items, __len__, __iter__, and __contains__.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-06 20:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40072\">[40072]</a></span>: Refactor internals of config_ex. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4336\" onclick=\"get_ticket_and_populate_wrapper('4336'); return false;\" title=\"Make dict-like objects in Python bindings even more dict-like\">#4336</a></span> This turns unnecessary arguments into flags. Further, make sure that we never call abort or exit if configuration fails -- there were still a few cases where this could happen when the user requests to disable this behavior.  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2015-Aug-01 21:23", "status": "resolved", "created": "2014-Apr-30 15:01", "fixed_version": "2014-Apr-30 15:01", "broken_version": "v080000", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}