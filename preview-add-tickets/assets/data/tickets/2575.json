{"id": 2575, "title": "Ticket #2575: Limit c-gahp's time connected to the schedd", "description": "<blockquote>\nThe c-gahp should not spend more than a couple seconds at a time connected to a schedd. When the c-gahp is used to submit and monitor thousands of jobs, it can end up being connected to the schedd for 10 seconds at a time or more. During this time, the schedd won't talk to other clients. If several c-gahps are talking to a schedd, some of them will start timing out trying to connect. See ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2279\" title=\"Condor-C Failure in the OSG Summer School\">#2279</a></span> for a concrete example of this occurring.\n\n<p>Having the schedd support multiple client connections and transactions is the best long-term solution, but would be a fair amount of work. A faster short-term solution is to have the c-gahp limit how many operations it does per connection. This would reduce the time for clients to get a response from the schedd. Multiple c-gahps would effectively round-robin their interactions with the schedd at a coarse granularity.\n\n</p><p>The additional connections will add some overhead, which may hurt the schedd's scalability. We'll need to measure this.\n\n</p><p><span class=\"subsection\"></span></p><h3>Milestones </h3>\n<ul>\n<li>Plan changes to c-gahp, including prevention of command starvation\n</li><li>Reproduce OSG grid school Condor-C failures\n</li><li>Add connection-time limiting code to c-gahp\n</li><li>Measure effects of connection-time limiting code</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2012-Jun-17 20:34:49 by bbockelm:</em> <br/>\n\nHere's a nice little script (must be run as root) to insert a 200ms one-way delay to IP 129.93.239.129 (my test schedd) from a test submit host:\n\n<p></p><div class=\"verbatim\">\n<pre>tc qdisc add dev eth0 handle 1: root htb\ntc class add dev eth0 parent 1: classid 1:1 htb rate 1000Mbps\ntc class add dev eth0 parent 1:1 classid 1:11 htb rate 500Mbps\ntc class add dev eth0 parent 1:1 classid 1:12 htb rate 500Mbps\ntc qdisc add dev eth0 parent 1:11 handle 10: netem delay 200ms\ntc filter add dev eth0 protocol ip prio 1 u32 match ip dst 129.93.239.129 flowid 1:11\n</pre></div>\n\n\n<p>It beats trying to find a really, really long network cord.\n\n</p><p>In tests, with this patch, I confirmed that the stage in/out is non-blocking on the schedd.  We could probably move the timeouts to only cover only when in the qmgmt interface.  At 200ms (one-way delay), the schedd can&amp;#160;submit one job a second.  With the one second sleep between connections, we could probably submit 50 jobs a minute from a single thread (but not really, because it'll mix in staging too).  That's 3,000 jobs an hour - about 3x the rate necessary to keep the busiest OSG CE filled.  At 50ms (one-way delay), the schedd can submit three jobs a second.\n\n</p><p></p><hr/>\n<em>2012-Jul-16 08:48:06 by bbockelm:</em> <br/>\n\nHi Jaime, Todd,\n\n<p>Can I request the attached patch get reviewed and backported for 7.8.1?  It's held up quite well in testing.\n\n</p><p>I think it's important to get into the stable series because it's arguably a low-risk bugfix required for anyone who wants to use Condor-C as a client.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2012-Jul-18 13:52:33 by jfrey:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>The patch looks pretty good. There are some additional changes I'd want to see done, which I could work on. I wouldn't apply it to Condor 7.8.x in its current form, but it could go into master.\n\n</p><p></p><ul>\n<li>Stage-out commands aren't skipped when the schedd interaction time has\nelapsed.\n\n<p></p></li><li>We still connect to the schedd with ConnectQ() when the interaction\ntime has elapsed, then immediately disconnect. We should avoid that\nconnection.\n\n<p></p></li><li>When using SetAttribute_NoAck, we should be more careful in handling\nfailures. The schedd closes the connection when a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SetAttribute\" title=\"Set Attribute\">SetAttribute</a></span> fails\nwith <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=NoAck\" title=\"No Ack\">NoAck</a></span>. This will cause all subsequent commands to the schedd to\nfail, leading to gahp commands for unrelated jobs to fail. We should\nretry the commands for those other jobs.\n\n<p></p></li><li>The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=NoAck\" title=\"No Ack\">NoAck</a></span> flag was introduced in Condor 7.5.3. Do we need to maintain\ncompatibility with older versions?\n</li></ul>\n\n<p></p><hr/>\n<em>2012-Jul-19 10:02:25 by bbockelm:</em> <br/>\n\nHi Jaime,\n\n<p></p><ol>\n<li>Stageout commands are purposely not skipped when the timeout is hit.  They don't appear to exclusively use the schedd in my tests.  I.e., I can have a client do \"condor_q\" at the same time stageout is going.  (Perhaps I'm just not using large-enough stage-in files?)\n</li><li>I'll let you do the follow-up optimization for ConnectQ/DisconnectQ.\n</li><li>The comments about <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=NoAck\" title=\"No Ack\">NoAck</a></span> are correct, but I think that's for follow-up work.  This patch preserves the existing behavior on an error, right?\n</li><li>I discussed this with Dan; I don't think we need to preserve backward-compatibility here, as performance would be so miserable without <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=NoAck\" title=\"No Ack\">NoAck</a></span>.\n</li></ol>\n\n<p>Why not commit to 7.8?  My opinion is that this is a pretty low-risk bugfix.  It'd really hurt our ability to rollout Condor-CE if we had to wait for the pilot factories to switch to Condor 7.10.0 (as the CMS ones don't want to do dev releases).\n\n</p><p>Thanks for the review,\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2012-Aug-27 16:02:03 by jfrey:</em> <br/>\n\nFinally getting back to this ticket...\n\n<p>The only time the c-gahp is connected to the schedd for longer than one\ncall into the DCSchedd object is the section between ConnectQ() and\nDisconnectQ(). Starting the schedd conneciton time earlier than the\nConnectQ() buys us nothing.\n\n</p><p>I need to do some testing, but the use of the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=NoAck\" title=\"No Ack\">NoAck</a></span> flag may cause the\nc-gahp to endlessly retry some commands in some situations (job ad\ndisappears from the remote queue unexpectedly). That should be easy to\nfix if it is a problem.</p></blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/581/cgahp_scaling.patch\">cgahp_scaling.patch</a>\n3775 bytes added by bbockelm on 2012-Jun-17 14:45:24 UTC.\n<br/>\nHere's a simple, minimal fix.\n\n<p>Status updates and submits (which happen in a separate transaction regardless) are changed to set <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=NoAck\" title=\"No Ack\">NoAck</a></span> for attribute updates.  If one attribute update fails, then the whole command will fail: this is the same behavior as before, except the failure isn't discovered until the commit is attempted (instead of when the attribute is set).\n\n</p><p>I also implement a simple time-limiting mechanism: if it has been more than 5 seconds since the client started interacting with the schedd, it will break out of the loops and reconnect to the schedd 1 second later.\n\n</p><p>Right now, the QMGMT_TIMEOUT is hard-coded to 15 seconds.  I would propose making that a parameter and increasing it to 50 seconds: this would allow 10 active clients to actively interact at once.\n\n</p><p>Commands are processed in a FIFO by command type (i.e., all staging requests are done before submit requests).  I actually kind of like the prioritization as-is.\n\n</p><p>Are file transfers non-blocking?  If they aren't, I think the only place where we now block the schedd is in the submit and status updates.  If they do block the schedd, we might be in Big Trouble.\n<br/>\n</p></li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Sep-25 15:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=33485\">[33485]</a></span>: Version history for c-gahp scalability improvements. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2575\" title=\"Limit c-gahp's time connected to the schedd\">#2575</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Aug-29 10:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=33199\">[33199]</a></span>: Limit c-gahp's time connected to the schedd. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2575\" title=\"Limit c-gahp's time connected to the schedd\">#2575</a></span> Ensure the c-gahp never spends more than 5 seconds (configurable via CGAHP_SCHEDD_INTERACTION_TIME) at a time connected to the remote schedd. Also, disable acknowledgement of each queue-management command to reduce round-trips.\u00a0[...]\n (By Brian Bockleman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Aug-29 10:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=33200\">[33200]</a></span>: Tweak Brian Bockleman's c-gahp scalability improvements. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2575\" title=\"Limit c-gahp's time connected to the schedd\">#2575</a></span> Only limit the time between ConnectQ() and DisconnectQ(). When using SetAttribute_NoAck, if the following RemoteCommitTransaction() fails, assume the SetAttribute() is what failed and retry any following commands (on another pass through\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2012-Sep-25 15:44", "status": "resolved", "created": "2011-Oct-24 13:54", "fixed_version": "2011-Oct-24 13:54", "broken_version": "v070600", "priority": "2", "subsystem": "Daemons", "assigned_to": "jfrey", "derived_from": "#1376", "creator": "jfrey", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "bbockelm@cse.unl.edu, jfrey@cs.wisc.edu, tannenba@cs.wisc.edu", "due_date": "20111028"}