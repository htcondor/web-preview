{"id": 1111, "title": "Ticket #1111: Run DAGMan PRE and POST scripts as Condor jobs", "description": "<blockquote>\nPossibly have an option to run DAGMan PRE and POST scripts as actual Condor jobs (maybe in their own universe), rather than DAGMan just forking them off.  The way I see this now, there would be a config knob or command-line flag to tell DAGMan to do this automatically -- it would cons up suitable submit files on the fly and do a condor_submit instead of just forking off the script.\n\n<p>This would buy us a number of things:\n</p><ul>\n<li>Machine-wide PRE/POST script throttles.\n</li><li>Saving output of PRE/POST scripts.\n</li><li>Generally having all of the Condor facilities to deal with PRE and POST scripts.\n</li></ul>\n\n<p>The way I see the implementation at this point, the PRE and POST jobs would log their events to a separate log file that would <strong>not</strong> be monitored during DAGMan recovery mode.  We'd still write POST script terminated events to the \"real\" job log, so recovery mode would work just like it does now, whether you ran the scripts as Condor jobs or not.\n\n</p><p>(Hmm -- I see that up above gittrac is only letting me list <strong>one</strong> related ticket -- this is also related to <span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=171\" title=\"Be able to save output of PRE and POST scripts.\">#171</a></span>, in addition to <span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=186\" title=\"Allow a job to act as a POST script to another job\">#186</a></span>.)\n\n</p><p>This is a big enough change that it probably needs to be run past Miron before we actually work on it...</p></blockquote>", "remarks": "<blockquote>\n<em>2010-Jan-15 11:01:42 by wenger:</em> <br/>\n\nHmm -- Matt just suggested that we could at least try it out by wrapping the scripts in condor_run.  That might be a good idea, at least for a first cut at it.\n\n<p></p><hr/>\n<em>2010-Oct-11 15:37:17 by wenger:</em> <br/>\n\nJust talked to the Pegasus people, and they really want this...\n\n<p></p><hr/>\n<em>2010-Oct-11 15:39:34 by wenger:</em> <br/>\n\nMaybe DAGMan automatically constructs a submit file for the PRE and POST scripts based on the DAG, but allows the user to specify their own submit file to override the automatically-generated one.\n\n<p></p><hr/>\n<em>2014-May-08 15:08:55 by wenger:</em> <br/>\n\nI talked to Brian Bockelman about this at HTCondor Week, and he says that if we implement the more flexible retry (<span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=1309\" title=\"DAGMan: retry subset of a DAG\">#1309</a></span>) this isn't such a high priority.  And the more flexible retry is a more general solution, so I think we want to go with that...\n\n<p></p><hr/>\n<em>2017-Jan-12 09:25:10 by wenger:</em> <br/>\n\nHmm -- I'm wondering whether we should do this in two steps:\n<ol>\n<li>allow the user to explicitly specify an HTCondor submit file for a pre/post script\n</li><li>have a knob that automatically \"converts\" pre/post scripts to HTCondor jobs.\n</li></ol>\n\n<p>Maybe for option 1 above, the syntax could be something like:\n\n</p><p></p><pre>  SCRIPTJOB PRE &lt;node&gt; &lt;submit file&gt;\n</pre>\n\n<p>I haven't really thought yet about what changes this would take internally.  We'd also need to decide whether such \"script jobs\" would still be governed by MAXPRE and MAXPOST...</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2017-Jan-12 09:25", "status": "new", "created": "2010-Jan-15 10:33", "fixed_version": "2010-Jan-15 10:33", "broken_version": "v070500", "priority": "4", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "#186", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu, psilord@cs.wisc.edu, vahi@isi.edu", "due_date": ""}