{"id": 5777, "title": "Ticket #5777: Procapi flooding Mac OS system log due to SIP", "description": "<blockquote>\nWe have a report from htcondor-users that the condor_procd on Mac OS X El Capitan swamps the system log with errors about denying attempted operations. We believe this is due to procapi calling task_for_pid() on every process in the system to get memory and cpu usage. This call is not allowed for processes protected by SIP (System Integrity Protection). The user also reports reboots and process freezes that may be related.\n\n<p>HTCondor can be more intelligent about this. It doesn't need to collect cpu/memory usage on processes that it doesn't manage. If we can identify processes protected by SIP and avoid calling task_for_pid() on them, I believe that would fix this problem.</p></blockquote>", "remarks": "<blockquote>\n<em>2016-Jul-07 15:12:07 by jfrey:</em> <br/>\n\n<a class=\"external\" href=\"https://lists.cs.wisc.edu/archive/htcondor-users/2016-June/msg00100.shtml\">This was reported by kkauder@gmail.com on June 23, 2016. The email subject line was 'El Capitan and Sandbox'.</a> Post a followup on htcondor-users when we have a fix ready.\n\n<p></p><hr/>\n<em>2016-Jul-15 11:29:37 by jfrey:</em> <br/>\n\nThis is a bit more complicated than I thought. All executables in /bin and /usr/bin are protected by SIP, thus all instances of them are protected, no matter what user they're running as. So a user job started by HTCondor that's a shell script can't be queried.\n\n<p></p><hr/>\n<em>2016-Jul-22 16:26:22 by jfrey:</em> <br/>\n\nThe function proc_pid_rusage() does what we need. It allows you to query user and system cpu time and memory usage for a given process, including those protected by SIP. But it was added in Mac OS X 10.9. So we'll need to drop support for older versions or do a fallback.\n\n<p></p><hr/>\n<em>2016-Sep-28 13:53:00 by tim:</em> <br/>\n\n<strong>CODE REVIEW:</strong> I approve this change. (I had one question as to how the units were determined. Jaime did it empirically (by measurement)).</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Aug-01 16:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48918\">[48918]</a></span>: Docs for Mac cpu/memory monitoring improvements. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5777\" title=\"Procapi flooding Mac OS system log due to SIP\">#5777</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Aug-01 16:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48917\">[48917]</a></span>: Use proc_pid_rusage() on mac for procapi, where available. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=5777\" title=\"Procapi flooding Mac OS system log due to SIP\">#5777</a></span> task_for_pid() is unreliable for obtaining memory and cpu usage of processes, more so in Mac OS 10.11 and above. SIP means it fails for processes based on system binaries, while spewing errors to the system logs. Mac OS 10.9 introduced\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2016-Sep-28 13:53", "status": "resolved", "created": "2016-Jul-07 15:10", "fixed_version": "2016-Jul-07 15:10", "broken_version": "v080400", "priority": "3", "subsystem": "DaemonProcD", "assigned_to": "jfrey", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "users", "visibility": "public", "notify": "tannenba@cs.wisc.edu,tim@cs.wisc.edu", "due_date": ""}