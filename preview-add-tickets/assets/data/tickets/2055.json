{"id": 2055, "title": "Ticket #2055: Strengthen validation checks for compressed heap pointers in stduniv", "description": "<blockquote>\nAfter having fixed <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2013\" onclick=\"get_ticket_and_populate_wrapper('2013'); return false;\" title=\"Check 32-bit standalone checkpointing for 7.6.0\">#2013</a></span>, I found that we need much better assertion checks in how we deal with the pointers from the alternate memory heap that zlib uses to compress the checkpoint segments.\n\n<p>So I'm writing them.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Apr-12 16:46:03 by psilord:</em> <br/>\n\nI added very strong validation checks (of course they could yet be stronger, but hey, only so much time) of the alternate heap pointer memory usage via the zalloc/zfree interface that zlib uses.\n\n<p>Doing so uncovered a bug in how we bookeep the alternate heap. The main problem\nwas that the page size we told the alternate heap allocator to use was different than the page size the application allocator used, and we used the latter to book keep information about the former.\n\n</p><p>I also added some checks into the <code>malloc-condor.c</code> file which prevents compilation if certain preprocessor flags for compilation are missing.\n\n</p><p></p><hr/>\n<em>2011-Apr-12 16:46:26 by psilord:</em> <br/>\n\nThis ticket is finished.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Apr-12 16:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21348\">[21348]</a></span>: ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2013\" onclick=\"get_ticket_and_populate_wrapper('2013'); return false;\" title=\"Check 32-bit standalone checkpointing for 7.6.0\">#2013</a></span> <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2055\" onclick=\"get_ticket_and_populate_wrapper('2055'); return false;\" title=\"Strengthen validation checks for compressed heap pointers in stduniv\">#2055</a></span> ===GT:Fixed=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2013\" onclick=\"get_ticket_and_populate_wrapper('2013'); return false;\" title=\"Check 32-bit standalone checkpointing for 7.6.0\">#2013</a></span> <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2055\" onclick=\"get_ticket_and_populate_wrapper('2055'); return false;\" title=\"Strengthen validation checks for compressed heap pointers in stduniv\">#2055</a></span> Reified the alternate heap into a global structure which keeps track of it instead of a collection of static variables in a function. Added some debugging calls to print out the structure, etc. Added very strong validation checks about how the chunks of\u00a0[...]\n (By Peter Keller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2011-Apr-12 16:46", "status": "resolved", "created": "2011-Apr-12 10:19", "fixed_version": "2011-Apr-12 10:19", "broken_version": "v070000", "priority": "1", "subsystem": "Std", "assigned_to": "psilord", "derived_from": "#2013", "creator": "psilord", "rust": "", "customer_group": "other", "visibility": "public", "notify": "psilord@cs.wisc.edu", "due_date": "20110414"}