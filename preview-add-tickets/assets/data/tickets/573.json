{"id": 573, "title": "Ticket #573: Collect historical gridmanager data for BNL", "description": "<blockquote>\nBNL would like to collect historical information about the grid universe jobs they submit. An example piece of data is how many jobs have been executed in the past 10 hours.\n\n<p>Here is a proposal for the the data to be collected. For every half hour, calculate the following information per site and submit node:\n</p><ul>\n<li>Number of jobs submitted\n</li><li>Number of jobs completed\n</li><li>Number of jobs held\n</li><li>For each Condor and Globus job status, calculate the following:\n<ul>\n<li>Total time spent in status X across all jobs\n</li><li>Number of jobs that spent time in status X\n</li><li>Average and other statistics about time spent in status X\n</li><li>Histogram of times spent in status X\n</li></ul>\n</li></ul>\n\n<p>Questions:\n</p><ul>\n<li>Should sampling interval and start/end points be changeable for past data? If so, how far back should raw data be kept for recomputation of summaries?</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2009-Jun-17 19:02:03 by xzhao:</em> <br/>\n\nThis looks good, I would say to have the time interval and start/end points be configurable, and keep records for up to 24 hours.\n\n<p></p><hr/>\n<em>2010-May-26 15:40:33 by jfrey:</em> <br/>\n\nHere's a refinement of the proposal. The gridmanager keeps running totals of all data (both counts of job events and time spent in various states). These totals are included in the ads sent to the collector. The ads also include the gridmanager's birthdate and the date the ad was sent to the collector. From this, an observer can calculate differences and averages in the numbers between any two ads. Thus, the gridmanager doesn't need to store any historical data (just the current counts) nor does it need to know what frequency an observer wants data reported at.\n\n<p></p><hr/>\n<em>2010-May-26 15:42:10 by jfrey:</em> <br/>\n\nXin says he's interested in counts of the following job events:\n\n<p></p><ul>\n<li>submission (or handed to gridmanager)\n</li><li>submission to remote system\n</li><li>completion\n</li><li>begin execution\n</li><li>failure or being held</li></ul>\n</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=594\" onclick=\"get_ticket_and_populate_wrapper('594'); return false;\" title=\"CondorView collector should track arbitrary fields\">#594</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\n<span class=\"wiki\"><a href=\"wiki?p=CondorView\" title=\"Condor View\">CondorView</a></span> collector should track arbitrary fields</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=597\" onclick=\"get_ticket_and_populate_wrapper('597'); return false;\" title=\"New CondorView user interface\">#597</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nNew <span class=\"wiki\"><a href=\"wiki?p=CondorView\" title=\"Condor View\">CondorView</a></span> user interface</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "", "type": "todo", "last_change": "2013-Jan-30 14:06", "status": "new", "created": "2009-Jun-17 14:02", "fixed_version": "2009-Jun-17 14:02", "broken_version": "", "priority": "5", "subsystem": "Grid", "assigned_to": "jfrey", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "atlas", "visibility": "public", "notify": "", "due_date": ""}