{"id": 2142, "title": "Ticket #2142: KILLING_TIMEOUT overrides KILL policy", "description": "<blockquote>\nI'm wondering if the change in behavior of preemption in 7.5 was really intended to be as broad as it is.  Due to <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=1198\" title=\"remove_kill_sig and kill_sig not used by condor_rm in vanilla universe\">#1198</a></span>, the KILL expression is useless by default, because when a job is preempted, it is hard-killed as soon as KILLING_TIMEOUT expires.  The default KILLING_TIMEOUT is just 30s.\n\n<p>We've received complaints in CHTC from users who have self-checkpointing jobs that cannot save state in this amount of time.  The desired policy was configured via the KILL expression, which gave jobs 10 minutes to vacate, but this is being trumped by the new behavior of KILLING_TIMEOUT.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-May-09 13:32:27 by danb:</em> <br/>\n\nI reproduced this problem using the following configuration, which is supposed to hard-kill the job after it has been running for 120 seconds, but which instead hard-kills it when KILLING_TIMEOUT expires, 60s after the job started.\n\n<p></p><div class=\"verbatim\">\n<pre>PREEMPT = (time() - JobStart) &gt; 30\nWANT_VACATE = true\nKILL = (time() - JobStart) &gt; 120\n</pre></div>\n\n\n<p>I then submitted a job:\n\n</p><p></p><div class=\"verbatim\">\n<pre>executable = my_preempt\nnotification = never\nlog = ulog\noutput = mydir/stdout\nerror = mydir/stderr\nshould_transfer_files = yes\nwhen_to_transfer_output = on_exit\n\nqueue\n</pre></div>\n\n\n<p>The script my_preempt is as follows:\n\n</p><p></p><div class=\"verbatim\">\n<pre>#!/bin/sh\n\nKilled() {\n  echo Received SIGTERM\n}\n\ntrap Killed SIGTERM\n\nsleep 3600\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-May-10 10:17:35 by rrati:</em> <br/>\n\nThe issue was that in the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ShutdownGraceful\" title=\"Shutdown Graceful\">ShutdownGraceful</a></span> case the starter was setting the escalation timer, when when it expires would hard kill the job.  This shouldn't happen in the graceful shutdown case.  The starter should send the signal to the job and wait for outside influence to escalate to a Fast case if needed (rm, policy, etc).\n\n<p></p><hr/>\n<em>2011-May-10 10:34:57 by tannenba:</em> <br/>\n\nfwiw, I did a quick code review of the 3 line change, looks good :)</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-May-10 10:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21808\">[21808]</a></span>: Signal escalation should only occur in the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ShutdownFast\" title=\"Shutdown Fast\">ShutdownFast</a></span> case, but the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ShutdownGraceful\" title=\"Shutdown Graceful\">ShutdownGraceful</a></span> case was starting the escalation timer. This caused a conflict with the KILL policy expression. Removed setting the escalation timer during <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ShutdownGraceful\" title=\"Shutdown Graceful\">ShutdownGraceful</a></span>. (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2142\" title=\"KILLING_TIMEOUT overrides KILL policy\">#2142</a></span>)  (By Robert Rati )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-May-10 10:34", "status": "resolved", "created": "2011-May-06 20:43", "fixed_version": "2011-May-06 20:43", "broken_version": "v070502", "priority": "4", "subsystem": "Daemons", "assigned_to": "rrati", "derived_from": "#1198", "creator": "danb", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "dan@hep.wisc.edu", "due_date": ""}