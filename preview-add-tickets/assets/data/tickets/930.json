{"id": 930, "title": "Ticket #930: QMGMT_CMD is registered at READ access level", "description": "<blockquote>\nAs discussed with Todd and Cathrin just now, here's a proposed item for her to try out.\n\n<p>The QMGMT_CMD is a command that is sent to the schedd.  All job queue operations such as submitting jobs, modifying jobs, and listing the jobs are done through this command.\n\n</p><p>The command is registered as a READ command, so security negotiation happens according to the READ policy (e.g. SEC_READ_AUTHENTICATION, etc.).  However, internally in the protocol of this command are some operations that require authentication (all operations that modify the job queue).  This is handled by making authentication part of the command protocol rather than part of the initial security negotiation.  This happens in qmgmt_receivers.cpp:do_Q_request().  There are two different calls made by the client: <code>InitializeConnection</code> and <code>InitializeReadOnlyConnection</code>.\n\n</p><p>The problem with this is that condor_shadow periodically connects to the schedd and updates the job.  If the READ policy is not to require authentication, then this means the shadow and schedd will create an unauthenticated security session.  Then every time the shadow connects to the schedd and tries to update the job, it will have to authenticate inside <code>InitializeConnection</code>.  If the READ policy requires authentication, then the shadow will get an authenticated security session the first time it connects and from then on it will not have to reauthenticate (until the security session expires).\n\n</p><p>What I think needs to be done about this is to register two commands: QMGMT_READ and QMGMT_WRITE.  These could both still have the same command handler that the current QMGMT command has.  They would just be registered at different authorization levels so that the initial security negotiation phase would be more appropriate.  The clients would then need to be changed to send the right command based on whether they are doing a read or write operation.  Presumably this is already known at a fairly early stage, because the client sends <code>InitializeConnection</code> or <code>InitializeReadOnlyConnection</code> at the beginning of the qmgmt command.  Old clients that send QMGMT should probably be treated as though they sent QMGMT_READ.  (QMGMT_READ could be the same integer as the old QMGMT command.)\n\n</p><p>The next bit is for \"extra credit\".  Digging further, it would be nice if QMGMT_WRITE were not just registered at the WRITE authorization level.  The problem with WRITE is that it doesn't necessarily require authentication.  Many pools are configured with WRITE just requiring host-based authorization and no further authentication.  In <code>InitializeConnection</code>, QMGMT will force authentication, even if WRITE doesn't require it.  This means that if WRITE doesn't require authentication then we will still be in a situation where the shadow has to authenticate every time it updates the job ad, because the cached security session would be unauthenticated.  One solution is to add a new authorization level (SUBMIT?) that always requires authentication.  Another would be to allow commands to be registered with a boolean flag that indicates whether they should always require authentication (requires changing which commands are allowed for a given security session).  Before doing that, we would want to get input from more people (like Zach and Todd).</p></blockquote>", "remarks": "<blockquote>\nI grabbed this ticket and resolved it for 7.5.0.  There are now two QMGMT commands: one for read and one for write.\n\n<p>When registering commands, it is now possible to pass force_authentication=true to force authentication in the security negotiation phase.  This avoids the problem of using an anonymous cached security session for a command that forces authentication in the command handler.  I have set force_authentication for all commands in the schedd that should have it.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Dec-22 17:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=25208\">[25208]</a></span>: Added note to version history for qmgmt improvement. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=930\" title=\"QMGMT_CMD is registered at READ access level\">#930</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Dec-18 21:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=16734\">[16734]</a></span>: Backward compatibility fix for addition of QMGMT_WRITE_CMD. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=930\" title=\"QMGMT_CMD is registered at READ access level\">#930</a></span> Clients send QMGMT_READ_CMD when talking to older schedds.  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Dec-18 17:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=16731\">[16731]</a></span>: Added the ability to register commands that force authentication. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=930\" title=\"QMGMT_CMD is registered at READ access level\">#930</a></span> Authenticating while creating the security session is more efficient than creating an unauthenticated security session and then forcing authentication in the command handler, because the authenticated security session can be reused\u00a0[...]\n (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Dec-18 17:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=16732\">[16732]</a></span>: Split QMGMT_CMD into two commands: QMGMT_READ_CMD and QMGMT_WRITE_CMD. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=930\" title=\"QMGMT_CMD is registered at READ access level\">#930</a></span> Also set the force_authentication flag on QMGMT_WRITE_CMD.  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Dec-18 17:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=16733\">[16733]</a></span>: Set the force_authentication flag on schedd commands that should have it. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=930\" title=\"QMGMT_CMD is registered at READ access level\">#930</a></span>  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2009-Dec-18 17:51", "status": "resolved", "created": "2009-Nov-10 16:51", "fixed_version": "2009-Nov-10 16:51", "broken_version": "v070000", "priority": "4", "subsystem": "Daemons", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "other", "visibility": "public", "notify": "dan@hep.wisc.edu,tannenba@cs.wisc.edu,zmiller@cs.wisc.edu,matt@cs.wisc.edu", "due_date": ""}