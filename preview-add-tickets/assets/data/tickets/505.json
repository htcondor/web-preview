{"id": 505, "title": "Ticket #505: onexit policy expression regression tests are bogus and broken", "description": "<blockquote>\nAll of the various onexit hold and onexit remove tests in test suite seem broken.  They always return green, when in fact onexit policy expressions are broken in v7.3.2.  (and maybe many other versions as well!!!)\n\n<p>Observe :\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">[tannenba@nmi-s002 todd]$ cat smell.sh\n#!/bin/sh\nexit 3\n[tannenba@nmi-s002 todd]$ cat smell.sub\nexecutable = smell.sh\nuniverse = vanilla\nlog = smell.log\non_exit_hold = ExitCode != 55\nqueue\n[tannenba@nmi-s002 todd]$ cat smell.log\n000 (87577.000.000) 05/21 15:30:43 Job submitted from host: &lt;192.168.0.69:65244&gt;\n...\n001 (87577.000.000) 05/21 15:30:44 Job executing on host: &lt;192.168.0.69:65219&gt;\n...\n007 (87577.000.000) 05/21 15:30:44 Shadow exception!\n        UserPolicy Error: No signal/exit codes in job ad!\n        0  -  Run Bytes Sent By Job\n        0  -  Run Bytes Received By Job\n...\n001 (87577.000.000) 05/21 15:35:44 Job executing on host: &lt;192.168.0.69:65219&gt;\n...\n007 (87577.000.000) 05/21 15:35:44 Shadow exception!\n        UserPolicy Error: No signal/exit codes in job ad!\n        0  -  Run Bytes Sent By Job\n        0  -  Run Bytes Received By Job\n</pre></div>\n\n\n<p>A quick visual inspection of the onexit tests leads to confusion; some problems immediately seen include:\n</p><ol>\n<li>The output is not understandable.\n</li><li>Looks like any shadow exceptions appearing in the log are completely ignored?!?!?!\n</li><li>Various bits look like they were copied and pasted from unrelated tests.\n</li><li>The logic in the tests is broken.  For instance, the onexit_hold_true test wants to see the test go into hold state.  Once in the hold state, the test is removed.  If the user log reports the job as aborted, the test returns success... but the aborted event handler never makes any check to that the job ever entered the held state!  This test would pass if the job was immediately aborted upon submission w/o ever entering the hold state.\n</li><li>The tests sleep for multiple seconds.  There is no need for tests to be sleeping --- it just makes our test suite run slow and non-deterministically (i.e. what if the load average on the execute machine is very high?).  How about having the test submit a job that immediately exits with a well known (and uncommon) exit code, and then have the policy expressions test on that?</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2009-May-25 09:14:51 by tannenba:</em> <br/>\n\nWell, the above broken behavior re onexit policy expressions was tracked down to the patches applied in <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=452\" onclick=\"get_ticket_and_populate_wrapper('452'); return false;\" title=\"remote job in grid universe can be killed even after lease renewed\">#452</a></span>.\n\n<p>So the onexit expressions are not broken by default in shipped versions of Condor, and thus the priority of this ticket is not as high, nor are the tests as broken as the above makes out.\n\n</p><p>However, several of the comments above from an inspection of the tests still apply (the cut-n-pasted code, etc).  So I will lower the priority of this ticket and make it a child of <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=297\" onclick=\"get_ticket_and_populate_wrapper('297'); return false;\" title=\"Test Cruft Code Review\">#297</a></span>.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2010-Jan-31 13:48", "status": "new", "created": "2009-May-21 16:19", "fixed_version": "2009-May-21 16:19", "broken_version": "v070302", "priority": "4", "subsystem": "Tests", "assigned_to": "bt", "derived_from": "#297", "creator": "tannenba", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu", "due_date": ""}