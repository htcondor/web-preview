{"id": 1272, "title": "Ticket #1272: Dead connection not noticed by shadow for two hours", "description": "<blockquote>\nThe user reports jobs randomly restarting. Examination of the starter and shadow logs for one such jobs shows that 5 hours after the job starts, the starter gets a read error on the connection with the shadow. The errno is 10054 (An existing connection was forcibly closed by the remote host). The starter proceeds to attempt to write to the socket every 5 minutes, getting the same error each time, until it's killed.\n\n<p>The shadow log shows no activity, just that it's no longer receiving job updates from the starter. Two hours after the first failure in the starter, the shadow finally gets a read error, with the same errno of 10054. It goes into reconnect mode, immediately decides that the job lease duration of 20 minutes has expired, and exits signaling failure. The schedd presumably then aborts the claim, resulting in the startd killing the starter.\n\n</p><p>The 2-hour interval between the starter and shadow noticing the broken connection sounds suspiciously like the default TCP keep-alive interval. The 5-hour interval between job start and first failure is also a little suspicious. Will need to see if other failures have the same interval.\n\n</p><p>The submit and execute machines are both Windows. The execute machine is running 7.2.4 and the submit machine is running 7.0.1.\n\n</p><p>I see several problems in the communications between shadow and starter that contribute to this problem:\n</p><ul>\n<li>The shadow doesn't notice if it stops receiving job update messages from the starter. The shadow could go into reconnect mode when it misses updates. If it's not there, we can add an upper bound on the interval between messages from the starter, known by the shadow. This upper bound should be less than the job lease duration.\n</li><li>The starter doesn't close the connection on failure. If it did, that could cause the shadow to notice the problem sooner.\n</li><li>The shadow bases the job lease duration on the last message it received from the starter, not when it noticed the broken connection. Thus, in this case, it never tried to reconnect.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "incident", "last_change": "2010-Mar-11 16:53", "status": "new", "created": "2010-Mar-11 16:53", "fixed_version": "2010-Mar-11 16:53", "broken_version": "", "priority": "4", "subsystem": "Unknown", "assigned_to": "", "derived_from": "", "creator": "jfrey", "rust": "a20350", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}