{"id": 140, "title": "Ticket #140: Support CPU affinity for jobs", "description": "<blockquote>\nProvide the ability for the startd/starter to set per-slot cpu affinity</blockquote>", "remarks": "<blockquote>\n<em>2009-Jan-28 15:25:49 by burnett:</em> <br/>\n\nIt seems to me that the *nix and Windows affinity control behave in a similar fashion (i.e. a process can set it's own processor affinity, a bit mask is used to represent which cpus/cores are used, etc.), so it may be possible to to share a lot of the high level code.  This assumes we will have some higher level Condor representation of a jobs CPU affinity.\n\n<p></p><hr/>\n<em>2009-Jan-28 22:34:21 by tannenba:</em> <br/>\n\nSome quick thoughts...\n\n<p></p><ol>\n<li>CPU affinity should be an option passed into daemon core create_process().  All operating specific code (affinity on win32 -vs- linux, etc) should live in daemon core.  All other changes (aka to the starter, etc) should be platform agnostic.\n\n<p></p></li><li>The starter should make use of this functionality via class OSProc.  By having the starter perform the magic (instead of the startd), we can have affinity for local universe jobs as well.\n\n<p></p></li><li>The affinity should be specified via a bit mask (or something very similar), so the user can specify one or more specific CPU cores to service one or more slots.  Also by using a bit mask, users could setup Condor to \"stay out of the way\" of some other service perhaps sharing the same physical machine.\n\n<p></p></li><li>An idea for a default: if the number of cores equals the number of slots, have a default affinity mask that will assign one core to each slot.\n</li></ol>\n\n<p>sound good?\n\n</p><p></p><hr/>\n<em>2009-Jan-29 08:41:09 by matt:</em> <br/>\n\nAre we talking about users (who submitted a job) or administrators (who sets configuration) having control over the affinity? It's ambiguous in the points above.\n\n<p>This feature should start as administrator controlled, and just for the default suggested above. It doesn't seem necessary to expose the mask right out of the gate, and doing so could complicate configuration by adding another dimension on which administrators have to split their startd configurations.\n\n</p><p></p><hr/>\n<em>2009-Jan-29 08:52:10 by tannenba:</em> <br/>\n\nIn the comment above, <em>user</em> means administrator, or more precisely the owner of the resource.  Whomever sets the machine policy.\n\n<p></p><hr/>\n<em>2009-Jan-30 12:29:45 by gthain:</em> <br/>\n\nThis is controlled by ENFORCE_CPU_AFFINITY in the starter.  Also, there's a param SLOTx_CPU_AFFINITY, which takes a string list of integers representing cpus.  If SLOTx_CPU_AFFINITY is not set, and ENCFORCE_CPU_AFFINITY is, the affinity is just set to the slotid.\n\n<p></p><hr/>\n<em>2009-Jan-30 16:00:14 by tannenba:</em> <br/>\n\nWhat about support for CPU affinity on Windows?\n\n<p></p><hr/>\n<em>2009-Feb-02 11:24:22 by gthain:</em> <br/>\n\nThat would be <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=178\" onclick=\"get_ticket_and_populate_wrapper('178'); return false;\" title=\"Add cpu affinity support on Windows\">#178</a></span></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=178\" onclick=\"get_ticket_and_populate_wrapper('178'); return false;\" title=\"Add cpu affinity support on Windows\">#178</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nAdd cpu affinity support on Windows</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jan-30 12:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=13665\">[13665]</a></span>: Add support for per-slot cpu affinity setting on Linux <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=140\" onclick=\"get_ticket_and_populate_wrapper('140'); return false;\" title=\"Support CPU affinity for jobs\">#140</a></span>  (By Greg Thain )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Jan-31 13:16", "status": "resolved", "created": "2009-Jan-28 15:10", "fixed_version": "2009-Jan-28 15:10", "broken_version": "", "priority": "2", "subsystem": "", "assigned_to": "gthain", "derived_from": "#139", "creator": "gthain", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}