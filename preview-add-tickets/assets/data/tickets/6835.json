{"id": 6835, "title": "Ticket #6835: Reduce calls to FindRunnableJob() when using resource request ads", "description": "<blockquote>\nWhen the schedd uses resource request lists for matchmaking, it ends up calling FindRunnableJob() for most of the matches it gets from the negotiator. Each resource request ad sent by the schedd includes the job id of a representative job and the autocluster id. All matches returned by the negotiator for that resource request ad include the representative job id. The first match is given to that job, and FindRunnableJob() is called for the rest.\n\n<p>When the schedd is building the resource request ads, it has all of the job ids for each ad. It then discards them as it sends the ads to the negotiator. If the schedd kept those lists of job ids, then it could efficiently assign matches to the appropriate jobs (i.e. jobs belonging to the resource request that the negotiator made the match against).\n\n</p><p>The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ScheddNegotiate\" title=\"Schedd Negotiate\">ScheddNegotiate</a></span> object is the natural place to keep the job ids. But with negotiator prefetching of requests, the data would have to persist across two negotiation sessions from the schedd's perspective (one session for the prefetching and another for supplying the matches). At the moment, I believe a new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ScheddNegotiate\" title=\"Schedd Negotiate\">ScheddNegotiate</a></span> object is created for each session.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2018-Nov-29 16:13", "status": "new", "created": "2018-Nov-29 16:13", "fixed_version": "2018-Nov-29 16:13", "broken_version": "", "priority": "4", "subsystem": "DaemonsSubmitNode", "assigned_to": "", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}