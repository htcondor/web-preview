{"id": 3349, "title": "Ticket #3349: -format for condor_history SEGV's on invalid input options.", "description": "<blockquote>\n$ condor_history -backwards 49.0 -format \"%s.%s\\n\" <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClusterId\" title=\"Cluster Id\">ClusterId</a></span>\n\n<p>Segmentation fault\n\n</p><p>Arguably it should check and exit gracefully vs. SEGV.</p></blockquote>", "remarks": "<blockquote>\n<em>2012-Nov-29 13:14:59 by johnkn:</em> <br/>\n\nI have reviewed the patch and reject it.\n\n<p>More than one % in a format string should not be illegal, consider\n\n</p><p></p><pre>   condor_history -format \"using %f %% of 1Gb\" 'DiskUsage*100.0/1024/1024'\n</pre>\n\n<p>not all characters following a % are even interpreted as a format tag. try\n\n</p><p></p><pre>   condor_status -format \"%7.3f %k\" MonitorSelfCpuUsage\n</pre>\n\n<p>and see what happens, (hint. it's not a segfault).\n\n</p><p>Properly parsing for % format tags is HARD. But parsing for them incorrectly is a cure worse than the disease.  There's some code in the classad pretty printer that does a pretty good job, you might be able to leverage that code.\n\n</p><p>Or you could simply put in a special case just for multiple %s and call it day, since that's the only case likely to actually cause a fault rather than just garbage output. It's a hack, but at least it won't reject perfectly valid format strings. (fixing %n seems kinda pointless, btw, the current error response is quite clear)\n\n</p><p>The proper fix for this really belongs in the pretty printing code, not in the command line parsing. It should simply ignore all but the first valid % format tag in the string and print out everything else.\n\n</p><p></p><hr/>\n<em>2012-Nov-29 13:33:42 by tstclair:</em> <br/>\n\ngood point, I did a quick and dirty, will clean up.\n\n<p></p><hr/>\n<em>2012-Nov-29 15:35:27 by tstclair:</em> <br/>\n\n<div class=\"code\">\n<pre class=\"code\">Display attribute or expression attr in format fmt . To display the attribute or expression the format must contain  a  single   printf(3)  -style  conversion  specifier.\n          Attributes  must  be  from the job ClassAd. Expressions are ClassAd expressions and may refer to attributes in the job ClassAd. If the attribute is not present in a given\n          ClassAd and cannot be parsed as an expression, then the format option will be silently skipped. The conversion specifier must match the type of the attribute  or  expres\u2010\n          sion.  %s is suitable for strings such as  Owner , %d for integers such as  ClusterId , and %f for floating point numbers such as  RemoteWallClockTime . %v identifies the\n          type of the attribute, and then prints the value in an appropriate format. %V identifies the type of the attribute, and then prints the value in an appropriate format  as\n          it  would  appear  in  the -long format. As an example, strings used with %V will have quote marks. An incorrect format will result in undefined behavior. Do not use more\n          than one conversion specifier in a given format. More than one conversion specifier will result in undefined behavior. To output multiple attributes  repeat  the  -format\n          option once for each desired attribute. Like  printf(3) style formats, one may include other text that will be reproduced directly. A format without any conversion speci\u2010\n          fiers may be specified, but an attribute is still required. Include n to specify a line break.\n</pre></div>\n\n\n<p></p><hr/>\n<em>2012-Nov-29 15:36:25 by tstclair:</em> <br/>\n\nSo the operative word that I key'd off of was 'single'... They can always specify multiple -format's..\n\n<p></p><hr/>\n<em>2012-Nov-29 15:37:13 by tstclair:</em> <br/>\n\nHow would you interpret the above comments ^?\n\n<p></p><hr/>\n<em>2012-Nov-29 20:07:28 by johnkn:</em> <br/>\n\nonly a single format specifier is allowed, but % != format specifier.\n% only begins a format specifier when it's followed by certain characters. And the rules for parsing to decide whether a % begins a format specifier are quite complex.\n\n<p>%s, %3s &amp; %-3.3s are all specifiers, but %% is not, and neither is %k or %\\, The list of what is a format specifier is also platform specific.  trying to solve this problem by parsing in the command handler is simply not going to get the job done.\n\n</p><p></p><hr/>\n<em>2012-Nov-30 08:48:46 by tstclair:</em> <br/>\n\nWe should bring it up in FW.. Honestly I don't have strong opinions but I think you could still get they desired behavior with multiple -format specifiers.\n\n<p>I guess the real questions are:\n</p><ul>\n<li>Does this break anyone?\n</li><li>Is a fix worse then the problem?\n</li><li>this odd behavior exists across *tools, is there any way we have a sec issue on a tool or are they all post processing modifications?\n</li></ul>\n\n<p></p><hr/>\n<em>2012-Nov-30 12:14:44 by johnkn:</em> <br/>\n\nI've got to work on some issues related to the pretty-printing code.  How about I take over this ticket and make the fix in the pretty-print code.  That way it will work across tools.\n<hr/>\n<em>2013-Apr-22 11:40:52 by johnkn:</em> <br/>\n\nBulk change of target version from v070905 to v070906 using ./ticket-target-mover.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Nov-30 09:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=34230\">[34230]</a></span>: Revert \"Ticket <span class=\"ticket\"><a class=\"abandoned\" href=\"tktview?tn=3349\" title=\"-format for condor_history SEGV's on invalid input options.\">#3349</a></span> Cleanup invalid -format handling for condor_history\" This reverts commit 812716faa6cee4721c9f58871ddc59a502abaaf5.  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Nov-29 10:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=34215\">[34215]</a></span>: Ticket <span class=\"ticket\"><a class=\"abandoned\" href=\"tktview?tn=3349\" title=\"-format for condor_history SEGV's on invalid input options.\">#3349</a></span> Cleanup invalid -format handling for condor_history  (By Timothy St. Clair )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2014-Aug-04 11:47", "status": "abandoned", "created": "2012-Nov-29 10:00", "fixed_version": "2012-Nov-29 10:00", "broken_version": "v070800", "priority": "5", "subsystem": "Tools", "assigned_to": "johnkn", "derived_from": "", "creator": "tstclair", "rust": "", "customer_group": "other", "visibility": "public", "notify": "johnkn@cs.wisc.edu", "due_date": ""}