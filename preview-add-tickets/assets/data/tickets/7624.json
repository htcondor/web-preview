{"id": 7624, "title": "Ticket #7624: clean up client to CredD interface for user impersonation", "description": "<blockquote>\n<span class=\"section\"><h2>Credential Management</h2></span>\n\n<p></p><div class=\"restricted\"><font size=\"+1\"><b>*** THIS BRANCH HAS BEEN MERGED AND IS NOW CLOSED ***</b></font><br/> All changes went into the V8_9_7-gt7624-cred-branch, now merged to V8_9_7-branch <p></p></div><strong>NOTE: Documentation work to be done in ticket</strong> <span class=\"ticket\"><a class=\"docpending\" href=\"tktview?tn=7646\" title=\"Update security docs for kerberos, krb5, afs, oauth, credmon, credd\">#7646</a></span>\n\n<p><span class=\"subsection\"></span></p><h3>Summary </h3>\n\n<p>There are a couple places in the code where users interface with the CredD.  One is during job submission when they specify in the submit file that they need certain OAuth tokens.  Another is when they use the <code>condor_store_cred</code> command to manipulate their credentials.\n\n</p><p>Currently, <code>condor_submit</code>, <code>condor_store_cred</code> and python use the username that is running the process as the username argument when talking the Credd.  This is passed to the Credd as a simple string in some cases, and in the <span class=\"quote\">ClassAd</span> token requests that it sends to the CredD when submitting a job.\n\n</p><p>This circumvents the credential mapping that the CredD and SchedD would normally employ.  As such, it is possible to have a mismatch between who the CredD will store credentials for and who the SchedD will run the job as. Or to have the CredD refuse to store the credential because the mapped authenticated name does not match the supplied name.\n\n</p><p>We propose to change this so that the CredD interprets a missing or empty username as a request to manage credentials for that mapped authenticated user.\nAnd the tools supply no username, counting on the CredD to fill that information in.\n\n</p><p>The exception to this will be when managing passwords, since the wire protocol for managing passwords goes back many years and new tools may need to talk to an older CredD and V.V.\n\n</p><p><span class=\"subsection\"></span></p><h3>Code changes</h3>\n\n<p><strong>[ZKM]</strong> Changes to the CredD:\n</p><ol>\n<li>if no <code>Username</code> is supplied or it is the empty string, then then the CredD will store tokens for the authenticated user.\n</li><li>If a <code>Username</code> is supplied and the authenticated user matches it or is a member of <code>CRED_SUPER_USERS</code> then the CredD will look at <code>Username</code> and do the operation on their behalf.\n</li></ol>\n\n<p>These changes go into <code>store_cred_handler()</code> in <code>store_cred.cpp</code>, and in <code>CredDaemon::check_creds_handler()</code> in <code>credd.cpp</code>\n\n</p><p><strong>[ZKM]</strong> Change for submit:\n</p><ol>\n<li>Pass an empty string for the  <code>Username</code> argument to <code>do_store_cred()</code> for Kerberos creds\n</li><li>Stop sending the <code>Username</code> attribute in token request ads, and always let the CredD fill it in.\n</li></ol>\n\n<p><strong>[TJ]</strong> Change for python bindings\n</p><ol>\n<li>pass an empty string for <code>Username</code> argument when python passes <code>None</code> as the username for all of the methods on the CredD object that take a username except those that call <code>do_store_cred()</code> and pass a password.\n</li></ol>\n\n<p><strong>[TJ]</strong> Changes for <code>condor_store_cred</code>\n</p><ol>\n<li>If the invoker does not provide a username, and is not storing a password, pass an empty string to the <code>Username</code> field of <code>do_store_cred()</code>\n</li></ol>\n\n<p><span class=\"subsection\"></span></p><h3>Work Plan</h3>\n<ol>\n<li><strong>[DONE]</strong> There is a branch: <strong>V8_9_7-gt7624-cred-branch</strong>\n</li><li><strong>[DONE]</strong> Zach will modify <code>submit.cpp</code> and <code>credd.cpp</code>\n</li><li><strong>[DONE]</strong> TJ will modify all other client tools\n</li><li><strong>[DONE]</strong> Zach will merge to V8_9_7-branch (when code complete)\n</li><li><strong>[DONE]</strong> TimT will work with Moate to install on CHTC\n</li><li><strong>[DONE]</strong> Zach will test Kerberos functionality (submit and store/query/delete cred)\n</li><li><strong>[DONE]</strong> Jason will test OAuth functionality (submit and store/query/delete cred)\n</li><li><strong>[ ]</strong> TJ will test Password functionality (user and pool passwords, linux and windows, submit and store/query/delete cred)</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2020-Apr-30 11:11:19 by johnkn:</em> <br/>\n\nIn store_cred_handler store_cred.cpp at about line 1320 just above <div class=\"code\">\n<pre class=\"code\">\tif ( ! fulluser.empty()) { </pre></div>\n\n\n<p>Just set fulluser to authenticated user if full user is empty. The check to see if the auth user is allowed to set that user's creds is already happening.\n\n</p><p></p><hr/>\n<em>2020-Apr-30 11:41:53 by johnkn:</em> <br/>\n\nin submit.cpp, find <div class=\"code\">\n<pre class=\"code\">#if 1 // support new credd commands only</pre></div>\n\nchange first argument of <code>do_store_cred</code> to \"\".  (can't pass null there)\nYou can then remove that instance of userdom, there is another instance of userdom used by the win32 code to check for a stored password that should not be removed.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-May-01 16:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59556\">[59556]</a></span>: Since this is now supported, and the default, stop the client side from bailing when sending an empty username. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7624\" title=\"clean up client to CredD interface for user impersonation\">#7624</a></span>  (By zmiller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-May-01 12:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59554\">[59554]</a></span>: Make sure the OAuth request files we create have the correct Username. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7624\" title=\"clean up client to CredD interface for user impersonation\">#7624</a></span>  (By zmiller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Apr-30 17:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59539\">[59539]</a></span>: Have submit send an empty username when talking to the CredD. Have CredD interpret empty username to mean \"take the authenticated user from the socket\". Allow CRED_SUPER_USERS to send any username. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7624\" title=\"clean up client to CredD interface for user impersonation\">#7624</a></span>  (By zmiller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Apr-30 11:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59531\">[59531]</a></span>: fix python bindings and condor_store_cred for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7624\" title=\"clean up client to CredD interface for user impersonation\">#7624</a></span>  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2020-May-21 11:38", "status": "resolved", "created": "2020-Apr-29 08:37", "fixed_version": "2020-Apr-29 08:37", "broken_version": "v080900", "priority": "2", "subsystem": "Security", "assigned_to": "zmiller", "derived_from": "#6346", "creator": "zmiller", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "zmiller@cs.wisc.edu, tannenba@cs.wisc.edu, tim@cs.wisc.edu, johnkn@cs.wisc.edu, BBockelman@morgridge.org, jpatton@cs.wisc.edu", "due_date": ""}