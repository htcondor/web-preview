{"id": 146, "title": "Ticket #146: Add new status: \"needstriage\"", "description": "<blockquote>\n<span class=\"section\"><h2>Problem: </h2></span>\n\n<p>Currently the \"new\" status is ambiguous.  It might mean:\n\n</p><p></p><ul>\n<li>To dos: Flightworthy thinks we should do this, but no one was started it yet.  There should be no objections to working on it beyond \"there are more important things to do.\"\n</li><li>Suggestions: Someone thinks it's a good idea, but Flightworthy as a whole may not agree.  Making the proposed change may actually cause problems for Flightworthy.\n</li></ul>\n\n<p>We want to keep the suggestions even if they're abandoned so that discussions and rationale can be saved and reviewed by someone having the same suggestion in the future. We need to break these two categories apart.\n\n</p><p><span class=\"section\"></span></p><h2>Proposal: </h2>\n\n<p><span class=\"subsection\"></span></p><h3>Technical: </h3>\n\n<p><a href=\"setup_enum?e=status\">Add a new status</a> \"needstriage\" described as \"Needs Triage\".\n\n</p><p><span class=\"subsection\"></span></p><h3>Policy: </h3>\n\n<p>If a staff member is certain that a ticket is a bug or really good idea, submit it as new as normal.  If a developer is uncertain, submit it as needstriage.\n\n</p><p>If another developer sees a new ticket with no discussion, and is concerns that it should be considered before work is done, they can move it to needstriage.\n\n</p><p>(At the moment you can't actually submit a ticket directly into this state; you'd need to modify it.)\n\n</p><p>Tickets in needstriage should not be worked on.\n\n</p><p>Any staff member can move a needstriage ticket to new, even the submitter, if they become confident that it's a really good idea.\n\n</p><p>Any staff member can add comments on why the ticket might a good or bad idea if they have an opinion, but aren't confident enough to move it to new.  (Abandoning it outright without discussion is discouraged.)\n\n</p><p>Occasionally Flightworthy will need to review tickets in needstriage to decide if they should be made new or abandoned.  This might happen by email or in a Flightworthy meeting.  Tickets that are still uncertain might be left in needstriage.  Either way, at the least a comment should be added noting the decision and reasoning.\n\n</p><p>Abandoned should mean \"This is not something we ever want to implement, even if someone were to write the code and offer it to us for free.\"  If the idea is good, just not something we'll ever practically implement, priority 5 \"means defer indefinitely.\"\n\n</p><p>Under no circumstances should a ticket be Abandoned without a rationale being added in a comment.  The lack of a rationale means someone rediscovering the idea in the future will have no idea why it was closed and may lobby to reopen it, wasting effort as the reason for abandonment is rediscovered.\n\n</p><p><span class=\"subsection\"></span></p><h3>Alternative implementations:</h3>\n\n<p>Perhaps tickets should default to needstriage, requiring a staff member to explicitly mark it as new.\n\n</p><p>Another option is to use \"new\" for suggestions and instead add \"triaged\" or \"accepted\" for to do items.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Jan-29 07:20:26 by tannenba:</em> <br/>\n\nHere is a much simpler idea:\n\n<p>How about new tickets come in at a default priority of \"5\" ?\n\n</p><p>A priority of 5 means don't do it (postpone indefinitely).  Once someone has reviewed it and/or FW feels it indeed should be done, it can move to priority 4 or higher.\n\n</p><p></p><hr/>\n<em>2009-Jan-29 10:13:28 by matt:</em> <br/>\n\nI'm a fan of as few states as possible.\n\n<p>A ticket that is new and not assigned to someone is in need of being triaged.\n\n</p><p>Generally, the submitter of a ticket should only set the severity. The triage nurse should adjust severity, set priority and assigned to.\n\n</p><p>So, no new states and no need to dirty the meaning of Priority.\n\n</p><p></p><hr/>\n<em>2009-Jan-29 12:42:51 by adesmet:</em> <br/>\n\n<strong class=\"two\">Untriaged == priority 5</strong>\n\n<p>Giving untriaged tickets a priority of 5 blends two distinct states.\n\n</p><p></p><ul>\n<li><strong>Good idea</strong> - Ticket has been reviewed, and it's a good idea, but is low enough priority that we may never get to it. These should linger as New for a long time, potentially indefinitely.  Only needs to be reviewed on a very occasional basis.  Were an external user to offer us code to implement the feature, and the code was good, we would happily accept it.  Put another way, work on such a ticket would almost never be wasted work; it might just not be as important.\n</li><li><strong>Untriaged</strong> - These should be triaged on a regular basis so we pull in new good ideas and cut out forever bad ideas.  Bad ideas should Abandoned and never looked at again, except as a reminder so future people don't re-suggest it.  Work on such a ticket might be wasted as we would never accept the patch.\n</li></ul>\n\n<p><strong class=\"two\">Untriaged == Unassigned</strong>\n\n</p><p>Assigning tickets to people to indicate that they are triaged blends two other states.  A New ticket might mean\n\n</p><p></p><ul>\n<li><strong>I'm going to work on it soon</strong>\n</li><li><strong>It's triaged</strong> - The developer may never work on it, especially if a stream of\n</li></ul>\n\n<p>I would expect tickets assigned to me to mean \"I should expect to work on this in the foreseeable future.\"  If I don't foresee getting to it soonish, it should be reviewed; Important?  Assign to someone whose New list is relatively short.  Not important?  Dump back into Unassigned.\n\n</p><p>If we let people back up with piles of New tickets, it's much harder to get a sense of what will actually be worked on.  Is the highest priority in someone's queue 3, and they have 10 items at this priority?  Who knows what they expect to work on next. <a href=\"/rptview?rn=17&amp;Status=new\">the \"new on plate\" report</a> will drown in entries that no-one ever expects to be done.  Got someone whose plate is clearing?  You can't just ask \"show me unassigned tickets\" to find something to give them.  Instead, you need to look at all assigned tickets and start making judgment calls about which to pull away.\n\n</p><p></p><hr/>\n<em>2009-Jan-29 12:58:11 by psilord:</em> <br/>\n\nHow about an alternate proposal, a new type called \"proposal\", we keep the same status, and don't overload the priorities or severities.\n\n<p>With this, a developer can write about a completely new proposal, an observation about the code or behavior of Condor which needs group discussion to determine truth status, or anything else which doesn't relate to a known piece of code, during which time the discussion can kill it (it goes to abandoned), or make it defered (can't think about it now), stalled (some other context has to arise first), etc.\n\n</p><p>If the idea passes muster, it can be relegated to 'new' status to be subsequently worked on. Otherwise, it just dies in 'proposal/abandoned' or some such thing.\n\n</p><p>The default status of 'new' tickets should be 'review' at which point one can determine that noone has looked at it and made any determination about it. If a ticket is 'new' but has some other status, then either it is already a legitimate ticket or a proposal which passed muster and actually reified itself into a real ticket for work to be done.\n\n</p><p></p><hr/>\n<em>2009-Jan-29 13:56:19 by matt:</em> <br/>\n\nIf a ticket it worth being worked on, i.e. it passes triage without getting bit-bucketed or deferred (i.e. no action taken), it is also worth assigning to someone to eventually work on it.\n\n<p>A ticket that goes from New -&gt; Triaged has not really made any meaningful progress. That is to say, its path to being resolved is still as unclear as if it remained New. Such a ticket without a path is in limbo.\n\n</p><p>We already have Active/Stalled states that can distinguish someone's triaged-to tickets from ones they are already working on. This means if anyone runs out of tickets they can always grab one from someone else.\n\n</p><p></p><hr/>\n<em>2009-Jan-29 13:57:14 by adesmet:</em> <br/>\n\nTalking with Pete, I think I see a deeper problem: we need to figure out the flow / state machine that tickets flow through.  I had one in my mind, it's now clear that Pete has another in his mind.  Since the status, assignment, and type may all depend on what logical state we're in, if we don't have a shared idea for the state machine, we can't usefully talk about what states and types we should have.  This needs further thought.\n\n<p>As a quick and dirty strawman, here is a possible state machine.  This is the idealized \"normal\" path.  While I've tried to include every state I could think of, in reality tickets will almost certainly jump around.  Nightly test broken?  Feel free to jump straight to Active when you submit it to yourself. You might view the state title as Statuses a ticket can be in, but that's not necessarily the case; Pete has an alternate proposal that uses a combination of Type and Status to indicate the logical state. Thus I've used states not currently valid Statuses in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=GitTrac\" title=\"Git Trac\">GitTrac</a></span>. Not all of the states need to be represented in the system, especially if we're confident that they'll only exist for a matter of moments.\n\n</p><p></p><ul>\n<li><strong>New Idea</strong>: A ticket is submitted. It may be a good idea or a bad idea.\n</li><li><strong>Being Considered</strong>: We decide if it's a good idea or a bad idea.  May linger here if there is a disagreement.\n<ul>\n<li><strong>Bad Idea</strong>: Branch off the main line: Terminal state. Add a remark about about why it's a bad idea.\n</li></ul>\n</li><li><strong>Good Idea</strong>: Review the ticket, ensuring it's reasonably complete and that the priority and severity are correct.  Ensure the priority is correct taking into account the estimated difficulty.\n</li><li><strong>Work Pool</strong>: No one is expecting to work on it.\n</li><li><strong>Queued</strong>: A developer is expecting to work on it.\n</li><li><strong>In Progess</strong>: A developer is working on it.\n</li><li><strong>Under Review</strong>: Another developer is reviewing it.  Could easily go back to Active instead of forward.\n</li><li><strong>Committed</strong>: Committed and pushed to a mainline branch.\n</li><li><strong>Released</strong>: The functionality is available in an official release.\n</li></ul>\n\n<p>I discovered I disagreed with Pete because he feels the Good Idea state is important, and that tickets can and sometimes should linger there for a while, but I expected to move through the state so quickly that it was irrelevant.  I think I disagree with Matt's proposal because it dismisses Work Pool as irrelevant, and I think tickets can and sometimes should linger there for a while.\n\n</p><p>(I also am beginning to regret proposing discussing this here. Lack of email updates makes it easy to ignore.  I love <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=GitTrac\" title=\"Git Trac\">GitTrac</a></span>, but perhaps it's ill suited to keeping people engaged in a conversation.)\n\n</p><p>(Edit: Action -&gt; In Progress, to avoid existing Status term.)\n\n</p><p></p><hr/>\n<em>2009-Jan-29 14:04:45 by adesmet:</em> <br/>\n\nMy last post was written before seeing Matt's.  I may have misunderstood, and thought us further apart than originally.  I think we're expecting roughly the same thing, but with different expectations on how to use <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=GitTrac\" title=\"Git Trac\">GitTrac</a></span> to accomplish it. (And I think Matt is keen to minimize size of the Work Pool, where I'm not.  But that's a different question.)\n\n<p><table border=\"1\" cellspacing=\"0\">\n<tbody><tr>\n<td>\nState    </td>\n<td>\nAlan          </td>\n<td>\nMatt    </td>\n</tr>\n\n<tr>\n<td>\nNew Idea </td>\n<td>\nneedstraige   </td>\n<td>\nNew/unassigned</td>\n</tr>\n\n<tr>\n<td>\nWork Pool</td>\n<td>\nNew/unassigned</td>\n<td>\nDeferred</td>\n</tr>\n\n<tr>\n<td>\nQueued   </td>\n<td>\nNew/assigned  </td>\n<td>\nNew/assigned</td>\n</tr>\n\n</tbody></table>\n</p><p></p><hr/>\n<em>2009-Jan-29 14:50:27 by matt:</em> <br/>\n\nStates: New, Active, Stalled, Abandoned, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WontDo\" title=\"Wont Do\">WontDo</a></span>, Resolved\n\n<p>Common flow...\n</p><ol>\n<li>New + Unassigned : Needs to be triaged\n</li><li>New + Assigned : Was triaged, needs to be worked on, likely by assignee\n</li><li>Active|Stalled + Assigned : Being worked on, by assignee\n</li><li>.? (this space purposefully left blank) ?.\n</li><li>Resolved : Ticket is resolved (terminal)\n</li></ol>\n\n<p>From any state...\n</p><ul>\n<li>Abandoned : Ticket is still a good idea, but has been starved (pseudo terminal)\n</li><li><span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WontDo\" title=\"Wont Do\">WontDo</a></span> : Ticket is a bad idea, not gonna do it (mostly terminal)\n</li></ul>\n\n<p>Generally...\n\n</p><p>Any ticket is a Good Idea until it is shown otherwise, anything that is not a good idea should end up in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WontDo\" title=\"Wont Do\">WontDo</a></span>, where it may be revived if it is discovered to actually be a good idea.\n\n</p><p>Any ticket can be reassigned as many times as it needs to be, which facilitates a Work Pool (any New+Assigned ticket). Courtesy says you should ask the current assignee of a ticket before reassigning it.\n\n</p><p>If a ticket languishes, or is passed around and never completed it's a good candidate for being Abandoned, which it could be revived from.\n\n</p><p>Don't make Active|Stalled + Unassigned tickets, that's silly, and once a ticket is assigned it shouldn't go back to being unassigned without being thrown out (<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WontDo\" title=\"Wont Do\">WontDo</a></span>)</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "todo", "last_change": "2012-Oct-16 13:14", "status": "new", "created": "2009-Jan-28 17:56", "fixed_version": "2009-Jan-28 17:56", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "tannenba", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}