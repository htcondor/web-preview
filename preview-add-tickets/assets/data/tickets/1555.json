{"id": 1555, "title": "Ticket #1555: make condor_q jobid efficient", "description": "<blockquote>\ncondor_q &lt;jobid&gt; results in a linear search in the schedd.  Instead, the schedd should do an efficient hash table lookup.\n\n<p>This is a possible STUDENTTASK.\n\n</p><p><span class=\"section\"></span></p><h2>proposal </h2>\n\n<p>There are two possible solutions:\n\n</p><p></p><ol>\n<li>Make the tool provide more hints to the schedd.\n\n<p></p></li><li>Make the schedd do a query optimization pass.  It could be really stupid and just look for a query that matches a specific template.\n</li></ol>\n\n<p>If it is easy to insert the hint in a backward compatible way, 1 is probably better than a stupid optimizer that matches to a template.  Explicit interfaces are better than implicit ones that can silently break.  However, since 2 would be so easy to implement, we should keep it in mind in case 1 turns out to be difficult.  If we are worried about silent breakage, we should add a test that asserts expected behavior in the schedd.</p></blockquote>", "remarks": "<blockquote>\n<hr/>\n<em>2010-Oct-20 16:03:30 by jfrey:</em> <br/>\n\nBulk change of target version from v070504 to v070505 using ./ticket-target-mover.\n<hr/>\n<em>2011-Jan-27 14:46:04 by danb:</em> <br/>\n\nBulk change of target version from v070505 to v070506 using ./ticket-target-mover.\n<hr/>\n<em>2011-Feb-01 16:19:13 by tannenba:</em> <br/>\n\nBulk change of target version from v070506 to NULL using ./ticket-target-mover.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2012-Oct-17 12:36", "status": "new", "created": "2010-Aug-03 16:31", "fixed_version": "2010-Aug-03 16:31", "broken_version": "v070504", "priority": "2", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "other", "visibility": "public", "notify": "dan@hep.wisc.edu", "due_date": ""}