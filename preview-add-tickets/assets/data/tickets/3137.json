{"id": 3137, "title": "Ticket #3137: Reduce memory usage of libcondor_utils", "description": "<blockquote>\nOne of the things which really increases the shadow size is the non-shared portion of the data segment of libcondor_utils.so.  It is currently 156KB in our releases.\n\n<p>This is due to:\n</p><ol>\n<li>Attributes being defined as global symbols.\n</li><li>Parameter table is copied in the non-shared segment.  TJ reports that MSVC handles \"static const\" correctly for the parameter table; GCC definitely does not.  Boo!\n</li><li>Excessively large PLT.\n</li></ol>\n\n<p>1 can be addressed by switching to defines.  2 can be fixed by forcing the parameter table into the text segment.  3 can be helped by LTO (although, honestly, there are just too many compilation units!).\n\n</p><p>Patch is incoming - gets the data segment to 71KB.\n\n</p><p>Hunting around, there are still some large statically-allocated arrays of size PATH_MAX (4KB) which almost certainly wastes memory, as well as a few other small sins.  See posting to condor-dev.</p></blockquote>", "remarks": "<blockquote>\n<em>Parameter table is copied in the non-shared segment.  TJ reports that MSVC handles \"static const\" correctly for the parameter table; GCC definitely does not.  Boo!</em>\n\n<p></p><ul>\n<li>I think this may have something to do with the shift to from static -&gt; dynamic.  Windows is still all static.\n</li></ul>\n\n<p><strong>REVIEW 1st pass</strong>\n</p><ul>\n<li>Running through nmi (<a class=\"external\" href=\"http://submit-2.batlab.org/results/branch.php?branch=workspace%3A+brianb_param_changes&amp;user=tstclair\">http://submit-2.batlab.org/results/branch.php?branch=workspace%3A+brianb_param_changes&amp;user=tstclair</a>)\n</li></ul>\n\n<p></p><hr/>\n<em>2012-Jul-18 18:00:03 by bbockelm:</em> <br/>\n\nAnother idea is to statically link <strong>only</strong> the shadow to condor_utils.  This wouldn't violate the embedded packaging rules of Fedora, but it does bloat the shadow size (to the rest of the binaries combined!) to about 3MB.\n\n<p>As much as I love small binaries, I think this particular case is worth it.\n\n</p><p></p><hr/>\n<em>2012-Jul-19 08:38:23 by tstclair:</em> <br/>\n\nbuku nmi issues with patch:  <a class=\"external\" href=\"http://submit-2.batlab.org/results/run-details.php?runid=53984\">http://submit-2.batlab.org/results/run-details.php?runid=53984</a>\n\n<p>I may have time later to run through.\n\n</p><p></p><hr/>\n<em>2012-Jul-19 09:02:17 by tstclair:</em> <br/>\n\nNow tracking in: master-shadow-memory\n\n<p></p><hr/>\n<em>2012-Jul-19 21:10:03 by bbockelm:</em> <br/>\n\nLatest build seems to have gone much smoother.  Many Windows issues, but Johnkn says that these are happening on all builds - and he is working to fix ASAP.\n\n<p></p><hr/>\n<em>2012-Jul-20 08:46:27 by tstclair:</em> <br/>\n\nI'll review in more detail today if all is well, then merge.\n\n<p></p><hr/>\n<em>2012-Jul-20 09:36:23 by bbockelm:</em> <br/>\n\nHi Tim,\n\n<p>One thing I did not commit was statically linking the shadow&amp;#160;to libcondor_utils.  That saves another 100KB.  I've not heard strong opinions for or against, but I'm personally for it.\n\n</p><p>Could you write such a patch?  The one I have was a cop-out: I just created a new static library, condor_utils_static and linked the shadow to that.  It works, but it ended up compiling condor_utils twice (felt like it was doubling the build time!).\n\n</p><p>Another thing - the original patch had some changes to build/cmake/CondorConfigure.cmake that I was playing with:\n</p><ol>\n<li>Enabling -flto.  Can you do an NMI run on a platform with a more recent GCC?\n</li><li>Disabling exceptions.  We could disable exceptions everywhere in libcondor_utils.\n</li><li>Enabling -Os.  This decreases code size at the cost of optimizations... but maybe right for Condor?\n</li></ol>\n\n<p>The latter two are commented out.  Enabling LTO does seem to cause the compiler to find undefined references - some are in the schedd (easy fix), some are in CREAM (more difficult).\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2012-Jul-25 15:43:51 by tstclair:</em> <br/>\n\nSo I've added the check for compiler version, I think we'll revisit the static linkage when we address the multishadow till then I'll cop-out and wait for the other ticket.\n\n<p></p><hr/>\n<em>2012-Jul-25 15:46:50 by tstclair:</em> <br/>\n\nmerged to master on 7/25 but imho requires a 2nd pass review, kicking to jfrey.\n\n<p></p><hr/>\n<em>2012-Aug-01 15:32:03 by jfrey:</em> <br/>\n\nI don't see any problems with the changes, but I have a few questions:\n\n<p>Do your changes to the attribute names cause anything to move from\nnon-shared memory to shared memory? Were the attribute names stored in\nnon-shared memory before?\n\n</p><p>I did a quick check on a couple binaries. Before your changes, there was\none occurence of the string \"ATTR_JOB_UNIVERSE\" per reference in the\nsouce code (both in binaries and libraries). After your changes, there\nwas one occurence of the string \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobUniverse\" title=\"Job Universe\">JobUniverse</a></span>\" per source file that\nmentioned ATTR_JOB_UNIVERSE (both in binaries and libraries).\n\n</p><p>The primary benefit here seems to be shrinking the number of symbols\nthat need to be resolved by libcondor_utils. I'm using rhel5. Do some of\nthe copies of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobUniverse\" title=\"Job Universe\">JobUniverse</a></span> get coalesced with -flto?\n\n</p><p>Do your changes to the param table cause anything to move from the\ndata segment to the text segment? Were the parameter names and string\nvalues previously in non-shard memory, along with the the param_info_t\nstructs?\n\n</p><p></p><hr/>\n<em>2012-Aug-03 10:32:52 by bbockelm:</em> <br/>\n\nHi Jaime,\n\n<p>Yes - attribute names were in non-shared memory before.  They are shared now.\n\n</p><p>Let's take \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobUniverse\" title=\"Job Universe\">JobUniverse</a></span>\" as an example, a string of 11 characters.  Previously, each reference to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobUniverse\" title=\"Job Universe\">JobUniverse</a></span> was an 8 byte pointer; it's now 11.  Depending on the alignment, it's likely (but not guaranteed) many places will round this up to taking 16 bytes.  Additionally, there was an entry in the library's and executable's hash map that contains the string \"ATTR_JOB_UNIVERSE\" (17 chars).\n\n</p><p>Each reference to the job universe requires a fairly large jump in memory to the other library, thrashing the cache.\n\n</p><p>So, for the 3 cases of ATTR_JOB_UNIVERSE in the shadow (don't forget to add the null byte), 2 * 18 + 3*8 = 60; 12+16+16 = 44 (looking at hexdump, in the condor_shadow, I see 3 cases of \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobUniverse\" title=\"Job Universe\">JobUniverse</a></span>\", two of which are padded).  In this case, repeating the string is a win.  The bigger difference is that these strings were previously non-shared, and are now in the text section.\n\n</p><p>In the case of LTO, all the \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobUniverse\" title=\"Job Universe\">JobUniverse</a></span>\" strings are coalesced into one, saving a few more bytes (16, I think); above, I quote the non-LTO case.\n\n</p><p>Brian</p></blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/609/condor_shadow_memory.patch\">condor_shadow_memory.patch</a>\n176168 bytes added by bbockelm on 2012-Jul-18 19:08:15 UTC.\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-03 12:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=42081\">[42081]</a></span>: Turn the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=TimerManager\" title=\"Timer Manager\">TimerManager</a></span> into a singleton. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=4773\" title=\"CLASSAD_USER_LIBS for python\">#4773</a></span> Previously, a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=TimerManager\" title=\"Timer Manager\">TimerManager</a></span> instance was a static member of the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> class initialized in the static initializers. The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=TimerManager\" title=\"Timer Manager\">TimerManager</a></span> was not actually a singleton, but EXCEPT'd if the constructor was called twice.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-26 19:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35284\">[35284]</a></span>: Turn off static master for PROPER builds. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3137\" title=\"Reduce memory usage of libcondor_utils\">#3137</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-26 18:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=46471\">[46471]</a></span>: Turn off static master for PROPER builds. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3137\" title=\"Reduce memory usage of libcondor_utils\">#3137</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-26 18:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35283\">[35283]</a></span>: Turn off static shadow for PROPER builds. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3137\" title=\"Reduce memory usage of libcondor_utils\">#3137</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-21 14:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35244\">[35244]</a></span>: staticly link condor_utils (but not globus) into the shadow. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3137\" title=\"Reduce memory usage of libcondor_utils\">#3137</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-14 15:34</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35163\">[35163]</a></span>: Fix Globus library list for Mac OS X 10.8. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3137\" title=\"Reduce memory usage of libcondor_utils\">#3137</a></span> Mac OS X 10.8 (and 10.6) doesn't have libltdl in /usr/lib. Thus we build our own for Globus to use, and we have to include it on the link line.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-06 14:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35082\">[35082]</a></span>: Create both static and shared versions of condor_utils lib for LINUX and DARWIN <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3137\" title=\"Reduce memory usage of libcondor_utils\">#3137</a></span> Also create staticly linked condor_shadow_s and condor_master_s on these platforms ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-06 10:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35077\">[35077]</a></span>: Revert \"more constness in dprintf category name table <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3137\" title=\"Reduce memory usage of libcondor_utils\">#3137</a></span>\" This reverts commit ea0a784d54b528f548fbd54d7c05d7f4e026af3b.  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-06 09:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35076\">[35076]</a></span>: more constness in dprintf category name table <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3137\" title=\"Reduce memory usage of libcondor_utils\">#3137</a></span> ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Feb-26 13:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35020\">[35020]</a></span>: remove linpack and dhrystone benchmark code from condor_utils <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3137\" title=\"Reduce memory usage of libcondor_utils\">#3137</a></span> benchmark code is now in condor_mips and condor_kflops. this avoids bloating the shadow and other HTCondor daemons with the huge static buffers used by these benchmarks. ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Feb-25 16:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35010\">[35010]</a></span>: remove unnecessary library libcrypt from non-proper builds to reduce shadow memory usage <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3137\" title=\"Reduce memory usage of libcondor_utils\">#3137</a></span> (as already not included in proper builds). ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jul-25 15:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32912\">[32912]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=3137\" title=\"Reduce memory usage of libcondor_utils\">#3137</a></span> Only enable -flto on gcc &gt;= 4.7.0 otherwise punt  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jul-19 08:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32855\">[32855]</a></span>: Ticket 3137 &lt;bbockelm&gt;'s changes to reduce shadow footprint.  (By Timothy St. Clair )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2012-Oct-22 13:45", "status": "resolved", "created": "2012-Jul-18 14:07", "fixed_version": "2012-Jul-18 14:07", "broken_version": "v070901", "priority": "3", "subsystem": "Daemons", "assigned_to": "jfrey", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "bbockelm@cse.unl.edu, tstclair@redhat.com, dan@hep.wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}