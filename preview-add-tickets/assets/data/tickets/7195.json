{"id": 7195, "title": "Ticket #7195: daemonCore timer handlers are invoked very late", "description": "<blockquote>\nWe witnessed the master killing a busy schedd because the schedd failed to send keep-alives to the master in a timely manner.  This ticket hopes to address this bug.\n\n<p><span class=\"subsection\"></span></p><h3>Problem </h3>\nOn each pass through the main event loop in daemonCore, we check if any registered timers events are due.  We then dispatch <em>a hard-coded maximum of three</em> timer events (i.e. invoke up to three timer handlers) per pass through the main event loop.\n\n<p>Only dispatching a maximum of three due timer events may result in some events not being handled until far past their due time.  We believe this contributed to a recent partial meltdown of the CMS global pool where the configuration requested a hung schedd be killed within 10 minutes.  We observed the master killing the schedd after 10 minutes even though the schedd was busily doing work because the schedd keep-alive timer was delayed by over 7 minutes.\n\n</p><p>The lesson learned here is it is important that some timer events be dispatched as close as possible to their due time.  As such we want to remove the hard-coded limitation of only dispatching three timer events per event loop.  But the reason this limit was originally added is timer events themselves can register new timer events including immediately-due timers (so-called 'zero second timers').  To ensure daemonCore does not get caught in an infinite-loop dispatching timer events, a limit of three was imposed.\n\n</p><p><span class=\"subsection\"></span></p><h3>Proposed Solution</h3>\nIn this ticket, we propose to add a knob <code>MAX_TIMER_EVENTS_PER_CYCLE</code> which will default to 3 in the v8.8 stable series, thus ensuring the same behavior as before.  However, if this knob is set to zero (the proposed default for v8.9), then daemonCore will make a list of all timer events ready to fire when we first start the event loop, and only dispatch those events.  Thus all ready timers will be dispatched, but timers created or reset by timer handlers themselves must wait for a future pass thru the event loop thereby avoiding the infinite-loop problem.\n\n<p>In addition, two daemon core statistics, <code>DCTimersFired</code> and <code>DCTimersFiredPeak</code>, will monitor respectively 1) the number of timer handlers invoked in the last event loop, and 2) the peak number of timer handlers invoked in any one pass through the event loop since startup.\n\n</p><p>Future work could include the notion of an urgent timer, or even a general priority scheme across all daemonCore event types.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Aug-12 10:59:24 by johnkn:</em> <br/>\n\n<strong>CODE_REVIEW</strong>\n<ol>\n<li>skipping past timers in the queue to deliver timers that were due at the top of the loop means that we will potentially deliver timers out of order\n</li><li>if the knob is set to 1000000, we will get stuck delivering timers forever if a timer re-registers itself to 0 ticks.\n</li><li>you code is space indented, the file is otherwise tab indented\n</li><li>I would personally prefer to have the param call in daemon core rather buried in the timer module\n</li></ol>\n\n<p></p><hr/>\n<em>2019-Aug-16 10:46:11 by tannenba:</em> <br/>\n\n<strong>Code Review Mitigation</strong>\n\n<p>Item 1: Fixed via commit <span class=\"chng\"><a href=\"chngview?cn=57678\">[57678]</a></span>, which removes the code that could potentially reset the notion of \"now\", thus ensuring in-order delivery of timers.  We feel safe removing this code because in v8.8 and earlier the code was a no-op, since it only reset the \"now\" value after 10 timer handlers were delivered, which never happened because it was hard-coded to a max of 3.\n\n</p><p>Item 2: If we ever feel a need to set the knob to anything other than 3 (in stable) or 0 (moving forward), we can revisit.  But the whole idea of the new behavior is we want to run ALL the timers that are due so we don't miss any urgent ones (like the keep-alive).  We could also revisit if/when we do the future work suggestions (i.e. add first-class support for urgent timers).\n\n</p><p>Item 3: Ugh, thanks.  Changed my Visual Studio 2017 default to use tabs (at four space indents).\n\n</p><p>Item 4: Noted, but think it is fine where it is now....\n\n</p><p>Review items addressed, resolving....</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-19 16:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57702\">[57702]</a></span>: remove unused varibles left by previous commit to <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7195\" title=\"daemonCore timer handlers are invoked very late\">#7195</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-15 17:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57683\">[57683]</a></span>: change default of MAX_TIMER_EVENTS_PER_CYCLE to 0. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7195\" title=\"daemonCore timer handlers are invoked very late\">#7195</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-15 17:28</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57680\">[57680]</a></span>: Documentation and version blurb for <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7195\" title=\"daemonCore timer handlers are invoked very late\">#7195</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-15 15:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57679\">[57679]</a></span>: statistics for timers fired per event loop, including peak. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7195\" title=\"daemonCore timer handlers are invoked very late\">#7195</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-15 15:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57678\">[57678]</a></span>: do not deliver daemonCore timers out of order. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7195\" title=\"daemonCore timer handlers are invoked very late\">#7195</a></span> note that the code removed in this commit was dead code in previous versions of HTCondor where MAX_TIMER_EVENTS_PER_CYCLE was set to 3.  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-08 16:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57642\">[57642]</a></span>: set default for knob MAX_TIMER_EVENTS_PER_CYCLE to 3 in v8.8. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7195\" title=\"daemonCore timer handlers are invoked very late\">#7195</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-08 16:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57640\">[57640]</a></span>: Implement config knob MAX_TIMER_EVENTS_PER_CYCLE. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7195\" title=\"daemonCore timer handlers are invoked very late\">#7195</a></span> If this knob is set to zero (the proposed default for v8.9), then daemonCore will make a list of all timer events ready to fire when we first start the event loop, and only dispatch those events.  (By Todd Tannenbaum )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Aug-19 14:56", "status": "resolved", "created": "2019-Aug-06 16:35", "fixed_version": "2019-Aug-06 16:35", "broken_version": "v080400", "priority": "2", "subsystem": "Libs", "assigned_to": "tannenba", "derived_from": "", "creator": "tannenba", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "", "due_date": ""}