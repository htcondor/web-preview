{"id": 7215, "title": "Ticket #7215: Improve formatstr() performance", "description": "<blockquote>\nThe formatstr() and formatstr_cat() functions have some room for improvement. formatstr_cat() does an unnecessary copy. And both can provide the length of the buffer to copied into the std::string, rather than requiring the std::string to calculate it for itself.</blockquote>", "remarks": "<blockquote>\n<em>2019-Sep-18 14:42:29 by jfrey:</em> <br/>\n\nNo user-visible changes, so no version history.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Sep-06 13:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57788\">[57788]</a></span>: Improve formatstr() performance. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7215\" title=\"Improve formatstr() performance\">#7215</a></span> Remove extra copy in formatstr_cat(). When adding formatted string buffer to std::string, provide the length, which is known.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-Sep-18 14:42", "status": "resolved", "created": "2019-Aug-20 11:47", "fixed_version": "2019-Aug-20 11:47", "broken_version": "", "priority": "4", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}