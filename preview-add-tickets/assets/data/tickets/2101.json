{"id": 2101, "title": "Ticket #2101: inconsistent lookup of attributes in a transaction", "description": "<blockquote>\nI noticed in 7.6.0 that nice_user accounting is inaccurate, because the \"User\" attribute in the job ad is missing the nice-user prefix, so the usage gets attributed to the wrong accounting record.  It appears that a change in the 7.5 series caused the code that handles the insertion of the nice-user prefix to be exposed to an ancient bug in the way the schedd handles lookup of ad attributes that have not yet been committed.\n\n<p>In <code>GetAttributeInt()</code>, if the attribute has been modified in the current transaction, the result is computed via the following:\n\n</p><p></p><pre>    sscanf(attr_val, \"%f\", val);\n</pre>\n\n<p>There is no error checking to see if the value was actually an integer.  For example, if val was <code>123.99 * 1000</code> the answer would be <code>123</code>.  More relevant to the nice-user problem, if val was <code>true</code>, the answer would be 0, whereas if the attribute was not modified in the current transaction, <code>true</code> would instead yield the integer value 1.\n\n</p><p>Similar problems affect <code>GetAttributeFloat()</code>, <code>GetAttributeBool()</code>, <code>GetAttributeStringNew()</code>, and <code>GetAttributeString()</code>.\n\n</p><p>The solution is to let the classad library generate the answer rather than trying to implement our own parser in qmgmt.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Apr-29 15:34:37 by jfrey:</em> <br/>\n\nThis changes the return values of the GetAttribute...() functions. Before, they returned -1 on failure, 1 if the value was modified in the active transaction, and 0 otherwise. I don't think any callers care about the distinction the 0 and 1, but we should preserve it for the stable series.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Apr-29 16:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26025\">[26025]</a></span>: Documented fix for nice-user accounting. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2101\" onclick=\"get_ticket_and_populate_wrapper('2101'); return false;\" title=\"inconsistent lookup of attributes in a transaction\">#2101</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Apr-29 16:32</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21626\">[21626]</a></span>: Restored semantics of return value in qmgmt <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=GetAttribute\" title=\"Get Attribute\">GetAttribute</a></span> functions. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2101\" onclick=\"get_ticket_and_populate_wrapper('2101'); return false;\" title=\"inconsistent lookup of attributes in a transaction\">#2101</a></span> Prior to my previous patch, these functions returned 1 if the attribute was modified in the current transaction. I did not intend to change that behavior, though it is likely that it is not important.  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Apr-27 10:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21601\">[21601]</a></span>: Fixed incorrect results given by lookup of attributes that have been modified in the current qmgmt transaction. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2101\" onclick=\"get_ticket_and_populate_wrapper('2101'); return false;\" title=\"inconsistent lookup of attributes in a transaction\">#2101</a></span> This fixes an observed inaccuracy in accounting of nice_user jobs.  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Apr-29 16:36", "status": "resolved", "created": "2011-Apr-27 10:53", "fixed_version": "2011-Apr-27 10:53", "broken_version": "v070000", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}