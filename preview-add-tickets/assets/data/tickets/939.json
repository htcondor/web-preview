{"id": 939, "title": "Ticket #939: Issue single status command for all cream jobs", "description": "<blockquote>\nThe cream api allows the client to query the status of all jobs. Condor should take advantage of this, rather than querying each job separately, as it currently does.\n\n<p>In a recent test run of 2000 jobs, the cream status command was executed 14284 times in 33 minutes.\n\n</p><p>Equivalent code for this already exists for several other job types in the gridmanager.\n\n</p><p>For Condor-C jobs, condorresource.cpp's CondorResource::DoScheddPoll implements this on a timer setup in the constructor.\n\n</p><p>Nordugrid jobs use nordugridresource.cpp's NordugridResource::DoJobStatus, again, set up in a timer in the constructor.\n\n</p><p>Can we factor out a shared implementation?\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">virtual bool BaseResource::WantBulkStatusTimer()  { return false; }\nvirtual int BaseResource::BulkPobeInterval() { EXCEPT(\"Invalid call to BaseResource::BulkPobeInterval); }\nvirtual const char * BaseResource::ResourceName() { EXCEPT(\"Invalid call to BaseResource::ResourceName); }\n\nBaseResource::BaseResource {\n\t...\n\tm_bulkPollTid = daemonCore-&gt;Register_Timer( 0,\n\t    (TimerHandlercpp)&amp;BaseResource::DoBulkStatus,\n\t    \"BaseResource::DoBulkStatus\", (Service*)this );\n\n\tm_bulkStatusActive = false;\n\t...\n}\n\nint BaseResource::DoBulkStatus()\n\tif ( ( registeredJobs.IsEmpty() || resourceDown ) &amp;&amp;\n\t\t m_bulkStatusActive == false ) {\n\t\t\t// No jobs or we can't talk to the schedd, so no point\n\t\t\t// in polling\n\t\tdaemonCore-&gt;Reset_Timer( scheddPollTid, BulkPobeInterval() );\n\t\treturn 0;\n\t}\n\n\t// TODO: Nordugrid jobs use a dedicated m_statusGahp?\n\tif ( gahp-&gt;isStarted() == false ) {\n\t\tif ( gahp-&gt;Startup() == false ) {\n\t\t\t\t// Failed to start the gahp server. Don't do anything\n\t\t\t\t// about it. The job objects will also fail on this call\n\t\t\t\t// and should go on hold as a result.\n\t\t\tdaemonCore-&gt;Reset_Timer( m_bulkPollTid, BulkPobeInterval() );\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tdaemonCore-&gt;Reset_Timer( m_bulkPollTid, TIMER_NEVER );\n\n\tif(m_scheddStatusActive == false) {\n\t\tdprintf(D_FULLDEBUG, \"Starting bulk job poll of %s\\n\", ResourceName());\n\t\tint r = StartBulkPoll();\n\t\treturn r;\n\t} else {\n\t\tint r = FinishBulkPoll();\n\t\tif(r == TRUE) {\n\t\t\tdprintf(D_FULLDEBUG, \"Finished bulk job poll of %s\\n\", ResourceName());\n\t\t}\n\t\tdaemonCore-&gt;Reset_Timer( m_bulkPollTid, BulkPobeInterval() );\n\t\treturn r;\n\t}\n}\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2009-Nov-25 11:22:16 by adesmet:</em> <br/>\n\nDone.\n\n<p>100 jobs, each running 10 minutes, took 105 calls to CREAM_JOB_STATUS, down from 401.  1000 jobs, each running for 10 minutes made 1,130 calls, down from a <em>predicted</em> 3,000-4,000.  Longer running jobs will have larger payoffs.  In general, given N jobs running M minutes, the old system would generate about N*M/5 calls, the new one will generate about N+M/5.</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=985\" onclick=\"get_ticket_and_populate_wrapper('985'); return false;\" title=\"cream_gahp has potential buffer overflow in gahp_printf\">#985</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\ncream_gahp has potential buffer overflow in gahp_printf</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Apr-06 14:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=17793\">[17793]</a></span>: Fix job lease renewal for cream jobs. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1334\" onclick=\"get_ticket_and_populate_wrapper('1334'); return false;\" title=\"cream job lease renewal broken by batched status command\">#1334</a></span> The code enhancements to batch cream job status commands (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=939\" onclick=\"get_ticket_and_populate_wrapper('939'); return false;\" title=\"Issue single status command for all cream jobs\">#939</a></span>) accidentally caused cream job leases to not be renewed in most cases. Now, the individual <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CreamJob\" title=\"Cream Job\">CreamJob</a></span> objects determine when the job lease will need to be renewed and set the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=EvaluateState\" title=\"Evaluate State\">EvaluateState</a></span> timer to\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Dec-21 15:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=16754\">[16754]</a></span>: Update <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=939\" onclick=\"get_ticket_and_populate_wrapper('939'); return false;\" title=\"Issue single status command for all cream jobs\">#939</a></span>: Visual C++ insists on return statements for unreachable code-paths. This fixes never released code; no version history necessary.  (By Alan De Smet )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Nov-23 15:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=16443\">[16443]</a></span>: Revert \"(<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=939\" onclick=\"get_ticket_and_populate_wrapper('939'); return false;\" title=\"Issue single status command for all cream jobs\">#939</a></span>) Making Git happy after a conflict in a stash pop.\" This reverts commit cfbf9c2bce6598f642c8f71237b0e97d41faec84.  (By Alan De Smet )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Nov-20 18:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=16405\">[16405]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=939\" onclick=\"get_ticket_and_populate_wrapper('939'); return false;\" title=\"Issue single status command for all cream jobs\">#939</a></span>) Making Git happy after a conflict in a stash pop.  (By Alan De Smet )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Nov-20 18:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=16404\">[16404]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=939\" onclick=\"get_ticket_and_populate_wrapper('939'); return false;\" title=\"Issue single status command for all cream jobs\">#939</a></span>) Query CREAM job statuses in batch. For a test job of 100 simultaneous jobs running 10 minutes each, this dropped the number of CREAM_JOB_STATUS calls (with associated network connections) from 401 to 105. Generally speaking, if you submit N jobs lasting Y minutes, you should see about N + Y/5\u00a0[...]\n (By Alan De Smet )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Apr-06 13:56", "status": "resolved", "created": "2009-Nov-12 15:31", "fixed_version": "2009-Nov-12 15:31", "broken_version": "v070400", "priority": "4", "subsystem": "Grid", "assigned_to": "adesmet", "derived_from": "#897", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}