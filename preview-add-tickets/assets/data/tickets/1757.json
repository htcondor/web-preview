{"id": 1757, "title": "Ticket #1757: condor_rm -forcex should remove jobs held from removal problems", "description": "<blockquote>\nBurt Holzman reports:\n\n<p>We've seen situations in the past where condor-g jobs error out remotely for some reason, become held, and become difficult to remove from the queue.  We execute condor_rm locally, the gridmanager talks to (or tries to talk to) the remote grid monitor, and fails (maybe the remote job is missing, or the grid monitor was killed, .. or some other failure).  The job continues to stay in the queue and are held again.\n\n</p><p>The only way currently to kill the job is to issue both a condor_rm and then a condor_rm -forcex if you get lucky enough to catch the job in the 'X' state.  I'd like -forcex to work on any job no matter what its status, so I don't have to try to time things.\n\n</p><p><span class=\"section\"></span></p><h2>How to Fix</h2>\n\n<p>It would be nice to somehow distinguish between jobs that are on hold for other reasons and jobs that are on hold because removal has failed for some reason.  Perhaps the latter should be removed by -forcex but not the former.</p></blockquote>", "remarks": "<blockquote>\n<hr/>\n<em>2011-Jan-27 14:50:47 by danb:</em> <br/>\n\nBulk change of target version from v070505 to v070506 using ./ticket-target-mover.\n<hr/>\n<em>2011-Feb-01 16:20:02 by tannenba:</em> <br/>\n\nBulk change of target version from v070506 to NULL using ./ticket-target-mover.\n\n<p></p><hr/>\n<em>2011-Feb-10 12:04:46 by tannenba:</em> <br/>\n\nI am guessing these cms condor-g jobs are actually glidein jobs? If so, does cms actually do anything w/ these grid jobs that go on hold other than trying to remove them?  If so, perhaps the best solution would be to flag the jobs as \"Nonessential\".\n\n<p>As of Condor v7.3.x and above, there is a job attribute, <code>Nonessential</code>. When this attribute is set\nto True, Condor will attempt to nicely remove problematic grid universe jobs rather than put them on\nhold. If any problems are encountered during the process of removing, the job\nwill automatically be removed forcefully (aka like <code>condor_rm -force</code>) and thus leave the queue immediately, potentially leaving debris on\nthe remote gatekeeper.\n\n</p><p>Add the following line to the submit file to mark a job as nonessential:\n\n</p><p></p><pre>   +Nonessential = True\n</pre>\n\n<p>Thoughts?  Perhaps the above already implemented mechanism allows us to resolve this ticket?\n\n</p><p></p><hr/>\n<em>2011-Feb-10 13:35:38 by danb:</em> <br/>\n\nIt would be nice if \"Nonessential\" were documented.\n\n<p></p><hr/>\n<em>2011-Feb-10 14:04:07 by burt:</em> <br/>\n\nThis sounds like what I need.  Looking at the code, it looks like it does two things: skips the held state and removes the job immediately from the queue; and if the job is in X state and the remote resource is down, it immediately removes it from the queue.  Are there any other consequences to marking a job nonessential?\n\n<p></p><hr/>\n<em>2014-Jul-28 13:12:03 by bbockelm:</em> <br/>\n\nClosing out old CMS tickets.  Please reopen if there's still work to do here.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2014-Jul-28 13:12", "status": "abandoned", "created": "2010-Nov-04 15:54", "fixed_version": "2010-Nov-04 15:54", "broken_version": "v070000", "priority": "3", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "dan@hep.wisc.edu,jfrey@cs.wisc.edu,burt@fnal.gov,tannenba@cs.wisc.edu", "due_date": ""}