{"id": 4686, "title": "Ticket #4686: DAGMan node status file incorrect on remove", "description": "<blockquote>\nOur users are complaining that they kill DAG tasks but then the jobs show up as running or idle in the monitoring.  Poking around, it seems to be because the node status file isn't updated when the DAG is killed.\n\n<p>For example, see this task: <a class=\"external\" href=\"http://submit-5.t2.ucsd.edu/CSstoragePath/22/cmsprod/141027_165621_crab3test-1:sciaba_HC_96_T2_UK_London_IC_20141027173502/node_state.txt\">http://submit-5.t2.ucsd.edu/CSstoragePath/22/cmsprod/141027_165621_crab3test-1:sciaba_HC_96_T2_UK_London_IC_20141027173502/node_state.txt</a>\n\n</p><p>From this, we see:\n\n</p><p></p><div class=\"verbatim\">\n<pre>[\n  Type = \"DagStatus\";\n  DagFiles = {\n    \"/home/glidecondor/condor_local/spool/8496/0/cluster3468496.proc0.subproc0/RunJobs.dag\"\n  };\n  Timestamp = 1414430189; /* \"Mon Oct 27 10:16:29 2014\" */\n  DagStatus = 6; /* \"STATUS_ERROR (removed)\" */\n  NodesTotal = 31;\n  NodesDone = 0;\n  NodesPre = 0;\n  NodesQueued = 31;\n  NodesPost = 0;\n  NodesReady = 0;\n  NodesUnready = 0;\n  NodesFailed = 0;\n  JobProcsHeld = 0;\n  JobProcsIdle = 31;\n]\n</pre></div>\n\n\n<p>So, the DAG was successfully killed.  However,\n\n</p><p></p><div class=\"verbatim\">\n<pre>[\n  Type = \"NodeStatus\";\n  Node = \"Job1\";\n  NodeStatus = 3; /* \"STATUS_SUBMITTED\" */\n  StatusDetails = \"idle\";\n  RetryCount = 0;\n  JobProcsQueued = 1;\n  JobProcsHeld = 0;\n]\n</pre></div>\n\n\n<p>For this particular task, I copied the dagman output into the file RunJobs.dag.dagman.out into the same web directory.  It shows only one curious thing - condor_rm failed.  However, I checked another task manually (after adding \"exit 0\" to the end of condor_rm_fix script) and this also had the wrong node status.</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Oct-30 09:57:22 by wenger:</em> <br/>\n\nWhat's causing this is that, when you condor_rm DAGMan, DAGMan doesn't wait around for all of the node jobs to exit before it exits itself.  (And I can't remember without looking at the code whether the schedd condor_rm's all of the node jobs right away, or waits for the DAGMan job to go away first.)  (Hmm -- the schedd should probably wait for DAGMan to go away, to make sure that there isn't a race condition where DAGMan could submit a new node job <strong>after</strong> the node jobs are condor_rm'ed.)\n\n<p>I can see at least a couple of ways to fix this:\n</p><ol>\n<li>When DAGMan gets condor_rm'ed, just internally mark all queued nodes as removed, and update the status file accordingly, even though the node jobs haven't actually been removed yet.\n</li><li>Actually wait for the node jobs to go away, and don't exit until we've seen all of the terminated/aborted events (see <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=3995\" onclick=\"get_ticket_and_populate_wrapper('3995'); return false;\" title=\"Condor_rm'ed DAGMan waits for node jobs to exit\">#3995</a></span>).\n</li></ol>\n\n<p>I'm not thrilled with either of these, but at least for a short-term fix I'd go with number 1.  Number 2 has a lot of complications -- how do we modify the schedd to remove the jobs before DAGMan goes away, but still avoid the race condition mentioned above?  Do we need a timeout on how long we wait for jobs to exit the queue?  What if you want to <strong>immediately</strong> remove DAGMan?, etc.\n\n</p><p></p><hr/>\n<em>2014-Oct-30 10:09:39 by bbockelm:</em> <br/>\n\nHi Kent,\n\n<p>For the urgent part of this issue, I'm fine with solution (1).  For the long-term, I like (2) better and will follow up in <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=3995\" onclick=\"get_ticket_and_populate_wrapper('3995'); return false;\" title=\"Condor_rm'ed DAGMan waits for node jobs to exit\">#3995</a></span>.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2014-Oct-30 11:26:13 by wenger:</em> <br/>\n\nHmm -- started working on this, and even the quick-and-dirty approach above is more complicated than I thought.  So far I've come up with two approaches:\n<ol>\n<li>Don't actually change the node status, but \"tweak\" it when we write out the node status file.\n</li><li>Actually go through and change the status of all pre/queued/post nodes when we get the condor_rm.\n</li></ol>\n\n<p>Both of the above approaches are really complicated by final nodes.  If we take the first approach, we need to do a bunch of tweaking for final nodes.  If we take the second approach, things may get goofed up by seeing aborted events for the nodes we've already marked as removed.\n\n</p><p></p><hr/>\n<em>2014-Oct-30 12:05:29 by wenger:</em> <br/>\n\nMy initial idea was that if you condor_rm a DAG with a final node, the status file would be \"correct\" (show non-final nodes as removed) while waiting for the final node to run.  I would like to do that eventually, but for getting into 8.3.2 I think even that is too complicated, so my idea now is to just fix things up for the final version of the status file at the very end (after the final node, if any, has been run).\n\n<p></p><hr/>\n<em>2014-Nov-12 08:59:01 by wenger:</em> <br/>\n\nThis has now been documented on the 8.3.2 release branch.\n\n<p></p><hr/>\n<em>2015-Apr-17 16:43:54 by zmiller:</em> <br/>\n\n<strong>CODE REVIEW</strong>:  Discussed with Kent when it written.  Reviewed now, looks good.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-18 14:29</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41671\">[41671]</a></span>: edit 8.3.2 version history item <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4686\" onclick=\"get_ticket_and_populate_wrapper('4686'); return false;\" title=\"DAGMan node status file incorrect on remove\">#4686</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-11 15:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41629\">[41629]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4686\" onclick=\"get_ticket_and_populate_wrapper('4686'); return false;\" title=\"DAGMan node status file incorrect on remove\">#4686</a></span>: Documented this fix in the version history.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Oct-31 09:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41534\">[41534]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4686\" onclick=\"get_ticket_and_populate_wrapper('4686'); return false;\" title=\"DAGMan node status file incorrect on remove\">#4686</a></span>: Phase 1 (kind of kludgey) fix -- when we dump out the status file for the last time (after final node is run if there is one) we tweak things such that nodes that are in the submitted, prerun, and postrun states are reported as failed. Updated a bunch of tests accordingly; still needs\u00a0[...]\n (By Kent Wenger )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Apr-17 16:44", "status": "resolved", "created": "2014-Oct-30 08:21", "fixed_version": "2014-Oct-30 08:21", "broken_version": "v080301", "priority": "1", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "#4490", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "bbockelm@cse.unl.edu, wenger@cs.wisc.edu, zmiller@cs.wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}