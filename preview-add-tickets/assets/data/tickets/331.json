{"id": 331, "title": "Ticket #331: Code review patch from Cycle Computing for resource weights.", "description": "<blockquote>\nSee more details here: <span class=\"drupalnode\"><a href=\"http://drupal-old.batlab.cs.wisc.edu/node/1699\">1699 (backup)</a> <a href=\"http://nmi.cs.wisc.edu/node/1699\">1699 (public)</a></span> (<a class=\"external\" href=\"http://nmi.cs.wisc.edu/node/1699\">http://nmi.cs.wisc.edu/node/1699</a>)\n\n<p>This is a patch that was contributed for 7.1 in October 2008.  Our customers are actively interested in this functionality.\n\n</p><p>This patch adds support for having different slots \"cost\" different amounts against the group quota (right now every slot costs 1). In the config file for a startd, <span class=\"quote\">ResourceWeight</span> is a <span class=\"quote\">ClassAd</span> expression which evaluates to the weight or cost of the resource.\n\n</p><p>For example:\n\n</p><p></p><div class=\"verbatim\">\n<pre>ResourceWeight = ifthenelse(SlotID == 1, $(Slot1ResourceWeight), $(OtherSlotResourceWeight))\nSlot1ResourceWeight = 10.0\nOtherSlotResourceWeight = 1.2\nGROUP_NAMES = group_a\nGROUP_QUOTA_group_a = 15\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n# 1\nSubmitted by danb on Tue, 2008-10-28 17:41.\n\n<p>Nice, Ian!\n\n</p><p>Without running your code, I can't tell if the following dprintf provides enough context or not:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">+ if(candidate-&gt;EvalFloat(ResourceWeightAttr.Value(), NULL,\n+ ResourceWeight) == 0) {\n+ dprintf(D_FULLDEBUG, \"Can't get ResourceWeight; using 1.0\\n\";);\n</pre></div>\n\n\n<p>Is the negotiator log just going to have this message show up out of the blue, or will it be obvious which machine ad is responsible?\n\n</p><p>Also, is \"<span class=\"quote\">ResourceWeight</span>\" a better name than \"<span class=\"quote\">SlotWeight</span>\"?\n\n</p><p>-Dan\n\n</p><p># 2\nSubmitted by Ian on Tue, 2008-10-28 23:35.\n\n</p><p>Dan,\n\n</p><p>I'm reworking this patch after discussing some issues with Todd, to make sure that we're fair within groups.\n\n</p><p>I'll take a look at the context of this message - in the tests I've performed I have D_ACCOUNTING on. It's a good idea to identify the candidate explicitly.\n\n</p><p>Todd suggested <span class=\"quote\">ResourceWeight</span> but he might like <span class=\"quote\">SlotWeight</span>.\n\n</p><p>Thanks for the suggestions.\n\n</p><p>-Ian\n\n</p><p># 3\nSubmitted by Todd Tannenbaum on Wed, 2008-10-29 10:55.\n\n</p><p><span class=\"quote\">SlotWeight</span> is fine imho if folks like it better than <span class=\"quote\">ResourceWeight</span>, I have no strong feelings.\n\n</p><p>The patch as it currently exists (attachment resource_weight.diff) cannot go into the code because it looks like it breaks fair-share amongst users within a specific group. This functionality is required and cannot be removed. But once we get this aspect cleaned up, it looks very nice.\n\n</p><p>At first blush it seems fair-share within a group can be restored (or at least as fair as spinning-pie allows) by totaling the <span class=\"quote\">ResourceWeight</span> of all candidate startds, and then multiplying this sum by the priority ratio instead of just using the number of startds. Course if <span class=\"quote\">ResourceWeight</span> is not defined, it should default to be 1.0, and so the summation of <span class=\"quote\">ResourceWeights</span> should equal # of startds and all is like it was before.\n\n</p><p>Another less attractive (but maybe safer) option if folks see a problem with the above idea is a knob that tells Condor to either honor fair-share within a group, or honor <span class=\"quote\">ResourceWeights</span>.\n\n</p><p>Any other comments / thoughts?\n\n</p><p>Thanks for the patch Ian!!!!!\n\n</p><p># 4\nSubmitted by Ian on Thu, 2008-10-30 14:23.\n\n</p><p>I've reworked the patch to add two things: adding computation of total resource weight as Todd suggests, and a knob NEGOTIATOR_USE_RESOURCE_WEIGHTS that if set to false (the default) will do things exactly as they are done now (resource weights have no effect, almost exactly the same code path is followed).\n\n</p><p>The way this works is by having a separate accounting system. The existing system is unaltered; the new system works alongside it.\n\n</p><p>The limitation of this work right now is that the priority system still uses the old integer weights to calculate usage and priority; so a user using one slot with <span class=\"quote\">ResourceWeight</span> = 2 will have the same priority as a user using a slot with <span class=\"quote\">ResourceWeight</span> = 0.5. In other words, NEGOTIATOR_USE_RESOURCE_WEIGHTS only affects group quotas, not priorities. I think this is useful as is, and I'll work on extending this feature to priorities as well as time permits (and again, using a parallel implementation).\n\n</p><p></p><hr/>\n<em>2009-Apr-08 13:38:13 by tannenba:</em> <br/>\n\nNote - this patch also adds a matchmaker diagnostic 'rejected for group quota'. Nice. :)\n\n<p></p><hr/>\n<em>2009-Apr-08 15:21:12 by matt:</em> <br/>\n\nQuick thoughts...\n\n<p>Can the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeight\" title=\"Resource Weight\">ResourceWeight</a></span> reference attributes from a potential or current job?\n\n</p><p> A slot may have some amount of memory, but a job may know it'll only ever use half. The job may just happen to not be using all the memory (might be possible already with STARTD_JOB_EXPRS). The node and system policy may have exceptions for certain Owners.\n\n</p><p>Is there a reason this can't just be on all the time (avoid YAK, yet another knob)?\n\n</p><p> There is already a default for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeight\" title=\"Resource Weight\">ResourceWeight</a></span> of 1, should probably be Cpus, which will allow for removal of code in the accountant that checks Cpus to do a primitive form of this feature.\n\n</p><p> It could avoid multiple tests for NEGOTIATOR_USE_RESOURCE_WEIGHTS and duplicate code blocks (see \"if(useResourceWeights)\").\n\n</p><p></p><hr/>\n<em>2009-Apr-08 15:25:57 by tannenba:</em> <br/>\n\nIf resource weights are not being used, aka <code>NEGOTIATOR_USE_RESOURCE_WEIGHTS</code> is set to false, the patch should be more careful to not introduce significant additional CPU demand into the negotiation cycle.\n\n<p>For instance, looks like the v2 patch below always calls <code>sumResourceWeights()</code> even if resource weights are not desired.  And this is a very CPU-demanding function (evaluation on every machine ad).\n\n</p><p>Also, re the <em>lets try to not introduce more knobs rule</em>, couldn't the <code>NEGOTIATOR_USE_RESOURCE_WEIGHTS</code> knob be set automatically and thus not have to be a knob at all?  Maybe a simple algorithm of if no machine ads contains a resource weight attribute then in the code useResourceWeights=false else true.\n\n</p><p></p><hr/>\n<em>2009-Apr-08 15:59:27 by matt:</em> <br/>\n\nAssuming sumResourceWeights() is conditional...\n\n<p>Is sumResourceWeights() even necessary? It ads an extra iteration over all the ads and doubles the number of times EvalFloat(ResourceWeight...) is done.\n\n</p><p>Re: Auto Knob - Sounds cool as long as it does not require another iteration over the ads.\n\n</p><p></p><hr/>\n<em>2009-Apr-13 11:49:12 by alderman:</em> <br/>\n\nSee the above copied comments (<span class=\"ticket\"><a class=\"new\" href=\"tktview?tn=3\" title=\"Customize GitTrac\">#3</a></span>) for why the sumResourceWeights function is necessary; it's to ensure fair share within groups.\n\n<p>In terms of turning this feature on automatically or all the time, I'd think it's an OK direction to go in but maybe it would be worthwhile to get a better sense of the performance impact w.r.t. summing the weights, etc. by having it be a knob for now.  It seems to me that it would be better to have a knob until we can show that there's no performance penalty to 1) sumResourceWeights or 2) look through all machine ads for a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeight\" title=\"Resource Weight\">ResourceWeight</a></span> attribute.\n\n</p><p></p><hr/>\n<em>2009-Apr-17 11:10:57 by matt:</em> <br/>\n\nRe comment 3: The goal was to provide fair-share amongst users within a group. That could be achieved using an upfront sum, but doing so introduces another iteration over the startd ads making it less likely to be on by default, results in evaluation of the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeights\" title=\"Resource Weights\">ResourceWeights</a></span> attributes multiple times, and doesn't allow for the possibility of referencing job attributes within the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeight\" title=\"Resource Weight\">ResourceWeight</a></span>. Rephrased: Is it necessary to sum weights upfront?\n\n<p>Re the knob: The more I think about it the more an auto-knob is scary, especially if this feature is slow. Assuming it is slow and can't be on by default - debugging why negotiation gets slow as a side-effect of a machine specifying a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeight\" title=\"Resource Weight\">ResourceWeight</a></span>, ouch.\n\n</p><p></p><hr/>\n<em>2009-Apr-17 11:25:24 by alderman:</em> <br/>\n\nAgreed about the knob.\n\n<p>Todd points out that fair-share within a group is essential.  In order to divide up the pie fairly, we need to know the size of the pie.  Right?\n\n</p><p>Do you see a way to retain fair share that but not sum the weights?\n\n</p><p></p><hr/>\n<em>2009-Apr-17 11:46:50 by matt:</em> <br/>\n\nIf you don't have any ideas on how it could be worked around let me know and I'll think about it too.\n\n<p>If you think it's a necessity that cannot be worked around maybe we shouldn't bother.\n\n</p><p></p><hr/>\n<em>2009-Apr-17 12:06:51 by alderman:</em> <br/>\n\nI think we need to do some performance testing to determine whether there's a problem at all before we try to find a work-around.\n\n<p></p><hr/>\n<em>2009-Apr-17 12:12:09 by matt:</em> <br/>\n\nBy all means, but there is still the functionality component. I don't think you can sum the weights upfront and let them reference job ads. Is that functionality just not possible?\n\n<p></p><hr/>\n<em>2009-Apr-17 12:23:54 by alderman:</em> <br/>\n\nThat's an interesting question.  The problem is that, if the resources cost differing amounts for different members of the group, the size of the per group pie will vary.  So, we might be able to make the weights per group but not per user?\n\n<p></p><hr/>\n<em>2009-Apr-17 12:52:15 by matt:</em> <br/>\n\nOff the top of my head, summing for groups is the same as summing for jobs. You may not know the exact size of the pie upfront. Though with groups you'd have a smaller set of possible pie sizes.\n\n<p>So, you can think of doing something more probabilistic as you go along to estimate the pie size and existing slices. However, maybe you don't even need fair-share across weights and just across # of slots is enough.\n\n</p><p>What's the goal of this feature - what do you expect it to give you overall, what's a concrete use?\n\n</p><p>Maybe fair-share across # of slots is enough, but the charge back will be different across slots, which will effect shares in the future.\n\n</p><p></p><hr/>\n<em>2009-Apr-20 11:41:20 by tannenba:</em> <br/>\n\nI think the earlier we get this code into the developer series the earlier we will know the answers to some of the above performance issues (or non-issues?).  Merged and pushed resource_weight_v4.diff attachment below into the master branch as commit <span class=\"chng\"><a href=\"chngview?cn=14512\">[14512]</a></span>.  Will resolve this ticket, can create child defect tickets if required if problems are encountered.  Thanks for the patch, Ian.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=398\" title=\"Problem if startd wants resource weights but negotiator does not\">#398</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nProblem if startd wants resource weights but negotiator does not</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=2109\" title=\"SubmitterUserResourcesInUse should use slot weights\">#2109</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\n<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SubmitterUserResourcesInUse\" title=\"Submitter User Resources In Use\">SubmitterUserResourcesInUse</a></span> should use slot weights</td></tr>\n</tbody></table>", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/37/resource_weight_v2.diff\">resource_weight_v2.diff</a>\n40502 bytes added by alderman on 2009-Mar-19 04:07:20 UTC.\n<br/>\nThe patch.<br/>\n</li><li><a href=\"attach_get/46/resource_weight_v4.diff\">resource_weight_v4.diff</a>\n47243 bytes added by alderman on 2009-Apr-13 16:54:21 UTC.\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Oct-02 10:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15887\">[15887]</a></span>: Changed default param_double range from MIN_DBL,MAX_DBL to -MAX_DBL,MAX_DBL. The old default range caused GROUP_QUOTA_blah=0 to abort. GROUP_QUOTA changed from param_integer to param_double in 7.3.2. It appears that when param_double was defined, the range of param_integer of MIN_INT,MAX_INT was carried\u00a0[...]\n (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-07 18:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=24861\">[24861]</a></span>: Documented <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SlotWeight\" title=\"Slot Weight\">SlotWeight</a></span> <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=331\" title=\"Code review patch from Cycle Computing for resource weights.\">#331</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-07 15:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15030\">[15030]</a></span>: Fixed bug in accountant (internal to 7.3.2). <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RemoveMatch\" title=\"Remove Match\">RemoveMatch</a></span> was resetting <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WeightedResourcesUsed\" title=\"Weighted Resources Used\">WeightedResourcesUsed</a></span> to 0. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=331\" title=\"Code review patch from Cycle Computing for resource weights.\">#331</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-06 16:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15023\">[15023]</a></span>: Renamed variables in negotiator. <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ScheddLimit\" title=\"Schedd Limit\">ScheddLimit</a></span> --&gt; <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SubmitterLimit\" title=\"Submitter Limit\">SubmitterLimit</a></span> etc. The message \"group quota exceeded\" was being generated in some cases even for users not in a group. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=331\" title=\"Code review patch from Cycle Computing for resource weights.\">#331</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-06 15:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15022\">[15022]</a></span>: Made NEGOTIATOR_USE_SLOT_WEIGHTS true by default. Got rid of parallel implementation of case where slot weights are not used. Instead, if slot weights are not used, the only difference is that GetSlotWeight() always returns 1 instead of evaluating the actual expression from the startd. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=331\" title=\"Code review patch from Cycle Computing for resource weights.\">#331</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-06 15:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15021\">[15021]</a></span>: Got rid of special-case handling of CPUs in accountant. Made default SlotWeight=CPUs in the startd. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=331\" title=\"Code review patch from Cycle Computing for resource weights.\">#331</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-06 15:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15020\">[15020]</a></span>: Made accountant use <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SlotWeight\" title=\"Slot Weight\">SlotWeight</a></span> for computing priorities. Added weighted accumulated usage to the accounting record but kept old unweighted value in case we ever want it. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=331\" title=\"Code review patch from Cycle Computing for resource weights.\">#331</a></span> Made condor_userprio show weighted resources and weighted usage.  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-06 15:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15019\">[15019]</a></span>: Renamed <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeight\" title=\"Resource Weight\">ResourceWeight</a></span> to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SlotWeight\" title=\"Slot Weight\">SlotWeight</a></span>. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=331\" title=\"Code review patch from Cycle Computing for resource weights.\">#331</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-06 15:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15018\">[15018]</a></span>: Made <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeights\" title=\"Resource Weights\">ResourceWeights</a></span> work in spinning pie. Fractional shares of machines are handled so that they do not go unused. The accountant was only keeping track of weighted usage for groups and not for individual users. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=331\" title=\"Code review patch from Cycle Computing for resource weights.\">#331</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-06 15:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15017\">[15017]</a></span>: <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeight\" title=\"Resource Weight\">ResourceWeight</a></span> was inconsistent in handling CPUs slot attribute. When adding a match, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeight\" title=\"Resource Weight\">ResourceWeight</a></span> was being multiplied by the slot's CPUs attribute, but when removing the match it was not multiplied by CPUs. Now it does not multiply by CPUs when adding a match. If it is desired to have <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeight\" title=\"Resource Weight\">ResourceWeight</a></span>\u00a0[...]\n (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-06 15:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15016\">[15016]</a></span>: Resource weights were not correctly handling sorting of matches. GroupQuotaPermits() was incrementing the \"used\" tally and it was being called while building the list of matches (i.e. before sorting takes place). The result is that preferred matches would be ignored if they happened to be found after\u00a0[...]\n (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-06 15:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15015\">[15015]</a></span>: Moved call to sumResourceWeights() to a better place. It was being called in each spin of the pie, which is after trimming out already matched startds (if not considering preemption) and after trimming out all startds matched in previous pie spins in this cycle. This throws off the calculation in calculateScheddLimit()\u00a0[...]\n (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-06 15:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15014\">[15014]</a></span>: Fixed wrong sprintf format specifier. Since the type of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RemoteGroupResourcesInUse\" title=\"Remote Group Resources In Use\">RemoteGroupResourcesInUse</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=RemoteGroupQuota\" title=\"Remote Group Quota\">RemoteGroupQuota</a></span> changed from an int to a float, %d was no longer appropriate. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=331\" title=\"Code review patch from Cycle Computing for resource weights.\">#331</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-06 15:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15013\">[15013]</a></span>: Removing nonsensical resourceWeight lookup in schedd ad. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=331\" title=\"Code review patch from Cycle Computing for resource weights.\">#331</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Apr-20 09:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14512\">[14512]</a></span>: Add support for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeight\" title=\"Resource Weight\">ResourceWeight</a></span> expression to differing slot costs. This patch adds support for having different slots \"cost\" different amounts against the group quota (right now every slot costs 1). In the config file for a startd, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResourceWeight\" title=\"Resource Weight\">ResourceWeight</a></span> is a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> expression which evaluates to the weight\u00a0[...]\n (By Ian Alderman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Jan-31 13:39", "status": "resolved", "created": "2009-Mar-18 23:06", "fixed_version": "2009-Mar-18 23:06", "broken_version": "v070100", "priority": "2", "subsystem": "Daemons", "assigned_to": "tannenba", "derived_from": "", "creator": "alderman", "rust": "", "customer_group": "other", "visibility": "public", "notify": "ialderman@cyclecomputing.com,matt@cs.wisc.edu", "due_date": ""}