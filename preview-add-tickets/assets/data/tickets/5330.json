{"id": 5330, "title": "Ticket #5330: Reduce memory footprint of DAGMan Job object", "description": "<blockquote>\nWe should reduce the amount of memory consumed by DAGMan per node.  There has been discussion on the LIGO mailing list of some ways to do this, including not storing the DAG in memory.  That's a pretty big change, but I think we can make some progress by making the Job object more efficient.  For example, there are a bunch of bool member variables, that each take 32 bits.  We should be able to combine all of the bools into a single bit-field, which would at least help somewhat.</blockquote>", "remarks": "<blockquote>\n<em>2015-Oct-21 16:47:03 by zmiller:</em> <br/>\n\nBefore we go packing bits, I'd like to see a memory profile.\n\n<p>I don't disagree that packing bits will save memory, but my hunch is that this is not the best place to begin optimizing, and there are probably other places where we can get better bang for the buck.\n\n</p><p></p><hr/>\n<em>2015-Nov-03 14:13:52 by wenger:</em> <br/>\n\nSomething else to look at is how much space an <strong>empty</strong> std::vector object takes -- we have several vectors in each Job object now.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2015-Nov-03 14:13", "status": "defer", "created": "2015-Oct-21 15:29", "fixed_version": "2015-Oct-21 15:29", "broken_version": "v080500", "priority": "5", "subsystem": "Dag", "assigned_to": "", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "wenger@cs.wisc.edu, zmiller@cs.wisc.edu, downes@uwm.edu ,pcouvare@caltech.edu", "due_date": ""}