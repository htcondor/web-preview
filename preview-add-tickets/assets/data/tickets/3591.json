{"id": 3591, "title": "Ticket #3591: DAGMan doesn't truncate workflow log file", "description": "<blockquote>\nDAGMan doesn't truncate the new \"workflow\" or \"default\" log file on (non-recovery) startup.  This can lead to serious errors.\n\n<p>Here's how to reproduce at least one instance of a problem:\n</p><ol>\n<li>add a sleep to job_dagman_prepost-prehello.pl (so you can hold the DAG while PRE scripts are running).\n</li><li>Run job_dagman_prepost.dag, and let it go to completion.\n</li><li>Run job_dagman_prepost.dag again.\n</li><li>While the PRE scripts are running, do condor_hold/condor_release on the DAGMan job.\nWhen DAGMan is released, it will re-read the log from the first run, and immediately decide that the DAG is finished, even if the PRE scripts are still running!</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2013-Apr-30 17:06:45 by nwp:</em> <br/>\n\nKent, do you have the dagman.out for this?\n\n<p></p><hr/>\n<em>2013-Apr-30 18:54:00 by nwp:</em> <br/>\n\n\"While the PRE scripts are running ...,\" should be written \"While the PRE scripts are running, but before condor_dagman attempts to monitor the dag log, do ...\"\n\n<p>Simple solution is for condor_dagman to monitor the default log before attempting to run any scripts.\n\n</p><p></p><hr/>\n<em>2013-May-01 06:51:22 by nwp:</em> <br/>\n\nAlso, maybe we should not drop the lock file until we actually decide to run a prescript or submit a job.\n\n<p></p><hr/>\n<em>2013-May-01 13:55:02 by wenger:</em> <br/>\n\nAt this point I suspect that this was the result of a bad DAGMan build (it happened with my own build of DAGMan, and I've seen funky stuff happen when an object file doesn't get rebuilt when it should have after something else changes).\n\n<p>I need to see if I can reproduce this, but I'm probably 95% sure that it was a funky build (link) problem.\n\n</p><p></p><hr/>\n<em>2013-May-23 15:05:46 by wenger:</em> <br/>\n\nI've looked at this a bunch more, and I haven't been able to duplicate it.  I've only seen it with one particular (manual) compile, so I'm going to put that down as a bad compile.  (I've seen funky problems when, for example, a .h file gets changed but not everything that uses it gets recompiled.)</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2013-May-23 15:06", "status": "resolved", "created": "2013-Apr-23 14:09", "fixed_version": "2013-Apr-23 14:09", "broken_version": "v070900", "priority": "1", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "#3334", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu", "due_date": ""}