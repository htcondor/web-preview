{"id": 6939, "title": "Ticket #6939: 8.8 Python bindings not compatible with 8.6 Python bindings", "description": "<blockquote>\nIn HTCondor 8.7.10, we replaced the old log reader API in the python bindings with a new API, due to several several major bugs in the old implementation. CMS's CRAB software uses the old API in a way that can't be replicated with the new API. Their use of the old API isn't affected by its bugs. As a short term solution (8.8.x), we should re-introduce the old API, marked as deprecated. For a long term solution (8.9.x), we may need to expand the new API to handle CMS's use case.\n\n<p>CMS's report on the problem is available here: <a class=\"external\" href=\"https://github.com/dmwm/CRABServer/issues/5829\">https://github.com/dmwm/CRABServer/issues/5829</a>\n\n</p><p><span class=\"subsection\"></span></p><h3>API Replacement</h3>\n\n<p>The event reader API in 8.6 and 8.7 has several major flaws, which would take major work to fix. These were revealed when trying to use the API in the HTCondor test suite (<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6736\" title=\"Regression Tests for Backfill-while-Draining\">#6736</a></span>). The API  was considered fundamentally broken to the point that no one could be using it. So a new API was defined and the old one removed in 8.7.10. One of the principle differences is that the old API takes a file handle from the user and the new API takes a filename for the file to read events from.\n\n</p><p>The major flaws in the old API are as follows:\n\n</p><p></p><ul>\n<li>Taking a file handle created in Python code and operating on it in C/C++ code doesn't work in Python 3 on Windows.\n</li><li>The code to block waiting for new events to be appended to the file doesn't work.\n</li></ul>\n\n<p><span class=\"subsection\"></span></p><h3>CMS CRAB's Event Reading</h3>\n\n<p>The CRAB service processes large workflows for CMS. It uses DAGMan to manage the execution of the workflows that it creates. To monitor the status of a workflow, it periodically runs a script that opens the user job event log, reads all new events, and updates the workflow state in a file on disk. The script also records on disk its position in the event log file after reading all events. On the next execution, it reads in the file position and seeks to that point in the file before reading events, thus skipping events already processed.\n\n</p><p>This setup can't be done with the new event reader API, which takes a filename for the event file and always reads from the beginning of the file. The CRAB software could be rewritten so that all of the log reading is done in a long-lived process that keeps a single <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEventLog\" title=\"Job Event Log\">JobEventLog</a></span> object and checks it periodically for new events. If the long-lived process had to restart, then it would be forced to re-read the entire event log and recompute the workflow state from scratch.\n\n</p><p>CRAB only uses the <code>read_events()</code> function in the event reading API.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Mar-06 14:48:07 by tlmiller:</em> <br/>\n\nAnother good reason not to accept file handles is that the inotify interface takes filenames, not fds (because, of course, not all fds are files).  I guess we could work around that and fall back on polling if the file handle didn't correspond to an actual file.\n\n<p>Aside from that, I'm OK with having an API where the constructor has an optional seek-this-far-before-parsing value and the object has a tell() function, whose return value is suitable for use there.  The user would be responsible for ensuring the log in question hadn't rotated since it was first opened, but that's easy for the use cases we've heard about (and this API doesn't have to be duplicated for the eventual rewrite of the job queue log).\n\n</p><p></p><hr/>\n<em>2019-Mar-06 16:20:49 by jfrey:</em> <br/>\n\nI think the optional file position constructor argument and tell() function is the best solution for what CMS needs.\n\n<p></p><hr/>\n<em>2019-Mar-26 13:43:51 by tlmiller:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>Looks good.  (Including the not-for-Python-3 commit.)\n\n</p><p></p><hr/>\n<em>2019-Mar-26 13:46:05 by tlmiller:</em> <br/>\n\n<strong>Doc Review</strong>\n\n<p>We should probably mention in the release notes that the bindings were only brought back for Python 2.</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6944\" title=\"Add JobEventLog API for intermittent readers\">#6944</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nAdd <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEventLog\" title=\"Job Event Log\">JobEventLog</a></span> API for intermittent readers</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=7039\" title=\"Restore old python log-reader bindings for all python versions\">#7039</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nRestore old python log-reader bindings for all python versions</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-26 15:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56446\">[56446]</a></span>: Update docs about old event reader bindings not available in Python 3. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6939\" title=\"8.8 Python bindings not compatible with 8.6 Python bindings\">#6939</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-26 13:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56445\">[56445]</a></span>: Remove old event reader bindings for Python 3. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6939\" title=\"8.8 Python bindings not compatible with 8.6 Python bindings\">#6939</a></span> These will crash the Python 3 interpreter on Windows, with no easy fix. The only user we know of who can't use the new event reader bindings is using Python 2 and they will be able to switch after some minor enhancements.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-22 13:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56424\">[56424]</a></span>: Version history for restoring old event reader python bindings. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6939\" title=\"8.8 Python bindings not compatible with 8.6 Python bindings\">#6939</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-22 11:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56420\">[56420]</a></span>: Add deprecation warnings for old event reader python bindings. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6939\" title=\"8.8 Python bindings not compatible with 8.6 Python bindings\">#6939</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-22 11:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56419\">[56419]</a></span>: Fix build error due to ULogEvent API change. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6939\" title=\"8.8 Python bindings not compatible with 8.6 Python bindings\">#6939</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-22 10:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56418\">[56418]</a></span>: Revert \"(<span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6736\" title=\"Regression Tests for Backfill-while-Draining\">#6736</a></span>) Remove the old event_reader from the Python bindings.\" This reverts commit fcea8efe183bb20d4f6a7d2b2324d5b9b03c0ff2. Restore the old <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=EventIterator\" title=\"Event Iterator\">EventIterator</a></span> python bindings. <span class=\"ticket\"><a class=\"resolved\" href=\"tktview?tn=6939\" title=\"8.8 Python bindings not compatible with 8.6 Python bindings\">#6939</a></span> The old bindings have features needed by some of our users that are missing from the new bindings.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Mar-29 11:06", "status": "resolved", "created": "2019-Mar-04 14:09", "fixed_version": "2019-Mar-04 14:09", "broken_version": "v080710", "priority": "2", "subsystem": "PythonBinding", "assigned_to": "jfrey", "derived_from": "", "creator": "tim", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "tlmiller@cs.wisc.edu,karpel@wisc.edu", "due_date": ""}