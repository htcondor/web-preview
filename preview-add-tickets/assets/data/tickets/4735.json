{"id": 4735, "title": "Ticket #4735: Speed up V3 query protocol", "description": "<blockquote>\nWhen watching condor_q V3 queries go through a busy CMS schedd (10k running jobs, 20k in queue), I observed most of the wait time was due to <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4594\" onclick=\"get_ticket_and_populate_wrapper('4594'); return false;\" title=\"Fix time-slicing for ClassAd iterator\">#4594</a></span>.  [Basically, DC's driver isn't called enough to iterate through the entire queue before timeout.]\n\n<p>I see two other things we can do:\n</p><ul>\n<li>During \"busy spikes\", anecdotally, we returned to DC about once a second.  While <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4594\" onclick=\"get_ticket_and_populate_wrapper('4594'); return false;\" title=\"Fix time-slicing for ClassAd iterator\">#4594</a></span> appears to speed up the V3 protocol for very selective queries, performance still suffers on large query results (as we're using the TCP buffer of usually 128KB, we return at most 128KB / second in this case).\n<ul>\n<li>Proposal: We should use a fork worker to respond to the query from a child process.  We only respond in-process if we are out of workers.  This should be a nice balance of performance and memory usage - giving the admins something they can tune.\n</li></ul>\n</li><li>(Outright bug) After any pipe or socket is serviced, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> will re-invoke select on further sockets to see if they are still ready to read (comment says this is done in case if a prior handler drained this socket and the current handler is blocking).  Obviously, checking a <strong>write</strong> socket to see if there's a read ready will return false.  Hence, on a busy schedd, it may be very difficult to <strong>ever</strong> get DC to respond past the first set of ads.\n<ul>\n<li>Proposal: Only perform this re-check if the socket is registered read-only.</li></ul>\n</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2014-Nov-20 15:07:52 by bbockelm:</em> <br/>\n\nNOTE TO SELF: Commit messages reference ticket 4375, not 4735.  Correct before merge to master!\n\n<p></p><hr/>\n<em>2014-Nov-20 15:24:59 by bbockelm:</em> <br/>\n\nAh - I just saw Tim's condor-devel message about 8.3.2 being unfrozen.  In that case, I'd like to request this to be merged into the 8.3.2 branch.  I currently see no need to merge into stable.\n\n<p></p><hr/>\n<em>2014-Nov-21 10:48:36 by gthain:</em> <br/>\n\n<strong>CODE REVIEW</strong>   Approved to merge.\n\n<p></p><hr/>\n<em>2014-Nov-21 21:16:45 by bbockelm:</em> <br/>\n\nMerged.  Updating ticket status.\n\n<p></p><hr/>\n<em>2014-Dec-03 07:42:59 by bbockelm:</em> <br/>\n\n<strong>Note</strong>: Per outside conversation with Todd and TimT, this was cherry-picked to the 8.3.2 branch by TimT.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-22 18:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=42020\">[42020]</a></span>: Edit existing 8.3.2 version history items for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4603\" onclick=\"get_ticket_and_populate_wrapper('4603'); return false;\" title=\"DAEMON_SOCKET_DIR=auto breaks partial use of shared port\">#4603</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4657\" onclick=\"get_ticket_and_populate_wrapper('4657'); return false;\" title=\"Support EC2 block-device mapping.\">#4657</a></span>, and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4660\" onclick=\"get_ticket_and_populate_wrapper('4660'); return false;\" title=\"Add sub-second accurate timestamps to dprintf logs\">#4660</a></span>. Add new version history items for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=374\" onclick=\"get_ticket_and_populate_wrapper('374'); return false;\" title=\"dlopen Kerberos\">#374</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4735\" onclick=\"get_ticket_and_populate_wrapper('4735'); return false;\" title=\"Speed up V3 query protocol\">#4735</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4594\" onclick=\"get_ticket_and_populate_wrapper('4594'); return false;\" title=\"Fix time-slicing for ClassAd iterator\">#4594</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4491\" onclick=\"get_ticket_and_populate_wrapper('4491'); return false;\" title=\"Scalable claim keepalive protocol\">#4491</a></span>, and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4585\" onclick=\"get_ticket_and_populate_wrapper('4585'); return false;\" title=\"Detect SO version of libraries we dlopen() at compile time\">#4585</a></span>.  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-02 13:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41813\">[41813]</a></span>: Allow schedd to fork when servicing the V3 query protocol. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4735\" onclick=\"get_ticket_and_populate_wrapper('4735'); return false;\" title=\"Speed up V3 query protocol\">#4735</a></span> The V3 query protocol could be slow if the schedd infrequently serviced its sockets. With this commit, the schedd will fork off response handlers until it hits the SCHEDD_QUERY_WORKERS limit. Subsequent queries will be handled by the parent\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-02 13:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41812\">[41812]</a></span>: Do not check if a write socket is ready for read. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4735\" onclick=\"get_ticket_and_populate_wrapper('4735'); return false;\" title=\"Speed up V3 query protocol\">#4735</a></span> Previously, after any socket has been serviced, DC would check all subsequent sockets if they are still ready for reading before a handler is called (the theory is that a prior handler may have drained the socket and the current handler is blocking).\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-21 19:56</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41746\">[41746]</a></span>: Allow schedd to fork when servicing the V3 query protocol. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4735\" onclick=\"get_ticket_and_populate_wrapper('4735'); return false;\" title=\"Speed up V3 query protocol\">#4735</a></span> The V3 query protocol could be slow if the schedd infrequently serviced its sockets. With this commit, the schedd will fork off response handlers until it hits the SCHEDD_QUERY_WORKERS limit. Subsequent queries will be handled by the parent\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-21 19:56</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41745\">[41745]</a></span>: Do not check if a write socket is ready for read. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4735\" onclick=\"get_ticket_and_populate_wrapper('4735'); return false;\" title=\"Speed up V3 query protocol\">#4735</a></span> Previously, after any socket has been serviced, DC would check all subsequent sockets if they are still ready for reading before a handler is called (the theory is that a prior handler may have drained the socket and the current handler is blocking).\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-20 12:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41713\">[41713]</a></span>: Allow schedd to fork when servicing the V3 query protocol. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4735\" onclick=\"get_ticket_and_populate_wrapper('4735'); return false;\" title=\"Speed up V3 query protocol\">#4735</a></span> The V3 query protocol could be slow if the schedd infrequently serviced its sockets. With this commit, the schedd will fork off response handlers until it hits the SCHEDD_QUERY_WORKERS limit. Subsequent queries will be handled by the parent\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-20 12:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41712\">[41712]</a></span>: Do not check if a write socket is ready for read. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4735\" onclick=\"get_ticket_and_populate_wrapper('4735'); return false;\" title=\"Speed up V3 query protocol\">#4735</a></span> Previously, after any socket has been serviced, DC would check all subsequent sockets if they are still ready for reading before a handler is called (the theory is that a prior handler may have drained the socket and the current handler is blocking).\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-Dec-23 16:32", "status": "resolved", "created": "2014-Nov-20 12:46", "fixed_version": "2014-Nov-20 12:46", "broken_version": "", "priority": "3", "subsystem": "DaemonsSubmitNode", "assigned_to": "tannenba", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "bbockelm@cse.unl.edu gthain@cs.wisc.edu", "due_date": ""}