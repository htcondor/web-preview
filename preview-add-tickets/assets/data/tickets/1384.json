{"id": 1384, "title": "Ticket #1384: reduce round-trips between schedd and shadows", "description": "<blockquote>\nThere are numerous interactions between the shadow and the schedd that involve the shadow sending something over a TCP socket and waiting for the schedd to send back a response and then the schedd waiting for the shadow to send the next request.\n\n<p>I found that by removing the round-trip in SetAttribute(), the sustained throughput in jobs/s that the schedd could achieve increased by about 30% (from 169 jobs/s to 217 jobs/s).  This is nearly as much improvement as I observed when completely disabling job queue updates in the shadow, so, although a few more round-trips could likely be removed, it appears that SetAttribute() was the main culprit.  Both of these observations were made with the job queue log on /dev/shm.  With the job queue log on a local disk, I only see about a 15% improvement in throughput, and things are almost entirely limited by fsync.</p></blockquote>", "remarks": "<blockquote>\n<em>2010-Apr-30 09:51:02 by tstclair:</em> <br/>\n\nWe see little/no performance benefit on this one.  Do you have more details on your submission and server side config?\n\n<p>Our baseline tests are following:\n20k sleep 60 jobs.\n\n</p><p>3072 slots on 6 16-core machines each running 32 startd's\n\n</p><p>SHADOW_WORKLIFE=CLAIM_WORKLIFE=7200 in order to elim negotiation blibs and see raw schedd perf.\n\n</p><p>logs are on an ssd drive.\n\n</p><p></p><hr/>\n<em>2010-Apr-30 10:27:33 by danb:</em> <br/>\n\nWith 3072 slots and 60s jobs, I don't think you are pushing the schedd hard enough to see the benefit from this patch.  3072 jobs/60s = 51.2 jobs/s\n\n<p>I am testing with 20k 0-second sleep jobs on 400 slots.  Although the jobs are 0-second sleep jobs, it seems to often take a second for the starter to complete the task.  I haven't investigated why.\n\n</p><p>With no user log and with spool in /dev/shm, stack sampling of the schedd showed that it was spending a sizable fraction of its time (approx 1/3) waiting for the shadow to respond in the qmgmt command handler.  After removing the round-trips in <code>SetAttribute</code>, it spends much less time waiting on the shadow, and I see about a 30% increase in throughput.\n\n</p><p>At the rate my jobs are running, I find that with more than 400 slots, my schedd can't keep up with all the shadows and I get increased failures.  This decreases throughput somewhat.  I haven't investigated this aspect in much detail.\n\n</p><p>My config:\n\n</p><p></p><div class=\"verbatim\">\n<pre>MAX_JOBS_RUNNING = 400\nMAX_ACCEPTS_PER_CYCLE = 0\nSHADOW_WORKLIFE = -1\nSPOOL = /dev/shm/spool\nSHADOW_LOCK =\n</pre></div>\n\n\n<p>My submit file:\n\n</p><p></p><div class=\"verbatim\">\n<pre>executable = /bin/sleep\narguments = 0\nnotification = never\nshould_transfer_files = yes\nwhen_to_transfer_output = on_exit\ntransfer_executable = false\nqueue 20000\n</pre></div>\n\n\n<p></p><hr/>\n<em>2010-Apr-30 10:35:52 by tstclair:</em> <br/>\n\nack, we will give this a whirl b4 &amp; after.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Apr-28 17:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=17926\">[17926]</a></span>: The shadow now calls <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SetAttribute\" title=\"Set Attribute\">SetAttribute</a></span> in a mode where no ack is sent back. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1384\" onclick=\"get_ticket_and_populate_wrapper('1384'); return false;\" title=\"reduce round-trips between schedd and shadows\">#1384</a></span> This improves the maximum throughput that the schedd can sustain by about 30% in my tests. Although there is no ack in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SetAttribute\" title=\"Set Attribute\">SetAttribute</a></span>, the shadow will detect failure at least by the time CommitTransaction() is called.  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Apr-30 10:35", "status": "resolved", "created": "2010-Apr-28 17:02", "fixed_version": "2010-Apr-28 17:02", "broken_version": "v070503", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu,dan@hep.wisc.edu,tstclair@redhat.com", "due_date": ""}