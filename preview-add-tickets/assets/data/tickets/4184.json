{"id": 4184, "title": "Ticket #4184: [Miron] Determine if|how KVM can checkpoint & continue", "description": "<blockquote>\nWhat can KVM do, especially via libvirt, to implement a periodic checkpoint?  Does it have built-in support for checkpoint-and-continue, or would we need to checkpoint and restart?  What restrictions, if any, must or should we place on the VM?  Is it necessary, for instance, to use qcow2 disk images?</blockquote>", "remarks": "<blockquote>\n<em>2014-Feb-03 13:54:04 by tlmiller:</em> <br/>\n\nAs of the RHEL7 beta, the libvirt (virsh) / KVM / QEMU troika can not save the state of the VM while it is running.  (They claim this capability will be arriving shortly; I don't know if that means in time for RHEL 7 or Fedora 20 or what.)  We must therefore pause the VM in order to checkpoint.\n\n<p>The troika does support a method of operation in which they pause and resume the VM around a checkpoint automatically.  However, this method of operation does not result in anything useful, because the checkpoint is taken \"internally\", which means as part of the existing disk image(s).  Since we can't copy those while the emulator is running, this ability is mostly useless.  (We'd have to pause the VM again, as well as make sure that the hypervisor flushed its buffers, or, possibly, had the proper caching mode set on all of the VM's disks.)\n\n</p><p>However, we can bypass both of these problems by using the 'virsh save' command, which writes the memory (and other volatile) state of the VM to disk in a file specified by the user.  This process terminates the VM, but the save/restore cycle for my test VM was only 2.5 seconds.  (I wouldn't be surprised if this number increased by an order of magnitude for more RAM-intensive VMS.)  However, because save and restore are distinct commands, we have as long we need to copy the memory image (and the disk image(s), known to be in a consistent state) wherever we like.\n\n</p><p>Once the \"live checkpoint\" functionality is available, we'll be able to do pretty much the same thing without interrupting the VM.  (There's already functionality for merging the external checkpoint disk back to the base image once you're done backing it up.)\n\n</p><p>In the interim, we could try to be clever with setting up delta disks, which should allow us to ship back just the changes from the base image; but there may be (bad) performance implications.\n\n</p><p>The methodology suggested above also has the nice consequence that we remain indifferent to the format of the disk image(s).</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "todo", "last_change": "2014-Feb-03 13:55", "status": "defer", "created": "2014-Jan-29 11:17", "fixed_version": "2014-Jan-29 11:17", "broken_version": "", "priority": "5", "subsystem": "Unknown", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "tlmiller@cs.wisc.edu,pcouvare@caltech.edu", "due_date": "2013-01-31"}