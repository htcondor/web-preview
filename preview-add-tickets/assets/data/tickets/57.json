{"id": 57, "title": "Ticket #57: Improve execute directory names (Contain slot number, eliminate PID)", "description": "<blockquote>\nCurrently execute directories are in the form $EXECUTE/dir_$(PID).\n\n<p>It's not obvious how to correlate a slot to a directory.  If you're debugging a job that you know is in slot 3, you don't immediately know if you want to look in dir_11220, dir_17755, dir_29229, or dir_6141.  The directories could be more helpfully named.\n\n</p><p>We might be able to go entirely to $EXECUTE/dir_$(SLOT) or $EXECUTE/slot_$(SLOT), though there are concerns that we're relying on PID collisions be unlikely (a risky assumption) to handle certain race conditions.  For example, is it possible that the startd will fail to clean up dead execute directory on a starter crash or system reboot before a new starter starts using an identically named directory?  Even if this is a concern, it's likely a problem today because PIDs aren't very unique.  If it is a concern, we should solve it more thoroughly, perhaps using PID and Timestamp, or a GUID.  So we might use $EXECUTE/dir_$(SLOT)_$(PID)_$(TIMESTAMP) or $EXECUTE/dir_$(SLOT)_$(PID)_$(GUID)</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Jan-21 12:27:33 by matt:</em> <br/>\n\nNeed to be careful of the COD suspend functionality, where two jobs can effectively be running on a single slot</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2009-Dec-17 14:21", "status": "new", "created": "2009-Jan-21 11:59", "fixed_version": "2009-Jan-21 11:59", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}