{"id": 1952, "title": "Ticket #1952: the accountant is inconsistent about case sensitivity", "description": "<blockquote>\nIf I submit a job with <span class=\"quote\">AccountingGroup=\"DAN\"</span>, accounting records for both \"DAN\" and \"dan\" get created.  All usage gets attributed to \"dan\", so the priority of \"DAN\" never degrades.  condor_userprio can independently manipulate these two records, so the tool and much of the protocol is still case sensitive.\n\n<p>The problem is that <code>Accountant::AddMatch()</code> writes records using the lower-case version of the username, but functions which look up accounting records, such as <code>Accountant::GetPriority()</code> do not lowercase the username.\n\n</p><p>Even if the lookup routines were modified, there are further issues caused by <code>AddMatch()</code> lowercasing the username:\n\n</p><p></p><ul>\n<li>There may be existing accounting records with the same name but different case.  These would need to be detected at startup and handled appropriately (e.g. merge them together or abort or whatever).\n\n<p></p></li><li>condor_userprio operations that take a username are currently case-sensitive.  These would need to be checked to make sure they are consistent with the new way of doing things.\n\n<p></p></li><li>The release notes would need to mention this important change in behavior.  In CHTC, our daily reports were slightly messed up by it, because suddenly all the people who had previously showed up with uppercase letters in their names showed up in all lowercase, so the observed per-user difference in usage between one day and the next was messed up.  Others could experience similar problems.\n</li></ul>\n\n<p><span class=\"section\"></span></p><h2>How to reproduce the problem</h2>\n\n<p>Submit a job using the following submit file:\n\n</p><p></p><div class=\"verbatim\">\n<pre>executable = /bin/sleep\narguments = 3600\nnotification = never\n+AccountingGroup = \"DAN\"\n\nqueue\n</pre></div>\n\n\n<p>Observe that the accountant has records for both \"DAN\" and \"dan\" and has charged the latter rather than the former.\n\n</p><p></p><div class=\"verbatim\">\n<pre>$ condor_userprio -allusers -all\nLast Priority Update:  3/7  15:22\n                                    Effective   Real     Priority   Res   Total Usage       Usage            Last\nUser Name                           Priority  Priority    Factor    Used (wghted-hrs)    Start Time       Usage Time\n------------------------------      --------- -------- ------------ ----  ----------- ---------------- ----------------\nDAN@wireless70.cs.wisc.edu               0.50     0.50         1.00    0         0.00 12/31/1969 18:00        ???\n&lt;none&gt;                                   0.50     0.50         1.00    1         0.05  3/07/2011 15:20  3/07/2011 15:22\ndan@wireless70.cs.wisc.edu               0.50     0.50         1.00    1         0.05  3/07/2011 15:20  3/07/2011 15:22\n------------------------------      --------- -------- ------------ ----  ----------- ---------------- ----------------\nNumber of users: 2                                                     1         0.05  3/07/2011 15:20        ???\n</pre></div>\n\n\n<p>In the negotiator log, with D_FULLDEBUG turned on, whenever a new round of negotiation starts, you can see that it is getting the priority for \"DAN\" from the accounting record for \"DAN\" rather than \"dan\", so the fair-share priority degradation is not applied.  This effect can be magnified by using condor_userprio to give \"dan\" a large priority factor.\n\n</p><p><span class=\"section\"></span></p><h2>Proposed Solution</h2>\n\n<p>Preserve case in the accountant for display purposes, but do all lookups and comparisons of accounting names case-insensitively.\n\n</p><p>At startup, the accountant must detect any records that differ only in case and it must merge them together.\n\n</p><p>Ideally, condor_userprio should provide a way to rename an accounting record.  This would permit changing the case of an accounting record, which may be desirable for readability.\n\n</p><p>The schedd may require some modification, since it groups jobs by owner/group.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Mar-09 13:17:21 by danb:</em> <br/>\n\nAfter discussion with Todd and working with the code, I changed course slightly from the proposed solution.  For 7.5.6, we will just make group lookups case insensitive, and leave the rest of the accountant alone.  That's a change isolated to just a couple functions in the new hierarchical group code; there is no question of this conflicting with anything people are already doing, because group lookups in the config file already are case-insensitive.\n\n<p>If anyone wants to make the rest of the accountant case-insensitive, that work can be done in 7.7.\n\n</p><p></p><hr/>\n<em>2011-Mar-09 17:21:03 by eje:</em> <br/>\n\nCurrent commit does not work quite right with multi-cased accounting groups.  I attached an alternative patch that fixes this, but does it a slightly different way, so should probably be reviewed.\n\n<p></p><hr/>\n<em>2011-Mar-11 10:28:28 by danb:</em> <br/>\n\nErik,\n\n<p>Your patch looks fine to me.  Was the problem with my patch that the sort operation on the groups was still case sensitive?  I overlooked that.\n\n</p><p></p><hr/>\n<em>2011-Mar-11 10:46:15 by eje:</em> <br/>\n\nYes, in certain mixed-case scenarios, the case-sensitive sort could violate the behavior of ensuring that parent groups got ordered before their children, and incorrectly conclude that a child group was missing its parent, when it was just declared with a different case and mis-sorted.</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/284/gt1592_ci_less.patch\">gt1592_ci_less.patch</a>\n5602 bytes added by eje on 2011-Mar-09 23:18:59 UTC.\n<br/>\nProposed alternate patch that fixes additional bug in acct grp tree construction, and uses case-insensitive ordering functor.  One effect of this is to make group names \"case preserving\" -- first case encountered is the one that the acct will 'remember', and other case-equiv grp names will match against it.\n\n<p>(this patch assumes a git revert of dcb9d109ffd62daac907aa42fcfb519029dfafe1)\n<br/>\n</p></li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Mar-11 10:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21022\">[21022]</a></span>: Fixed problems handling upper-case letters in accounting identities. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1952\" onclick=\"get_ticket_and_populate_wrapper('1952'); return false;\" title=\"the accountant is inconsistent about case sensitivity\">#1952</a></span> One effect of this is to make group names \"case preserving\" -- first case encountered is the one that the acct will 'remember', and other case-equiv grp names will match against it. Committer: Dan Bradley  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Mar-11 10:32</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21021\">[21021]</a></span>: Revert \"Fixed problem caused by lower-casing customer name in Accountant::AddMatch(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1952\" onclick=\"get_ticket_and_populate_wrapper('1952'); return false;\" title=\"the accountant is inconsistent about case sensitivity\">#1952</a></span>\" This reverts commit dcb9d109ffd62daac907aa42fcfb519029dfafe1.  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Mar-09 12:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21003\">[21003]</a></span>: Fixed problem caused by lower-casing customer name in Accountant::AddMatch(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1952\" onclick=\"get_ticket_and_populate_wrapper('1952'); return false;\" title=\"the accountant is inconsistent about case sensitivity\">#1952</a></span>  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Mar-11 10:49", "status": "resolved", "created": "2011-Mar-07 16:01", "fixed_version": "2011-Mar-07 16:01", "broken_version": "v070506", "priority": "2", "subsystem": "", "assigned_to": "eje", "derived_from": "#1393", "creator": "danb", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "dan@hep.wisc.edu matt@cs.wisc.edu", "due_date": ""}