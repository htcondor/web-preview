{"id": 2540, "title": "Ticket #2540: Parallel Universe Job isn't being matched", "description": "<blockquote>\n<span class=\"section\"><h2>The problem</h2></span>\n\n<p>LIGO has a problem concerning parallel universe.\n\n</p><p>The problem presents thusly:\n\n</p><p>WHen a parallel universe job is submitted. It stays idle. It does not\naccumulate any run time, ever. In looking at the Negotiator and Schedd log,\nthe job is never matched. The only event which shows up in the job log\nis the submit event. In addition, other non dedicated scheduler universe jobs seem to match and run.\n\n</p><p>Here are some facts before we get to the actual error:\n\n</p><p><span class=\"subsection\"></span></p><h3>Fact 1</h3>\n\n<p>The submit machine version (which also matches the central manager):\n\n</p><p></p><div class=\"verbatim\">\n<pre>[root@ldas-pcdev1 ~]# condor_version\n$CondorVersion: 7.6.3 Aug 17 2011 BuildID: 361356 $\n$CondorPlatform: x86_64_rhap_5 $\n</pre></div>\n\n\n<p><span class=\"subsection\"></span></p><h3>Fact 2</h3>\n\n<p>The requirements of the job failing to match:\n\n</p><p></p><div class=\"verbatim\">\n<pre>[root@ldas-pcdev1 ~]# condor_q -format \"Requirements = %s\\n\" Requirements\n45649708.0\nRequirements = ( TARGET.Arch == \"X86_64\" ) &amp;&amp; ( TARGET.OpSys == \"LINUX\" ) &amp;&amp; (\nTARGET.Disk &gt;= DiskUsage ) &amp;&amp; ( ( TARGET.Memory * 1024 ) &gt;= ImageSize ) &amp;&amp; ( (\nRequestMemory * 1024 ) &gt;= ImageSize ) &amp;&amp; ( TARGET.FileSystemDomain ==\nMY.FileSystemDomain )\n</pre></div>\n\n\n<p><span class=\"subsection\"></span></p><h3>Fact 3</h3>\n\n<p>The start expressions of all of the machines:\n\n</p><p></p><div class=\"verbatim\">\n<pre>[root@ldas-pcdev1 ~]# condor_status -format \"Start = %s\\n\" start | sort | uniq\n-c\n     48 Start = ( ( TARGET.ImageSize &lt; Memory * 1024 ) &amp;&amp; ( ( TARGET.Owner ==\n\"jabadie\" ) || ( TARGET.Owner == \"boinc\" ) ) )\n     12 Start = ( OWNER == \"boinc\" )\n   2524 Start = ( TARGET.ImageSize &lt; Memory * 1024 )\n</pre></div>\n\n\n<p><span class=\"subsection\"></span></p><h3>Fact 4</h3>\n\n<p>The startds have:\n\n</p><p></p><div class=\"verbatim\">\n<pre>DedicatedScheduler = \"DedicatedScheduler@ldas-pcdev1.ligo.caltech.edu\"\nSTARTD_ATTRS = COLLECTOR_HOST_STRING, DedicatedScheduler\n</pre></div>\n\n\n<p>And it appears that the dedicated scheduler is configured correctly. The\nright attributes end up in the right ads, and so on.\n\n</p><p><span class=\"subsection\"></span></p><h3>Fact 5</h3>\n\n<p>I just noticed this. The submit machine really has a lot of different names.\n\n</p><p></p><div class=\"verbatim\">\n<pre>[psilord@ldas-pcdev1 ~]$ grep ldas-pcdev1 /etc/hosts\n10.14.0.18      ldas-pcdev1.ligo.caltech.edu ldas-pcdev1 ldas-pcdev1i\n[psilord@ldas-pcdev1 ~]$ nslookup ldas-pcdev1\nServer:       131.215.125.1\nAddress:      131.215.125.1#53\n\nName:   ldas-pcdev1.ligo.caltech.edu\nAddress: 131.215.115.249\n[psilord@ldas-pcdev1 ~]$ ifconfig\neth2      Link encap:Ethernet  HWaddr 00:14:4F:EB:09:12\n          inet addr:10.14.0.18  Bcast:10.14.255.255  Mask:255.255.0.0\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:3336884344 errors:0 dropped:98216 overruns:0 frame:0\n          TX packets:2987543450 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:3622679421353 (3.2 TiB)  TX bytes:2195267492023 (1.9 TiB)\n\neth2:1    Link encap:Ethernet  HWaddr 00:14:4F:EB:09:12\n          inet addr:10.9.0.18  Bcast:10.9.255.255  Mask:255.255.0.0\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n\neth3      Link encap:Ethernet  HWaddr 00:14:4F:EB:09:13\n          inet addr:131.215.115.249  Bcast:131.215.115.255  Mask:255.255.254.0\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:261131735 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:113737475 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:351274020933 (327.1 GiB)  TX bytes:104762178670 (97.5 GiB)\n\nlo        Link encap:Local Loopback\n          inet addr:127.0.0.1  Mask:255.0.0.0\n          UP LOOPBACK RUNNING  MTU:16436  Metric:1\n          RX packets:84018233 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:84018233 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0\n          RX bytes:16928138022 (15.7 GiB)  TX bytes:16928138022 (15.7 GiB)\n</pre></div>\n\n\n<p><span class=\"subsection\"></span></p><h3>The Problem</h3>\n\n<p>We see this in the negotiator log for the offending user in question:\n\n</p><p></p><div class=\"verbatim\">\n<pre>10/04/11 15:48:15   Negotiating with DedicatedScheduler@ldas-pcdev1.ligo.caltech.edu at &lt;10.14.0.18:44933&gt;\n10/04/11 15:48:15 0 seconds so far\n10/04/11 15:48:15 Getting state information from the accountant\n10/04/11 15:48:17 condor_read() failed: recv() returned -1, errno = 104 Connection reset by peer, reading 5 bytes from schedd satya@ligo.\n10/04/11 15:48:17 IO: Failed to read packet header\n10/04/11 15:48:17     Failed to get reply from schedd\n10/04/11 15:48:17   Error: Ignoring submitter for this cycle\n</pre></div>\n\n\n<p>And this in the schedlog:\n\n</p><p></p><div class=\"verbatim\">\n<pre>10/04/11 15:48:17 (pid:9129) Negotiating for owner: satya@ligo\n10/04/11 15:48:17 (pid:9129) Return from HandleReq &lt;negotiate&gt; (handler: 0.001s,sec: 0.000s)\n10/04/11 15:48:17 (pid:9129) Return from Handler &lt;DaemonCore::HandleReqSocketHandler&gt; 0.0009s\n10/04/11 15:48:17 (pid:9129) Calling Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; (4)\n10/04/11 15:48:17 (pid:9129) Return from Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; 0.0004s\n10/04/11 15:48:17 (pid:9129) Calling Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; (4)\n10/04/11 15:48:17 (pid:9129) Return from Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; 0.0003s\n10/04/11 15:48:18 (pid:9129) Calling Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; (4)\n10/04/11 15:48:18 (pid:9129) Return from Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; 0.0004s\n10/04/11 15:48:18 (pid:9129) Calling Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; (4)\n10/04/11 15:48:18 (pid:9129) Return from Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; 0.0003s\n10/04/11 15:48:18 (pid:9129) Calling Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; (4)\n10/04/11 15:48:18 (pid:9129) Return from Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; 0.0001s\n10/04/11 15:48:18 (pid:9129) Calling Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; (4)\n10/04/11 15:48:18 (pid:9129) Finished negotiating for satya in local pool: 0 matched, 3 rejected\n10/04/11 15:48:18 (pid:9129) Return from Handler &lt;DCMessenger::receiveMsgCallback NEGOTIATE&gt; 0.0001s\n</pre></div>\n\n\n<p>We also see in the schedlog these types of errors:\n\n</p><p></p><div class=\"verbatim\">\n<pre>\n10/04/11 15:40:08 (pid:9129) Failed to send RESCHEDULE to negotiator virgo-pilot-server.kfki.hu:\n\n...\n\ngethostbyname for local negotiator (condor.ldas.cit) failed!  Aborting negotiation.\n\n</pre></div>\n\n\n<p>Hrm, I just noticed that <span class=\"quote\">DedicatedScheduler@ldas-pcdev1.ligo.caltech.edu at &lt;10.14.0.18:44933&gt;</span> doesn't match the nslookup of ldas-pcdev1.ligo.caltech.edu from that self-same machine. Maybe the submit machine has different names based upon who looks it up? Could it be Condor is getting confused on how to talk to that machine?</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Oct-11 16:00:14 by gthain:</em> <br/>\n\nSo, the problem is that in schedd::negotiator, we reverse lookup the name of the negotiator:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">        Daemon negotiator (DT_NEGOTIATOR);\n        char *negotiator_hostname = negotiator.fullHostname();\n        if (!negotiator_hostname) {\n            dprintf(D_ALWAYS, \"Negotiator hostname lookup failed!\\n\");\n            free(sig_attrs_from_cm);\n            return (!(KEEP_STREAM));\n        }\n        hent = condor_gethostbyname(negotiator_hostname);\n        if (!hent) {\n            dprintf(D_ALWAYS, \"gethostbyname for local negotiator (%s) failed!\"\n                    \"  Aborting negotiation.\\n\", negotiator_hostname);\n            free(sig_attrs_from_cm);\n            return (!(KEEP_STREAM));\n        }\n</pre></div>\n\n\n<p>This code is before we check to see if we need to divert to the ded sched.  So, we need to figure out why the negotiator thinks its name is \"condor.ldas.cit\"\n\n</p><p></p><hr/>\n<em>2011-Oct-12 14:10:22 by psilord:</em> <br/>\n\nIt turned out the /etc/hosts files and DNS systems were not configured correctly\nat Caltech. They fixed the configuration and the jobs started running.\n\n<p>However, I'm going to look through the code a little bit to see if any changes could be made which would either alleviate or direct the condor admins faster to the problem.\n\n</p><p></p><hr/>\n<em>2011-Oct-12 15:37:07 by psilord:</em> <br/>\n\nThe code path in which this lies is derived from here: git log e765cb0b.\n\n<p>It turns out that by inspection of a running 7.6.3 condor pool, that the negotiator and schedd believe they are speaking a 7.5.4 or earlier protocol. This is very wrong. I'm checking with the original author of that compatibility code path to find out why it is horked.\n\n</p><p></p><hr/>\n<em>2011-Oct-13 11:55:50 by psilord:</em> <br/>\n\nThis one is complicated, but I figured it out.\n\n<p>It turns out that we added a new attribute to the submitter ads called\n\"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SubmitterTag\" title=\"Submitter Tag\">SubmitterTag</a></span>\". When this attribute is present, the negotiator (when\nnegotiating for that submitter) would use a new protocol to the schedd\nwhich was created at the 7.5.4 release of condor. If this was not present\nit would use the pre 7.5.4 negotiation protocol.\n\n</p><p>So, what happens is this:\n\n</p><p>The negotiator pulls the submitter ads from the collector, grinds on them,\nand then contacts the schedd. While there is only one connection from the\nnegotiator to the schedd, each submitter ad gets its own \"conversation\" on the\nsocket. Each conversation is prefixed by a number which identifies the\nprotocol version of the conversation.\n\n</p><p>For non-dedicated scheduler submitter ads, the \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SubmitterTag\" title=\"Submitter Tag\">SubmitterTag</a></span>\" attribute was\npresent, and hence used the new 7.5.4+ protocol.\n\n</p><p>For dedicated scheduler submitter ads, the \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SubmitterTag\" title=\"Submitter Tag\">SubmitterTag</a></span>\" was not present\ndue to coding error, and so it used the pre 7.5.4 protocol.\n\n</p><p>What exacerbated the bug was that the schedlog only printed out the FIRST\nconversation protocol identifier that it was presented. So, we never saw it\nchange in the schedd log during each negotiation conversation and so assumed that the shcedd was using the newer 7.5.4+ protocol for ALL conversations. This assumption was false.\n\n</p><p>So, Dan Bradley is fixing the dedicated scheduler to add the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SubmitterTag\" title=\"Submitter Tag\">SubmitterTag</a></span>\nattribute, and I'm fixing the schedlog output to be far more clear about\nwhat it is doing for each submitterad.\n\n</p><p></p><hr/>\n<em>2011-Oct-13 16:03:18 by psilord:</em> <br/>\n\nDan and I wrote the code, it is checked in and documented. Resolving.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-13 15:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27814\">[27814]</a></span>: ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2540\" title=\"Parallel Universe Job isn't being matched\">#2540</a></span> ===VersionHistory:None=== Log which negotiation protocol the Scheduler::negotiate() call was passed. Since we negotiate per submitter ads, each submitter ad can use a different negotiation protocol, suppose NEGOTIATE, or NEGOTIATE_WITH_SIGATTRS. It turns out that if we don't know which\u00a0[...]\n (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-13 12:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27802\">[27802]</a></span>: Documented fix for dedicated scheduler negotiation. ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2540\" title=\"Parallel Universe Job isn't being matched\">#2540</a></span> ===VersionHistory:Complete===  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-13 12:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27801\">[27801]</a></span>: Make dedicated scheduler use the same DNS-free method for determining negotiator identity as the main schedd. <span class=\"ticket\"><a class=\"defer\" href=\"tktview?tn=2540\" title=\"Parallel Universe Job isn't being matched\">#2540</a></span>  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Oct-13 16:03", "status": "defer", "created": "2011-Oct-11 14:23", "fixed_version": "2011-Oct-11 14:23", "broken_version": "v070603", "priority": "5", "subsystem": "Parallel", "assigned_to": "psilord", "derived_from": "", "creator": "psilord", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "psilord@cs.wisc.edu, tstclair@redhat.com, dan@hep.wisc.edu,pcouvare@caltech.edu", "due_date": "20111013"}