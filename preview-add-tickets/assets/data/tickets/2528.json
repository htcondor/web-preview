{"id": 2528, "title": "Ticket #2528: startd hard-killing of starter is harmfull when using glexec", "description": "<blockquote>\nDuring a fast shutdown, the startd expects the starter to go away within KILLING_TIMEOUT seconds (default 30).  If it does not, the startd hard-kills the starter and all of its children.\n\n<p>Since the startd is naive about glexec, this will likely leave behind job processes and directories.  As a workaround, one could set KILLING_TIMEOUT to be very long.  However, it would be nice if Condor handled this case better by default.\n\n</p><p>Here is a specific case of this problem reported by Igor:\n\n</p><p></p><div class=\"verbatim\">\n<pre>10/01/11 08:07:10 (pid:28190) attempt to connect to &lt;169.228.130.26:9615&gt; failed: Connection timed out (connect errno = 110).  Will keep trying for 397 total seconds (208 to go).\n10/01/11 08:09:33 (pid:28190) Unable to calculate keyboard/mouse idle time due to them both being USB or not present, assuming infinite idle time for these devices.\n10/01/11 08:10:38 (pid:28190) State change: claim lease expired (condor_schedd gone?)\n10/01/11 08:10:38 (pid:28190) Changing state and activity: Claimed/Busy -&gt; Preempting/Killing\n10/01/11 08:10:39 (pid:28190) attempt to connect to &lt;169.228.130.26:9615&gt; failed: Connection timed out (connect errno = 110).\n10/01/11 08:10:39 (pid:28190) Failed to connect to schedd (unknown)\n10/01/11 08:10:39 (pid:28190) Timer -1 not found\n10/01/11 08:11:08 (pid:28190) starter (pid 3630) is not responding to the request to hardkill its job.  The startd will now directly hard kill the starter and all its decendents.\n10/01/11 08:11:08 (pid:28190) Starter pid 3630 died on signal 9 (signal 9 (Killed))\n10/01/11 08:11:08 (pid:28190) chmod(/scratch/local/17990428.torx.ufhpc/glide_J25709/execute/dir_3630) failed: Operation not permitted (errno 1)\n10/01/11 08:11:08 (pid:28190) Failed to chmod(0700) /scratch/local/17990428.torx.ufhpc/glide_J25709/execute/dir_3630 and all subdirs\n10/01/11 08:11:08 (pid:28190) Can't remove \"/scratch/local/17990428.torx.ufhpc/glide_J25709/execute/dir_3630\" as Condor daemon user 'cms0636' (100636.5000), giving up!\n10/01/11 08:11:08 (pid:28190) State change: starter exited\n10/01/11 08:11:08 (pid:28190) State change: No preempting claim, returning to owner\n\n\nThe starterLog has just:\n10/01/11 08:02:51 (pid:3630) Can't open directory \"/scratch/local/17990428.torx.ufhpc/glide_J25709/execute/dir_3630/cms_znxRnswR4223\" as PRIV_CONDOR, errno: 13 (Permission denied)\n10/01/11 08:02:51 (pid:3630) Can't open directory \"/scratch/local/17990428.torx.ufhpc/glide_J25709/execute/dir_3630/cms_znxRnswR4223\" as PRIV_CONDOR, errno: 13 (Permission denied)\n10/01/11 08:10:38 (pid:3630) Got SIGQUIT.  Performing fast shutdown.\n10/01/11 08:10:38 (pid:3630) ShutdownFast all jobs.\n10/01/11 08:10:39 (pid:3630) Process exited, pid=4080, signal=9\n10/01/11 08:16:16 (pid:29283) Setting maximum accepts per cycle 4.\n10/01/11 08:16:16 (pid:29283) ******************************************************\n10/01/11 08:16:16 (pid:29283) ** condor_starter (CONDOR_STARTER) STARTING UP\n\nWe are using\n$CondorVersion: 7.6.2 Jul 15 2011 BuildID: 351672 $\n$CondorPlatform: x86_rhap_5 $\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2011-Oct-05 11:56:41 by danb:</em> <br/>\n\nThe procd has some knowledge of glexec and how to kill processes started by glexec, so my statement that the startd's hard-killing will leave behind job processes may not be correct.  The logic is complicated enough that I can't answer that question without more investigation.\n\n<p></p><hr/>\n<em>2011-Oct-05 15:59:23 by danb:</em> <br/>\n\nI tested whether job processes get left behind when the startd hard-kills the starter.  The answer is no in my tests.  Both the starter and the startd rely on the procd to kill the job.  The procd uses glexec to kill the processes.\n\n<p>The job execute directory does get left behind.  Neither the startd nor preen can clean it up, because it belongs to a different user.  It may be common that condor is running as a glidein under some other batch system that will clean up the execute directories once the glidein exits.  When this is true, the leaked directories are probably not a major concern.  When it is not true, this could be a big problem.\n\n</p><p></p><hr/>\n<em>2011-Oct-05 17:03:54 by danb:</em> <br/>\n\nBurt expressed his concerns that leaked directories could lead to workernode disks filling up during the lifetime of the glidein.  Therefore, this issue is a concern to glideinWMS, even in the case where the underlying batch system cleans up after the glidein exits.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2012-Jan-30 14:56", "status": "new", "created": "2011-Oct-05 11:49", "fixed_version": "2011-Oct-05 11:49", "broken_version": "v070400", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "#2753", "creator": "danb", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "isfiligoi@ucsd.edu,dan@hep.wisc.edu,burt@fnal.gov,zmiller@cs.wisc.edu", "due_date": ""}