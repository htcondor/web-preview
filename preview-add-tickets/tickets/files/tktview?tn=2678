<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<link rel="stylesheet" type="text/css" href="https://htcondor-wiki.cs.wisc.edu/index.cgi/cvstrac.10.css">
<link rel="stylesheet" type="text/css" href="https://htcondor-wiki.cs.wisc.edu/index.cgi/cvstrac.tj.css">
<link rel="stylesheet" type="text/css" href="https://htcondor-wiki.cs.wisc.edu/index.cgi/diff2html.css">
<link rel="alternate stylesheet"
      title="prosimii-screen"
      type="text/css" href="https://htcondor-wiki.cs.wisc.edu/index.cgi/prosimii-screen.css">
<link rel="alternate stylesheet"
      title="Default Stylesheet"
      type="text/css" href="https://htcondor-wiki.cs.wisc.edu/index.cgi/cvstrac_default.css">
<link rel="alternate" type="application/rss+xml"
   title="HTCondorWiki Timeline Feed" href="https://htcondor-wiki.cs.wisc.edu/index.cgi/timeline.rss">
<link rel="index" title="Index" href="https://htcondor-wiki.cs.wisc.edu/index.cgi/index">
<link rel="search" title="Search" href="https://htcondor-wiki.cs.wisc.edu/index.cgi/search">
<link rel="help" title="Help"
   href="https://htcondor-wiki.cs.wisc.edu/index.cgi/wiki?p=CvstracDocumentation">
<title>HTCondorWiki: Ticket #2678</title>
<script type="text/javascript">
  function setFocus() {
    var firstForm, e;
    if ( document.forms && (firstForm = document.forms[0]) ) {
      if      ( (e = firstForm.elements["u"]) && e.type == "text" ) e.focus();
      else if ( (e = firstForm.elements["t"]) && e.type == "text" ) e.focus();
      else if ( (e = firstForm.elements["s"]) && e.type == "text" ) e.focus();
    }
  }
</script>
</head>
<body onload="setFocus()">
<div id="header">
<div class="midHeader">
<div class="iconHeader">
<a href="https://www.cs.wisc.edu/condor"><img src="https://research.cs.wisc.edu/htcondor/images/HTCondor_wiki_logo_small.png" alt="HTCondor High Throughput Computing" border=0></a>
</div>
</div>
</div><div id="header">
<h1 id="title">
Ticket #2678
</h1>
<p id="identity">
<a href="honeypot"><notatag arg="meaningless"></a>
<a href="login?nxp=/index.cgi/tktview%3Ftn%3D2678" title="Log in">Not logged in</a>
</p>
<ul id="navigation">
<li><a href="dir">Browse</a></li>
<li><a href="wiki?p=CvstracTicket">Help</a></li>
<li><a href="index">Home</a></li>
<li><a href="login">Login</a></li>
<li><a href="reportlist">Reports</a></li>
<li><a href="search?t=1">Search</a></li>
<li><a href="timeline">Timeline</a></li>
<li><a href="wiki">Wiki</a></li>
</ul>
<ul id="action">
<li><a href="tkthistory?tn=2678" rel="nofollow">History</a></li>
</ul>
</div>
<div id="content">
<h2>Ticket #2678: RFE: expose accounting group negotiation-ordering to configuration</h2>
<blockquote>
Motivation is twofold:

<p>1) Customers have been requesting a return to legacy behavior of &quot;none&quot; group such that it negotiates last (instead of its current behavior of being ordered in with other groups by starvation)

<p>2) There have been some other requests that indicate a desire to explicitly control the negotiation order of accounting groups in customer-dependent ways

<p>The proposed solution to both of these cases is to expose an accounting group ordering expression to configuration that would return some floating point number that would be used for acct groups.

<p>Supporting this feature would require the creation of a classad for each accounting group, populated with some attributes that could be used for expressions.  Some obvious candidates would be:

<p><ul>
<li>Name # acct group name
<li><span class="wiki"><a title="Starvation Ratio"
class="missing"
  href="wiki?p=StarvationRatio">StarvationRatio</a></span> # current starvation ratio
<li>Quota # assigned slot quota
<li>Allocated # actual slots allocated (not to be confused with quota)
<li>Usage # current group usage
<li>Priority # group's priority
<li><span class="wiki"><a title="Priority Factor"
class="missing"
  href="wiki?p=PriorityFactor">PriorityFactor</a></span> # group's priority factor
</ul>

<p>One possible config scheme would be to work analogously to the other group
quota settings, so there would be a default sort expression:

<p># none goes last, otherwise default sort by quota-denominated starvation
<div class="verbatim">
<PRE>GROUP_QUOTA_SORT_EXPR = ifThenElse(Name=?="&lt;none>", 1e100, Usage/Quota)</PRE></div>


<p>And then optional group-specific ones:
<div class="verbatim">
<PRE>
# Group a always goes first
GROUP_QUOTA_SORT_EXPR_a = -10
# group b always goes 2nd
GROUP_QUOTA_SORT_EXPR_b = -9
</PRE></div>


<p>Or you could explicitly order all of them:
<div class="verbatim">
<PRE>
# Group a always goes first
GROUP_QUOTA_SORT_EXPR_a = 1
# group b always goes 2nd
GROUP_QUOTA_SORT_EXPR_b = 2
# ...
GROUP_QUOTA_SORT_EXPR_z = 26

# anybody else goes at the end, sorted by acct group prio
GROUP_QUOTA_SORT_EXPR = 27 + Priority
</PRE></div>
</blockquote>

<table align="right" style="margin: 0 10px;" cellpadding=2 border=0>
<tr><td bgcolor="#a0b5f4" class="border1">
<table width="100%" border=0 cellpadding=4 cellspacing=0>
<tr bgcolor="#d0d9f4" class="bkgnd1">
<td valign="top" align="left">
[<a href="tktappend?tn=2678">Append remarks</a>]
</td></tr></table></td></tr></table>
<h3>Remarks:</h3>
<blockquote>
<em>2011-Dec-01 13:42:36 by eje:</em> <br>

Or, maybe:
<div class="verbatim">
<PRE>
GROUP_SORT_EXPR
GROUP_SORT_EXPR_&lt;groupname>
</PRE></div>


<p><hr>
<em>2011-Dec-07 16:55:57 by eje:</em> <br>

Attached patch that exposes a new config param: GROUP_SORT_EXPR, which can be set to a classad expression that involves any of:

<p><ul>
<li>&quot;Name&quot; - accounting group name
<li>&quot;Quota&quot; - the slot quota assigned during this neg cycle
<li>&quot;Requested&quot; - the number of slots being requested by the submitters in the group
<li>&quot;Allocated&quot; - the number of slots allocated by the HGQ algorithms
<li>&quot;Usage&quot; - the slots currently in use by this accounting group
<li>&quot;Priority&quot; - the accounting group's priority
<li>&quot;<span class="wiki"><a title="Priority Factor"
class="missing"
  href="wiki?p=PriorityFactor">PriorityFactor</a></span>&quot; - the group's priority factor
</ul>

<p>The expression must evaluate to a numeric value, or it will be defaulted to FLT_MAX with a warning message in the negotiator log.

<p>GROUP_SORT_EXPR defaults to backward-compatible starvation-ratio sorting expression: 'ifThenElse(Allocated&gt;0.0,Usage/Allocated,3.40282e+38)'

<p>(note, it was decided to defer on providing group-specific expressions of the form GROUP_SORT_EXPR_&lt;groupname&gt;, pending feedback from customers)

<p><hr>
<em>2011-Dec-07 17:07:46 by eje:</em> <br>

TESTING:

<p>Using the following configuration:
<div class="code">
<pre class="code">
NEGOTIATOR_DEBUG = D_FULLDEBUG
NEGOTIATOR_USE_SLOT_WEIGHTS = FALSE
NEGOTIATOR_INTERVAL = 30

SCHEDD_INTERVAL	= 15

CLAIM_WORKLIFE = 0

NUM_CPUS = 10

# turn off round robin and multiple allocation rounds
HFS_ROUND_ROBIN_RATE = 100000000
HFS_MAX_ALLOCATION_ROUNDS = 1

GROUP_NAMES = a, b

GROUP_QUOTA_a = 5
GROUP_QUOTA_b = 5

GROUP_AUTOREGROUP = TRUE

# sorts "b" before "a":
GROUP_SORT_EXPR = ifThenElse(Name=?="a", 2, ifThenElse(Name=?="b", 1, 3.40282e+38))

# this should trigger warnings and default to FLT_MAX:
#GROUP_SORT_EXPR = 2+"a"
</pre></div>


<p>Bring up the negotiator with the above configuration, and then observe the ordering behavior for group negotiation:
<div class="code">
<pre class="code">
$ tail -f NegotiatorLog | grep -e WARNING -e sortkey
12/07/11 14:44:43 Group b - sortkey= 1
12/07/11 14:44:43 Group a - sortkey= 2
12/07/11 14:44:43 Group &lt;none> - sortkey= 3.40282e+38
</pre></div>


<p>Next, enable GROUP_SORT_EXPR = 2+&quot;a&quot;, which defaults with warnings:
<div class="code">
<pre class="code">
$ tail -f NegotiatorLog | grep -e WARNING -e sortkey
12/07/11 14:39:41 WARNING: sort expression "2+"a"" failed to evaluate to floating point for group &lt;none> - defaulting to 3.40282e+38
12/07/11 14:39:41 WARNING: sort expression "2+"a"" failed to evaluate to floating point for group a - defaulting to 3.40282e+38
12/07/11 14:39:41 WARNING: sort expression "2+"a"" failed to evaluate to floating point for group b - defaulting to 3.40282e+38
12/07/11 14:39:41 Group &lt;none> - sortkey= 3.40282e+38
12/07/11 14:39:41 Group a - sortkey= 3.40282e+38
12/07/11 14:39:41 Group b - sortkey= 3.40282e+38
</pre></div>


<p>Disable the settings for GROUP_SORT_EXPR, and let it take on its default &quot;starvation-order&quot; expr.  Submit the following file:
<div class="code">
<pre class="code">
cmd = /bin/sleep
args = 60
should_transfer_files = if_needed
when_to_transfer_output = on_exit
+AccountingGroup="a.user"
queue 5
+AccountingGroup="b.user"
queue 10
</pre></div>


<p>You should see something similar to the following sequence, where prior to submission, all values are FLT_MAX, then &quot;a&quot; and &quot;b&quot; have zero starvation-ratio, as their allocation is nonzero but no jobs are yet running.  Then their starvation ratios will become 1, as all allocation is filled.  Then &quot;a&quot; will empty as its jobs complete first, then finally all ratios will return to FLT_MAX:
<div class="code">
<pre class="code">
$ tail -f NegotiatorLog | grep -e WARNING -e sortkey
12/07/11 15:33:31 Group &lt;none> - sortkey= 3.40282e+38
12/07/11 15:33:31 Group a - sortkey= 3.40282e+38
12/07/11 15:33:31 Group b - sortkey= 3.40282e+38
12/07/11 15:33:51 Group a - sortkey= 0
12/07/11 15:33:52 Group b - sortkey= 0
12/07/11 15:33:52 Group &lt;none> - sortkey= 3.40282e+38
12/07/11 15:34:23 Group a - sortkey= 1
12/07/11 15:34:23 Group b - sortkey= 1
12/07/11 15:34:23 Group &lt;none> - sortkey= 3.40282e+38
12/07/11 15:34:53 Group a - sortkey= 1
12/07/11 15:34:53 Group b - sortkey= 1
12/07/11 15:34:53 Group &lt;none> - sortkey= 3.40282e+38
12/07/11 15:35:23 Group b - sortkey= 0
12/07/11 15:35:24 Group &lt;none> - sortkey= 3.40282e+38
12/07/11 15:35:24 Group a - sortkey= 3.40282e+38
12/07/11 15:35:54 Group b - sortkey= 1
12/07/11 15:35:54 Group &lt;none> - sortkey= 3.40282e+38
12/07/11 15:35:54 Group a - sortkey= 3.40282e+38
12/07/11 15:36:24 Group b - sortkey= 1
12/07/11 15:36:24 Group &lt;none> - sortkey= 3.40282e+38
12/07/11 15:36:24 Group a - sortkey= 3.40282e+38
12/07/11 15:36:55 Group &lt;none> - sortkey= 3.40282e+38
12/07/11 15:36:55 Group a - sortkey= 3.40282e+38
12/07/11 15:36:55 Group b - sortkey= 3.40282e+38
</pre></div>


<p><hr>
<em>2011-Dec-16 18:11:58 by tannenba:</em> <br>

<strong>CODE REVIEW</strong>

<p>Thanks for the patch!!!  Nice job.

<p>Just a few items:

<p><ol>
<li>Fix the memory leak on this line:
   <code>string group_sort_expr = param(&quot;GROUP_SORT_EXPR&quot;);</code>
   --- you prolly wanna use param(string value,const char*name) instead.
<li>Use EvalFloat() instead of LookupFloat() on this line:
   <code>if (!ad-&gt;LookupFloat(ATTR_SORT_EXPR, v)) {</code>
   --- although lookup is currently implemented in terms of eval, it may not stay that way forever.
<li>Lets try and make the attribute names come close to matching up the attribute names used by the PREEMPTION_REQUIREMENTS expr. So instead of ATTR_NAME for the attribute name describing the group, use ATTR_ACCOUNTING_GROUP.  Instead of &quot;Allocated&quot;, use &quot;<span class="wiki"><a title="Group Resources In Use"
class="missing"
  href="wiki?p=GroupResourcesInUse">GroupResourcesInUse</a></span>&quot;, etc.
</ol>

<p>Some questions:

<p>Not sure I understand fully the difference between Allocated and Usage. Will Allocated &gt; Usage always be true?  I.e. Usage is what the account says, and Allocated is what the accountant says plus what we hope will be true after this negotiation cycle?

<p>Was this tested using dynamic group quotas?

<p>Does the value of the &quot;Quota&quot; attribute move around if the user is using static quotas?

<p>If I set

<p><pre>
    group_quota_a = 5
    group_quota_b = 10
    GROUP_SORT_EXPR = ifThenElse(Name=?=&quot;&lt;none&gt;&quot;, 1e100, Usage/Quota)
</pre>

<p>then is it true that the none group will get 0 machines until group a has 5 and group b has 10?

<p><hr>
<em>2011-Dec-19 09:16:53 by eje:</em> <br>

Thanks for the feedback!

<p>Regarding (3), I can use the styles of attribute names from the PREEMPTION_REQUIREMENTS, although it seemed a bit redundant since in the context of this feature since by definition all attributes pertain to groups for GROUP_SORT_EXPR (e.g. why make the user say <span class="wiki"><a title="Group Resources In Use"
class="missing"
  href="wiki?p=GroupResourcesInUse">GroupResourcesInUse</a></span> when they can just say Usage, etc).

<p>The difference between Allocated and Usage:  Usage is just the resources currently used by all submitters in the group.   &quot;Allocated&quot; is how many resources that were just allocated by the HGQ algorithms.

<p>Some definitions (to be included in doc):

<p>&quot;Quota&quot; is the resource quota assigned by HGQ, always in units of slots (possibly weighted, etc):   If it's a static quota, it will (normally) be exactly the static quota from the config file (unless the static quotas are greater than available resources, in which case they are normalized with a warning) If it was a dynamic quota, &quot;Quota&quot; will be the (dynamic quota) * (available resources).

<p>&quot;Requested&quot; is basically (running+idle) jobs - that is, how many jobs would this group run if it could.

<p>&quot;Allocated&quot; is how many resources (in units of slots) were the given to the group by the HGQ algorithm.   Allocated can be &gt; Quota, if the group received some surplus.   It can be &lt; Quota, if Requested &lt; Quota.  Note, this is why I defined the starvation-ratio as Usage/Allocated, instead of Usage/Quota.

<p>Testing w/ dynamic quotas is more or less moot, since the Quota the sorting algorithm cares about is whatever comes out of HGQ.  The HGQ treatment of static/dynamic quotas has been tested elsewhere (but should eventually get into regression suite)

<p>Regarding &quot;GROUP_SORT_EXPR = ifThenElse(Name=?=&quot;&lt;none&gt;&quot;, 1e100, Usage/Quota)&quot;, that sort-expr will make sure that &quot;&lt;none&gt;&quot; negotiates last.  So, groups &quot;a&quot; and &quot;b&quot; will get get first shot at negotiation.  Technically, that does not <strong>absolutely guarantee</strong> they get what they want, but if they don't get it, it will be because of a failure to match slots, etc, not because somebody in &quot;none&quot; got there first.

<p><hr>
<em>2011-Dec-20 15:47:05 by johnkn:</em> <br>

The sense of this seems backwards to me.  Where smaller numbers are used to give groups HIGHER priority.

<p>It would be more consistent with the the rest of condor for this to be a RANK expression for the groups.  With the current behavior resolving to something like.

<p><div class="verbatim">
<PRE>
GROUP_RANK_EXPR = &#8203;ifThenElse(Group=?="&lt;none>",&#8203; 0,&#8203; &#8203;ifThenElse(Allocated &#8203;> &#8203;0,&#8203; Quota/Allocated,&#8203; Quota*2)&#8203;)&#8203;
</PRE></div>


<p><hr>
<em>2011-Dec-22 15:28:49 by eje:</em> <br>

Regarding the proposal for using the name 'GROUP_RANK_EXPR': the group negotiation order is most similar to the submitter negotiation order, which is governed by priority that is sorted from smallest to largest value.  Possibly it could be called GROUP_PRIO_EXPR, although the sorting expression given doesn't need to have anything to do with priority as the Accountant defines it.

<p><hr>
<em>2011-Dec-27 14:48:29 by johnkn:</em> <br>

After some discussion Todd and TJ strongly feel that the default value for 7.7.x should be

<p><pre>
   SORT_EXPR = &quot;Usage/(Quota+1)&quot;
</pre>

<p>And we also wonder whether any current user of 7.6.x actually depends on the algorithm that treats all groups as having equal sort order (at the end)until they get their first allocation;  And then sorts groups that have resources before groups that don't.</blockquote>
<table align="right" style="margin: 0 10px;" cellpadding=2 border=0>
<tr><td bgcolor="#a0b5f4" class="border1">
<table width="100%" border=0 cellpadding=4 cellspacing=0>
<tr bgcolor="#d0d9f4" class="bkgnd1">
<td valign="top" align="left">
[<a href="tktappend?tn=2678">Append remarks</a>]
</td></tr></table></td></tr></table>


<h3>Properties:</h3>

<blockquote>
<table>
<tr>
  <td align="right">Type:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>enhance&nbsp;</b></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
  <td align="right">Last&nbsp;Change:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>2012-Oct-18 07:08</b></td>
</tr>
<tr>
  <td align="right">Status:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>pending</b></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
  <td align="right">Created:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>2011-Dec-01 13:37</b></td>
</tr>
<tr>
  <td align="right">Fixed&nbsp;Version:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>v070605&nbsp;</b></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
  <td align="right">Broken&nbsp;Version:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>&nbsp;</b></td>
</tr>
<tr>
  <td align="right">Priority:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>3&nbsp;</b></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
  <td align="right">Subsystem:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>Daemons&nbsp;</b></td>
</tr>
<tr>
  <td align="right">Assigned&nbsp;To:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>eje&nbsp;</b></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
  <td align="right">Derived From:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>
  &nbsp;
  </b></td>
</tr>
<tr>
  <td align="right">Creator:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>eje&nbsp;</b></td>
<td></td>
  <td align="right">Rust:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>&nbsp;</b></td>
</tr>
<tr>
  <td align="right">Customer Group:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>other&nbsp;</b></td>
<td></td>
  <td align="right">Visibility:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>public&nbsp;</b></td>
</tr>
<tr>
  <td align="right">Notify:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>eje@cs.wisc.edu, tannenba@cs.wisc.edu,dan@hep.wisc.edu, tstclair@redhat.com, jthomas@redhat.com&nbsp;</b></td>
<td></td>
  <td align="right">Due Date:</td>
  <td bgcolor="#d0d0d0" class="bkgnd3"><b>&nbsp;</b></td>
</tr>
</table>
</blockquote>
<h3>Related Check-ins:</h3>
<table cellspacing=0 border=0 cellpadding=0>
<tr><td valign="top" width=160 align="right">2011-Dec-20 14:18</td>
<td valign="top" width=30 align="center">
<span class="icon dot">&nbsp;</span></td>
<td valign="top" align="left"> 
Check-in <span class="chng"><a href="chngview?cn=28865">[28865]</a></span>: Comment out unusable documentation for last-minute 7.6.5 addition <span class="ticket"><a href="tktview?tn=2678" class="pending"
title="RFE: expose accounting group negotiation-ordering to configuration"
>#2678</a></span>, and reword version item to go with <span class="ticket"><a href="tktview?tn=2679" class="pending"
title="RFE: Alter semantic of GROUP_AUTOREGROUP to replicate legacy behavior"
>#2679</a></span>.  (By Karen Miller )</td></tr>
<tr><td valign="top" width=160 align="right">2011-Dec-19 17:58</td>
<td valign="top" width=30 align="center">
<span class="icon dot">&nbsp;</span></td>
<td valign="top" align="left"> 
Check-in <span class="chng"><a href="chngview?cn=28859">[28859]</a></span>: Merged <span class="chng"><a href="chngview?cn=28858">[28858]</a></span>, merge uw/V7_7_4-branch ===GT=== <span class="ticket"><a href="tktview?tn=2678" class="pending"
title="RFE: expose accounting group negotiation-ordering to configuration"
>#2678</a></span> <span class="ticket"><a href="tktview?tn=2679" class="pending"
title="RFE: Alter semantic of GROUP_AUTOREGROUP to replicate legacy behavior"
>#2679</a></span>  (By Erik Erlandson )</td></tr>
<tr><td valign="top" width=160 align="right">2011-Dec-19 16:25</td>
<td valign="top" width=30 align="center">
<span class="icon dot">&nbsp;</span></td>
<td valign="top" align="left"> 
Check-in <span class="chng"><a href="chngview?cn=28853">[28853]</a></span>: ===VersionHistory:Complete=== ===GT=== <span class="ticket"><a href="tktview?tn=2678" class="pending"
title="RFE: expose accounting group negotiation-ordering to configuration"
>#2678</a></span> and ===GT=== <span class="ticket"><a href="tktview?tn=2679" class="pending"
title="RFE: Alter semantic of GROUP_AUTOREGROUP to replicate legacy behavior"
>#2679</a></span>  (By Erik Erlandson )</td></tr>
<tr><td valign="top" width=160 align="right">2011-Dec-19 16:12</td>
<td valign="top" width=30 align="center">
<span class="icon dot">&nbsp;</span></td>
<td valign="top" align="left"> 
Check-in <span class="chng"><a href="chngview?cn=28851">[28851]</a></span>: Documentation for GROUP_SORT_EXPR ===GT=== <span class="ticket"><a href="tktview?tn=2678" class="pending"
title="RFE: expose accounting group negotiation-ordering to configuration"
>#2678</a></span>  (By Erik Erlandson )</td></tr>
<tr><td valign="top" width=160 align="right">2011-Dec-19 16:11</td>
<td valign="top" width=30 align="center">
<span class="icon dot">&nbsp;</span></td>
<td valign="top" align="left"> 
Check-in <span class="chng"><a href="chngview?cn=28850">[28850]</a></span>: Exposed accounting group sorting for negotiation order to configuration ===GT:Fixed=== <span class="ticket"><a href="tktview?tn=2678" class="pending"
title="RFE: expose accounting group negotiation-ordering to configuration"
>#2678</a></span>  (By Erik Erlandson )</td></tr>
</table>
<h3>Attachments:</h3>
<blockquote>
<ul>
<li><a href="attach_get/504/gt2678-group-sort-expr.patch">gt2678-group-sort-expr.patch</a>
7935 bytes added by eje on 2011-Dec-07 22:48:35 UTC.
<br>
Patch against V7_6-branch.  Exposes accounting group sorting to new config var GROUP_SORT_EXPR, which can be set to a classad expression (numeric) involving accounting group attributes: &quot;Name&quot;, &quot;Quota&quot;, &quot;Requested&quot;, &quot;Allocated&quot;, &quot;Usage&quot;, &quot;Priority&quot;, &quot;<span class="wiki"><a title="Priority Factor"
class="missing"
  href="wiki?p=PriorityFactor">PriorityFactor</a></span>&quot;<br>
</ul>
</blockquote>
</div>
</div>
<div id="footer" style="text-align:right">
<p>
This work is supported by NSF under Cooperative Agreement OAC-2030508 as part of the <a href="https://path-cc.io/"> PATh Project</a>. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the NSF. Site built using <a href="about">CVSTrac</a>.
</div>
</body></html>