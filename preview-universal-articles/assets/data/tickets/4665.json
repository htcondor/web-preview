{"id": 4665, "title": "Ticket #4665: Q_QUERY_TIMEOUT never used", "description": "<blockquote>\nQ_QUERY_TIMEOUT is never used (at least normally).\n\n<p>Q_QUERY_TIMEOUT is set in CondorQ::init().  A bunch of code patches inside of CondorQ call init before trying to connect to a schedd, but there is at least one major one missing:\n\n</p><p>If you're talking to a modern schedd, condor_q will call CondorQ::fetchQueueFromHostAndProcess with useFastPath=2.  When useFastPath==2, fetchQueueFromHostAndProcess it basically does \"return CondorQ::fetchQueueFromHostAndProcessV2();\", skipping the init() call in fetchQueueFromHostAndProcess. fetchQueueFromHostAndProcessV2 doesn't have an init() call.\n\n</p><p>Possible fixes:\n</p><ul>\n<li>Add <code>\"Q.init()\"</code> near the start of main() in condor_q. Should catch every case.\n</li><li>Move <code>\"init()\"</code> to the start of CondorQ::fetchQueueFromHostAndProcess. May miss other buggy paths\n</li><li>Add <code>\"init()\"</code> to the start of CondorQ::fetchQueueFromHostAndProcessV2. May miss other buggy paths\n</li></ul>\n\n<p>Problematic fixes:\n</p><ul>\n<li>Call init() from CondorQ::CondorQ - condor_q has a global CondorQ object, it is construction before main() and possibly before any of the param system is ready.\n</li></ul>\n\n<p>Bug is confirmed in 8.2.3.  I'm guessing it showed up in 8.1.5, when this particular the level 2 fast path was added (based on <a class=\"file\" href=\"rlog?f=src/condor_q.V6/queue.cpp\">/src/condor_q.V6/queue.cpp</a> line 667)</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2014-Oct-17 15:24", "status": "new", "created": "2014-Oct-17 15:22", "fixed_version": "2014-Oct-17 15:22", "broken_version": "v080203", "priority": "2", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}