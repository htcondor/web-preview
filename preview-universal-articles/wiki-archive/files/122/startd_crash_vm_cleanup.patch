diff --git a/src/condor_vm-gahp/vmgahp.cpp b/src/condor_vm-gahp/vmgahp.cpp
index bbb9f55..c61663e 100644
--- a/src/condor_vm-gahp/vmgahp.cpp
+++ b/src/condor_vm-gahp/vmgahp.cpp
@@ -1098,8 +1098,7 @@ VMGahp::killAllProcess()
 		if( m_jobAd && XenType::checkXenParams(m_gahp_config) ) {
 			MyString vmname;
 			if( VMType::createVMName(m_jobAd, vmname) ) {
-				VirshType::killVMFast(m_gahp_config->m_vm_script.Value(), 
-						vmname.Value());
+				XenType::killVMFast(vmname.Value());
 				vmprintf( D_FULLDEBUG, "killVMFast is called\n");
 			}
 		}
@@ -1110,8 +1109,7 @@ VMGahp::killAllProcess()
 		if( m_jobAd && KVMType::checkXenParams(m_gahp_config) ) {
 			MyString vmname;
 			if( VMType::createVMName(m_jobAd, vmname) ) {
-				VirshType::killVMFast(m_gahp_config->m_vm_script.Value(), 
-						vmname.Value());
+				KVMType::killVMFast(vmname.Value());
 				vmprintf( D_FULLDEBUG, "killVMFast is called\n");
 			}
 		}
diff --git a/src/condor_vm-gahp/vmgahp_main.cpp b/src/condor_vm-gahp/vmgahp_main.cpp
index 001e2ed..a1354c4 100644
--- a/src/condor_vm-gahp/vmgahp_main.cpp
+++ b/src/condor_vm-gahp/vmgahp_main.cpp
@@ -491,9 +491,11 @@ int main_init(int argc, char *argv[])
 		set_root_priv();
 
 #if defined(LINUX)
-		if( (strcasecmp(vmtype.Value(), CONDOR_VM_UNIVERSE_XEN) == 0) || (strcasecmp(vmtype.Value(), CONDOR_VM_UNIVERSE_KVM) == 0)) {
-			VirshType::killVMFast(gahpconfig->m_vm_script.Value(), 
-					matchstring.Value());
+		if( strcasecmp(vmtype.Value(), CONDOR_VM_UNIVERSE_XEN) == 0 ) {
+			XenType::killVMFast(matchstring.Value());
+		}else
+		if( strcasecmp(vmtype.Value(), CONDOR_VM_UNIVERSE_KVM) == 0 ) {
+			KVMType::killVMFast(matchstring.Value());
 		}else
 #endif
 		if( strcasecmp(vmtype.Value(), CONDOR_VM_UNIVERSE_VMWARE ) == 0 ) {
diff --git a/src/condor_vm-gahp/xen_type.cpp b/src/condor_vm-gahp/xen_type.cpp
index 5c7541c..4e451aa 100644
--- a/src/condor_vm-gahp/xen_type.cpp
+++ b/src/condor_vm-gahp/xen_type.cpp
@@ -74,6 +74,7 @@ VirshType::VirshType(const char* scriptname, const char* workingpath,
 	m_allow_hw_vt_suspend = false;
 	m_restart_with_ckpt = false;
 	m_has_transferred_disk_file = false;
+	m_libvirt_connection = NULL;
 }
 
 VirshType::~VirshType()
@@ -1269,6 +1270,16 @@ bool KVMType::checkXenParams(VMGahpConfig * config)
 
 }
 
+bool
+KVMType::killVMFast(const char* vmname)
+{
+	vmprintf(D_FULLDEBUG, "Inside KVMType::killVMFast\n");
+	priv_state priv = set_root_priv();
+	virConnectPtr libvirt_connection = virConnectOpen("qemu:///session");
+	set_priv(priv);
+	return VirshType::killVMFast(vmname, libvirt_connection);
+}
+
 bool 
 XenType::checkXenParams(VMGahpConfig* config)
 {
@@ -1348,6 +1359,16 @@ XenType::checkXenParams(VMGahpConfig* config)
 	return true;
 }
 
+bool
+XenType::killVMFast(const char* vmname)
+{
+	vmprintf(D_FULLDEBUG, "Inside XenType::killVMFast\n");
+	priv_state priv = set_root_priv();
+	virConnectPtr libvirt_connection = virConnectOpen("xen:///");
+	set_priv(priv);
+	return VirshType::killVMFast(vmname, libvirt_connection);
+}
+
 bool 
 VirshType::testXen(VMGahpConfig* config)
 {
@@ -1509,16 +1530,27 @@ VirshType::killVM()
 	// If a VM is soft suspended, resume it first.
 	ResumeFromSoftSuspend();
 
-	//	return killVMFast(m_scriptname.Value(), m_vm_name.Value());
+	return killVMFast(m_vm_name.Value(), m_libvirt_connection);
+}
+
+bool
+VirshType::killVMFast(const char* vmname, virConnectPtr libvirt_con)
+{
+	vmprintf(D_FULLDEBUG, "Inside VirshType::killVMFast\n");
+	
+	if( !vmname || (vmname[0] == '\0') ) {
+		return false;
+	}
+
 	priv_state priv = set_root_priv();
-	virDomainPtr dom = virDomainLookupByName(m_libvirt_connection, m_vm_name.Value());
+	virDomainPtr dom = virDomainLookupByName(libvirt_con, vmname);
 	set_priv(priv);
 	if(dom == NULL)
 	  {
-	    virErrorPtr err = virConnGetLastError(m_libvirt_connection);
+	    virErrorPtr err = virConnGetLastError(libvirt_con);
 	    if (err && err->code != VIR_ERR_NO_DOMAIN)
 	      {
-		vmprintf(D_ALWAYS, "Error finding domain %s: %s\n", m_vm_name.Value(), (err ? err->message : "No reason found"));
+		vmprintf(D_ALWAYS, "Error finding domain %s: %s\n", vmname, (err ? err->message : "No reason found"));
 		return false;
 	      }
 	    else
@@ -1534,27 +1566,13 @@ VirshType::killVM()
 	return ret;
 }
 
+/*
 bool
 VirshType::killVMFast(const char* script, const char* vmname)
 {
-	vmprintf(D_FULLDEBUG, "Inside VirshType::killVMFast\n");
-	
-	if( !script || (script[0] == '\0') || 
-			!vmname || (vmname[0] == '\0') ) {
-		return false;
-	}
-	/*
-	ArgList systemcmd;
-	systemcmd.AppendArg(script);
-	systemcmd.AppendArg("killvm");
-	systemcmd.AppendArg(vmname);
-
-	int result = systemCommand(systemcmd, true);
-	if( result != 0 ) {
-		return false;
-		}*/
-	return true;
+	return VirshType::killVMFast(vmname);
 }
+*/
 
 bool
 VirshType::createISO()
diff --git a/src/condor_vm-gahp/xen_type.h b/src/condor_vm-gahp/xen_type.h
index 85c0226..46d28ce 100644
--- a/src/condor_vm-gahp/xen_type.h
+++ b/src/condor_vm-gahp/xen_type.h
@@ -40,7 +40,7 @@ class VirshType : public VMType
 {
 public:
 	static bool testXen(VMGahpConfig* config);
-	static bool killVMFast(const char* script, const char* vmname);
+	static bool killVMFast(const char* script, virConnectPtr libvirt_con);
 
 	VirshType(const char* scriptname, const char* workingpath, ClassAd* ad);
 
@@ -110,6 +110,7 @@ class XenType : public VirshType
   XenType(const char* scriptname, const char* workingpath, ClassAd* ad);
   static bool checkXenParams(VMGahpConfig* config);
   virtual bool CreateConfigFile();
+  static bool killVMFast(const char* script);
 
  protected:
   virtual bool CreateVirshConfigFile(const char * filename);
@@ -121,6 +122,7 @@ class KVMType : public VirshType
   KVMType(const char* scriptname, const char* workingpath, ClassAd* ad);
   static bool checkXenParams(VMGahpConfig* config);
   virtual bool CreateConfigFile();
+  static bool killVMFast(const char* script);
  protected:
   virtual bool CreateVirshConfigFile(const char * filename);
 };
