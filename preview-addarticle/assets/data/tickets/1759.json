{"id": 1759, "title": "Ticket #1759: file transfer fails in shadow when using pool password", "description": "<blockquote>\nBurt observed that when using a pool password for daemon communication, file transfer fails to be authorized unless the execute node is explicitly granted unauthenticated write access.\n\n<p>The security policy was this:\n\n</p><p></p><div class=\"verbatim\">\n<pre>SEC_DAEMON_AUTHENTICATION = required\nSEC_DAEMON_AUTHENTICATION_METHODS = password\nSEC_CLIENT_AUTHENTICATION_METHODS = password,fs,gsi,kerberos\nSEC_PASSWORD_FILE = /scratch/condor/condor_credential\nALLOW_DAEMON = condor_pool@*\n</pre></div>\n\n\n<p>The reason for the problem is that file transfer uses the WRITE authorization level.  The shadow automatically grants the execute machine DAEMON access, which should imply WRITE, but this is ineffective, because the access is granted to the startd's identity observed by the schedd when it requested the claim.  The claim request happens at DAEMON level, so the observed identity is not just an IP address; it is an authenticated identity.  Therefore, the shadow grants access to the authenticated identity of condor on the execute machine, but the file transfer isn't authenticated and so is not covered by the exception.\n\n</p><p><span class=\"section\"></span></p><h2>Workaround </h2>\n\n<p>One fix is to grant all of the execute nodes unauthenticated write access.  That's not ideal for security reasons.  Another is to require authentication for write access.  Then the auto-granting of access by the shadow should work as expected.\n\n</p><p></p><div class=\"verbatim\">\n<pre>SEC_WRITE_AUTHENTICATION = required\nSEC_WRITE_AUTHENTICATION_METHODS = fs,password\n</pre></div>\n\n\n<p>I believe it should also work to use SEC_ENABLE_MATCH_PASSWORD.  Then all communication between the submit and execute node will use the shared secret created at match time.\n\n</p><p><span class=\"section\"></span></p><h2>How to Fix</h2>\n\n<p>File transfer commands registered by the shadow should probably be registered as DAEMON-level commands.\n\n</p><p>A similar problem in the schedd now exists in 7.5 due to the changes in <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=1266\" onclick=\"get_ticket_and_populate_wrapper('1266'); return false;\" title=\"reduce schedd's required level of trust of startd\">#1266</a></span>.  The problematic commands are intentionally registered as READ rather than DAEMON, in order to reduce the power granted to the startd.  Therefore, the configuration workaround mentioned above will not help unless all READ access is made to require authentication.  Simply registering these commands as DAEMON-level commands is objectionable from a security standpoint.\n\n</p><p>One solution to the problem in the schedd is to introduce a new authorization level called EXECUTE.  This level could be automatically configured identically to DAEMON, so the admin should not need to do anything new.  EXECUTE would only be authorized to do the specific commands that the execute side needs to do, and this authorization would be automatically granted.\n\n</p><p>Another idea is to stop having DAEMON imply WRITE.  WRITE would just be for submitting jobs.  Then we would be free to use DAEMON for the commands the startd sends to the schedd.</p></blockquote>", "remarks": "<blockquote>\n<hr/>\n<em>2011-Jan-27 14:50:47 by danb:</em> <br/>\n\nBulk change of target version from v070505 to v070506 using ./ticket-target-mover.\n<hr/>\n<em>2011-Feb-01 16:20:02 by tannenba:</em> <br/>\n\nBulk change of target version from v070506 to NULL using ./ticket-target-mover.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2011-Feb-01 16:20", "status": "new", "created": "2010-Nov-05 16:02", "fixed_version": "2010-Nov-05 16:02", "broken_version": "v070000", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "dan@hep.wisc.edu,burt@fnal.gov", "due_date": ""}