{"id": 5062, "title": "Ticket #5062: Blahp purge_interval causes CE to lose track of LSF jobs", "description": "<blockquote>\nWei at SLAC has an issue when he is using the BLParser to manage his LSF jobs where a too low purge interval removes jobs from the job registry (causing HTCondor CE to lose track of the LSF job) and a too high purge interval causes CE jobs to start tracking the incorrect job (his LSF job ID's are recycled on the order of a few days). Can we find a Goldilocks purge_interval time for Wei or perhaps there's another solution?</blockquote>", "remarks": "<blockquote>\n<em>2015-Jun-17 15:55:05 by tannenba:</em> <br/>\n\nFrancesco, are you able to give Jaime a helping hand with this issue? Thanks\n\n<p></p><hr/>\n<em>2015-Jun-19 09:10:28 by Francesco.Prelz:</em> <br/>\n\nWe discussed about this issue at Condor Week, I believe. As the LSF job id is currently the only key that identifies a job (both in LSF and in BLAH), we can think of adding a new job state that allows old BLAH job registry entries to be safely ignored when the initial (job submit) registration of a new job with the same ID is received. However, unless job_registry_use_mmap is set to 'true', checking for the existance of old entries can slow down job submission enough to get complaints (we got a few tickets from CERN on this a while ago), so this duplicate ID check feature would either have to be optional (with a config knob) or just be applied when job_registry_use_mmap is true.\nIn case this way to address the issue is acceptable, what is the desired time frame ? I should have some time to handle this myself on July 1-3. If it's too late I need to volunteer one of my colleagues.\n\n<p></p><hr/>\n<em>2015-Sep-08 16:00:59 by blin:</em> <br/>\n\nI've attached a patch from Brian Bockelman that prevents the purging of running/idle/held jobs. It got lost in chat a ways back but perhaps this is a solution worth entertaining?\n\n<p></p><hr/>\n<em>2015-Sep-09 15:19:09 by tannenba:</em> <br/>\n\nFrancesco, we are at a point now where we really need a BLAHP patch as this bug is causing active pain in OSG.  Would you be able to have a patch posted to this ticket by September 23, 2015?  (aka two weeks from now)  Please let us know either way.  Thanks!\n\n<p></p><hr/>\n<em>2015-Sep-11 07:15:13 by Francesco.Prelz:</em> <br/>\n\nOk, now I know the time frame... I almost finished moving my apartment. I'll be at CERN on Sep 14-16 but I should be able to attach a patch by the 23rd.\n\n<p></p><hr/>\n<em>2015-Sep-11 07:18:43 by Francesco.Prelz:</em> <br/>\n\nBTW: regardimg my earlier remark on this ticket. Is job_registry_use_mmap set to true or false on typical OSG configurations ?\n\n<p></p><hr/>\n<em>2015-Sep-11 09:47:22 by blin:</em> <br/>\n\nIt defaults to 'no' in the blahp that the OSG ships.\n\n<p></p><hr/>\n<em>2015-Sep-11 11:28:28 by Francesco.Prelz:</em> <br/>\n\nAfter running through the involved code, keeping into account that you don't use mmap to access the BLAH index plus the fact our other customer had us remove all job ID uniqueness checks for better efficiency, I'd first of all try the very simple patch I posted here: <a class=\"external\" href=\"http://www.mi.infn.it/~prelz/job_registry.patch\">http://www.mi.infn.it/~prelz/job_registry.patch</a>.\nI ran through many cases and unless I missed something it should be all that's needed to make sure that old jobs with duplicate IDs are effectively ignored for status updates, queries and job control without losing information and with no additional operations.\nYour case shows that this makes sense in general. Please let us know how it goes\nand sorry for not turning around to this earlier.\n\n<p></p><hr/>\n<em>2015-Sep-16 13:25:49 by blin:</em> <br/>\n\nThanks Francesco, I'll get this to the customer so they can test out if the fix works for them.\n\n<p></p><hr/>\n<em>2015-Sep-18 11:27:42 by blin:</em> <br/>\n\nFrancesco, out of curiousity, is this the job ID uniqueness patch you were speaking about? <a class=\"external\" href=\"https://github.com/prelz/BLAH/commit/e61b123b8399290ee622a00f02234670eb99b3aa\">https://github.com/prelz/BLAH/commit/e61b123b8399290ee622a00f02234670eb99b3aa</a>\n\n<p></p><hr/>\n<em>2015-Sep-21 04:01:04 by Francesco.Prelz:</em> <br/>\n\nThat patch would ensure job ID uniqueness only for BLAH sending jobs into Condor. What I was referring to was a way to add a specific status bit for jobs with duplicate IDs in the BLAH registry so that they can be ignored. After some pondering over the code I concluded that would add a significant inefficiency when inserting new jobs -and- should not be needed by anyone, as the database is always queried by ID via the job_registry_get_recnum(), so we can set the preference for more recent jobs where duplicate keys are found there.\n\n<p></p><hr/>\n<em>2015-Sep-21 15:27:33 by blin:</em> <br/>\n\nSo what happens to the older job when duplicate keys are found? Are they no longer tracked in the job registry?\n\n<p></p><hr/>\n<em>2015-Sep-22 04:01:14 by Francesco.Prelz:</em> <br/>\n\nThey are still there and they will be found if you iterate over all jobs or if you\nindex the registry on a key that is truly unique (CREAM for instance uses its own unique prefix), but for status updates and lookups based on the batch job ID or the BLAH job ID (currently just a prefix tacked onto the batch job ID) the older\njob will be hidden by the newer one and effectively forgotten.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/891/job_registry.patch\">job_registry.patch</a>\n483 bytes added by blin on 2015-Sep-08 20:58:47 UTC.\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Oct-19 17:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e14bedc0e0bdc95080004e7e886db13e26884d11\">[46019]</a></span>: Version historys for blahp job registry purge fix. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5062\" onclick=\"get_ticket_and_populate_wrapper('5062'); return false;\" title=\"Blahp purge_interval causes CE to lose track of LSF jobs\">#5062</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Oct-19 17:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/77629dfd0002a3136cc370b7f0366383e4a3798a\">[46018]</a></span>: Fix blahp problem when job IDs are reused by the batch system. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5062\" onclick=\"get_ticket_and_populate_wrapper('5062'); return false;\" title=\"Blahp purge_interval causes CE to lose track of LSF jobs\">#5062</a></span> Some batch systems will reuse job IDs. If an ID gets reused when the blahp's job registry still has an entry for the previous use of that ID, the status of the two jobs gets conflated. If old registry entries are purged too quickly,\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Oct-20 11:57", "status": "resolved", "created": "2015-May-22 08:35", "fixed_version": "2015-May-22 08:35", "broken_version": "", "priority": "2", "subsystem": "Grid", "assigned_to": "jfrey", "derived_from": "#5045", "creator": "blin", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "bbockelm@cse.unl.edu blin@cs.wisc.edu Francesco.Prelz@mi.infn.it", "due_date": ""}