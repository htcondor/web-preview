{"id": 5340, "title": "Ticket #5340: Controlling daemon startup dependencies and delay for ready", "description": "<blockquote>\nWe need a way to delay starting up some HTCondor daemons until other daemons are not just created, but also ready to go.\n\n<p>This will be configured by adding knobs to list the dependencies and readiness conditions.\n\n</p><p></p><pre>    &lt;DAEMON&gt;_STARTUP_DEPENDS_ON = &lt;DAEMON2&gt;[:condition] [&lt;DAEMON3&gt;[:condition] ...]\n</pre>\n\n<p>So, for instance the standard dependencies if the collector depends on the shared port daemon, and the other daemons depend on the collector you could have\n\n</p><p></p><pre>    COLLECTOR_STARTUP_DEPENDS_ON = SHARED_PORT:alive\n    NEGOTIATOR_STARTUP_DEPENDS_ON = COLLECTOR:ready\n    STARTD_STARTUP_DEPENDS_ON = COLLECTOR:ready\n    SCHEDD_STARTUP_DEPENDS_ON = COLLECTOR:ready\n</pre>\n\n<p>on the right hand side, the : and the text after it will be optional,\nwith the 'alive' state being the default if non the :&lt;state&gt; is not specified.\nthe possible state values will be arbitrary strings.\n\n</p><p>A new command handler will be added to the master so that daemons can send a command to the master to indicate their readiness. The master will also set an environment variable for daemons that it creates that will encode the sinful address of the master and a capability that identifies who is sending the command and a provides a secret to prevent spoofing of the command.  The new command will be\n\n</p><p></p><pre>   DC_SET_READY\n</pre>\n\n<p>The command payload will be a <span class=\"quote\">ClassAd</span>. The initial version of this command will have a single string value that indicates the readiness state.  As indicated above that state string can be optionally used in the *_DEPENDS_ON configuration to wait for a specific state.\n\n</p><p>There will also be a condor tool that can be used to send this command for non-deamoncore daemons.\n\n</p><p></p><pre>    condor_set_ready -state \"ready\"\n</pre>\n\n<p>The tool will pick up the environment variable that has the masters sinful and the capability and use that to send the command.  This will allow the master to  be sure that the command is coming from the correct instance of the correct daemon.\n\n</p><p>There may also be a tool that can send a command to the master to query the readiness of the various daemons.  This command will be\n\n</p><p></p><pre>   DC_QUERY_READY\n</pre>\n\n<p>This will return the current readiness state of the daemons, and will have a optional argument that will make it wait to respond until the daemons have achieved the desired state.  This will be very useful for the test suite.</p></blockquote>", "remarks": "<blockquote>\n<em>2016-Feb-01 14:45:25 by zmiller:</em> <br/>\n\nWe actually no longer need this specifically for the CERN work.  In that case, the Schedd waits not for other daemons, but for a usable credential to be ready.\n\n<p></p><hr/>\n<em>2016-Mar-03 15:26:53 by wenger:</em> <br/>\n\nI'm just looking at the tickets that are in the docpending state, and I'm wondering what's going on with this ticket.  There aren't any commits listed for it -- are there some commits that aren't correctly associated with the ticket?  Otherwise, how did it get into the docpending state?</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2016-Mar-03 15:27", "status": "docpending", "created": "2015-Oct-23 10:56", "fixed_version": "2015-Oct-23 10:56", "broken_version": "", "priority": "3", "subsystem": "DaemonMaster", "assigned_to": "johnkn", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "johnkn@cs.wisc.edu, wenger@cs.wisc.edu", "due_date": ""}