{"id": 1116, "title": "Ticket #1116: Queue-management constraints shouldn't use TARGET scoping", "description": "<blockquote>\nThe schedd's queue-management interface takes <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> expressions to constrain the set of job ads that a command will act upon. Although most expressions provided by clients use no scoping for their attribute references, some do use the 'target' scope, and the schedd (using EvalBool()), evaluates the expressions with the job ad as the target scope and using no local scope. When we switch to new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>, this means most expressions won't evaluate properly. The changes to EvalBool() for new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> (<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=1115\" onclick=\"get_ticket_and_populate_wrapper('1115'); return false;\" title=\"Remove Target scope from EvalBool() in new ClassAds\">#1115</a></span>) provides a temporary solution by stripping off the 'target' scopes in the expressions. For the long term, clients should stop using 'target' scopes in their constraint expressions. Then eventually, the code to strip off 'target' scopes can be removed.\n\n<p>The CondorQ object should ensure that all expressions it sends to the schedd don't have any 'target' scoping in their attribute references.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Jan-18 10:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/4e6c33202ce82fd91dd8028e84a0f9647229925e\">[16912]</a></span>: <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=GenericQuery\" title=\"Generic Query\">GenericQuery</a></span> now takes an <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprTree\" title=\"Expr Tree\">ExprTree</a></span> instead of a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span>. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=1116\" onclick=\"get_ticket_and_populate_wrapper('1116'); return false;\" title=\"Queue-management constraints shouldn't use TARGET scoping\">#1116</a></span> <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=1117\" onclick=\"get_ticket_and_populate_wrapper('1117'); return false;\" title=\"Query ads to the collector should have proper TARGET scoping\">#1117</a></span> This simplifies the CondorQ class, which doesn't want the expression created by <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=GenericQuery\" title=\"Generic Query\">GenericQuery</a></span> to be in an ad. It also reduces the rewriting of the expression for proper Target scoping in new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Feb-05 15:42", "status": "resolved", "created": "2010-Jan-15 15:57", "fixed_version": "2010-Jan-15 15:57", "broken_version": "v070500", "priority": "4", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "#1126", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}