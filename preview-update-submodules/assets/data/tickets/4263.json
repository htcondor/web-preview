{"id": 4263, "title": "Ticket #4263: KeepClaimIdle Not always respected", "description": "<blockquote>\nwhile looking at a recent failing of job_dagman_use_hold_claim I saw what seems to be not right. The test is for a dag with A followed by B followed by C. A and B request <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=KeepClaimIdle\" title=\"Keep Claim Idle\">KeepClaimIdle</a></span> 30. The test verifies the output of each job and then checks to make sure they all three have the same claimed. In the case I have log files and things for the schedd negotiated for job A, negotiated again for job B. After B ran it reused the claim from job A for job C.</blockquote>", "remarks": "<blockquote>\n<em>2014-Mar-18 11:23:30 by tannenba:</em> <br/>\n\nBill, if you have the log files, please show the relevant snippets in the ticket.\n\n<p>Also just for the record, Nathan Panike says in an email 3/17/2014:\n</p><div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \nThe failure you are investigating has always been there since the code\nwas written ~2 years ago.  All that it is trying to do is ascertain\nthat the same ClaimID is used for each job; Evidently there is, and\nalways has been, some nondeterministic behavior with the schedd where\nit usually uses the same claim, but sometimes it doesn't.  I think it\nis pointless to investigate this unless the test is failing regularly;\nintermittent failures should be expected.\n</td></tr></tbody></table></div>\n\nSee comment in <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2673\" onclick=\"get_ticket_and_populate_wrapper('2673'); return false;\" title='DAGman should use the \"hold claim\" functionality'>#2673</a></span> about this.\n\n<p></p><hr/>\n<em>2014-Mar-18 13:20:17 by gthain:</em> <br/>\n\nIf, for whatever reason, the schedd can't claim the startd, it will give up and throw away the claim.\n\n<p></p><hr/>\n<em>2014-Mar-18 15:34:46 by gthain:</em> <br/>\n\nNote that there is a race condition here -- the shadow first writes the terminate event to the log, then emails the user, then deactivates the claim, then tells the schedd.  So, it is possible for dagman to notice that the first job is done, then submit the second job before the schedd notices the first one is done.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2014-Mar-21 14:35", "status": "new", "created": "2014-Mar-17 18:03", "fixed_version": "2014-Mar-17 18:03", "broken_version": "v080105", "priority": "3", "subsystem": "DaemonsSubmitNode", "assigned_to": "gthain", "derived_from": "", "creator": "bt", "rust": "", "customer_group": "other", "visibility": "public", "notify": "bt@cs.wisc.edu", "due_date": ""}