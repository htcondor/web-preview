{"id": 4737, "title": "Ticket #4737: Fix-up python / classad object conversion", "description": "<blockquote>\nA few object conversion issues have been reported:\n<ul>\n<li>Lazy-evaluation semantics of the subscript operator cause list() conversions to become infinite loops.  That is, classad.ExprTree(\"foo\")[0] currently returns a new expression, foo[0], but does not evaluate it.  The list() function in python builds a list from a by doing [a[0], a[1], a[2], ...] until an <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=IndexError\" title=\"Index Error\">IndexError</a></span> is thrown.  Because of our lazy-evaluation semantics, no <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=IndexError\" title=\"Index Error\">IndexError</a></span> is thrown and an infinite loop is born.\n<ul>\n<li>Proposed fix: the python subscript operator implies an evaluation the same way the \"and\" and \"or\" python operators do and the subscript operator implies for the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> python type.  Mirroring what we do with the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> operator, we will introduce a new function, \"lookup\" for subscript with no evaluation.\n</li></ul>\n</li><li>If you assign an attribute of a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> value, the value is converted to a list instead of a sub-ClassAd.  This is because we prefer converting sequences over converting maps.  We should make maps preferred - anything dictionary-like should become a sub-ClassAd.\n</li><li>We automatically cast literals and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> to their python equivalents; we do not do the same for lists.  We also do not automatically cast list elements to python objects.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2014-Nov-20 20:00:41 by bbockelm:</em> <br/>\n\nProposed text for version history:\n\n<p>Conversion from <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> ads and lists to their python equivalent are now less clumsy.  They now convert <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> expression lists to equivalent python lists in additional cases.  In some instances, the prior lazy evaluation of the subscript operator could lead to an infinite loop.  It is easier to create sub-ClassAds.\n\n</p><p></p><hr/>\n<em>2014-Nov-20 20:02:08 by bbockelm:</em> <br/>\n\nFor the release manager - I'd like permission to backport this to the stable series.  In particular, the infinite loop is worrying to me.\n\n<p></p><hr/>\n<em>2015-Feb-04 15:05:35 by tim:</em> <br/>\n\nBrought in changes for <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4598\" onclick=\"get_ticket_and_populate_wrapper('4598'); return false;\" title=\"Export python functions to ClassAd library\">#4598</a></span> to address failures pointed out by the unit tests.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Feb-05 12:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/73e0573672abfd514ee86fb93c76727255298c1c\">[43264]</a></span>: edits to 8.2.7 version history items <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4737\" onclick=\"get_ticket_and_populate_wrapper('4737'); return false;\" title=\"Fix-up python / classad object conversion\">#4737</a></span> <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4556\" onclick=\"get_ticket_and_populate_wrapper('4556'); return false;\" title=\"UDP invalidations can be sent to hosts without a UDP command socket\">#4556</a></span> <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=4760\" onclick=\"get_ticket_and_populate_wrapper('4760'); return false;\" title=\"Ignore additional files in config directory\">#4760</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Feb-05 11:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/342764956bc61cf2191683d48cfda52a13028856\">[43263]</a></span>: Version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4737\" onclick=\"get_ticket_and_populate_wrapper('4737'); return false;\" title=\"Fix-up python / classad object conversion\">#4737</a></span> <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4556\" onclick=\"get_ticket_and_populate_wrapper('4556'); return false;\" title=\"UDP invalidations can be sent to hosts without a UDP command socket\">#4556</a></span> and <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=4760\" onclick=\"get_ticket_and_populate_wrapper('4760'); return false;\" title=\"Ignore additional files in config directory\">#4760</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-16 13:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/02d363ee2a8c4f52d439566786669a0084233c0e\">[42263]</a></span>: Improve conversions between python and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4737\" onclick=\"get_ticket_and_populate_wrapper('4737'); return false;\" title=\"Fix-up python / classad object conversion\">#4737</a></span> - We now evaluate more aggressively with the subscript operator; this prevents a possible infinite loop when converting to a python list. - Do not convert sub-ClassAd to a list on insert. - Prefer to convert a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprList\" title=\"Expr List\">ExprList</a></span> to a python list automatically.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-20 19:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e1ba7e81309bb1ad502dd42c20f501dbbd4aed0a\">[41733]</a></span>: Improve conversions between python and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4737\" onclick=\"get_ticket_and_populate_wrapper('4737'); return false;\" title=\"Fix-up python / classad object conversion\">#4737</a></span> - We now evaluate more aggressively with the subscript operator; this prevents a possible infinite loop when converting to a python list. - Do not convert sub-ClassAd to a list on insert. - Prefer to convert a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprList\" title=\"Expr List\">ExprList</a></span> to a python list automatically.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Feb-05 13:51", "status": "resolved", "created": "2014-Nov-20 19:52", "fixed_version": "2014-Nov-20 19:52", "broken_version": "", "priority": "2", "subsystem": "", "assigned_to": "tim", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "bbockelm@cse.unl.edu", "due_date": ""}