{"id": 3171, "title": "Ticket #3171: Delay in starter exit with job hooks", "description": "<blockquote>\nBased on user report:\n<a class=\"external\" href=\"https://lists.cs.wisc.edu/archive/condor-users/2012-July/msg00120.shtml\">https://lists.cs.wisc.edu/archive/condor-users/2012-July/msg00120.shtml</a>\n\n<p>Observed behavior: when jobs hooks are enabled, and a vanilla job finishes, instead of the starter exiting promptly after receiving SIGQUIT (from itself?), it loiters around for 20 seconds until SIGTERM shows up.\n\n</p><p>Prerequisites:\n</p><ul>\n<li>You just have a HOOK_JOB_EXIT configured\n</li><li>You must submit a job that specifies the hook\n</li><li>When that job finishes, another job on the schedd must be willing to immediately take up the claim.  In practice this means submitting a cluster of 2 jobs in the previuos step.\n</li></ul>\n\n<p>Observed behavior:\n</p><ul>\n<li>When the first job (1.0) finishes, the starter receives SIGQUIT, presumably from the startd.  The starter acknowledges it, but doesn't exit.\n<ul>\n<li>Expected: exiting promptly after receiving SIGQUIT, never receiving SIGTERM.\n</li></ul>\n</li><li>Meanwhile, job 1.1 briefly thinks its running, trying to claim the vacated slot.\n</li><li>After 20 seconds, 1.1 returns to hold.  At roughly the same time, the starter receives SIGTERM and exits.\n</li><li>When 1.1 does finally run and exit, the starter will promptly exit, but it will also receive both SIGQUIT and SIGTERM in rapid succession.\n<ul>\n<li>Expected: Never receiving SIGTERM.\n</li></ul>\n\n<p></p></li><li>Occasionally observed: job 1.1 will report receiving SIGQUIT, but never exit (where never is \"a few minutes until I killed it.\").   The slot will stay Claimed/Idle.  This case never reliably reproduced, and I don't think the streamlined reproduction instructions below ever reproduce this particular case.\n</li></ul>\n\n<p>To reproduce:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">#! /bin/sh -x\nVERSION=condor-7.8.1-x86_rhap_5.8-stripped\nHOSTNAME=`hostname -s`\nHOOKPATH=`pwd`/hook\n\ntar xzf $VERSION.tar.gz\ncd $VERSION\n./condor_install --make-personal-condor\nsource condor.sh\n\ncat &lt;&lt;END &gt; $HOOKPATH\n#! /bin/sh\ncat &gt; /dev/null\nEND\nchmod a+x $HOOKPATH\n\ncat &lt;&lt;END &gt;&gt; local.$HOSTNAME/condor_config.local\n# We need multiple jobs to land on the same slot on after another.\n# You don't need to do this, but you'll need to submit more jobs.\nNUM_CPUS = 1\nTEST_HOOK_JOB_EXIT = $HOOKPATH\nEND\n\ncondor_master\n\n# Wait for the schedd and the startd to be ready\n/bin/sleep 30\n\ncat &lt;&lt;END | condor_submit\n+HookKeyword = \"TEST\"\nExecutable   = /bin/true\nUniverse     = vanilla\nLog          = eraseme.log\nNotification = Never\nQueue 2\nEND\n</pre></div>\n\n\n<p>Once you've done the above, wait for the first job to to exit; it should just be a moment.  When the first exits, the associated <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StarterLog\" title=\"Starter Log\">StarterLog</a></span> will end with something like:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">08/02/12 15:55:10 Process exited, pid=23342, status=0\n08/02/12 15:55:10 Got SIGQUIT.  Performing fast shutdown.\n08/02/12 15:55:10 ShutdownFast all jobs.\n</pre></div>\n\n\n<p>For the next 20 seconds, the slot will remain Claimed/Busy, and condor_q will tell you that job 1.1 is running.  It isn't.  After 20 seconds, the first starter will really exit and job 1.1 will return to idle.  At this point the log will end with:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">08/02/12 15:55:10 Process exited, pid=23342, status=0\n08/02/12 15:55:10 Got SIGQUIT.  Performing fast shutdown.\n08/02/12 15:55:10 ShutdownFast all jobs.\n08/02/12 15:55:30 Got SIGTERM. Performing graceful shutdown.\n08/02/12 15:55:30 ShutdownGraceful all jobs.\n08/02/12 15:55:30 **** condor_starter (condor_STARTER) pid 23339 EXITING WITH STATUS 0\n{code}\n\nWait for 1.1 to run.  It will run and finish promptly.  When it exits, the starter log will end with:\n\n{code}\n08/02/12 16:03:50 Process exited, pid=23709, status=0\n08/02/12 16:03:50 Got SIGQUIT.  Performing fast shutdown.\n08/02/12 16:03:50 ShutdownFast all jobs.\n08/02/12 16:03:50 Got SIGTERM. Performing graceful shutdown.\n08/02/12 16:03:50 ShutdownGraceful all jobs.\n08/02/12 16:03:50 **** condor_starter (condor_STARTER) pid 23706 EXITING WITH ST\nATUS 0\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2012-Aug-02 15:56:22 by adesmet:</em> <br/>\n\nOld reproduction notes:\n\n<p>To reproduce, note that paths will need to be changed.\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">\n# CONDOR_CONFIG - path to Condor configuration file\n# TEST_DIRECTORY - Place to do your tests from\n\ncd $TEST_DIRECTORY\nwget https://condor-wiki.cs.wisc.edu/index.cgi/attach_get/614/test.tar.gz\ntar xzf test.tar.gz\ncd test\ncp copy_to_tmp/* /tmp\nmake clean\nmake\nwatch -n1 condor_q $USERNAME\n# Wait for the DAG to finish.\n# Check the StarterLogs.  Observe that when a job completes\n# it receives SIGQUIT and exits promptly\necho &gt;&gt; $CONDOR_CONFIG\necho \"STARTD_JOB_HOOK_KEYWORD=TEST\" &gt;&gt; $CONDOR\necho \"TEST_HOOK_PREPARE_JOB = /tmp/test_job_hook.py\" &gt;&gt; $CONDOR\necho \"TEST_HOOK_JOB_EXIT = $(TEST_HOOK_PREPARE_JOB)\" &gt;&gt; $CONDOR\necho \"TEST_HOOK_UPDATE_JOB_INFO = $(TEST_HOOK_PREPARE_JOB)\" &gt;&gt; $CONDOR\nmake clean\nmake\nwatch -n1 condor_q $USERNAME\n# Wait for the DAG to finish.\n# Check the StarterLogs.  Observe that when a job completes\n# it receives SIGQUIT, waits 20 seconds, receives SIGTERM, and only\n# then exits.\n</pre></div>\n\n\n<p></p><hr/>\n<em>2012-Aug-03 14:20:38 by adesmet:</em> <br/>\n\nSuspicious, probably needs fixing, but may be unrelated:\n\n<p>JobInfoCommunicator::allJobsDone is getting called twice.  This happens quickly, within the same second of the first call.  Each time it invokes StarterHookMgr::tryHookJobExit, which correctly detects that it's been called before and exits without doing much.  However, it returns the result meaning \"Done\", which JobInfoCommunicator::allJobsDone takes to mean \"set up a timer in case the hook takes too long\". (The timer is called finishAllJobsDone and invokes JobInfoCommunicator::hookTimeout)  It already did so the first time, so now we have two timers running!  Furthermore, the second timer overwrote the original timer's tid in m_exit_hook_timer_tid.\n\n</p><p>The reaper for the hook fires and cancels m_exit_hook_timer_tid, the second of the timers.  The first timer lingers.  It never fires, since it's waiting 30 seconds and the starter exits within 20, so it may be harmless and is likely unrelated to the core bug.\n</p><hr/>\n<em>2012-Aug-23 13:52:45 by zmiller:</em> <br/>\n\nBulk change of target version from v070802 to v070803 using ./ticket-target-mover.\n<hr/>\n<em>2012-Sep-11 11:06:53 by johnkn:</em> <br/>\n\nBulk change of target version from v070803 to v070804 using ./ticket-target-mover.\n<hr/>\n<em>2012-Sep-19 16:15:53 by zmiller:</em> <br/>\n\nBulk change of target version from v070804 to v070805 using ./ticket-target-mover.\n<hr/>\n<em>2012-Oct-25 17:52:16 by johnkn:</em> <br/>\n\nBulk change of target version from v070806 to v070807 using ./ticket-target-mover.\n<hr/>\n<em>2012-Dec-19 09:30:47 by johnkn:</em> <br/>\n\nBulk change of target version from v070807 to v070808 using ./ticket-target-mover.\n<hr/>\n<em>2013-Mar-28 17:16:00 by johnkn:</em> <br/>\n\nBulk change of target version from v070808 to v070809 using ./ticket-target-mover.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/614/test.tar.gz\">test.tar.gz</a>\n2690 bytes added by adesmet on 2012-Jul-31 20:36:21 UTC.\n<br/>\nTest files, originally from <a class=\"external\" href=\"https://lists.cs.wisc.edu/archive/condor-users/2012-July/msg00120.shtml\">https://lists.cs.wisc.edu/archive/condor-users/2012-July/msg00120.shtml</a><br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "", "type": "incident", "last_change": "2013-Mar-28 17:16", "status": "new", "created": "2012-Jul-31 15:35", "fixed_version": "2012-Jul-31 15:35", "broken_version": "v070801", "priority": "4", "subsystem": "", "assigned_to": "adesmet", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tstclair@redhat.com", "due_date": ""}