{"id": 7004, "title": "Ticket #7004: Add Docker for Windows support", "description": "<blockquote>\nNow that Windows supports Docker, we should add support for Docker to our Windows Starter.  This ticket will be the parent ticket for that work.\n\n<p>The main issues that we need to resolve are\n\n</p><p></p><ol>\n<li>Detect whether Docker for Windows is configured to support Linux or Windows containers (<strong>done</strong>) and decide how we are going to handle/report that. <strong>investigation needed</strong>\n\n<p></p></li><li>Figure out how to automatically configure Docker on Windows to work with HTCondor.  This may involve stuffing username/password into the Docker configuration so that it will use an account created by HTCondor for that purpose.  We may also need to change the ACL's on the HTCondor execute directory to make this work, possibly other things we haven't thought of yet. <strong>investigation needed</strong>.\n\n<p></p></li><li>Determine if we can start a docker container from a Starter running on the Services desktop.  Is it necessary that Docker Desktop be running for this to work?  Is it necessary for a user to be logged in?\n<ul>\n<li>Investigation shows that at present is is necessary for docker desktop to be running, and that a user be logged in (this is what starts docker desktop).\n</li><li>It has been suggested that the HTCondor startd try starting up docker desktop.  This seems iffy because docker desktop is designed to hook into the taskbar, and the services desktop doesn't have a taskbar, but it's worth trying (on a throw-away windows installation, in case we damage the docker setup in a way that can't be fixed) <strong>investigation needed</strong>\n</li></ul>\n\n<p></p></li><li>Figure out what UID to use when running Docker jobs, or decide that using the default UID of 0 is OK here.\n<ul>\n<li>at present docker for windows does not accept the -user option, so we have no way to do this.\n</li></ul>\n\n<p></p></li><li>Figure out how to transfer files into and out of the container in a way that is consistent with the current HTCondor file transfer mechanism.  Three alternative mechanisms are being considered here.\n<ol>\n<li>Use the experimental LCOW mode to run Linux images on a docker configured to default to Windows containers, then bind mounting of a Windows directory into the docker job works. This allows us to use the current HTCondor file transfer mechanism, but work is needed so that the Starter understands that the path that job sees to the transferred files isn't the path that the Starter sees.  Work has begun to make a version of the Starter that can handle this.\n<ul>\n<li>see <a class=\"external\" href=\"https://blog.docker.com/2018/02/docker-for-windows-18-02-with-windows-10-fall-creators-update/\">https://blog.docker.com/2018/02/docker-for-windows-18-02-with-windows-10-fall-creators-update/</a>\n</li></ul>\n\n<p></p></li><li>Use the SMB share mechanism that Docker supports to have the sandbox actually shared between the Windows host OS and the Docker container. This option will likely have the best performance, but is more uncertain - We don't currently know how to get this working for HTCondor running as a service.\n<ul>\n<li>This isn't needed if we use the experimental LCOW mode for docker.\n</li></ul>\n\n<p></p></li><li>Use a Docker Volume to stage files into and out of the Hyper-V VM using a Docker image that we control and/or Docker cp to do the actual file transfer.  This will mean that files will be transferred first to the Windows file system. Then copied from there into the Docker volume and only then can we start the job.\n<ul>\n<li>Experiments prove that this can work for input files, but it's a slower and more expensive solution than the experimental LCOW mode for docker, and it's a hard to use this for output files because it's hard to transfer only changed files.\n</li></ul>\n\n<p></p></li><li>Use a Docker image containing a HTCondor Starter to do file transfer directly into and out of a Docker Volume.  This will result in a very different code flow than our usual, but should give us performance as good as using the SMB share without needing the SMB share. This option is probably the most work.\n</li></ol>\n\n<p></p></li><li>Enhance the Startd/Starter to understand that the path to the sandbox from that the job sees may not be the same as the path the Startd/Starter sees. Improving this will have the side benefit of allowing us to use a standard path like /home/condor/sandbox for all jobs inside the docker container, which in turn make it a bit simpler to build docker images.\n<ul>\n<li>work has begun on this.</li></ul>\n</li></ol>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2020-Nov-09 12:34", "status": "new", "created": "2019-Apr-17 10:26", "fixed_version": "2019-Apr-17 10:26", "broken_version": "", "priority": "3", "subsystem": "DaemonsExecNode", "assigned_to": "johnkn", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}