{"id": 2172, "title": "Ticket #2172: Negotiator crashes with hierarchical group quotas after reconfig", "description": "<blockquote>\nApply following to config file:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">GROUP_ACCEPT_SURPLUS_GROUP_GATEKPR = TRUE\nGROUP_ACCEPT_SURPLUS_GROUP_GATEKPR.OTHER = TRUE\nGROUP_ACCEPT_SURPLUS_GROUP_GATEKPR.PROD = TRUE\nGROUP_ACCEPT_SURPLUS_GROUP_OPPORA.CMS = TRUE\nGROUP_ACCEPT_SURPLUS_GROUP_OPPORA.LIGO = TRUE\nGROUP_ACCEPT_SURPLUS_GROUP_PROD.WW = TRUE\nGROUP_ACCEPT_SURPLUS_GROUP_T3GEN.BSM = TRUE\nGROUP_ACCEPT_SURPLUS_GROUP_T3GEN.EID = TRUE\nGROUP_ACCEPT_SURPLUS_GROUP_T3GEN.GENERAL = TRUE\nGROUP_ACCEPT_SURPLUS_GROUP_T3GEN.HGGS = TRUE\nGROUP_AUTOREGROUP_GROUP_CALIBRATE = TRUE\nGROUP_AUTOREGROUP_GROUP_OPPORA = FALSE\nGROUP_AUTOREGROUP_GROUP_OPPORB = FALSE\nGROUP_AUTOREGROUP_GROUP_PROD = TRUE\nGROUP_AUTOREGROUP_GROUP_T3GEN = FALSE\nGROUP_AUTOREGROUP_GROUP_VOGENER = FALSE\nGROUP_NAMES = group_gatekpr, group_gatekpr.prod, group_gatekpr.other, group_calibrate, group_opporA, group_opporA.ligo, group_opporA.CMS, group_opporB, group_opporB.SBGrid, group_VOgener, group_T3gen, group_prod, group_prod.hggs, group_prod.ww, group_prod.muon, group_T3gen.other, group_T3gen.eID, group_T3gen.hggs, group_T3gen.BSM, group_T3gen.general\nGROUP_PRIO_FACTOR_GROUP_CALIBRATE = 1.0\nGROUP_PRIO_FACTOR_GROUP_GATEKPR = 1.0\nGROUP_PRIO_FACTOR_GROUP_T3GEN = 1.0\nGROUP_PRIO_FACTOR_GROUP_VOGENER = 1.0\nGROUP_QUOTA_DYNAMIC_GROUP_OPPORA.CMS = 0.5\nGROUP_QUOTA_DYNAMIC_GROUP_OPPORA.LIGO = 0.5\nGROUP_QUOTA_DYNAMIC_GROUP_OPPORB.SBGRID = 1.0\nGROUP_QUOTA_DYNAMIC_GROUP_T3GEN.BSM = 0.25\nGROUP_QUOTA_DYNAMIC_GROUP_T3GEN.EID = 0.25\nGROUP_QUOTA_DYNAMIC_GROUP_T3GEN.GENERAL = 0.14\nGROUP_QUOTA_DYNAMIC_GROUP_T3GEN.HGGS = 0.25\nGROUP_QUOTA_DYNAMIC_GROUP_T3GEN.OTHER = 0.1\nGROUP_QUOTA_GROUP_CALIBRATE = 150\nGROUP_QUOTA_GROUP_GATEKPR = 1555\nGROUP_QUOTA_GROUP_GATEKPR.OTHER = 20\nGROUP_QUOTA_GROUP_GATEKPR.PROD = 1485\nGROUP_QUOTA_GROUP_OPPORA = 100\nGROUP_QUOTA_GROUP_OPPORB = 25\nGROUP_QUOTA_GROUP_PROD = 300\nGROUP_QUOTA_GROUP_PROD.HGGS = 100\nGROUP_QUOTA_GROUP_PROD.MUON = 100\nGROUP_QUOTA_GROUP_PROD.WW = 100\nGROUP_QUOTA_GROUP_T3GEN = 200\nGROUP_QUOTA_GROUP_VOGENER = 25\n</pre></div>\n\n\n<p>Submit a bunch of jobs, then run\n\n</p><p>condor_reschedule ; condor_reconfig\n\n</p><p>a bunch of times until the negotiator crashes\n\n</p><p>Valgrind sez:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">==696== Invalid read of size 8\n==696==    at 0x608684: compat_classad::ClassAdListDoesNotDeleteAds::Next() (compat_classad_list.cpp:86)\n==696==    by 0x5053F8: Matchmaker::negotiateWithGroup(int, double, double, compat_classad::ClassAdListDoesNotDeleteAds&amp;, HashTable&lt;MyString, MyString&gt;&amp;, compat_classad::ClassAdListDoesNotDeleteAds&amp;, float, char const*) (matchmaker.cpp:2069)\n==696==    by 0x507067: Matchmaker::negotiationTime() (matchmaker.cpp:1275)\n==696==    by 0x53956E: TimerManager::Timeout() (timer_manager.cpp:419)\n==696==    by 0x521657: DaemonCore::Driver() (daemon_core.cpp:3091)\n==696==    by 0x51815C: main (daemon_core_main.cpp:2377)\n==696==  Address 0x5a799d0 is 64 bytes inside a block of size 72 free'd\n==696==    at 0x4A05743: operator delete(void*) (vg_replace_malloc.c:346)\n==696==    by 0x4FD223: GroupEntry::~GroupEntry() (matchmaker.cpp:1958)\n==696==    by 0x4FFCA3: Matchmaker::hgq_construct_tree() (matchmaker.cpp:1379)\n==696==    by 0x508452: Matchmaker::reinitialize() (matchmaker.cpp:333)\n==696==    by 0x5142C1: main_config() (main.cpp:68)\n==696==    by 0x51858D: dc_reconfig() (daemon_core_main.cpp:1438)\n==696==    by 0x5185E1: handle_reconfig(Service*, int, Stream*) (daemon_core_main.cpp:908)\n==696==    by 0x51917D: DaemonCore::CallCommandHandler(int, Stream*, bool) (daemon_core.cpp:3793)\n==696==    by 0x52F389: DaemonCore::HandleReq(Stream*, Stream*) (daemon_core.cpp:5205)\n==696==    by 0x52F771: DaemonCore::HandleReq(int, Stream*) (daemon_core.cpp:4015)\n==696==    by 0x52F8FD: DaemonCore::ServiceCommandSocket() (daemon_core.cpp:3879)\n==696==    by 0x502D1D: Matchmaker::negotiate(char const*, compat_classad::ClassAd const*, double, double, double, compat_classad::ClassAdListDoesNotDeleteAds&amp;, HashTable&lt;MyString, MyString&gt;&amp;, CondorVersionInfo const&amp;, bool, long, int&amp;, double&amp;, double&amp;) (matchmaker.cpp:2841)\n==696==\n05/18/11 12:22:18 ERROR \"Assertion ERROR on (list_cur)\" at line 86 in file /scratch/gthain/CONDOR_SRC/src/condor_utils/compat_classad_list.cpp\n==696==\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2011-May-18 15:48:09 by gthain:</em> <br/>\n\nWhat's going on here is that the matchmaker calls DaemonCore::ServiceCommandThread in the middle of the negotiation cycle.  This recursively calls the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> event loop, and if we get a reconfig there we recompute all the hierarchical group data structures, throw out the old ones, and return to the negotiator, which is still using the old ones, and bad thing happen.\n\n<p>To get 7.6.1 out safely, I've just commented out the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ServiceCommandSocket\" title=\"Service Command Socket\">ServiceCommandSocket</a></span> call, which will cause condor_userprio and friends to block until the negotiation cycle is over.  Clearly, this isn't cool for the long run.\n\n</p><p></p><hr/>\n<em>2011-May-24 10:21:57 by gthain:</em> <br/>\n\nAfter wailing and gnashing of teeth, I've re-enabled <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ServiceCommandSocket\" title=\"Service Command Socket\">ServiceCommandSocket</a></span>, but reconfig sets a flag if it called recursively during negotiation, and postpones the actual reconfig until the end of the cycle.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-May-18 17:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/96dec846c5e278321b15abf8be9f3f02fd783f50\">[21901]</a></span>: More <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2172\" onclick=\"get_ticket_and_populate_wrapper('2172'); return false;\" title=\"Negotiator crashes with hierarchical group quotas after reconfig\">#2172</a></span> work -- delay reinit until negotiation is done  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-May-18 15:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/d1afe1fc45c0a99096874201252cac36f0fa0740\">[21895]</a></span>: Comment out <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ServiceCommandSocket\" title=\"Service Command Socket\">ServiceCommandSocket</a></span> in the negotiator <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2172\" onclick=\"get_ticket_and_populate_wrapper('2172'); return false;\" title=\"Negotiator crashes with hierarchical group quotas after reconfig\">#2172</a></span> This will make condor_userprio block for a long time, so we should make a longer term fix, but we need to get this out now. \u00a0[...]\n (By Greg Thain )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Nov-21 15:24", "status": "resolved", "created": "2011-May-18 13:22", "fixed_version": "2011-May-18 13:22", "broken_version": "", "priority": "2", "subsystem": "Daemons", "assigned_to": "gthain", "derived_from": "", "creator": "gthain", "rust": "", "customer_group": "atlas", "visibility": "public", "notify": "eje@cs.wisc.edu, eje@redhat.com,jthomas@redhat.com", "due_date": "20110521"}