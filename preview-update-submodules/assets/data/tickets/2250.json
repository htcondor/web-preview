{"id": 2250, "title": "Ticket #2250: Feature Request: Fast start for DAGMan jobs.", "description": "<blockquote>\nMetronome uses DAGMan to watch each run's monitor.  The monitor creates the run ID in the database.  For ease of use, nmi_submit normally waits for the monitor to generate the run ID, and then prints it for the user.  Most of that waiting time is not, however, for the monitor itself, but for DAGMan, primarily to ensure a unique process ID.  I would like to shorten this wait.\n\n<p>My initial thought was to \"attach\" DAGMan to a Condor job I've already submitted.  This turns out not to work as easily as Kent suspected.\n\n</p><p>One possibility would be some way to extract the condor_submit command-line(s) DAGMan would use to submit the jobs once it was ready.  Then the user (Metronome, who knows that the jobs haven't been run yet, since it just created the .sub files) could submit them and run DAGMan in recovery mode.\n\n</p><p>Another option would be to do the above, but internally to DAGMan -- that is, have some command-line option (--fast-start?) that would submit jobs before or while it was waiting for its unique process ID.  Obviously, this carries the risk that two DAGMans will conflict, but perhaps in the fast-start case that would be OK, or DAGMan could check for the lockfile early and refuse to proceed if exists, regardless of its contents (or lack thereof, because it would touch it before it had its process ID in this mode).</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2014-May-19 16:30", "status": "new", "created": "2011-Jun-16 17:25", "fixed_version": "2011-Jun-16 17:25", "broken_version": "", "priority": "4", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "batlab", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}