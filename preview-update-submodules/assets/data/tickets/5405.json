{"id": 5405, "title": "Ticket #5405: numad / condor_procd interaction, possibly also with cgoups", "description": "<blockquote>\nIt looks like the procd log for the time has been rotated over. Here is the kernel warning. In this state, numad itself will appear to be fine but condor_procd will be stuck in the 'D' state and 'ps auxwww' will hang. In most respects the problem is similar to <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=5346\" onclick=\"get_ticket_and_populate_wrapper('5346'); return false;\" title=\"procd crash followed by startd\">#5346</a></span>, although the kernel crash here looks different.\n\n<p></p><pre>  Nov 10 20:13:09 execute0104 kernel: [633655.384787] INFO: task condor_procd:5059 blocked for more than 120 seconds.\n  Nov 10 20:13:09 execute0104 kernel: [633655.384821] \"echo 0 &gt; /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n  Nov 10 20:13:09 execute0104 kernel: [633655.384868] condor_procd    D ffff88063fc727c0     0  5059   5040 0x00000000\n  Nov 10 20:13:09 execute0104 kernel: [633655.384872]  ffff8806198f77c0 0000000000000086 0000000000000000 ffff88061b1de100\n  Nov 10 20:13:09 execute0104 kernel: [633655.384877]  00000000000127c0 ffff880619ec3fd8 ffff880619ec3fd8 ffff8806198f77c0\n  Nov 10 20:13:09 execute0104 kernel: [633655.384881]  ffff880619ec3fd8 00000001bc7a8c90 ffff88063fffbe00 ffff880c18e5b4e0\n  Nov 10 20:13:09 execute0104 kernel: [633655.384884] Call Trace:\n  Nov 10 20:13:09 execute0104 kernel: [633655.384893]  [&lt;ffffffff81351190&gt;] ? rwsem_down_failed_common+0xe0/0x114\n  Nov 10 20:13:09 execute0104 kernel: [633655.384898]  [&lt;ffffffff810bbc56&gt;] ? __alloc_pages_nodemask+0x186/0x7ab\n  Nov 10 20:13:09 execute0104 kernel: [633655.384902]  [&lt;ffffffff811b5684&gt;] ? call_rwsem_down_read_failed+0x14/0x30\n  Nov 10 20:13:09 execute0104 kernel: [633655.384905]  [&lt;ffffffff81350aaa&gt;] ? down_read+0x17/0x19\n  Nov 10 20:13:09 execute0104 kernel: [633655.384910]  [&lt;ffffffff810d29d7&gt;] ? __access_remote_vm+0x3a/0x1c1\n  Nov 10 20:13:09 execute0104 kernel: [633655.384913]  [&lt;ffffffff810cfae3&gt;] ? tlb_flush_mmu+0x37/0x50\n  Nov 10 20:13:09 execute0104 kernel: [633655.384919]  [&lt;ffffffff8104f291&gt;] ? ns_capable+0x30/0x43\n  Nov 10 20:13:09 execute0104 kernel: [633655.384922]  [&lt;ffffffff810d3a0e&gt;] ? access_process_vm+0x48/0x65\n  Nov 10 20:13:09 execute0104 kernel: [633655.384926]  [&lt;ffffffff81143c5f&gt;] ? environ_read+0xbe/0x13a\n  Nov 10 20:13:09 execute0104 kernel: [633655.384931]  [&lt;ffffffff810fb663&gt;] ? vfs_read+0x9f/0xe6\n  Nov 10 20:13:09 execute0104 kernel: [633655.384933]  [&lt;ffffffff810fb6ef&gt;] ? sys_read+0x45/0x6b\n  Nov 10 20:13:09 execute0104 kernel: [633655.384937]  [&lt;ffffffff813562b2&gt;] ? system_call_fastpath+0x16/0x1b\n</pre>\n\n<p>Potentially related: <a class=\"external\" href=\"https://lkml.org/lkml/2012/6/30/123\">https://lkml.org/lkml/2012/6/30/123</a>\n\n</p><p>I don't think numad has anything to do with cgroups. I think it's basically automating numactl calls.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "todo", "last_change": "2015-Nov-17 14:42", "status": "defer", "created": "2015-Nov-17 14:42", "fixed_version": "2015-Nov-17 14:42", "broken_version": "v080210", "priority": "5", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "tpdownes", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "pcouvare@caltech.edu", "due_date": ""}