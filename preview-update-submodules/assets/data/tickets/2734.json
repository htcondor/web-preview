{"id": 2734, "title": "Ticket #2734: RFE: Implement cgroup-based memory limit", "description": "<blockquote>\nWe currently take advantage of cgroups for memory accounting.  I propose we also start using them for implementing limits and resource sharing.  To start, let's only take into consideration memory limits.\n\n<p>Background reading: <a class=\"external\" href=\"http://www.kernel.org/doc/Documentation/cgroups/memory.txt\">http://www.kernel.org/doc/Documentation/cgroups/memory.txt</a>\n\n</p><p>I see two basic approaches:\n</p><ul>\n<li>Memory limits: Once the job's memory usage hits $(Memory) [the memory attribute from the slot's ad], start sending the job to swap (but do not kill the job).  This behavior can be turned off or on and defaults to on (off?).  This would be very easy to implement - as in, I have a patch ready.\n</li><li>Edge trigger: cgroups can provide threshold-based triggers.  Whenever a counter (such as the memory usage) goes above a pre-defined limit, the kernel will write into an eventfd.  Based on such an occurrence, we could re-evaluate PREEMPT/KILL and push an update to the schedd (which could then re-evaluate SYSTEM_PERIODIC_{HOLD,REMOVE}).  This would introduce no new behavior or knobs.  It would be of medium difficulty to implement (I don't think there are any other examples of using eventfd with DC), and possibly quite hard to make useful.  What \"threshold\" should one use?  $(Memory)?  $(Memory)+1?  Given that the kernel will send an event any time the threshold is crossed, what's the minimum amount of time between updates?\n</li></ul>\n\n<p>The two approaches are not entirely overlapping.  For example, it's not possible to implement a \"send the job to swap instead of killing it\" policy with the second option.  OTOH, the second option allows you to carefully over-commit the node as long as there's sufficient memory available.\n\n</p><p>There are two more exotic options:\n</p><ul>\n<li>true soft limits: When there is memory contention (swapping) on the system, the kernel will try to push the processes in the cgroup toward its soft limit (perhaps $(Memory)).  This way, jobs over $(Memory) will hit swap only if the system is out of memory, but jobs under $(Memory) will likely never hit swap.  Or so the theory goes; haven't actually tested this option out to see if it behaves as advertised.  This would be an easy\n</li><li>OOM-hold: the memory cgroup can hold a process when it would otherwise receive an OOM, and notify condor via an eventfd.  This way, Condor could clean up the process itself, selecting which one is terminated (might be a good idea anyway: it's always frustrating to see the OOM-killer shoot the 10MB condor_master but not the 3GB user process).\n</li></ul>\n\n<p>Thoughts?  My gut says my preferred solution is to introduce a parameter named MEMORY_LIMIT that can have the value of \"hard\", \"soft\" (default), or \"none\".</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Dec-31 11:10:51 by matt:</em> <br/>\n\nNote - SlotID is not unique across dynamic slots, a slot's Name should be unique.\n\n<p>As for cleanup, groups could be deleted when slots are, and wiped on startd startup (similar to the EXECUATE wipe).\n\n</p><p></p><hr/>\n<em>2011-Dec-31 16:18:37 by bbockelm:</em> <br/>\n\nOk, I have locally added Matt's suggested algorithm for calculating a unique cgroup name.  It looks something like this in the end:\n\n<p>/condor/condor_var_lib_condor_execute_slot1@rcf-bockelman.unl.edu\n\n</p><p>It's not precisely human-friendly, but not really horrible.  If someone has a suggestion on how I could do \"condor_foo_bar\" where foo and bar are shorter, human-friendly unique identifiers for the startd/starter, I'd appreciate it.  I suppose we could encode the starter's $CWD, which should also be unique (bonus - no \"@\" in the directory name).\n\n</p><p>Once we settle on a naming scheme, I'll open a ticket to do the automatic cleaning.  There's already enough going on in this patch that I don't want to tackle both at once.\n\n</p><p></p><hr/>\n<em>2012-Jan-16 22:57:17 by bbockelm:</em> <br/>\n\nTalked to Miron tonight - he was more in favor of what I refer to as the \"hard\" limit, as this provides a more predictable limit on swapping (the real killer of node performance).\n\n<p>The argument against the soft limit is that in the transition period (when the over-the-limit job is swapped out to free RAM for the under-the-limit job), you can severely degrade the overall node efficiency.\n\n</p><p></p><hr/>\n<em>2012-Mar-10 12:08:12 by bbockelm:</em> <br/>\n\nWe've run this on about 1,000 cores for a month with no issues (since v3).\n\n<p>Can this get some attention/review from a committer?  I'm trying to reduce the number of custom patches we carry locally.\n</p><hr/>\n<em>2012-Aug-23 13:51:42 by zmiller:</em> <br/>\n\nBulk change of target version from v070802 to v070803 using ./ticket-target-mover.\n<hr/>\n<em>2012-Sep-11 11:06:53 by johnkn:</em> <br/>\n\nBulk change of target version from v070803 to v070804 using ./ticket-target-mover.\n<hr/>\n<em>2012-Sep-19 16:15:53 by zmiller:</em> <br/>\n\nBulk change of target version from v070804 to v070805 using ./ticket-target-mover.\n\n<p></p><hr/>\n<em>2012-Sep-24 11:51:02 by tstclair:</em> <br/>\n\nIs this complete?  Or are we missing some patch on it?\n\n<p></p><hr/>\n<em>2012-Oct-19 13:35:04 by tstclair:</em> <br/>\n\nstill requires docs.\n\n<p></p><hr/>\n<em>2012-Nov-27 13:40:26 by smoler:</em> <br/>\n\nCherry picking documentation from master to V7_9_2-branch.</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/512/memory_limits_v1.patch\">memory_limits_v1.patch</a>\n43859 bytes added by bbockelm on 2011-Dec-30 16:47:02 UTC.\n<br/>\nInitial proposal for memory limits.  Introduces a new configuration parameter, MEMORY_LIMIT, that can be set to \"hard\", \"soft\", or \"none\" (default).  In absence of cgroups, nothing happens.  If set to \"none\", no new behavior is invoked.\n\n<p>If set to \"hard\", jobs may only use the amount of memory dedicated to the slot before going to swap.\n\n</p><p>If set to \"soft\", jobs may use unlimited memory until there is memory contention (i.e., swapping) on the system.  In this case, the kernel will free memory by push the jobs' memory usage back to the slot memory limit (via swapping out the jobs).  This way, we can effectively use the entire resource's memory in absence of contention, but only \"punish\" the processes that go over their limit.\n\n</p><p>Note - most of the patch is a refactoring of the cgroup creation code so it can be shared between the procd and the starter.  Also note that I changed the default cgroup name from \"job_$(Cluster)_$(Proc)\" to \"job_$(Subsystem_name)_$(SlotID)\".  This is to make sure the cgroup is uniquely named (cluster/proc may repeated in the case of multiple schedd's) and will get reused in case of a starter crash.  Because there is a finite number of slots, this will prevent the worst-case-scenario of Condor creating an unbounded number of cgroups.\n<br/>\n</p></li><li><a href=\"attach_get/513/memory_limits_v2.patch\">memory_limits_v2.patch</a>\n48186 bytes added by bbockelm on 2012-Jan-03 13:57:10 UTC.\n<br/>\nSecond version of the patch.  Notable changes:\n<ul>\n<li>Further refactoring of the cgroup utility class to make it more useful in the limit setting.\n</li><li>Addition of CPU share setting.\n</li><li>Cgroups are now named $BASE_CGROUP/condor_$EXECUTE_$(Name), where $BASE_CGROUP and $EXECUTE are taken from param and $(Name) from the machine ad.</li></ul>\n<br/>\n</li><li><a href=\"attach_get/534/memory_limits_v3.patch\">memory_limits_v3.patch</a>\n48223 bytes added by bbockelm on 2012-Feb-16 20:25:00 UTC.\n<br/>\nThis version fixes an upcast issue on nodes with &gt; 2GB RAM / slot.<br/>\n</li><li><a href=\"attach_get/660/Cgroup.odt\">Cgroup.odt</a>\n5658 bytes added by gthain on 2012-Nov-26 20:47:35 UTC.\n<br/>\nerzatz retro design doc<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Nov-27 15:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/eba61c56f4a415a53ba28591c94d9d7c59cf1c63\">[34191]</a></span>: add version history items for new feature and new config knob ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2734\" onclick=\"get_ticket_and_populate_wrapper('2734'); return false;\" title=\"RFE: Implement cgroup-based memory limit\">#2734</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Nov-27 15:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/eb6ea007c4250ec723d85a58aac5acbe47340aad\">[34190]</a></span>: edit new cgroup-based resource limits prose, and add defn for new knob MEMORY_LIMIT ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2734\" onclick=\"get_ticket_and_populate_wrapper('2734'); return false;\" title=\"RFE: Implement cgroup-based memory limit\">#2734</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Nov-27 13:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/05e5be775302ddd4b240b1707674b342c7ebd0c3\">[34189]</a></span>: Document <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2734\" onclick=\"get_ticket_and_populate_wrapper('2734'); return false;\" title=\"RFE: Implement cgroup-based memory limit\">#2734</a></span> Committer: Karen Miller  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Nov-23 14:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/8cb32d6f9bd00b37c6fa8f167ca41a78253ca61f\">[34174]</a></span>: Change cpu.shares from SLOT_WEIGHT to CPUS <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2734\" onclick=\"get_ticket_and_populate_wrapper('2734'); return false;\" title=\"RFE: Implement cgroup-based memory limit\">#2734</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Nov-23 14:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/9a221fc9530ab478c5be112a1dd4d61d6ef25b7e\">[34173]</a></span>: Document <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2734\" onclick=\"get_ticket_and_populate_wrapper('2734'); return false;\" title=\"RFE: Implement cgroup-based memory limit\">#2734</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Nov-07 13:45</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/882b3f2ba5c4ebbb4f52c81fb1f9c16c6e0d65c6\">[34036]</a></span>: Disable cgroup feature for local universe, <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2734\" onclick=\"get_ticket_and_populate_wrapper('2734'); return false;\" title=\"RFE: Implement cgroup-based memory limit\">#2734</a></span>  (By Matthew Farrellee )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Apr-20 20:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/3fb066625103da888afc7a4e7bd0e86d842d1e0c\">[31782]</a></span>: Final files to add for <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2734\" onclick=\"get_ticket_and_populate_wrapper('2734'); return false;\" title=\"RFE: Implement cgroup-based memory limit\">#2734</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Apr-20 19:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/9c03572d6f090c6e4f2a97539a7015165b2d2912\">[31781]</a></span>: Forgot to add two files to previous commit <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2734\" onclick=\"get_ticket_and_populate_wrapper('2734'); return false;\" title=\"RFE: Implement cgroup-based memory limit\">#2734</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Apr-20 17:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/cf1c26b73b74aee008ceb958486ba957871ab4d7\">[31780]</a></span>: Enforceable cgroup limits <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2734\" onclick=\"get_ticket_and_populate_wrapper('2734'); return false;\" title=\"RFE: Implement cgroup-based memory limit\">#2734</a></span>  (By Greg Thain )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2012-Nov-27 13:40", "status": "resolved", "created": "2011-Dec-28 22:58", "fixed_version": "2011-Dec-28 22:58", "broken_version": "v070800", "priority": "4", "subsystem": "Daemons", "assigned_to": "gthain", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "bbockelm@cse.unl.edu, eje@cs.wisc.edu, tstclair@redhat.com", "due_date": ""}