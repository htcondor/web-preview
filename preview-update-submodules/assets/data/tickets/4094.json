{"id": 4094, "title": "Ticket #4094: Shared Port forks", "description": "<blockquote>\nIt's really quite silly to have shared port fork - on busy schedds, CMS has seen it actually hit our limit of 1,000 child processes and caused blocking.\n\n<p>The protocol server is a single RPC - we send data and wait for an ACK from the server.  Instead of forking, we should just register the socket for response from DC and handle from the parent process.</p></blockquote>", "remarks": "<blockquote>\n<em>2013-Nov-22 13:04:55 by tannenba:</em> <br/>\n\nYour suggestion above assumes the shared port will only block waiting for a response from the target daemon.  What about if the shared port blocks writing out the request?  Processes cannot send an infinite amount of data into a domain socket, right?  I think concern of blocking when writing the request was a primary motivation for forking.\n\n<p></p><hr/>\n<em>2013-Nov-22 13:50:13 by bbockelm:</em> <br/>\n\nHi Todd,\n\n<p>Theoretically, yes, that's an issue for a general service.\n\n</p><p>Practically, this is not an issue if we assume we are talking to HTCondor daemons.  We write 1 byte into the socket, so the HTCondor daemon would have to call accept() 16k times without reading out that first byte.\n\n</p><p>In testing, you block on somaxconn far before the socket itself.\n\n</p><p>(FYI - code is at <a class=\"external\" href=\"https://github.com/bbockelm/htcondor/tree/shared_port_nonblocking\">https://github.com/bbockelm/htcondor/tree/shared_port_nonblocking</a>; running through NMI now)\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2014-Feb-08 10:19:13 by bbockelm:</em> <br/>\n\nHi Todd,\n\n<p>Reviewing the last commit - can you please use <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> APIs (<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=InsertAttr\" title=\"Insert Attr\">InsertAttr</a></span>) instead of compat_classad APIs (Assign) for new code?\n\n</p><p>Thanks.</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4456\" onclick=\"get_ticket_and_populate_wrapper('4456'); return false;\" title=\"Shared port daemon steadily leaking file descriptors\">#4456</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nShared port daemon steadily leaking file descriptors</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-27 15:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e23e62fe73d71f3e09549a87d37de95651f08f02\">[39504]</a></span>: add 8.1.4 version history item <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4094\" onclick=\"get_ticket_and_populate_wrapper('4094'); return false;\" title=\"Shared Port forks\">#4094</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-10 14:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/326e6e1b649cbcd59f6146180fcb29d94a2b9457\">[39373]</a></span>: Fix intermittent shared_port errors on MacOS. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4094\" onclick=\"get_ticket_and_populate_wrapper('4094'); return false;\" title=\"Shared Port forks\">#4094</a></span> Problem was new code to not fork the shared_port was closing the socket being passed BEFORE receiving an ack from the endpoint. This caused intermittent failures on MacOS. The problem was that daemonCore was closing the socket because the KEEP_STREAM\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-06 14:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/d901be183a6a17acc99d1268c236bcddff47ed11\">[39362]</a></span>: First pass at some basic operational metrics for shared_port. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4094\" onclick=\"get_ticket_and_populate_wrapper('4094'); return false;\" title=\"Shared Port forks\">#4094</a></span> Just some basic counters for things like number of sockets in progress of being passed, number of sockets successfully passed, number that failed, etc. Since the shared_port currently does not send an ad to the collector, these stats\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-04 23:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/010ac07530362f4b4c32988b0401447d4a036d0d\">[39327]</a></span>: Only fixes to whitespace (tab stop is 4, not 8), add comments. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4094\" onclick=\"get_ticket_and_populate_wrapper('4094'); return false;\" title=\"Shared Port forks\">#4094</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-04 23:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/a5a6de980019e4d0e6aa174b854be758ded78734\">[39326]</a></span>: ifdef out portions which will not compile under Windows. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4094\" onclick=\"get_ticket_and_populate_wrapper('4094'); return false;\" title=\"Shared Port forks\">#4094</a></span> Committer: Todd Tannenbaum  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-04 23:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/49356a8fc60aa5966a62607fd1691256833b954b\">[39325]</a></span>: Mark socket as non-blocking when a connection attempt is made. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4094\" onclick=\"get_ticket_and_populate_wrapper('4094'); return false;\" title=\"Shared Port forks\">#4094</a></span> This causes clients to be rejected as soon as the daemon's backlog is hit. This is equivalent behavior to the case where the daemon is listening on the network and the TCP socket backlogs. Committer: Todd Tannenbaum  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-04 23:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/947c03297e05a40e5c7d163a13df64dd1bab26a4\">[39324]</a></span>: First pass at removing calls to fork from the shared port daemon. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4094\" onclick=\"get_ticket_and_populate_wrapper('4094'); return false;\" title=\"Shared Port forks\">#4094</a></span> Instead of having the shared port fork, the idea is to use non-blocking I/O by simply registering the socket for a response from daemonCore in the parent process. Committer: Todd Tannenbaum  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Nov-22 13:32</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c4d630f41b2b0bb26aeaf815120aa475fb21f866\">[40674]</a></span>: ifdef out portions which will not compile under Windows. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4094\" onclick=\"get_ticket_and_populate_wrapper('4094'); return false;\" title=\"Shared Port forks\">#4094</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Nov-22 12:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/203c3e860fecf5d713d0ea0f1914e928bf453ed7\">[40673]</a></span>: Mark socket as non-blocking when a connection attempt is made. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4094\" onclick=\"get_ticket_and_populate_wrapper('4094'); return false;\" title=\"Shared Port forks\">#4094</a></span> This causes clients to be rejected as soon as the daemon's backlog is hit. This is equivalent behavior to the case where the daemon is listening on the network and the TCP socket backlogs.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Nov-22 10:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c9b2d98496c104ee76d91ba871ef1908cc1c0d5c\">[40672]</a></span>: Fix handling of NULL char *; fix non-blocking logic. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4094\" onclick=\"get_ticket_and_populate_wrapper('4094'); return false;\" title=\"Shared Port forks\">#4094</a></span>  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2014-Feb-27 15:26", "status": "resolved", "created": "2013-Nov-22 10:02", "fixed_version": "2013-Nov-22 10:02", "broken_version": "", "priority": "2", "subsystem": "DaemonSharedP", "assigned_to": "tannenba", "derived_from": "#4136", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "bbockelm@cse.unl.edu tannenba@cs.wisc.edu", "due_date": ""}