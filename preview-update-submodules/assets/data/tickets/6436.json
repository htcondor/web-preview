{"id": 6436, "title": "Ticket #6436: Version information asymmetric.", "description": "<blockquote>\nIn some cases -- perhaps only when a daemon is born with a security session? -- the server (parent) will know the client's (child's) version, but the client (child) will know nothing about the server's (parent's) version -- <code>get_peer_version()</code> will return NULL.  This can easily cause severe protocol problems.\n\n<p>In particular, CommitTransaction() in 8.3.4 gained the ability to send back a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> on failure; we have since used this ability to add submit requirement reasons (and most recently, warnings).  If the client doesn't know the server's version number, the client assumes the server does NOT send such a classad and will fail if it does.  This problem was easy to miss previously because this would only happen in the case where there had been some other problem, so it probably just looked like part of that problem (and would go away when that problem was fixed).\n\n</p><p>This did not cause the whole test suite to fail because the shadow doesn't care about successfully updating the schedd until the final update, which must succeed.  Since the protocol error happens /after/ the transaction committed, the job ad the shadow checks after being restarted is correct and the shadow exits with a happy job-complete exit code.  Other clients, like the gridmanager, are more sensitive to failure.</p></blockquote>", "remarks": "<blockquote>\n<em>2017-Oct-31 11:40:46 by jfrey:</em> <br/>\n\nThis imbalance can occur due to how the peer versions for the socket are set when resuming a cached security session. The client gets the server's version from the session, if it's there. The client always sends its version to the server as part of starting a new command. The server uses that as the client's version for the socket. Since there's no reply from the server to the client on a session resumption, there's no opportunity for the server to send it's version back to the client.\n\n<p>For a negotiated security session, this works ok. <code>RemoteVersion</code> is set in the session policy info on both sides, and it should match the version of the actual peer process.\n\n</p><p>But things can go wrong for a non-negotiated security session (e.g. parent/child, match password). <code>RemoteVersion</code> would need to be explicitly set when calling <code>CreateNonNegotiatedSecuritySession()</code>, and we don't do that (sometimes because we don't know that information). If the session info doesn't include <code>RemoteVersion</code> on either side, then when using the session for a new command, the client doesn't know the server's version, but the server does know the client's version (because the client always sends it).\n\n</p><p></p><hr/>\n<em>2017-Oct-31 11:54:00 by jfrey:</em> <br/>\n\nIf we want to maintain peer version symmetry, here's a proposed fix:\n<ul>\n<li>When using a cached session, either the client doesn't send <code>RemoteVersion</code> to the server, or the server ignores <code>RemoteVersion</code> for setting the socket's peer version, relying on only the cached session info.\n</li><li>For the parent/child non-negotiated session, explicitly set <code>RemoteVersion</code> to the parent's version in the session info.\n</li><li>Adding version info to other non-negotiated sessions will be tricky, and is beyond the scope of this ticket.\n</li></ul>\n\n<p></p><hr/>\n<em>2017-Dec-20 11:33:01 by jfrey:</em> <br/>\n\nThis ticket has no user-visible changes, so no version history.\n\n<p></p><hr/>\n<em>2017-Dec-20 12:00:33 by zmiller:</em> <br/>\n\n<strong>CODE REVIEW</strong>:  Also, I did discuss these changes with Jaime long ago, so I sign off on them.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Nov-02 11:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/39279299bd4a322e98762d173be553afcf73f98d\">[52907]</a></span>: Remove old version check for renaming of stdout/err. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6436\" onclick=\"get_ticket_and_populate_wrapper('6436'); return false;\" title=\"Version information asymmetric.\">#6436</a></span> The syscall_sock doesn't have version info for the shadow's version check when SEC_ENABLE_MATCH_PASSWORD_AUTHENTICATION=True (the default). Without the check, if the starter or shadow is older than 7.7.2, the job's stdout/err may be written to\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Nov-02 11:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0601f4b0b9f6d2da95e9d4962d8ab0b93fe29db0\">[52906]</a></span>: Move version check for dprintf_stats RPC in the starter. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6436\" onclick=\"get_ticket_and_populate_wrapper('6436'); return false;\" title=\"Version information asymmetric.\">#6436</a></span> Due to recent changes with non-negotiated security sessions, the shadow's version may not be available in the syscall_sock object. Move this version check to the call sites in JICShadow, which has a copy of the shadow's version.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Nov-02 11:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/ec35362fc9c709784aaacfa8a2b2370e2fc62ce1\">[52905]</a></span>: Maintain symmetry of version information between cedar peers. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6436\" onclick=\"get_ticket_and_populate_wrapper('6436'); return false;\" title=\"Version information asymmetric.\">#6436</a></span> When using a cached security session that lacks peer version information for a new connection, the server should not copy the client version info from the resume-session ad into the sock object. The client's sock object won't have peer\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Nov-02 10:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/9243cef947840462ca687c1fd978f04eaf9df7a5\">[52904]</a></span>: Insert peer version info for parent/child session. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6436\" onclick=\"get_ticket_and_populate_wrapper('6436'); return false;\" title=\"Version information asymmetric.\">#6436</a></span> We can assume that a parent and child daemon are the same version, so explicitly set that in the their non-negotiated security session. This will be carried over into the sock object for any cedar connection between them.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2017-Dec-20 12:00", "status": "resolved", "created": "2017-Oct-09 16:06", "fixed_version": "2017-Oct-09 16:06", "broken_version": "v080304", "priority": "2", "subsystem": "Libs", "assigned_to": "zmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}