{"id": 5136, "title": "Ticket #5136: Starter can wait forever when connection to shadow closes", "description": "<blockquote>\nWith the new job lease keep alive protocol introduced in 8.3.2, the starter needs to start a timer when its connection to the shadow goes away. If the job lease time elapses with a reconnection, then the starter exits in a way that notifies the startd that the lease has expired.\n\n<p>Currently, if the connection closes after the job as exited, the starter doesn't start the timer, and so will wait forever for a reconnect attempt. If the shadow/schedd sends a DEACTIVATE_CLAIM or RELEASE_CLAIM to the startd, this isn't a problem. But if they don't, then the startd/starter will wait around forever. This can happen very easily if the startd is using CCB and the CCB server goes down.</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Jul-07 11:39:36 by bbockelm:</em> <br/>\n\nOne approach I'd like to see is to have the condor_starter send a heartbeat to the startd each time the lease is renewed with the shadow.  Having the startd delegate all responsibility to the starter (by simply looking at the starter's exit code) is insufficient.\n\n<p>This would help prevent future bugs along these lines.  In this case, if the <code>condor_startd</code> knew that the lease updates were not going out, it could have contacted the schedd about the claim and found out that it was no longer valid.\n\n</p><p></p><hr/>\n<em>2015-Jul-07 15:08:33 by jfrey:</em> <br/>\n\nWe can consider that for a future release. I think it's too big a change for 8.3.7.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-07 11:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c5a559c6a85a4626454f8232b9e4a1f2f3b4e252\">[45229]</a></span>: Docs for hanging starter bug fix. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5136\" onclick=\"get_ticket_and_populate_wrapper('5136'); return false;\" title=\"Starter can wait forever when connection to shadow closes\">#5136</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-07 11:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/d88885acd426df4f09608539a7066dfd7243fdfb\">[45228]</a></span>: Starter can wait forever when connection to shadow closes. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5136\" onclick=\"get_ticket_and_populate_wrapper('5136'); return false;\" title=\"Starter can wait forever when connection to shadow closes\">#5136</a></span> When the handler indicating that the connection to the shadow has probably closed is invoked, use the whoami RPC instead of calling updateShadow(). The latter won't attempt to use the connection if the job has completed, resulting in the\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Jul-08 15:20", "status": "resolved", "created": "2015-Jul-07 09:57", "fixed_version": "2015-Jul-07 09:57", "broken_version": "v080302", "priority": "1", "subsystem": "DaemonsExecNode", "assigned_to": "jfrey", "derived_from": "#4490", "creator": "jfrey", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "", "due_date": ""}