{"id": 3223, "title": "Ticket #3223: PU claim reuse after a rm fails", "description": "<blockquote>\nAfter removing a pu-job if the claim for a machine is trying to be reused it is often the case where you will have lingering starters trying to send their last update to the shadow when the shadow has already exited.\n\n<p></p><div class=\"code\">\n<pre class=\"code\">1.) Schedd receives condor_rm event sends message to shadow\n2.) Shadow notify starters\n3.) Starters try to cleanup sending message to startd\n4.) Shadow does not hang around waiting for cleanup\n5.) Startd &amp;&amp; Starter hang in a holding pattern waiting for shadow\n6.) Schedd spins a new shadow trying to reuse claim for next job\n7.) New shadow waits around for cleanup of old job which never happens.\n8.) Shadow gives up\n9.) Claim released.\n</pre></div>\n\n\n<p>see: <a class=\"external\" href=\"https://bugzilla.redhat.com/show_bug.cgi?id=809732\">https://bugzilla.redhat.com/show_bug.cgi?id=809732</a> for more details.</p></blockquote>", "remarks": "<blockquote>\n<em>2012-Sep-10 15:13:28 by tstclair:</em> <br/>\n\nGood excuse to nix MPIShadow ++ rename <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MpiResource\" title=\"Mpi Resource\">MpiResource</a></span>\n\n<p></p><hr/>\n<em>2012-Sep-11 15:47:07 by tstclair:</em> <br/>\n\nSo currently there is a clever little hack that can be employed with WAIT_FOR_ALL to ensure that all resources have checked back in via there ending syscall method. REMOTE_CONDOR_job_exit\n\n<p>The question I have now is whether we should default PU to always WAIT_FOR_ALL, because without that case there are numerous conditions you can create which will make the starter fail to perform it's last update.\n\n</p><p></p><hr/>\n<em>2012-Nov-14 16:41:19 by tstclair:</em> <br/>\n\nDuring testing we found that there can be multiple paths through parallel_shadow::shutdown that cause it to still exist before the starters last update, even though starter has already sent at least one in order for shutdown to occur.  The simplest solution is to not block the starter on it's final-final update, due to the race conditions on connection closings that call shutdown.\n<hr/>\n<em>2012-Dec-11 16:39:58 by johnkn:</em> <br/>\n\nBulk change of target version from v070902 to v070903 using ./ticket-target-mover.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/wiki-archive/tickets/?ticket=3228\" onclick=\"get_ticket_and_populate_wrapper('3228'); return false;\" title=\"Remove mpi_universe\">#3228</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nRemove mpi_universe</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Nov-14 16:38</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/da559a7b29b68a6d25b39727d5d6c49ba10b4117\">[34119]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=3223\" onclick=\"get_ticket_and_populate_wrapper('3223'); return false;\" title=\"PU claim reuse after a rm fails\">#3223</a></span> During testing we had found race conditions in the shadow that were caused by closing connections. These closing connections hooked through the syscall mechanism which in turn called shutdown. In cases where the starter was going to send it's final-final update just don't block.  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Sep-13 12:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/09764c3d84da07152ed17dddf8db9a44ab70ea83\">[33374]</a></span>: Revert \"Revert \"Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=3223\" onclick=\"get_ticket_and_populate_wrapper('3223'); return false;\" title=\"PU claim reuse after a rm fails\">#3223</a></span> Initial commit to fix WAIT_FOR_ALL semantics in PU.\"\" This reverts commit c8bbbc6b2837f676629cb4e8ffeee3ace7325a69. Conflicts: src/condor_shadow.V6.1/mpishadow.cpp  (By Matthew Farrellee )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Sep-13 12:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c8bbbc6b2837f676629cb4e8ffeee3ace7325a69\">[33351]</a></span>: Revert \"Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=3223\" onclick=\"get_ticket_and_populate_wrapper('3223'); return false;\" title=\"PU claim reuse after a rm fails\">#3223</a></span> Initial commit to fix WAIT_FOR_ALL semantics in PU.\" This reverts commit 98ff6f687c5988c4e0b2c9ab6cea5b4783bc39a6.  (By Matthew Farrellee )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Sep-12 09:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/98ff6f687c5988c4e0b2c9ab6cea5b4783bc39a6\">[33316]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=3223\" onclick=\"get_ticket_and_populate_wrapper('3223'); return false;\" title=\"PU claim reuse after a rm fails\">#3223</a></span> Initial commit to fix WAIT_FOR_ALL semantics in PU. + I removed the mpishadow b/c it is unused and very confusing as PU references mpiresource.  (By Timothy St. Clair )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2013-May-15 09:30", "status": "resolved", "created": "2012-Sep-07 16:14", "fixed_version": "2012-Sep-07 16:14", "broken_version": "v070600", "priority": "3", "subsystem": "Parallel", "assigned_to": "gthain", "derived_from": "", "creator": "tstclair", "rust": "", "customer_group": "other", "visibility": "public", "notify": "gthain@cs.wisc.edu, tstclair@redhat.com, matt@cs.wisc.edu", "due_date": ""}