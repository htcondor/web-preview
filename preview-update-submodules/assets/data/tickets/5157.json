{"id": 5157, "title": "Ticket #5157: isStillRunnable should examine job lease", "description": "<blockquote>\nWhen a busy schedd is restarted, we sometimes run out lease durations.  This means there may sometimes be thousands of timed-out jobs.  However, the schedd never checks to see if the lease duration has expired: only the shadow does this.\n\n<p>Our busiest schedds have 1s duty cycles - hence if there are 5k lease-expired jobs, we spend upward of an hour spawning shadows that ultimately do nothing except immediately exit with a lease-duration-expired.  During that time, we have thousands new matches that go unused.  By time the schedd launches <strong>those</strong> shadows, the glidein is sometimes gone.</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Jul-21 16:12:23 by jfrey:</em> <br/>\n\nAfter a restart, the schedd does check the job lease before adding each job its list of jobs to attempt reconnecting to. But it doesn't check the lease when it's ready to spawn the shadow.\n\n<p></p><hr/>\n<em>2015-Jul-21 20:32:37 by bbockelm:</em> <br/>\n\nYeah - I think that's precisely the problem.  It does not take an extremely busy schedd (or a very large JOB_START_DELAY) for the shadow launch queue to exceed the default job lease.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Aug-13 13:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/7a934e742b2c00f54b182d8c6ac7af7369c1b597\">[45612]</a></span>: add sentence to 8.3.8 version history item clarifying why the change was made <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5157\" onclick=\"get_ticket_and_populate_wrapper('5157'); return false;\" title=\"isStillRunnable should examine job lease\">#5157</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Aug-07 13:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/2d7c51035ab8b7478b4884e06df29ffd1fa336e7\">[45530]</a></span>: Docs for schedd not starting shadow if lease expired. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5157\" onclick=\"get_ticket_and_populate_wrapper('5157'); return false;\" title=\"isStillRunnable should examine job lease\">#5157</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-22 10:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/4218c05740e5f309e1a0be5b5e204bf99ec2128e\">[45385]</a></span>: Recheck job lease just before spawning shadow. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5157\" onclick=\"get_ticket_and_populate_wrapper('5157'); return false;\" title=\"isStillRunnable should examine job lease\">#5157</a></span> When the schedd restarts, it checks whether each running job's lease is valid before adding it to the queue of shadows to restart. But the lease can expire before the schedd gets around to actually spawning the shadow. Recheck the lease in Scheduler::StartJobHandler()\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "incident", "last_change": "2015-Aug-07 13:45", "status": "resolved", "created": "2015-Jul-16 11:16", "fixed_version": "2015-Jul-16 11:16", "broken_version": "", "priority": "2", "subsystem": "DaemonsSubmitNode", "assigned_to": "jfrey", "derived_from": "#5162", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "tannenba@cs.wisc.edu, bbockelm@cse.unl.edu", "due_date": ""}