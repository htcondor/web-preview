{"id": 5392, "title": "Ticket #5392: HTCondor View: Merge multiple data files", "description": "<blockquote>\nIt should be possible to specify multiple input files, and have them loaded and merged into a single data set.  This is useful for data sets that roll.  Say you have a log that rolls daily; if you just load the most recent, early in the day you'll only have a little data.  If you load the two most recent, you're guaranteed to have at least 1 full day worth of data.\n\n<p>404-not-found is treated as an empty file, <em>unless</em> <em>all</em> files were 404. If no file could be loaded, it is an error.\n\n</p><p>Ideally it would also detect if the two files were wildly different formats and complain.\n\n</p><p>If we do this, we almost certainly also want <span class=\"ticket\"><a class=\"new\" href=\"/wiki-archive/tickets/?ticket=5393\" onclick=\"get_ticket_and_populate_wrapper('5393'); return false;\" title='HTCondor View: Filter on timestamps relative to \"now\"'>#5393</a></span> Filter on timestamps relative to \"now\".\n\n</p><p>General thoughts:\n\n</p><p>addUrlGetters should take a list of urls. this.data_loading ={url:status} should track them. Put following step in this.data_complete. Send all queries out simultaneously. Boldly assume we'll get a small enough number of URLs that the cost of the load calls will be small enough.  <em>What about cross-site jsonp!?</em>\n\n</p><p>Each each finishes/callbacks, immediately update the active grid (create/merge), then update state. When status of all is \"loaded\" or \"not found\", call this.data_complete(grid). (May not need this.data_complete; handle via closure?)\n\n</p><p>This means we can't</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Dec-01 14:26:00 by adesmet:</em> <br/>\n\nImplemented</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2015-Dec-01 14:26", "status": "resolved", "created": "2015-Nov-12 00:40", "fixed_version": "2015-Nov-12 00:40", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "#5351", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}