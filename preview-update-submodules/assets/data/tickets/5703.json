{"id": 5703, "title": "Ticket #5703: An /etc/condor/groups file?", "description": "<blockquote>\nI proposed, for condor_annex, that the annex daemon map from authenticated Condor user to EC2 credentials.  After some additional thought, this seemed like too limited a mechanism, for the following to reasons:\n\n<p></p><ul>\n<li>A glideInWMS user (or other factory) may be making EC2 requests on behalf of many users.\n</li><li>Any individual user may well have more than one set of credentials (will certainly have at least one set per service, in the glorious future where condor_annex &amp; co support services other than AWS).\n</li></ul>\n\n<p>The obvious solution was to permit the user to specify which credential(s) to use.  The obvious way to do that, since we don't want to be in the business of transferring credentials around, is to allow the user to specify credentials by (partial?) path name on the annexd's machine.  This has some obvious security implications, so it seems wise to require a whitelist, and make the user-to-credentials map one-to-many.  If no credential is specified, the first one is used.\n\n</p><p>So I asked Zach about the security implications of this (sounds generally OK), but he also pointed out that users could also share credentials in this manner, and as such the credential names were like group names, which is a problem we've been wanting to solve for our users for years.\n\n</p><p>So the proposal is as follows: an <code>/etc/groups</code> -like file for mapping authenticated Condor users to groups, and another file (or set of files, e.g., <code>/etc/condor/groups.d</code>) with group-specific <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>.  Certain attributes would have specific meaning to HTCondor -- like \"allowed_ec2_credentials\" and \"default_accounting_group\" -- but others would be arbitrary and available for use by the admin (as a subclassad?) in SUBMIT_REQUIREMENTS (and/or SUBMIT_TRANSFORMATIONS, or whatever we end up calling it).  I further propose a special attribute that would be a list of attributes from the group ad for  the schedd to insert in the job ad at submit time, after the user's group has been validated.</p></blockquote>", "remarks": "<blockquote>\n<em>2016-Jun-03 15:26:52 by tlmiller:</em> <br/>\n\nToddT points out that this entire proposal could be subsumed into the rewrite-on-submit code, as long as we make that available outside of the schedd and add a few things to handle the special case of validating group membership (that is, if Zach is in both the Physics and CS groups, he should be able to submit jobs with either Physics or CS, but not with any other group; attempts to do so should fail.  That could done with a function which returns the special mapping-rejected group, and having SUBMIT_REQUIREMENTS reject that job by default).\n\n<p>Tickets <span class=\"ticket\"><a class=\"abandoned\" href=\"/wiki-archive/tickets/?ticket=4804\" onclick=\"get_ticket_and_populate_wrapper('4804'); return false;\" title=\"Managed condor_submit transforms\">#4804</a></span> and <span class=\"ticket\"><a class=\"abandoned\" href=\"/wiki-archive/tickets/?ticket=5613\" onclick=\"get_ticket_and_populate_wrapper('5613'); return false;\" title=\"how best to transform job classad prior to submission\">#5613</a></span> are about submit-time job (<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span>) rewriting.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "experimental", "last_change": "2016-Jun-03 15:29", "status": "resolved", "created": "2016-May-31 15:16", "fixed_version": "2016-May-31 15:16", "broken_version": "", "priority": "4", "subsystem": "Libs", "assigned_to": "", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, zmiller@cs.wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}