{"id": 1824, "title": "Ticket #1824: Better error message if standard universe starter times out on read", "description": "<blockquote>\nIf the standard universe condor_starter times out while waiting for the shadow in REMOTE_CONDOR_startup_info_request, it handles this by failing an ASSERT, leaving an unhelpful stack trace and no explanation.  Example:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">12/21 12:16:54 ********** STARTER starting up ***********\n12/21 12:16:54 ** $CondorVersion: 7.4.4 Oct 13 2010 BuildID: 279383 $\n12/21 12:16:54 ** $CondorPlatform: X86_64-LINUX_RHEL5 $\n12/21 12:16:54 ******************************************\n12/21 12:16:54 Submitting machine is \"REDACTED HOST NAME\"\n12/21 12:16:54 EventHandler {\n12/21 12:16:54  func =3D 0x4fcd4a\n12/21 12:16:54  mask =3D SIGALRM SIGHUP SIGINT SIGUSR1 SIGUSR2 SIGCHLD SIGTSTP\n12/21 12:16:54 }\n12/21 12:16:54 Done setting resource limits\n12/21 12:16:54  *FSM* Transitioning to state \"GET_PROC\"\n12/21 12:16:54  *FSM* Executing state func \"get_proc()\" [  ]\n12/21 12:16:54 Entering get_proc()\n12/21 12:16:54 Entering get_job_info()\n12/21 12:21:54 condor_read(): timeout reading 5 bytes from &lt;REDACTED IP ADDRESS&gt;.\n12/21 12:21:54 IO: Failed to read packet header\nStack dump for process 13598 at timestamp 1292962914 (13 frames)\ncondor_starter(dprintf_dump_stack+0xb7)[0x4f8348]\ncondor_starter[0x4f85b6]\n/lib64/libpthread.so.0[0x3b2c40eb10]\n/lib64/libc.so.6(gsignal+0x35)[0x3b2b830265]\n/lib64/libc.so.6(abort+0x110)[0x3b2b831d10]\n/lib64/libc.so.6(__assert_fail+0xf6)[0x3b2b8296e6]\ncondor_starter(REMOTE_CONDOR_startup_info_request+0x1a1)[0x4f132f]\ncondor_starter(_Z12get_job_infov+0x52)[0x4c296a]\ncondor_starter(_Z8get_procv+0x21)[0x4c2a87]\ncondor_starter(_ZN12StateMachine7executeEv+0x20e)[0x4fd056]\ncondor_starter(main+0x157)[0x4c3923]\n/lib64/libc.so.6(__libc_start_main+0xf4)[0x3b2b81d994]\ncondor_starter(__gxx_personality_v0+0x3e1)[0x4c2149]\n12/21 12:21:54 ERROR \"Can't find transition out of state \"GET_PROC\" for event \"CHILD_EXIT\"\" at line\n326 in file state_machine_driver.cpp\n</pre></div>\n\n\n<p>This is not particularly helpful and suggests something scary is happening.  Connections timing out are not particularly rare problems.  We should eliminate the noise.  The key bit there is \"timeout reading 5 bytes.\"\n\n</p><p>(Why would this happen?  If it's a previously checkpointed job using a checkpoint server, but the checkpoint server cannot be accessed, the standard universe shadow will keep trying to contact the checkpoint server with exponential backoff for about an hour, leaving the poor starter hanging.  Those interested and with access can see condor-admin 21467 to see the real world example that the above is based on.)</p></blockquote>", "remarks": "<blockquote>\n<hr/>\n<em>2011-Feb-01 16:20:02 by tannenba:</em> <br/>\n\nBulk change of target version from v070506 to NULL using ./ticket-target-mover.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2011-Feb-01 16:21", "status": "new", "created": "2010-Dec-23 17:15", "fixed_version": "2010-Dec-23 17:15", "broken_version": "v070404", "priority": "4", "subsystem": "Daemons", "assigned_to": "", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}