{"id": 775, "title": "Ticket #775: Optimize daemon-core timer code for gridmanager usage", "description": "<blockquote>\nStress-testing of the gridmanager with 10,000s of jobs has revealed that daemon-core's timer code doesn't handle 10,000s of timers that get reset frequently very well. It's unclear yet whether we need to redesign the timer code's data structures to better handle the gridmanager's use-case. But I have identified some simple changes that should provide significant improvements. Some of these save time, others save space. These are all changes to the <span class=\"quote\">TimerManager</span> class.\n\n<p></p><ul>\n<li>Change Timer::timeslice to a pointer and remove Timer::has_timeslice. If Timer::timeslice is NULL, then there isn't a Timeslice for that timer. Also fix up calls that take a Timeslice to pass by reference rather than by value.\n</li><li>Maintain a tail pointer in <span class=\"quote\">TimerManager</span>. If a timer's 'when' member is TIMER_NEVER, just throw the timer on the end of the list.\n</li><li>Remove Timer::is_cpp and just test if Event[cpp] and Release[cpp] are NULL.\n</li><li>TimerManager::ResetTimer() ends up traversing the list three times, once in ResetTimer(), once in CancelTimer(), and once in NewTimer(). At least one of these can be eliminated.\n</li><li>In many places, a timer that's rescheduled is destructed and its components passed to NewTimer() for recreation. Should break insertion out into a separate, private method and hand it filled out Timer structs.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2009-Oct-08 15:08:16 by jfrey:</em> <br/>\n\nI've pushed a change for the first three items in the list above to V7_4-branch. The attached patch <code>diff.bnl</code> contains changes for the last two points.\n\n<p></p><hr/>\n<em>2009-Oct-08 16:11:23 by danb:</em> <br/>\n\nI don't spot any problems in this patch.  Looks good!\n\n<p></p><hr/>\n<em>2009-Oct-08 17:29:46 by jfrey:</em> <br/>\n\nI pushed the patch to V7_4-branch.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/109/diff.bnl\">diff.bnl</a>\n21342 bytes added by jfrey on 2009-Oct-08 18:13:23 UTC.\n<br/>\nPatch to simplify <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=TimerManager\" title=\"Timer Manager\">TimerManager</a></span> code in daemon-core.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Oct-11 20:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/03d1a2a79492a27ed11fe40d5c3753a2bb8c0bba\">[16011]</a></span>: Fixed use of getTimeToNextRun in ab960504, needs to be added to time(NULL) Timers that used a Timeslice were spinning CPUs, most notibly the Collector and its CCBServer::PollSockets timer. It was being renewed in the past.\u00a0[...]\n (By Matthew Farrellee )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Oct-10 09:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e69759c249796d7f1c779370cc8b6c6cc7b4988b\">[15994]</a></span>: Fixed problem in timer code. DAGMan was EXCEPTing because it called DC_Exit from inside of a timer. This was causing numerous DAGMan tests to timeout and fail. The EXCEPT was recently added in <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=775\" onclick=\"get_ticket_and_populate_wrapper('775'); return false;\" title=\"Optimize daemon-core timer code for gridmanager usage\">#775</a></span>.  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Oct-08 17:28</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/ab960504ae1896c677f6c759e696ec4d7b66fc55\">[15968]</a></span>: Rearrange code in daemon-core's <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=TimerManager\" title=\"Timer Manager\">TimerManager</a></span>. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=775\" onclick=\"get_ticket_and_populate_wrapper('775'); return false;\" title=\"Optimize daemon-core timer code for gridmanager usage\">#775</a></span> * Now easier to understand. * Timer structs no longer copied, destroyed and recreated unnecessarily. * Eliminate extra traversals of the timer list.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Oct-08 13:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/4d9be948aa4555e962b7df167ee875454e6921ab\">[15957]</a></span>: Simple changes to daemon-core's timer code. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=775\" onclick=\"get_ticket_and_populate_wrapper('775'); return false;\" title=\"Optimize daemon-core timer code for gridmanager usage\">#775</a></span> * Keep Timeslice objects only when needed, reduce copying. * Remove is_cpp member from Timer struct. * Add a tail pointer for efficient insertion of timers that use TIMER_NEVER.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Jan-31 13:41", "status": "resolved", "created": "2009-Sep-23 16:48", "fixed_version": "2009-Sep-23 16:48", "broken_version": "v070400", "priority": "4", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "#760", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "dan@hep.wisc.edu", "due_date": ""}