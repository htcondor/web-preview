{"id": 7186, "title": "Ticket #7186: condor_submit -i race condition with Docker jobs", "description": "<blockquote>\nBrian Bockelman reports:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">bbockelm 8:39 AM\nHi - is it known / understood that condor_submit -i doesn't work with Docker universe jobs?\nThis wasn't exactly what I wanted to do....\n\ncondor   1Brian Bockelman reports:\n\n{code}\nbbockelm 8:39 AM\nHi - is it known / understood that condor_submit -i doesn't work with Docker universe jobs?\nThis wasn't exactly what I wanted to do....\n\ncondor   17368  0.1  0.0  64788 11932 ?        Ss   08:36   0:00  |   \\_ condor_starter -f -a slot1_4 submit-1.chtc.wisc.edu\ncondor   17558  0.6  0.3 428612 48048 ?        Ssl  08:36   0:00  |       \\_ /usr/bin/docker create --cpu-shares=100 --memory=2048m --cap-drop=all --hostname bbockelm-8246459.0-c038.chtc.wisc.edu --name HTCJob8246459_0_slot1_4_PID17368 --\nbbockelm 17590  0.0  0.0 114948  7924 ?        Ss   08:36   0:00  |       \\_ sshd: bbockelm [priv]\nbbockelm 17592  0.0  0.0 114948  3576 ?        S    08:36   0:00  |           \\_ sshd: bbockelm@pts/0\nbbockelm 17593  0.0  0.0  13396  3584 pts/0    Ss   08:36   0:00  |               \\_ -/bin/bash\nbbockelm 17727  0.0  0.0  53648  4348 pts/0    R+   08:37   0:00  |                   \\_ ps faux\n\n(edited)\nSeems that a subsequent condor_ssh_to_job does the right thing.\n\ncondor   17368  0.0  0.0  64788 11956 ?        Ss   08:36   0:00  |   \\_ condor_starter -f -a slot1_4 submit-1.chtc.wisc.edu\nbbockelm 17590  0.0  0.0 114948  7924 ?        Ss   08:36   0:00  |       \\_ sshd: bbockelm [priv]\nbbockelm 17592  0.0  0.0 114948  3576 ?        S    08:36   0:00  |       |   \\_ sshd: bbockelm@pts/0\nbbockelm 17593  0.0  0.0  13396  3584 pts/0    Ss   08:36   0:00  |       |       \\_ -/bin/bash\nbbockelm 21017  0.0  0.0  53648  4380 pts/0    R+   08:40   0:00  |       |           \\_ ps faux\ncondor   17841  0.0  0.4 367048 49688 ?        Ssl  08:37   0:00  |       \\_ /usr/bin/docker start -a HTCJob8246459_0_slot1_4_PID17368\nbbockelm 20767  0.0  0.0 114948  7932 ?        Ss   08:38   0:00  |       \\_ sshd: bbockelm [priv]\nbbockelm 20769  0.0  0.0 114948  3388 ?        S    08:38   0:00  |       |   \\_ sshd: bbockelm@pts/1\nbbockelm 20770  0.0  0.0  45884  8044 pts/1    Ss+  08:38   0:00  |       |       \\_ /usr/bin/condor_docker_enter\ncondor   20806  0.1  0.3 365252 48696 ?        Ssl  08:38   0:00  |       \\_ /usr/bin/docker exec -ti -e http_proxy=http://squid-cs-b240.chtc.wisc.edu:3128 -e _CONDOR_CREDS= -e TEMP=/var/lib/condor/execute/slot1/dir_17368 -e OMP_NUM_THREA\n</pre></div>\n\n\n<p>Christina Koch replied:\n</p><div class=\"code\">\n<pre class=\"code\">@bbockelm yes, right now \u201cinteractive\u201d jobs don\u2019t work, but if you use sleep as\nthe executable (and wait long enough for the container to download and start)\nyou can use ssh_to_job\n</pre></div>\n\n\n<p>To which Brian responded (referring to <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6710\" onclick=\"get_ticket_and_populate_wrapper('6710'); return false;\" title=\"Make condor_submit -i work with docker jobs\">#6710</a></span>):\n</p><div class=\"code\">\n<pre class=\"code\">Uh, I don't see any tickets for that.  Looks like @Greg Thain did a fix to get\nit working ... but maybe it regressed?\n</pre></div>\n\n\n<p>Todd L Miller opined:\n</p><div class=\"code\">\n<pre class=\"code\">OK, the problem is probably that DockerProc::SetupDockerSsh() isn't called until\nafter the container is created (sensible, I guess)... I see how that we would\ncause problems because the magic domain socket doesn't exist, but I don't\nunderstand why the sshd is started in the container yet (it looks like only\nbash is supposed to be started in the container).  -- @bbockelm which version of\ncondor was that from?\n\nIn any case, I suspect the correct fix is to add a check in CStarter::startSSHD\n(via a new new virtual function on proc objects) to see if all (we currently\nassume there's only one?) of the non-ThisProcRunsAlongsideMainProc() procs are\nready to allow SSH connections.\n</pre></div>\n7368  0.1  0.0  64788 11932 ?        Ss   08:36   0:00  |   \\_ condor_starter -f -a slot1_4 submit-1.chtc.wisc.edu\ncondor   17558  0.6  0.3 428612 48048 ?        Ssl  08:36   0:00  |       \\_ /usr/bin/docker create --cpu-shares=100 --memory=2048m --cap-drop=all --hostname bbockelm-8246459.0-c038.chtc.wisc.edu --name HTCJob8246459_0_slot1_4_PID17368 --\nbbockelm 17590  0.0  0.0 114948  7924 ?        Ss   08:36   0:00  |       \\_ sshd: bbockelm [priv]\nbbockelm 17592  0.0  0.0 114948  3576 ?        S    08:36   0:00  |           \\_ sshd: bbockelm@pts/0\nbbockelm 17593  0.0  0.0  13396  3584 pts/0    Ss   08:36   0:00  |               \\_ -/bin/bash\nbbockelm 17727  0.0  0.0  53648  4348 pts/0    R+   08:37   0:00  |                   \\_ ps faux\n\n<p>(edited)\nSeems that a subsequent condor_ssh_to_job does the right thing.\n\n</p><p>condor   17368  0.0  0.0  64788 11956 ?        Ss   08:36   0:00  |   \\_ condor_starter -f -a slot1_4 submit-1.chtc.wisc.edu\nbbockelm 17590  0.0  0.0 114948  7924 ?        Ss   08:36   0:00  |       \\_ sshd: bbockelm [priv]\nbbockelm 17592  0.0  0.0 114948  3576 ?        S    08:36   0:00  |       |   \\_ sshd: bbockelm@pts/0\nbbockelm 17593  0.0  0.0  13396  3584 pts/0    Ss   08:36   0:00  |       |       \\_ -/bin/bash\nbbockelm 21017  0.0  0.0  53648  4380 pts/0    R+   08:40   0:00  |       |           \\_ ps faux\ncondor   17841  0.0  0.4 367048 49688 ?        Ssl  08:37   0:00  |       \\_ /usr/bin/docker start -a HTCJob8246459_0_slot1_4_PID17368\nbbockelm 20767  0.0  0.0 114948  7932 ?        Ss   08:38   0:00  |       \\_ sshd: bbockelm [priv]\nbbockelm 20769  0.0  0.0 114948  3388 ?        S    08:38   0:00  |       |   \\_ sshd: bbockelm@pts/1\nbbockelm 20770  0.0  0.0  45884  8044 pts/1    Ss+  08:38   0:00  |       |       \\_ /usr/bin/condor_docker_enter\ncondor   20806  0.1  0.3 365252 48696 ?        Ssl  08:38   0:00  |       \\_ /usr/bin/docker exec -ti -e http_proxy=http://squid-cs-b240.chtc.wisc.edu:3128 -e _CONDOR_CREDS= -e TEMP=/var/lib/condor/execute/slot1/dir_17368 -e OMP_NUM_THREA\n{endcode}\n\n</p><p>Christina Koch replied:\n</p><div class=\"code\">\n<pre class=\"code\">@bbockelm yes, right now \u201cinteractive\u201d jobs don\u2019t work, but if you use sleep as\nthe executable (and wait long enough for the container to download and start)\nyou can use ssh_to_job\n</pre></div>\n\n\n<p>To which Brian responded (referring to <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6710\" onclick=\"get_ticket_and_populate_wrapper('6710'); return false;\" title=\"Make condor_submit -i work with docker jobs\">#6710</a></span>):\n</p><div class=\"code\">\n<pre class=\"code\">Uh, I don't see any tickets for that.  Looks like @Greg Thain did a fix to get\nit working ... but maybe it regressed?\n</pre></div>\n\n\n<p>Todd L Miller opined:\n</p><div class=\"code\">\n<pre class=\"code\">OK, the problem is probably that DockerProc::SetupDockerSsh() isn't called until\nafter the container is created (sensible, I guess)... I see how that we would\ncause problems because the magic domain socket doesn't exist, but I don't\nunderstand why the sshd is started in the container yet (it looks like only\nbash is supposed to be started in the container).  -- @bbockelm which version of\ncondor was that from?\n\nIn any case, I suspect the correct fix is to add a check in CStarter::startSSHD\n(via a new new virtual function on proc objects) to see if all (we currently\nassume there's only one?) of the non-ThisProcRunsAlongsideMainProc() procs are\nready to allow SSH connections.\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2019-Aug-06 08:31:23 by gthain:</em> <br/>\n\nNote that the sshd is always <strong>outside</strong> the container (because we don't know if there's an sshd binary inside the container, among other reasons).  The right fix here is for the ssh shell wrapper setup to wait until the magic socket appears.  Note that this could take minutes (hours?) if we need to download a new image.\n\n<p></p><hr/>\n<em>2019-Aug-06 12:43:47 by tlmiller:</em> <br/>\n\n<div class=\"code\">\n<pre class=\"code\">&gt; The right fix here is for the ssh shell wrapper setup to wait until the magic\n&gt; socket appears. Note that this could take minutes (hours?) if we need to\n&gt; download a new image.\n</pre></div>\n\n\n<p>This is why I was thinking that we should do this in the code -- we could send another type of please-retry reply to the client, rather than just hanging for a while.  (I assume there was a good reason for doing this in the first place.)\n\n</p><p></p><hr/>\n<em>2019-Oct-14 14:05:11 by gthain:</em> <br/>\n\nNote this was fixed in <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7246\" onclick=\"get_ticket_and_populate_wrapper('7246'); return false;\" title=\"Allow condor_ssh_to_job to Docker uni to retry while image downloads\">#7246</a></span></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2019-Oct-14 14:18", "status": "abandoned", "created": "2019-Aug-05 15:12", "fixed_version": "2019-Aug-05 15:12", "broken_version": "", "priority": "2", "subsystem": "DaemonsExecNode", "assigned_to": "gthain", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, gthain@cs.wisc.edu", "due_date": ""}