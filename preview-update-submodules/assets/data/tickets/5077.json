{"id": 5077, "title": "Ticket #5077: Specify accounting_group, accounting_group_user at DAG level", "description": "<blockquote>\nLIGO is interested in specifying (at the DAG level) accounting_group and accounting_group_user for node jobs.  It sounds like there are basically three use cases (as per discussion on the LIGO call today):\n<ol>\n<li>All nodes in the workflow (including nodes of sub-DAGs) have the same accounting_group and accounting_group_user.\n</li><li>Sub-DAGs may have different accounting_group and accounting_group_user values.\n</li><li>Individual nodes may have different accounting_group and accounting_group_user values.\n</li></ol>\n\n<p>For case 1, I guess if you specify values in a top-level DAG, they should \"trickle down\" to sub-DAGs unless they're overridden at the sub-DAG level.  It also sounds like case 1 is the most important for LIGO, followed by case 2 and then case 3.\n\n</p><p>My first thought is to make this a generic capability (e.g., \"-append 'accounting_group = ligo5') rather than implementing accounting-group specific commands (e.g., \"-accounting_group = ligo5\").\n\n</p><p>We have to think about where these values should be set.  Again, there are several possibilities:\n</p><ol>\n<li>Actual DAG file commands.\n</li><li>Configuration macros.\n</li><li>Command-line arguments to condor_submit_dag.\n</li></ol>\n\n<p>(Getting things to work correctly with sub-DAGs may require a combination of these.)\n\n</p><p>Note:  This could be done with a combination of VARS and submit file changes, but I'm assuming that the reason for LIGO's request is to be able to set things overall for a workflow with much less user work that the VARS/submit file changes method would require.</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Sep-22 13:41:49 by tpdownes:</em> <br/>\n\nAs of 22 September 2015, this is the highest DAGMan priority for LIGO. As we are unlikely to universally adopt 8.4 series, it should be a development target for 8.5.\n\n<p></p><hr/>\n<em>2015-Nov-25 16:00:14 by wenger:</em> <br/>\n\nGittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5107\" onclick=\"get_ticket_and_populate_wrapper('5107'); return false;\" title=\"Set DAGMan ClassAd attributes directly in DAG file\">#5107</a></span>: Set DAGMan <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> attributes directly in DAG file will do at least part of this.  (I'm not sure about propagating to node jobs.)\n\n<p></p><hr/>\n<em>2015-Dec-16 10:48:12 by wenger:</em> <br/>\n\nMaybe we can just add a flag to the <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5107\" onclick=\"get_ticket_and_populate_wrapper('5107'); return false;\" title=\"Set DAGMan ClassAd attributes directly in DAG file\">#5107</a></span> changes that says \"propagate this to all children\".\n\n<p></p><hr/>\n<em>2016-Jan-04 17:00:47 by wenger:</em> <br/>\n\nNote:  Because of changes in <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5107\" onclick=\"get_ticket_and_populate_wrapper('5107'); return false;\" title=\"Set DAGMan ClassAd attributes directly in DAG file\">#5107</a></span> requested by Miron, that feature can no longer be used to set accounting_group, etc.\n\n<p></p><hr/>\n<em>2016-Jan-04 17:07:59 by wenger:</em> <br/>\n\nThere are four main questions for how to do this:\n<ol>\n<li>How to specify the accounting_group, etc., at the top level.\n</li><li>How to pass this to node jobs.\n</li><li>How to pass this to sub-DAGs.\n</li><li>How to override this for lower levels if we want to do that.\n</li></ol>\n\n<p>I need to check with LIGO about whether they'd rather do something like specify accounting_group, etc., in a config file or the DAG file itself, or on the condor_submit_dag command line.\n\n</p><p>Passing this to node jobs is pretty simple:  we can just use the -append flag to condor_submit.\n\n</p><p>Passing it to sub-DAGs is more complicated, because we have to both actually pass the relevant values to the sub-DAG, <strong>and</strong> tell the sub-DAG to pass the values to lower-level jobs.\n\n</p><p>Overriding accounting_group, etc., for lower levels (sub-DAGs, for example), clearly can't be done on the command line.\n\n</p><p></p><hr/>\n<em>2016-Jan-12 11:34:28 by wenger:</em> <br/>\n\nAlso see <span class=\"ticket\"><a class=\"abandoned\" href=\"/wiki-archive/tickets/?ticket=5444\" onclick=\"get_ticket_and_populate_wrapper('5444'); return false;\" title=\"Allow user to specify a workflow name\">#5444</a></span> -- these will both need similar infrastructure.\n\n<p></p><hr/>\n<em>2016-Jan-12 12:29:08 by wenger:</em> <br/>\n\nI'm thinking that part of the infrastructure for this might be adding something like a -deepappend flag to condor_submit_dag.  Right now we have a -append flag, but whatever you set with that doesn't get passed down to lower levels of the workflow.\n\n<p>If we had -deepappend, the user could do something like this:\n\n</p><p></p><pre>  condor_submit_dag -deepappend accounting_group=foo\n</pre>\n\n<p>We could also have \"dedicated\" -accounting_group and -accounting_group_user arguments that condor_submit_dag would translate to -deepappend.\n\n</p><p>The main thing that this doesn't address is how to override these values for a sub-part of the workflow.\n\n</p><p></p><hr/>\n<em>2016-Jan-12 15:13:28 by zmiller:</em> <br/>\n\nRegarding the proposal of a \"-deepappend\":  What is a scenario where you would want to use \"-append\" but not \"-deepappend\", or perhaps vice versa?  My larger point being, is a separate flag really necessary, or should we just do a \"deep append\" for all attributes given using the existing \"-append\" flag?  Non-CS types are perhaps not likely to understand or care about the semantics of shallow versus deep.  But if there are reasonable use cases for requiring them to be distinct, I'd like to understand them.\n\n<p></p><hr/>\n<em>2016-Feb-18 10:48:10 by tpdownes:</em> <br/>\n\nOne general comment followed by specific technical comments:\n\n<p>In Sept 2015 LIGO was just beginning to track usage by accounting group tag and, at the time, I was much more worried about getting users to adopt it. Surprisingly, it went reasonably well and we don't have too many mislabeling of jobs. I am still worried about that problem as we go forward, though. When offline between observing runs, the LIGO instrument is expected to become more sensitive in a way that requires more computing power and so we are tracking usage for each observing run with different tags. So I'd still like a way to override the tags in a DAG.\n\n</p><p>Technical comments:\n\n</p><p></p><ol>\n<li>I like the idea of doing this as a generic append feature rather than an accounting_group feature.\n</li><li>I do not think we should worry about implementing both a non-deep append and  a deep append. It is not a present use case for LIGO. To the degree possible, build the deep feature in a way that allows adding non-deep should the neeed arise, but I wouldn't go out of your way to make it happen.\n</li></ol>\n\n<p></p><hr/>\n<em>2016-Feb-18 10:51:59 by wenger:</em> <br/>\n\nWell, we already have a \"-append\" option that's a shallow append.  It doesn't look like we use it ourselves, but I feel like we shouldn't change the semantics of it without at least checking with our users.\n\n<p></p><hr/>\n<em>2016-Feb-18 10:53:14 by tpdownes:</em> <br/>\n\nOne other technical comment: it is not clear from the condor_submit man page what the behavior of condor_submit -append \"submit_language_feature = newvalue\" will be if the submit file already specifies submit_language_feature.\n\n<p></p><hr/>\n<em>2016-Feb-18 10:57:40 by tpdownes:</em> <br/>\n\nWell, in this case, I think the behavior would be for  dagman itself to look at its own job classad keys <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AcctGroup\" title=\"Acct Group\">AcctGroup</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AcctGroupUser\" title=\"Acct Group User\">AcctGroupUser</a></span>. If they are defined, it should submit new jobs using\n\n<p>condor_submit -append accounting_group=AcctGroup -append account_group_user=AcctGroupUser\n\n</p><p>and new DAGs using\n\n</p><p>condor_submit_dag -append accounting_group=AcctGroup -append account_group_user=AcctGroupUser\n\n</p><p>subject to my concerns about how append works when the same submit language command is specified twice.\n\n</p><p></p><hr/>\n<em>2016-Feb-18 11:03:50 by wenger:</em> <br/>\n\nHmm -- we <strong>do</strong> use -append to condor_submit, though, for things that should not propagate to lower levels (such as parent node name(s)).\n\n<p></p><hr/>\n<em>2016-Feb-18 11:11:50 by wenger:</em> <br/>\n\nI was hoping to do something more general, but maybe we should forget about that for now and go with Tom's suggestion of DAGMan looking for specific <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> attributes.\n\n<p></p><hr/>\n<em>2016-Feb-18 11:17:13 by wenger:</em> <br/>\n\nExperiment shows that 'condor_submit -append \"accounting_group=X ...' overrides an accounting_group specified in the submit file.\n\n<p></p><hr/>\n<em>2016-Feb-18 12:11:41 by wenger:</em> <br/>\n\nWe just discussed the possibility of having a -prepend option to condor_submit, which would mean that the value you specify with -prepend would <strong>not</strong> override a value specified in the submit file (the opposite of -append).\n\n<p></p><hr/>\n<em>2016-Feb-18 12:21:47 by wenger:</em> <br/>\n\nProbably implement this and <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5493\" onclick=\"get_ticket_and_populate_wrapper('5493'); return false;\" title=\"Propagate batch-name to all jobs in a workflow\">#5493</a></span> together.\n\n<p></p><hr/>\n<em>2016-Apr-18 16:51:27 by wenger:</em> <br/>\n\nI'm thinking now that to get this in place quickly I'd like to just go with -append accounting_group... and -append accounting_group_user... options to condor_submit_dag.  As Tom suggested, DAGMan could look for the relevant values in its own <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span>, and, if they exist, pass them to lower-level condor_submit and condor_submit_dag commands.  This wouldn't be as general as a -deepappend option, but it would be really easy to implement.\n\n<p>Tom -- how does this sound for at least a phase 1 implementation?\n\n</p><p></p><hr/>\n<em>2016-Apr-27 10:34:12 by tpdownes:</em> <br/>\n\nThis sounds totally sufficient for our needs.\n\n<p></p><hr/>\n<em>2016-Apr-27 10:41:03 by tpdownes:</em> <br/>\n\nActually, I have one concern immediately after writing it. Right now, we do not enforce the existence of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AcctGroup\" title=\"Acct Group\">AcctGroup</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AcctGroup\" title=\"Acct Group\">AcctGroup</a></span> tags in scheduler universe jobs.\n\n<p>So if those take on some bad default values for scheduler universe jobs, then they could be passed onto the jobs managed by the DAG. LIGO sites do not provide default values for these tags in any universe.\n\n</p><p>As I noted above, in the real-world the problem of setting accounting groups has turned out to be less of an issue than I had thought it would be. Nevertheless, it would be nice to override the values in the jobs with one command at the time of DAG submission.\n\n</p><p>So I think we should implement the least difficult option and declare victory. If the least difficult option is still difficult, then maybe simply declare victory.\n\n</p><p></p><hr/>\n<em>2016-Jun-07 16:41:12 by wenger:</em> <br/>\n\nCreated V8_5-gittrac_5077-branch for this.\n\n<p></p><hr/>\n<em>2016-Jun-08 09:17:39 by wenger:</em> <br/>\n\nI have an initial version of this working -- you can add \"-append accounting_group=&lt;group&gt; and -append accounting_group_user=&lt;user&gt;\" to condor_submit_dag, and that gets passed down to all jobs in the DAG.\n\n<p>I need to write a test and clean up the code a bit, but it should be ready for beta testing soon.\n\n</p><p></p><hr/>\n<em>2016-Jun-08 12:03:47 by wenger:</em> <br/>\n\nI'm going to up the priority to 1, because I really want to get this into 8.5.6.\n\n<p></p><hr/>\n<em>2016-Jun-10 13:46:27 by wenger:</em> <br/>\n\nDocumentation for this isn't done yet, but I'm going to switch this ticket to the code review state and assign it to Zach, so we can be sure to get the code reviewed and into 8.5.6.\n\n<p></p><hr/>\n<em>2016-Jun-20 13:13:55 by zmiller:</em> <br/>\n\n<strong>CODE REVIEW</strong>: Looks good.\n\n<p></p><hr/>\n<em>2016-Jun-20 15:19:16 by wenger:</em> <br/>\n\nMerged to master (for 8.5.6) so I'm going to resolve this.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/944/gt5077-diff\">gt5077-diff</a>\n13407 bytes added by wenger on 2016-Jun-10 18:45:43 UTC.\n<br/>\nThis is a diff of the whole feature branch so far.<br/>\n</li><li><a href=\"../files/945/gt5077-diff2\">gt5077-diff2</a>\n14621 bytes added by wenger on 2016-Jun-15 20:31:47 UTC.\n<br/>\nThis branch diff includes the documentation.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-15 15:29</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/272762303ad81b43bd0a1bd1767c5e6ffbe6b161\">[48560]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=5077\" onclick=\"get_ticket_and_populate_wrapper('5077'); return false;\" title=\"Specify accounting_group, accounting_group_user at DAG level\">#5077</a></span>: Added documentation to the DAGMan manual section.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-10 13:38</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/bd3b8f9e70cb3d046689402a1f401c57497de0ab\">[48535]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=5077\" onclick=\"get_ticket_and_populate_wrapper('5077'); return false;\" title=\"Specify accounting_group, accounting_group_user at DAG level\">#5077</a></span>: Added version history entry.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-09 12:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/64b29fcc797143edd3fb4d2f02b6deddb1756cf9\">[48529]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=5077\" onclick=\"get_ticket_and_populate_wrapper('5077'); return false;\" title=\"Specify accounting_group, accounting_group_user at DAG level\">#5077</a></span>: Argh -- forgot to add job_dagman_acct_grp to Test_Requirements.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-09 11:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/675b55051a003b1baf0eac333bff6756939c9e09\">[48528]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=5077\" onclick=\"get_ticket_and_populate_wrapper('5077'); return false;\" title=\"Specify accounting_group, accounting_group_user at DAG level\">#5077</a></span>: Cleaned up the code.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-09 10:28</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/ea6cd9fb46c19b00167a9e5299d8ca74bebbb738\">[48527]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=5077\" onclick=\"get_ticket_and_populate_wrapper('5077'); return false;\" title=\"Specify accounting_group, accounting_group_user at DAG level\">#5077</a></span>: Added test for accounting_group and accounting_group_user propagation. (Also fixed a minor typo in the batch name test.)  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-07 17:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e68d60bd28e96f427bfcd7182dd7c080e5636f07\">[48512]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=5077\" onclick=\"get_ticket_and_populate_wrapper('5077'); return false;\" title=\"Specify accounting_group, accounting_group_user at DAG level\">#5077</a></span>: Some cleanup of the submit code.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-07 16:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0f1ae70f01f527aab825c764e18be4147c4292a8\">[48511]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=5077\" onclick=\"get_ticket_and_populate_wrapper('5077'); return false;\" title=\"Specify accounting_group, accounting_group_user at DAG level\">#5077</a></span>: Initial version looks for relevant attributes in DAGMan's own <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span>, and passes them down via -append to condor_submit. Needs cleanup and tests.  (By Kent Wenger )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2016-Jun-20 15:19", "status": "defer", "created": "2015-Jun-02 16:10", "fixed_version": "2015-Jun-02 16:10", "broken_version": "v080305", "priority": "5", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "wenger@cs.wisc.edu, zmiller@cs.wisc.edu, downes@uwm.edu,pcouvare@caltech.edu", "due_date": ""}