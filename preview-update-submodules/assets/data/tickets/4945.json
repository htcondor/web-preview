{"id": 4945, "title": "Ticket #4945: Partitionable slots stuck in Matched state forever", "description": "<blockquote>\nWhen using consumption policies and startd notification of matches with partitionable slots, it's possible for the partitionable to end up in Matched state forever.\n\n<p>The problem is that when the startd looks up a Resource using a consumption policy claim id, there's a side-effect that makes that Claim object the primary claim for the Resource, and the previous current Claim is deleted.\nThis happens when a MATCH_INFO message is received from the negotiator. So if the negotiator matches the pslot multiple times and sends MATCH_INFO messages, each Claim is displaced (and deleted) by the next Claim, and only the last one can be used to start a job. Worse, the timer to leave Matched state lives and dies with the first Claim. Once a second MATCH_INFO arrives, the timer is no more. The pslot will stay in Matched state forever unless the schedd attempts to use the last Claim handed out by the negotiator.\n\n</p><p><span class=\"subsection\"></span></p><h3>Proposed Fix</h3>\n<ul>\n<li>Pslots never enter Matched state when using consumption policies. When a MATCH_INFO message arrives for a pslot, the startd leaves the Resource in Unclaimed state.\n</li><li>The function ResMgr::get_by_cur_id() ignores r_claims.\n</li><li>The function ResMgr::get_by_any_id() does not juggle Claim objects unless explicitly requested by the caller. Only request_claim() will do so.</li></ul>\n</blockquote>", "remarks": "<blockquote>\nCODE_REVIEW: change looks good.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-23 11:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/26b8fa2f531fdb71b6de7288a59e24cd3a1796a4\">[43681]</a></span>: minor 8.2.8 version history item edit <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4945\" onclick=\"get_ticket_and_populate_wrapper('4945'); return false;\" title=\"Partitionable slots stuck in Matched state forever\">#4945</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-20 11:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/92bc8db30ca829d133d1d41abf8793e2f01245bd\">[43639]</a></span>: Docs for consumption policy pslot Matched forever bug. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4945\" onclick=\"get_ticket_and_populate_wrapper('4945'); return false;\" title=\"Partitionable slots stuck in Matched state forever\">#4945</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-20 11:34</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/84098c0e9b012b06cc7e8ce72d9723c6502dec5e\">[43637]</a></span>: Ignore MATCH_INFO for pslots with consumption policies. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4945\" onclick=\"get_ticket_and_populate_wrapper('4945'); return false;\" title=\"Partitionable slots stuck in Matched state forever\">#4945</a></span> With consumption policies, it doesn't make sense for the pslot to be in Matched state, since it can be matched to many jobs at the same time. And due to how claims for consumption policies were implemented, reception of MATCH_INFO messages\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Apr-06 15:38", "status": "resolved", "created": "2015-Mar-19 13:34", "fixed_version": "2015-Mar-19 13:34", "broken_version": "v080200", "priority": "2", "subsystem": "DaemonsExecNode", "assigned_to": "johnkn", "derived_from": "", "creator": "jfrey", "rust": "a28016", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}