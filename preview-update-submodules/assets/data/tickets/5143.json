{"id": 5143, "title": "Ticket #5143: HTCondor security negotiation hanging", "description": "<blockquote>\nHTCondor security negotiation hangs when a client with SEC_*_NEGOTIATION = NEVER  tries to connect to a daemon with SEC_*_NEGOTIATION = OPTIONAL.\n\n<p>Client condor version:\n</p><div class=\"code\">\n<pre class=\"code\">$CondorVersion: 8.2.8 Apr 02 2015 BuildID: 311986 $\n$CondorPlatform: x86_64_RedHat7 $\n</pre></div>\n\n\n<p>Server condor version:\n</p><div class=\"code\">\n<pre class=\"code\">$CondorVersion: 8.3.7 Jul 07 2015 BuildID: 327458 $\n$CondorPlatform: X86_64-RedHat_6.6 $\n</pre></div>\n\n\n<p>Client security configuration:\n</p><div class=\"code\">\n<pre class=\"code\">SEC_DEFAULT_AUTHENTICATION         = OPTIONAL\nSEC_DEFAULT_ENCRYPTION             = OPTIONAL\nSEC_DEFAULT_INTEGRITY              = OPTIONAL\nSEC_DEFAULT_NEGOTIATION            = NEVER\nSEC_DEFAULT_AUTHENTICATION_METHODS = SSL\n\nSEC_READ_AUTHENTICATION            = OPTIONAL\n\nSEC_DEFAULT_CRYPTO_METHODS         = 3DES, \\\n                                      BLOWFISH\n</pre></div>\n\n\n<p>Server security configuration:\n</p><div class=\"code\">\n<pre class=\"code\">ALLOW_ADMINISTRATOR                      = htcondor:cm.chtc.wisc.edu@opensciencegrid.org/$(CONDOR_HOST), \\\n                                           reporting:cm.chtc.wisc.edu@chtc.wisc.edu/$(CONDOR_HOST), \\\n                                           htcondor:chtc.wisc.edu@chtc.wisc.edu/$(IP_ADDRESS), \\\n                                           Aaron_Moate_894@opensciencegrid.org/*, \\\n                                           Nathan_Yehle_899@opensciencegrid.org/*\n\nSEC_ADMINISTRATOR_AUTHENTICATION         = REQUIRED\nSEC_ADMINISTRATOR_ENCRYPTION             = OPTIONAL\nSEC_ADMINISTRATOR_INTEGRITY              = REQUIRED\nSEC_ADMINISTRATOR_NEGOTIATION            = OPTIONAL\nSEC_ADMINISTRATOR_AUTHENTICATION_METHODS = SSL\n\nSEC_ADMINISTRATOR_CRYPTO_METHODS         = 3DES, \\\n                                           BLOWFISH\n\nALLOW_DEFAULT                      = *@unmapped/*, \\\n                                     *@chtc.wisc.edu/*, \\\n                                     *@opensciencegrid.org/*\n\nSEC_DEFAULT_AUTHENTICATION         = OPTIONAL\nSEC_DEFAULT_ENCRYPTION             = OPTIONAL\nSEC_DEFAULT_INTEGRITY              = OPTIONAL\nSEC_DEFAULT_NEGOTIATION            = OPTIONAL\nSEC_DEFAULT_AUTHENTICATION_METHODS = SSL, \\\n                                     GSI, \\\n                                     PASSWORD, \\\n                                     CLAIMTOBE, \\\n                                     ANONYMOUS\n\nSEC_DEFAULT_CRYPTO_METHODS         = 3DES, \\\n                                     BLOWFISH\n\n</pre></div>\n\n\n<p>Example of hang using condor ping (sinful strings used to leave collector out of transaction):\n</p><div class=\"code\">\n<pre class=\"code\">moate@iid /afs/cs.wisc.edu/u/m/o/moate $ _CONDOR_TOOL_DEBUG='D_SECURITY D_COMMAND' condor_ping -debug -name '&lt;128.104.101.96:39670?addrs=128.104.101.96-39670&gt;' -type master ADMINISTRATOR\n07/09/15 18:44:28 recognized ADMINISTRATOR as authorization level, using command 60023.\n07/09/15 18:44:28 KEYCACHE: created: 0x155fe10\n07/09/15 18:44:28 SECMAN: command 60040 DC_SEC_QUERY to master at &lt;128.104.101.96:39670&gt; from TCP port 47108 (blocking).\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission ALLOW\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission READ\n07/09/15 18:44:28 ipverify: READ optimized to allow anyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission WRITE\n07/09/15 18:44:28 ipverify: WRITE optimized to allow anyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission NEGOTIATOR\n07/09/15 18:44:28 ipverify: NEGOTIATOR optimized to allow anyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission ADMINISTRATOR\n07/09/15 18:44:28 ipverify: ADMINISTRATOR optimized to allow anyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission OWNER\n07/09/15 18:44:28 ipverify: OWNER optimized to allow anyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission CONFIG\n07/09/15 18:44:28 ipverify: CONFIG optimized to deny everyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission DAEMON\n07/09/15 18:44:28 ipverify: DAEMON optimized to allow anyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission SOAP\n07/09/15 18:44:28 ipverify: SOAP optimized to allow anyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission DEFAULT\n07/09/15 18:44:28 ipverify: DEFAULT optimized to allow anyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission CLIENT\n07/09/15 18:44:28 ipverify: CLIENT optimized to allow anyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission ADVERTISE_STARTD\n07/09/15 18:44:28 ipverify: ADVERTISE_STARTD optimized to allow anyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission ADVERTISE_SCHEDD\n07/09/15 18:44:28 ipverify: ADVERTISE_SCHEDD optimized to allow anyone\n07/09/15 18:44:28 IPVERIFY: Subsystem TOOL\n07/09/15 18:44:28 IPVERIFY: Permission ADVERTISE_MASTER\n07/09/15 18:44:28 ipverify: ADVERTISE_MASTER optimized to allow anyone\n</pre></div>\n\nAt the end the command hangs.  A tcpdump showed a tcp connection handshake and termination with no payload.\n\n<p>If the client uses SEC_*_NEGOTIATION = REQUIRED, then the condor_ping succeeds:\n</p><div class=\"code\">\n<pre class=\"code\">moate@iid /afs/cs.wisc.edu/u/m/o/moate $ _CONDOR_SEC_DEFAULT_NEGOTIATION=REQUIRED _CONDOR_TOOL_DEBUG='D_SECURITY D_COMMAND' condor_ping -debug -name '&lt;128.104.101.96:39670?addrs=128.104.101.96-39670&gt;' -type master ADMINISTRATOR\n07/09/15 18:47:07 recognized ADMINISTRATOR as authorization level, using command 60023.\n07/09/15 18:47:07 KEYCACHE: created: 0x10c5e10\n07/09/15 18:47:07 SECMAN: command 60040 DC_SEC_QUERY to master at &lt;128.104.101.96:39670&gt; from TCP port 60258 (blocking).\n07/09/15 18:47:07 SECMAN: new session, doing initial authentication.\n07/09/15 18:47:07 SECMAN: Auth methods: SSL\n07/09/15 18:47:07 HANDSHAKE: in handshake(my_methods = 'SSL')\n07/09/15 18:47:07 HANDSHAKE: handshake() - i am the client\n07/09/15 18:47:07 HANDSHAKE: sending (methods == 256) to server\n07/09/15 18:47:07 HANDSHAKE: server replied (method = 256)\n07/09/15 18:47:08 CADIR:      '/u/m/o/moate/.condor/certs/ca'\n07/09/15 18:47:08 CERTFILE:   '/u/m/o/moate/.globus/usercert.pem'\n07/09/15 18:47:08 KEYFILE:    '/u/m/o/moate/.globus/userkey.pem'\n07/09/15 18:47:08 CIPHERLIST: 'ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH'\n07/09/15 18:47:11 Trying to connect.\n07/09/15 18:47:11 Tried to connect: -1\n07/09/15 18:47:11 SSL: trying to continue reading.\n07/09/15 18:47:11 Round 1.\n07/09/15 18:47:11 Send message (2).\n07/09/15 18:47:11 Status (c: 2, s: 0)\n07/09/15 18:47:11 Trying to connect.\n07/09/15 18:47:11 Tried to connect: -1\n07/09/15 18:47:11 SSL: trying to continue reading.\n07/09/15 18:47:11 Round 2.\n07/09/15 18:47:11 Receive message.\n07/09/15 18:47:11 Received message (2).\n07/09/15 18:47:11 Status (c: 2, s: 2)\n07/09/15 18:47:11 Trying to connect.\n07/09/15 18:47:11 Tried to connect: -1\n07/09/15 18:47:11 SSL: trying to continue reading.\n07/09/15 18:47:11 Round 3.\n07/09/15 18:47:11 Send message (2).\n07/09/15 18:47:11 Status (c: 2, s: 2)\n07/09/15 18:47:11 Trying to connect.\n07/09/15 18:47:11 Tried to connect: -1\n07/09/15 18:47:11 SSL: trying to continue reading.\n07/09/15 18:47:11 Round 4.\n07/09/15 18:47:11 Receive message.\n07/09/15 18:47:11 Received message (4).\n07/09/15 18:47:11 Status (c: 2, s: 4)\n07/09/15 18:47:11 Trying to connect.\n07/09/15 18:47:11 Tried to connect: 1\n07/09/15 18:47:11 Round 5.\n07/09/15 18:47:11 Send message (4).\n07/09/15 18:47:11 Status (c: 4, s: 4)\n07/09/15 18:47:11 Client trying post connection check.\n07/09/15 18:47:11 post_connection_check.\n07/09/15 18:47:11 SSL_get_peer_certificate returned data.\n07/09/15 18:47:11 Returning SSL_get_verify_result.\n07/09/15 18:47:11 Client performs one last exchange of messages.\n07/09/15 18:47:11 Reading round 1.\n07/09/15 18:47:11 SSL: continue read/write.\n07/09/15 18:47:11 Receive message.\n07/09/15 18:47:11 Received message (4).\n07/09/15 18:47:11 Status: c: 2, s: 4\n07/09/15 18:47:11 Reading round 2.\n07/09/15 18:47:11 SSL read has succeeded.\n07/09/15 18:47:11 Send message (4).\n07/09/15 18:47:11 Status: c: 4, s: 4\n07/09/15 18:47:11 SSL authentication succeeded to /C=US/ST=WI/O=University of Wisconsin-Madison/OU=CHTC/CN=htcondor/*.chtc.wisc.edu\n07/09/15 18:47:11 Authentication was a Success.\n07/09/15 18:47:11 ZKM: setting default map to ssl@unmapped\n07/09/15 18:47:11 ZKM: name to map is '/C=US/ST=WI/O=University of Wisconsin-Madison/OU=CHTC/CN=htcondor/*.chtc.wisc.edu'\n07/09/15 18:47:11 ZKM: pre-map: current user is 'ssl'\n07/09/15 18:47:11 ZKM: pre-map: current domain is 'unmapped'\n07/09/15 18:47:11 ZKM: Parsing map file.\n07/09/15 18:47:11 ZKM: attempting to map '/C=US/ST=WI/O=University of Wisconsin-Madison/OU=CHTC/CN=htcondor/*.chtc.wisc.edu'\n07/09/15 18:47:11 ZKM: 1: attempting to map '/C=US/ST=WI/O=University of Wisconsin-Madison/OU=CHTC/CN=htcondor/*.chtc.wisc.edu'\n07/09/15 18:47:11 ZKM: 2: mapret: 0 included_voms: 0 canonical_user: htcondor:chtc.wisc.edu@chtc.wisc.edu\n07/09/15 18:47:11 ZKM: found user htcondor:chtc.wisc.edu@chtc.wisc.edu, splitting.\n07/09/15 18:47:11 ZKM: post-map: current user is 'htcondor:chtc.wisc.edu'\n07/09/15 18:47:11 ZKM: post-map: current domain is 'chtc.wisc.edu'\n07/09/15 18:47:11 ZKM: post-map: current FQU is 'htcondor:chtc.wisc.edu@chtc.wisc.edu'\n07/09/15 18:47:11 In unwrap.\n07/09/15 18:47:11 SECMAN: successfully enabled message authenticator!\n07/09/15 18:47:11 SECMAN: added session e096:6915:1436485627:6 to cache for 60 seconds (3600s lease).\n07/09/15 18:47:11 SECMAN: startCommand succeeded.\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission ALLOW\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission READ\n07/09/15 18:47:11 ipverify: READ optimized to allow anyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission WRITE\n07/09/15 18:47:11 ipverify: WRITE optimized to allow anyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission NEGOTIATOR\n07/09/15 18:47:11 ipverify: NEGOTIATOR optimized to allow anyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission ADMINISTRATOR\n07/09/15 18:47:11 ipverify: ADMINISTRATOR optimized to allow anyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission OWNER\n07/09/15 18:47:11 ipverify: OWNER optimized to allow anyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission CONFIG\n07/09/15 18:47:11 ipverify: CONFIG optimized to deny everyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission DAEMON\n07/09/15 18:47:11 ipverify: DAEMON optimized to allow anyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission SOAP\n07/09/15 18:47:11 ipverify: SOAP optimized to allow anyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission DEFAULT\n07/09/15 18:47:11 ipverify: DEFAULT optimized to allow anyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission CLIENT\n07/09/15 18:47:11 ipverify: CLIENT optimized to allow anyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission ADVERTISE_STARTD\n07/09/15 18:47:11 ipverify: ADVERTISE_STARTD optimized to allow anyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission ADVERTISE_SCHEDD\n07/09/15 18:47:11 ipverify: ADVERTISE_SCHEDD optimized to allow anyone\n07/09/15 18:47:11 IPVERIFY: Subsystem TOOL\n07/09/15 18:47:11 IPVERIFY: Permission ADVERTISE_MASTER\n07/09/15 18:47:11 ipverify: ADVERTISE_MASTER optimized to allow anyone\nADMINISTRATOR using (no encryption, MD5, and SSL) succeeded as Aaron_Moate_894@opensciencegrid.org\n</pre></div>\n\n\n<p>According to the HTCondor manual section 3.6.2.1, NEVER client to OPTIONAL daemon should be successful.\n\n</p><p>-Moate</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Aug-13 17:42:25 by moate:</em> <br/>\n\nI've also seen this behavior going from SEC_CLIENT_NEGOTOTIATION = OPTIONAL to SEC_ADMINISTRATOR_NEGOTIATION = OPTIONAL.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2015-Aug-13 17:42", "status": "new", "created": "2015-Jul-09 18:54", "fixed_version": "2015-Jul-09 18:54", "broken_version": "v080208", "priority": "3", "subsystem": "Security", "assigned_to": "zmiller", "derived_from": "", "creator": "moate", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "moate@cs.wisc.edu", "due_date": ""}