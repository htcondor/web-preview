{"id": 3231, "title": "Ticket #3231: CMake-based PROPER builds on Mac OS X fail out of the box", "description": "<blockquote>\nAs Jaime mentioned on the condor-dev mail list, cmake currently detects a gcc-based compiler for C++ and a clang-based compiler for C on Mac OS X 10.8.\n\n<p>The following line in CondorConfigure.cmake accordingly causes a world of hurt:\n\n</p><p></p><div class=\"verbatim\">\n<pre>        # b/c we don't do anything c++ specific copy flags for c-compilation\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${CMAKE_CXX_FLAGS}\")\n</pre></div>\n\n\n<p>The workaround is to do \"CC=gcc CXX=g++ cmake CMakeLists.txt\", but it'd be awful nice if this would work out-of-the-box.</p></blockquote>", "remarks": "<blockquote>\n<em>2012-Sep-17 14:11:08 by jfrey:</em> <br/>\n\nCMake 2.8.10 will fix the default mixing of Clang and gnu compilers.\n\n<p></p><hr/>\n<em>2012-Sep-20 14:13:40 by jfrey:</em> <br/>\n\nBuilds should work out of the box now. I removed the invalid compiler flag <code>-fnostack-protector</code>. None of the other C++ flags enabled for Clang cause a failure when passed to gcc.\n\n<p></p><hr/>\n<em>2012-Sep-20 14:15:32 by jfrey:</em> <br/>\n\nMost of the changes to allow building with Clang have been applied to master (i.e. 7.9.x). The V7_8-branch can't be built with Clang.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2012-Sep-20 14:15", "status": "resolved", "created": "2012-Sep-17 13:59", "fixed_version": "2012-Sep-17 13:59", "broken_version": "v070900", "priority": "4", "subsystem": "Packaging", "assigned_to": "tstclair", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "bbockelm@cse.unl.edu", "due_date": ""}