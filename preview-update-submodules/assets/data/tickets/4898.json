{"id": 4898, "title": "Ticket #4898: SUBMIT_REQUIREMENTS and/or COMMIT_R... and/or JOB_INVARIANTS", "description": "<blockquote>\nMany of the SUBMIT_REQUIREMENTS use cases would also seem to benefit from setting COMMIT_REQUIREMENTS and/or JOB_INVARIANTS.  For example, rejecting a submission with an unknown accounting group is all well and good, but is arguably useless without also prevent condor_qedit from changing it later.\n\n<p>There may also be other attributes that should not be changed after job creation; the job's universe comes to mind.  The most efficient way to implement something like COMMIT_REQUIREMENTS may be to mark job attributes mentioned in (the transitive closure of) SUBMIT_REQUIREMENTS as immutable.  Actually performing the checks on each commit may be difficult to make sufficiently efficient, and (as TJ pointed out) may also require changes to condor_qedit (which allows multiple attributes to be changed on the same command-line, but may not create a single transaction for all of them).  It may be generally wiser to allow queue super users to bypass the kind of immutability (which would make it different than the immutability for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobUniverse\" title=\"Job Universe\">JobUniverse</a></span>?).  Also, it would be convenient and wise to list immutable attributes in the job ad itself.\n\n</p><p>Other possibilities including scanning the commit (either explicitly or via a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> log plugin) for attributes \"of interest\" and only evaluating the requirements for those job ads for which at least one of those attributes changed.  On the other hand, it's not entirely clear what the semantic meaning of rejecting an update from the starter would be.</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Jun-29 14:10:58 by tlmiller:</em> <br/>\n\nZach writes:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">PLACES YOU *COULD* CHECK THE EXPRESSION:\n\n0) In starter before exec for vanilla, in Schedd for local/scheduler, etc.\n\n1) In shadow (or schedd) before claim activation\n\n2) In schedd before sending job to negotiator for consideration\n\n3) In schedd at submit time\n\n4) In schedd when processing q_edit attribute updates.\n\n5) In schedd (or shadow) when processing chirp attribute updates.\n\nIf #0 is mandatory, then all the others aren't really necessary, as things that violate the condition will never actually run.\n\n#2 may be too expensive.\n\n#3, #4, and #5 are \"niceties\" to inform the user early.\n\n#4 and #5 are slightly different because #4 comes from the user, and #5 comes from \"condor\" (i.e. the starter), although the starter does this at the request of the user so maybe differentiating between them isn't useful.\n\n</pre></div>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2015-Jun-29 14:10", "status": "new", "created": "2015-Feb-18 14:50", "fixed_version": "2015-Feb-18 14:50", "broken_version": "", "priority": "4", "subsystem": "DaemonsSubmitNode", "assigned_to": "tlmiller", "derived_from": "#2640", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}