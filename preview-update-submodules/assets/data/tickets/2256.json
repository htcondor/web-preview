{"id": 2256, "title": "Ticket #2256: Multiple vars definitions go into the vars list", "description": "<blockquote>\nIf you define the same macro name twice for the same node, e.g.:\n\n<p></p><pre>  Vars job1 a=\"foo\"\n  Vars job1 a=\"bar\"\n</pre>\n\n<p>both definitions go into the table of vars values for the node, and both get passed to condor_submit.  (Within condor_submit, the last one takes effect.)\n\n</p><p>Anyhow, there's no reason for both values to get stuffed into the vars data structure within DAGMan.  (And fixing this would be a good chance to clean up that data structure in general.)</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Jun-20 11:21:24 by nwp:</em> <br/>\n\nI do not understand this ticket. I think the behavior after <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2090\" onclick=\"get_ticket_and_populate_wrapper('2090'); return false;\" title=\"Warn if VARS values are overwritten\">#2090</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2255\" onclick=\"get_ticket_and_populate_wrapper('2255'); return false;\" title=\"The DAGMan strict flag should apply to multiple vars definitions\">#2255</a></span> makes sense: If you submit the same variable twice, then warn the user and if the STRICT warning triggers, abort the DAG.  But this ticket asks us to divine the mind of the user, in that we cannot really know whether she means to use the new value or that it is a mistake.  If she means to use the new value, the only cost is an additional, albeit ignored, line in a submit file.\n\n<p></p><hr/>\n<em>2011-Jun-20 12:10:56 by wenger:</em> <br/>\n\nHmm, I guess my initial explanation here wasn't very clear.  What I'm saying is this:  if you do the following:\n\n<p></p><pre>  Vars job1 a=\"foo\"\n  Vars job1 a=\"bar\"\n</pre>\n\n<p>\"bar\" should overwrite \"foo\" within DAGMan's internal data structures.  The way things are right now, you end up with <strong>two</strong> values of a for job1, instead of \"bar\" overwriting \"foo\".  And then both values of a get passed on the condor_submit command line; but it seems like any reference to $(a) within the submit file can't access the first value of a.\n\n</p><p>Basically, I think having both values for a within DAGMan's data structures is wasteful and unclear.\n\n</p><p>Hopefully that makes sense...\n\n</p><p></p><hr/>\n<em>2011-Jun-20 14:18:56 by nwp:</em> <br/>\n\nI implemented this, tested it in a personal condor, am pushing it (onto master), and resolving this ticket.\n\n<p></p><hr/>\n<em>2011-Jun-21 13:40:17 by nwp:</em> <br/>\n\nV7.7.0 is not really broken here, because <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2090\" onclick=\"get_ticket_and_populate_wrapper('2090'); return false;\" title=\"Warn if VARS values are overwritten\">#2090</a></span> is not in 7.7.0</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-20 14:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/f0d7b4190b74d2fad7b2081ac7000e10e10873f4\">[22233]</a></span>: Overwrite variables if there are multiple definitions ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2256\" onclick=\"get_ticket_and_populate_wrapper('2256'); return false;\" title=\"Multiple vars definitions go into the vars list\">#2256</a></span> ===VersionHistory=== In <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2090\" onclick=\"get_ticket_and_populate_wrapper('2090'); return false;\" title=\"Warn if VARS values are overwritten\">#2090</a></span>, we alerted the user if there were multiple definitions of a variable in a DAGman file. Here, we explicitly overwrite the old value.  (By Nathan W. Panike )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Jun-21 13:40", "status": "resolved", "created": "2011-Jun-20 10:59", "fixed_version": "2011-Jun-20 10:59", "broken_version": "v070700", "priority": "3", "subsystem": "Dag", "assigned_to": "nwp", "derived_from": "#2090", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu", "due_date": ""}