{"id": 3676, "title": "Ticket #3676: StarterWaitForDebug / ShadowWaitForDebug infinite loop, even debugged", "description": "<blockquote>\nThe new shadow and both starters recognize ShadowWaitForDebug=1 and StarterWaitForDebug=1 in the job ad.  These cause the respective daemon to enter an infinite loop, with the theory being that you'll attach with a debugger, perhaps set some breakpoints or do other investigation, and then will break out of the loop with \"set starter_should_wait=0\" or \"set shadow_should_wait=0\" (or similar; the previous is GDB syntax).  The code in question looks something like this:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">\tint shadow_should_wait = 0;\n\tad-&gt;LookupInteger( ATTR_SHADOW_WAIT_FOR_DEBUG, shadow_should_wait );\n\tif( shadow_should_wait ) {\n\t\twhile( shadow_should_wait ) { }\n\t}\n</pre></div>\n\n\n<p>The problem is that the compiler is allowed to notice that to enter the while loop, shadow_should_wait must be true, and that since no code changes shadow_should_wait, \"while( shadow_should_wait ) { }\" can be optimized into \"while( true ) { }\".  So setting shadow_should_wait=0 in the debugger won't actually break out of the loop.\n\n</p><p>Fix: declare starter_should_wait / shadow_should_wait as volatile, so the compiler knows to avoid optimizing references away.\n\n</p><p>Will not be documented: the existence of this feature is not documented.</p></blockquote>", "remarks": "<blockquote>\n<em>2013-Jun-06 15:05:15 by adesmet:</em> <br/>\n\nFix is on the branch V8_0-wait-for-debug-fix.\n\n<p></p><hr/>\n<em>2013-Jun-06 17:17:17 by gthain:</em> <br/>\n\nYou could use the gdb \"jump\" command to just skip around the loop.\n\n<p></p><hr/>\n<em>2013-Jul-09 09:35:06 by johnkn:</em> <br/>\n\nREVIEW: fix looks good for stable.   I wonder if you could have used const_cast&lt;&gt; instead of a temp integer though?</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-06 14:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/cb39635852255a4985523ef451cedb1e71c11143\">[36510]</a></span>: Fix infinite loop in *WaitForDebug <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=3676\" onclick=\"get_ticket_and_populate_wrapper('3676'); return false;\" title=\"StarterWaitForDebug / ShadowWaitForDebug infinite loop, even debugged\">#3676</a></span>  (By Alan De Smet )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2013-Jul-09 09:36", "status": "resolved", "created": "2013-Jun-04 16:23", "fixed_version": "2013-Jun-04 16:23", "broken_version": "v080000", "priority": "3", "subsystem": "Daemons", "assigned_to": "johnkn", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}