{"id": 4277, "title": "Ticket #4277: schedd crashes with non-blocking condor_q with removed jobs", "description": "<blockquote>\nWith the non-blocking condor_q enabled, submit a bunch of jobs, run  condor_q -stream, stop it with control-Z, then condor_rm -a.  The schedd will then crash.</blockquote>", "remarks": "<blockquote>\n<em>2014-Mar-25 15:06:24 by gthain:</em> <br/>\n\nWouldn't it be simpler if Hashtable::remove just called operator++ on the victim iterator?\n\n<p></p><hr/>\n<em>2014-Mar-25 21:26:30 by bbockelm:</em> <br/>\n\nGood catch.  I refactored that code into a common function.  All unit tests for this feature still pass.\n\n<p>I just pushed a build to NMI to look for obvious regressions.  Hopefully that will lead to good news in the morning.\n\n</p><p></p><hr/>\n<em>2014-Mar-26 10:16:08 by gthain:</em> <br/>\n\nThere's also the question of what the semantics should be in general for deleting the object an active iterator points to.  The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=HashTable\" title=\"Hash Table\">HashTable</a></span> code in general doesn't know what the next action of the user of the code will do next after the deletion:  will it increment the iterator, dereference it, or check for end()'ness?  Seems like depending on what the user chooses to do, iteration over a hash table that has random deletions in it could lead to either repetition of an iterated item, or skipping one.  We should be clear about what the semantics are.\n\n<p></p><hr/>\n<em>2014-Mar-26 11:42:00 by bbockelm:</em> <br/>\n\nHi Greg,\n\n<p>I think the semantics are this:\n\n</p><p>Whenever a caller returns to DC, the iterator may be moved forward if the current item is deleted.\n\n</p><p>So, to avoid skipping or duplication, the caller should:\n</p><ol>\n<li>Not dereference the current iterator before returning to DC.  I.e., they should do (*it)++.\n</li><li>Be aware that the iterator may change position if it is returned to DC.  The iterator may be equal to end() upon being called from DC, even if it wasn't before returning to DC.\n</li><li>On being called from DC, consume the current iterator before incrementing it.\n</li><li>Never cache the iterator value when returning to DC, as there is no guarantee the value hasn't been free()'d before the function is called again.  So, never store (*it) into a class's member variable.\n</li></ol>\n\n<p>A correct use would be:\n\n</p><p></p><div class=\"verbatim\">\n<pre>while (it != end())\n{\n  Foo *value = (*it)++;\n  ... do something, such as writing value to the network ...\n  if (some conditional)\n  {\n    return;\n  }\n}\n</pre></div>\n\n\n<p>where 'it' is a class member and this code is in a function that is a DC callback handler.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2014-Mar-26 16:23:54 by bbockelm:</em> <br/>\n\nHi Greg,\n\n<p>NMI build looks good.  I have no further commits planned for this item.\n\n</p><p>Accordingly, assigning this back to you for merge and backport.\n\n</p><p>Brian</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-27 09:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/6dc9824420b742e1c216103952f9b459e24426bb\">[39728]</a></span>: Move duplicate code for advancing the iterator to a common function. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4277\" onclick=\"get_ticket_and_populate_wrapper('4277'); return false;\" title=\"schedd crashes with non-blocking condor_q with removed jobs\">#4277</a></span> Committer: Greg Thain  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-27 09:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/7ab1e2043b3568c832df3b76ab6065400b5db088\">[39727]</a></span>: Update the python tests to cover xquery. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4277\" onclick=\"get_ticket_and_populate_wrapper('4277'); return false;\" title=\"schedd crashes with non-blocking condor_q with removed jobs\">#4277</a></span> This covers a few cases where we query for large ads, compare the results between query and xquery, and remove ads while an xquery is in progress. Committer: Greg Thain  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-27 09:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/856715670e69ab8e078ce361e020c76076d1cfc8\">[39726]</a></span>: Correct removal of objects actively being iterated over. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4277\" onclick=\"get_ticket_and_populate_wrapper('4277'); return false;\" title=\"schedd crashes with non-blocking condor_q with removed jobs\">#4277</a></span> This corrects a few issues: 1) When removing an object from the hashtable, the iterator should move <strong>forward</strong>, not backward. As it can be referenced in the future, by moving it backward, we risked the possibility of returning the same value\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-27 09:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/58fbd69cec1e88cb9625d44cff6d1368f8acacb0\">[39725]</a></span>: Make sure we project the classad if requested. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4277\" onclick=\"get_ticket_and_populate_wrapper('4277'); return false;\" title=\"schedd crashes with non-blocking condor_q with removed jobs\">#4277</a></span> Committer: Greg Thain  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-25 21:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/a5f78960ba62d386537119070de891f57326c8b5\">[39720]</a></span>: Move duplicate code for advancing the iterator to a common function. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4277\" onclick=\"get_ticket_and_populate_wrapper('4277'); return false;\" title=\"schedd crashes with non-blocking condor_q with removed jobs\">#4277</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-25 14:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/1d383190efab20228f3c9c7f531d1b24aafadd71\">[39711]</a></span>: Update the python tests to cover xquery. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4277\" onclick=\"get_ticket_and_populate_wrapper('4277'); return false;\" title=\"schedd crashes with non-blocking condor_q with removed jobs\">#4277</a></span> This covers a few cases where we query for large ads, compare the results between query and xquery, and remove ads while an xquery is in progress.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-25 14:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/f68eda0d7ff7d829c1c13666d5f1f2b5e41e5450\">[39710]</a></span>: Correct removal of objects actively being iterated over. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4277\" onclick=\"get_ticket_and_populate_wrapper('4277'); return false;\" title=\"schedd crashes with non-blocking condor_q with removed jobs\">#4277</a></span> This corrects a few issues: 1) When removing an object from the hashtable, the iterator should move <strong>forward</strong>, not backward. As it can be referenced in the future, by moving it backward, we risked the possibility of returning the same value\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-25 13:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c8dbe33fa7d2ec75fed3e69c67a33f599b3573ac\">[39709]</a></span>: Make sure we project the classad if requested. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4277\" onclick=\"get_ticket_and_populate_wrapper('4277'); return false;\" title=\"schedd crashes with non-blocking condor_q with removed jobs\">#4277</a></span>  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-Mar-27 10:50", "status": "resolved", "created": "2014-Mar-25 10:00", "fixed_version": "2014-Mar-25 10:00", "broken_version": "v080105", "priority": "1", "subsystem": "DaemonsSubmitNode", "assigned_to": "gthain", "derived_from": "", "creator": "gthain", "rust": "", "customer_group": "other", "visibility": "public", "notify": "bbockelm@cse.unl.edu", "due_date": ""}