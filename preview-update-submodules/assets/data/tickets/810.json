{"id": 810, "title": "Ticket #810: Schedd should be able to intelligently reschedule all on its own", "description": "<blockquote>\nI think the time has come to get rid of requiring condor_submit to issue a condor_reschedule.  These days the schedd is smart enough to not blow itself up if it were to reschedule on every transaction commit (due to mechanisms like the <code>Timeslice</code> class) - and that is essentially what is happening (poorly) now anyhow.  Furthermore, the schedd could even be smarter about it.\n\n<p>I think we want the schedd to call <code>StartLocalJobs()</code> whenever it sees one or more scheduler or local universe jobs enter the queue, and <code>timeout()</code> whenever it sees jobs of any other universe.  At first blush, this would seem a lot better to me than what we have now.  For instance, this way we would have zero latency of the type described in <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=765\" onclick=\"get_ticket_and_populate_wrapper('765'); return false;\" title=\"Scheduler universe jobs should not trigger a matchmaking cycle\">#765</a></span>.</p></blockquote>", "remarks": "<blockquote>\n<em>2012-Jun-28 13:02:47 by tannenba:</em> <br/>\n\nAbandoning this ticket, as <span class=\"ticket\"><a class=\"active\" href=\"/wiki-archive/tickets/?ticket=3056\" onclick=\"get_ticket_and_populate_wrapper('3056'); return false;\" title=\"Schedd should automatically trigger a reschedule when job goes idle\">#3056</a></span> is a duplicate.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2012-Jun-28 13:03", "status": "abandoned", "created": "2009-Oct-02 11:46", "fixed_version": "2009-Oct-02 11:46", "broken_version": "v070500", "priority": "3", "subsystem": "Daemons", "assigned_to": "", "derived_from": "#1284", "creator": "tannenba", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tstclair@redhat.com", "due_date": ""}