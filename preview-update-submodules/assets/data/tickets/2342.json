{"id": 2342, "title": "Ticket #2342: negotiator updates user priorities with one transaction per user", "description": "<blockquote>\nThe CMS glidein pool negotiator is effectively broken because it takes so long to update user priorities in each negotiation cycle:\n\n<p></p><pre>   08/01/11 10:10:27 Phase 2:  Performing accounting ...\n   08/01/11 10:48:08 Phase 3:  Sorting submitter ads by priority ...\n</pre>\n\n<p>The problem is that each user is updated in its own transaction and there are over 4k user records.  Igor requested that we fix this in the stable series, if possible.  The problem is so easy and safe to fix that I think we should do it in 7.6.3.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Aug-16 16:41:04 by danb:</em> <br/>\n\nWe found that there is an additional fsync-related performance problem, this time in <code>Accountant::CheckMatches()</code>.  This took over an hour in a case where a large number of machines transitioned from claimed to unclaimed.\n\n<p>I assert that <code>AddMatch()</code> and <code>RemoveMatch()</code> should commit \"nondurable\" transactions, meaning no fsync.  This would solve the problem in <code>CheckMatches()</code> and it would also avoid any similar problem during matchmaking when large numbers of new matches are created.  In the current model, the match records do not need to be durable, because in the event of a negotiator crash, any discrepancies between the match records and the advertised state of the startds will be corrected in <code>CheckMatches()</code> itself.\n\n</p><p>I propose making this change for 7.6.3.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-16 16:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/1c75658dbe60e9a623367e07a25838197176d255\">[26806]</a></span>: Another fsync optimization in the negotiator. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2342\" onclick=\"get_ticket_and_populate_wrapper('2342'); return false;\" title=\"negotiator updates user priorities with one transaction per user\">#2342</a></span> This makes AddMatch() and RemoveMatch() nondurable in order to solve severe performance problems at large scale in Accountant::CheckMatches(). This change does not alter the consistency model of match records in the accounting database: the contents\u00a0[...]\n (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-01 18:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/58719bcfe9a8b63d00bab7cd1b1726f3a576c332\">[26572]</a></span>: Optimized disk transactions when the negotiator updates user priorities. ===GT:Fixed=== <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2342\" onclick=\"get_ticket_and_populate_wrapper('2342'); return false;\" title=\"negotiator updates user priorities with one transaction per user\">#2342</a></span> ===VersionHistory=== The time-decay of fair share user priorities is now more efficient. Previously, when there were thousands of users in the negotiator's accounting records, many small disk transactions were\u00a0[...]\n (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Aug-16 21:59", "status": "resolved", "created": "2011-Aug-01 14:47", "fixed_version": "2011-Aug-01 14:47", "broken_version": "v070602", "priority": "2", "subsystem": "", "assigned_to": "johnkn", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "isfiligoi@ucsd.edu, dan@hep.wisc.edu, matt@cs.wisc.edu", "due_date": ""}