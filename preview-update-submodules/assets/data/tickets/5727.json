{"id": 5727, "title": "Ticket #5727: memory leak in condor_q client, noticed w/ condor_q python binding", "description": "<blockquote>\n<a class=\"external\" href=\"https://www-auth.cs.wisc.edu/lists/htcondor-users/2016-June/msg00047.shtml\">Scott in htcondor-users</a> reports a memory leak that can be reproduced with the below snippet of python code; with no jobs running, he typically sees the memory use increase by 128kb once every 45 or so iterations of the loop.\n\n<p></p><pre>  import resource\n  import htcondor\n  import gc\n  schedd = htcondor.Schedd()\n  while True:\n    schedd.query()\n    # explicitly run the garbage collector to free up mem not leaked\n    gc.collect()\n    print('mem use: %s (kb)' % resource.getrusage(resource.RUSAGE_SELF).ru_maxrss)\n</pre>\n\n<p>A work-around for people using an earlier version of HTCondor is to use Schedd().xquery() instead of query().\n\n</p><p><em>Note</em>: While Scott reported Schedd().xquery() and Collector().query() also appear to leak, I think he was simply encountering the fact that Python only runs the garbage collector periodically.  Valgrind did find a problem with Schedd.query() but not with xquery(); explicitly calling the garbage collector in the test code confirms this theory.</p></blockquote>", "remarks": "<blockquote>\n<em>2016-Jun-14 08:09:26 by tannenba:</em> <br/>\n\nBased on code inspection, sure looks like a leak that was introduced as part of <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4241\" onclick=\"get_ticket_and_populate_wrapper('4241'); return false;\" title=\"condor_q and condor_status should summarize by default\">#4241</a></span>.  Check out commit <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c4b1e7c9e5feb945b273fe95f085ef1a2f87dd4a\">[44555]</a></span> around line 655 in utils/condor_q.cpp.\n\n<p>Committing a patch momentarily for this leak and as well as some others introduced in this commit; will then assign this ticket to TJ for code review, since git blame points his way ;).\n\n</p><p>Leak was likely never noticed since we run valgrind on the daemons as part of our release process, but do not regularly valgrind the command line tools because they are short-lived processes.  With the python bindings, however, we may want to reconsider this.\n\n</p><p></p><hr/>\n<em>2016-Jun-28 09:45:05 by johnkn:</em> <br/>\n\n<strong>code_review</strong> looks good.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6227\" onclick=\"get_ticket_and_populate_wrapper('6227'); return false;\" title=\"Memory leak in python bindings due to dprintf buffering\">#6227</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nMemory leak in python bindings due to dprintf buffering</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-26 13:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/9eb6ee7ae124d81cf537b60cdcafc3b0ce7f7cf1\">[48653]</a></span>: Merged <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/419058a68bd17cb9a349dcbf0e592473669330f3\">[48652]</a></span>, Merge branch 'V8_4-branch' into V8_5_6-branch with conflict fix. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5727\" onclick=\"get_ticket_and_populate_wrapper('5727'); return false;\" title=\"memory leak in condor_q client, noticed w/ condor_q python binding\">#5727</a></span> Conflicts: src/condor_utils/condor_q.cpp  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-26 12:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/498468ace1aad2cb6e3b3b32d81ac6dd2a0241eb\">[48651]</a></span>: Version history entry for <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5727\" onclick=\"get_ticket_and_populate_wrapper('5727'); return false;\" title=\"memory leak in condor_q client, noticed w/ condor_q python binding\">#5727</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-26 12:36</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/120d361d7d4fafbd87cd147eb06b24e1c993e983\">[48650]</a></span>: Fix memory leak in condor_q client. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5727\" onclick=\"get_ticket_and_populate_wrapper('5727'); return false;\" title=\"memory leak in condor_q client, noticed w/ condor_q python binding\">#5727</a></span> This leak was especially noticable in long-lived proceses using htcondor.Schedd().query() python API.  (By Todd Tannenbaum )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2016-Jun-28 09:45", "status": "resolved", "created": "2016-Jun-14 07:59", "fixed_version": "2016-Jun-14 07:59", "broken_version": "v080306", "priority": "2", "subsystem": "Libs", "assigned_to": "tannenba", "derived_from": "", "creator": "tannenba", "rust": "", "customer_group": "users", "visibility": "public", "notify": "tannenba@cs.wisc.edu", "due_date": ""}