{"id": 2166, "title": "Ticket #2166: Create a DAG validation tool", "description": "<blockquote>\nMiron really originated this idea, based on today's discussion with the Spalding lab people.\n\n<p>Anyhow, the idea is that we should have a stand-alone DAG validation tool that would find parse errors in a DAG file without actually needing a Condor installation.  It should issue a warning on non-existent subdag external files (probably with a flag to make that a fatal error).  It should work its way down through subdag externals, so that you can check an entire workflow at one shot.  It should also probably issue warnings or errors on things like missing submit files, and missing PRE and POST script files.  (And there are probably a bunch of additional things it should check, too, that I'm not thinking of right now.)\n\n</p><p>This tool should probably either use the existing DAG parsing code, or else directly run condor_dagman with special command-line flags telling it to behave in the appropriate way.\n\n</p><p><strong>Milestones</strong>\n</p><ol>\n<li>8/29/11 Pithy design plan (what will it look like to the end user? what will it check? will it share the same parser as the rest of dagman?) <em>The DAGman parser runs everything in sight, so simply ripping it out is not realistic.  I would like to rewrite the parsing and some other internals anyway. --- nwp 12/19/2011</em>\n</li><li>Implement\n</li><li>Test in test suite\n</li><li>Document</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2011-May-17 17:05:53 by wenger:</em> <br/>\n\nAlso see gittrac <span class=\"ticket\"><a class=\"new\" href=\"/wiki-archive/tickets/?ticket=1856\" onclick=\"get_ticket_and_populate_wrapper('1856'); return false;\" title=\"Add command-line flag to condor_submit_dag to run DAGMan directly\">#1856</a></span>.\n\n<p></p><hr/>\n<em>2011-May-18 20:38:06 by nwp:</em> <br/>\n\nIs this a good plan? We have a flag (-n, like make) or (-c, like perl) which basically means dry-run.  We ignore PRE and POST scripts, and submit the jobs to Condor with \"noop_job = True\" in the submit_file. But will this work correctly, say, in the case that file transfer is enabled for the job and a file is needed that was created by a script or a previous step of the dag?  It seems that it would from the documentation for condor_submit.\n\n<p></p><hr/>\n<em>2011-May-19 09:47:42 by wenger:</em> <br/>\n\nMiron may have some ideas about whether we should have a flag to condor_submit_dag, or some totally separate command, like condor_verify_dag.  However, he said very strongly that this operation should not require an actual Condor installation, so actually submitting jobs (even NOOPs) isn't an option.  But I think we're better off not doing that anyhow, at least partly because it's surprisingly slow.  I think the main goal is to check for syntax errors in the actual DAG files, and probably have options to flag an error if submit files are missing, etc.  The big thing is that it needs to deal with sub-DAGs automatically, so that if you run this checker on the top-level DAG it checks the whole workflow (there would have to be another option to specify whether missing sub-DAG files are an error or not).\n\n<p>(This all came up because Logan said that one of the issues they ran into was things like incorrectly spelling submit file names in the DAG file.  Because we now look at the submit files lazily, you don't find out about such an error until you get to that point in the DAG.)\n\n</p><p></p><hr/>\n<em>2011-May-20 13:43:57 by nwp:</em> <br/>\n\nWhat are the semantics of the <code>-no_submit</code> option? And how is a DAG validation tool different than that?</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2014-May-20 11:44", "status": "stalled", "created": "2011-May-17 17:04", "fixed_version": "2011-May-17 17:04", "broken_version": "v070600", "priority": "5", "subsystem": "Dag", "assigned_to": "PitS", "derived_from": "#2810", "creator": "wenger", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "wenger@cs.wisc.edu, tstclair@redhat.com", "due_date": ""}