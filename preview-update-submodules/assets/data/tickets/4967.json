{"id": 4967, "title": "Ticket #4967: SharedPortEndpoint::GetMyLocalAddress() should use Sinful", "description": "<blockquote>\nSharedPortEndpoint::GetMyLocalAddress() (<a class=\"file\" href=\"rlog?f=src/condor_io/shared_port_endpoint.cpp\">/src/condor_io/shared_port_endpoint.cpp</a> ) wills a Sinful-like string out of thin air. It shouldn't. It should use the Sinful class to ensure compatibility with the future.  In particular, it should ensure that addrs is set (Sinful::addAddrToAddrs).  This will ensure that in the Bold New Future where the primary address is removed that this will keep working.\n\n<p>Once fixed also edit DaemonCore::InfoCommandSinfulStringMyself (<a class=\"file\" href=\"rlog?f=src/condor_daemon_core.V6/daemon_core.cpp\">/src/condor_daemon_core.V6/daemon_core.cpp</a> ) and look for the call to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=GetMyLocal\" title=\"Get My Local\">GetMyLocal</a></span> Address.  Move the test above (ASSERT(s.hasAddrs())) into the \"if( addr )\" block below; the comment in that block about why we don't test it will  no longer be valid.\n\n</p><p>This is a defenct because it's no longer in compliance with our design. This is low priority because at the moment it's harmless.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2015-Mar-31 16:02", "status": "new", "created": "2015-Mar-31 16:00", "fixed_version": "2015-Mar-31 16:00", "broken_version": "v080300", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}