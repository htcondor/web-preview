{"id": 6930, "title": "Ticket #6930: Support Windows AMIs in condor_annex", "description": "<blockquote>\nPresently, <code>condor_annex</code> does not (readily) allow for Windows AMIs: there are a few things that any instance started by an annex must do in order to join the annex, and we don't supply any means for Windows instances to do those things.\n\n<p>We are investigating what it would take to change that.  As a first step, it will dramatically simplify implementation to convert the Linux initscript back to a script called at config time by HTCondor.  This approach was abandoned previously because the config time script ran once and only once, and really needs to be run once per boot (if for no other reason that the IP address of the instance changing).  It was equally unattractive to run the script once per config parse and have it manage the cache by itself.\n\n</p><p>The first step is therefore TJ's ticket, [number-to-follow], in which the master (and only the master) purges the config cache when the master starts up (but not when it restarts).  Since we don't expect the master to restart often, this should approximate once-per-boot closely enough to work well.\n\n</p><p>The second step is to rewrite the initscript to work on Windows.  The immediate task is to determine what APIs AWS makes available on Windows; this will allow TJ to decide how to proceed with the rewrite.  We may have to additionally alter the <code>condor_annex</code> tool to produce .zip files for Windows AMIs (or universally, and edit the initscript to handle them).</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Feb-25 16:29:14 by tlmiller:</em> <br/>\n\n<span class=\"subsubsection\"><h4>Windows AWS CLI</h4></span>\n\n<p></p><ul>\n<li><a class=\"external\" href=\"https://s3.amazonaws.com/aws-cli/AWSCLI64PY3.msi\">64-bit installer</a>\n</li><li><a class=\"external\" href=\"https://s3.amazonaws.com/aws-cli/AWSCLI32PY3.msi\">32-bit installer</a>\n</li></ul>\n\n<p><span class=\"subsubsection\"></span></p><h4>Windows AWS APIs</h4>\n\n<p></p><ul>\n<li><a class=\"external\" href=\"https://sdk-for-net.amazonwebservices.com/latest/AWSToolsAndSDKForNet.msi\">.Net</a>\n</li><li><a class=\"external\" href=\"https://github.com/boto/boto3#quick-start\">Python 3</a>\n</li><li><a class=\"external\" href=\"https://aws.amazon.com/powershell/\">PowerShell</a>\n</li></ul>\n\n<p>Annex doesn't get to use AWS' \"user data\" feature, but in case you're curious, here's <a class=\"external\" href=\"https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-windows-user-data.html\">Running Commands on Your Windows Instance at Launch</a>\n\n</p><p></p><hr/>\n<em>2019-Feb-25 17:14:19 by tlmiller:</em> <br/>\n\nAfter a brief tour of the stock Server 2019 AMI, TJ seems to think that the .Net API may be the easiest way to reimplement the initscript.  We'll talk more later.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "todo", "last_change": "2019-Feb-25 17:14", "status": "new", "created": "2019-Feb-25 16:12", "fixed_version": "2019-Feb-25 16:12", "broken_version": "", "priority": "4", "subsystem": "Annex", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, johnkn@cs.wisc.edu", "due_date": ""}