{"id": 2389, "title": "Ticket #2389: Dynamically link Globus and VOMS libraries in UW builds", "description": "<blockquote>\nIn the UW builds of Condor on linux, dynamically link against the Globus and VOMS libraries we build. We also want to distribute a copy of those libraries.\n\n<p>We also need to make Condor more amenable to varying versions of Globus when others (including distro maintainers) build Condor. The gahp_server and nordugrid_gahp replace some object files in the Globus libraries they use with modified versions. This can cause undefined behavior (including crashes) if a different version of the library is used.\n\n</p><p><span class=\"subsection\"></span></p><h3>Milestones </h3>\n<ul>\n<li>Dynamically link Globus and VOMS libraries in UW builds <strong>[DONE]</strong>\n<ul>\n<li>If/when distributing Globus/VOMS libraries, make sure they're stripped when appropriate <strong>[DONE]</strong>\n</li><li>If distributing Globus/VOMS libraries in native packages, ensure we set RPATH correctly (lib vs lib64). This can get tricky when linking binaries as part of an external (gridftp_server, blahp). <strong>[DONE]</strong>\n</li></ul>\n</li><li>Make gahp_server safe for varying library versions <strong>[DONE]</strong>\n</li><li>Make nordugrid_gahp safe for varying library versions <strong>[DONE]</strong>\n</li><li>Fix missing library problem in some builds <strong>[DONE]</strong></li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2011-Aug-24 16:20:11 by jfrey:</em> <br/>\n\nI can't find a way to strip libraries and executables that come from the externals in native package builds. CMake will strip things if CPACK_STRIP_FILES is set to ON, but only files that it created directly. I can't tell it about other binary files (from the externals) that it should strip. I added explicit calls to <code>strip</code> as an installation step, but my calls don't know what temporary directory CPack will use to assemble a native package.\n\n<p>For now, binaries and libraries from the externals will be unstripped in the UW-built native packages.\n\n</p><p></p><hr/>\n<em>2011-Sep-12 13:39:43 by jfrey:</em> <br/>\n\nPete reports that when building everything (including externals) from scratch, some of the Globus and VOMS libraries don't end up in the install directory. I believe the problem occurs if cmake is only run before the externals are built. The file glob operations in the Globus and VOMS CMakeLists.txt files find any libraries and thus nothing gets installed. The file globbing needs to be delayed, probably until install time.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2412\" onclick=\"get_ticket_and_populate_wrapper('2412'); return false;\" title=\"UW-built rpms don't contain any symlinks\">#2412</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nUW-built rpms don't contain any symlinks</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-12 10:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/9e6bd8b637e5bb800c6a45857198a027aaabdc26\">[27779]</a></span>: Document dynamic linking of Globus and VOMS libraries. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-13 16:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/36aa4a88f2ccf99938958d439112496b16212dd2\">[27202]</a></span>: Voms and Globus libraries should install properly in all builds now. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span> Before, these libraries could end up not being installed in the release directory if they were't built before the last invocation of cmake.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-23 16:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/91e3adc09e1f5905b4cc3034842fc38c833368da\">[26952]</a></span>: Note at top of CPackDeb.cmake which cmake version it was taken from. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-23 13:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0cbfb8ac95557c06d3fec49cb2a9101229a23c43\">[26950]</a></span>: Patch debian package script to deal with externals libraries. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span> When calculating shared library dependencies, dpkg-shlibdeps doesn't account for libraries not being in their final installation location and thus not being found via rpath. So we set LD_LIBRARY_PATH to &lt;package dir&gt;/usr/lib/condor when\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-23 13:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/f7df2245c18a70909fca720ec2c51a12336a8f40\">[26949]</a></span>: Don't try to strip externals binaries for package builds. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span> When doing a package build, the install step appears to be done as part of the package step, and our explicit calls to 'strip' don't know where the files will be placed.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-23 13:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/b1401afbb38d1917c86c3d846f7c4450087344c9\">[26948]</a></span>: Use OS's libexpat and dynamically link against it. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span> VOMS depends on expat, so we need to dynamically link against it as well. Also, I found a couple places where we were using the system's libexpat instead of our external. Since libexpat is available on all system where we need it, just use the\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-18 15:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e9c1ec19dd5a017657c7a23bffa6044d13812b29\">[26947]</a></span>: Strip binaries and libraries from externals when appropriate. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span> I can't find a why to make cmake/cpack automatically strip binaries that it didn't create directly. So I'm adding extra install rules to call the strip program manually.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-18 15:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/37d2ef26ea25f6cd091b5405264a06895ebaac81\">[26946]</a></span>: Fix external library install locations. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-17 10:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/47eb680f92c00d02650e38af5c6a431a68e539a8\">[26945]</a></span>: Make nordugrid_gahp safer with different Globus verisons. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span> Import the entire globus_ftp_client library source into the nordugrid_gahp, instead of just three modified object files. This allows us to reliably work with updated versions of Globus, without worrying about the internals of globus_ftp_client\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-17 08:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/f532c816247d49612922afb0e22386fdaea26d95\">[26944]</a></span>: Set rpath in non-proper native package builds. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span> When dynamically linking against libraries we build ourselves, we need to distribute those libraries and ensure our binaries can find them. The rpath will be different for tarball and native package builds. For externals, which we just build once,\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-16 17:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/238bbca6f2dcf9612f1b963d30f5eb887b07ad46\">[26941]</a></span>: Make gt2_gahp safer with different Globus versions, part 2. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span> Fix a casting problem on 64-bit machines caused by C code being compiled as C++.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-15 22:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/85d79ba84e881e988ae38551638b585707e77509\">[26940]</a></span>: Make gt2_gahp safer with different Globus versions. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span> We use a crude hack to optimize authentication of GASS server connections which requires accessing private data structures of globus_xio and globus_io, whose layout could change in future releases of Globus. Now, we check that the version of these\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-15 13:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/df005415480242c23298a152c132011da73edd9e\">[26939]</a></span>: Dynamically link Globus and VOMS libraries, part 1. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2389\" onclick=\"get_ticket_and_populate_wrapper('2389'); return false;\" title=\"Dynamically link Globus and VOMS libraries in UW builds\">#2389</a></span> Globus and VOMS libraries are now dynamically linked and included in the release under lib/condor. Tasks yet to be done: * The released libraries still need to be stripped when appropriate. * gahp_server and nordugrid_gahp's modifications to the\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2011-Oct-12 10:53", "status": "resolved", "created": "2011-Aug-15 13:47", "fixed_version": "2011-Aug-15 13:47", "broken_version": "v070600", "priority": "2", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "#1135", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tstclair@redhat.com", "due_date": "20110914"}