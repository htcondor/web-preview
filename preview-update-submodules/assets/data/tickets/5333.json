{"id": 5333, "title": "Ticket #5333: Potential bug with DAGMan maxidle/DAGMAN_MAX_JOBS_IDLE", "description": "<blockquote>\nThe DAGMan manual asserts that \"maxidle\" (and so, presumably, DAGMAN_MAX_JOBS_IDLE) limit jobs in the queue based upon the number of processes (not clusters). However, facilitators at CHTC have encountered many times when user jobs are submitted by dagman far beyond a point where the number of processes has exceeded the number specified for DAGMAN_MAX_JOBS_IDLE.\n\n<p>When this happens, the queue can end up with too many jobs such that performance suffers (new jobs not matched readily, condor commands like \"condor_q\" don't return, etc.).\n\n</p><p>Lauren Michael would be happy to provide a test case from a current user, and/or coordinate so that someone can do a full-scale test on one of our lesser-used submit servers.</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Oct-22 15:51:09 by lmichael:</em> <br/>\n\nFYI,\n\n<p>Christina just tested the following case:\n\n</p><p>DAG: Fifteen \"JOB\" lines, each with a submit file with \"queue 3\"; CONFIG dagman_config\ndagman_config: DAGMAN_MAX_JOBS_IDLE = 12\n\n</p><p>Result: all fifteen submit files of 3 processes were submitted\n\n</p><p>Her test case can be viewed on submit-5.chtc.wisc.edu in /home/ckoch5/tests/dag_max_idle\nThe JobID of her DAG was 5768099, and other Job IDs are in the log files (in the above path)\n\n</p><p>Thanks,\nLauren\n\n</p><p></p><hr/>\n<em>2015-Oct-23 11:40:24 by wenger:</em> <br/>\n\nCould you attach the relevant dagman.out file to this ticket?\n\n<p></p><hr/>\n<em>2015-Oct-23 15:54:37 by wenger:</em> <br/>\n\nHmm -- I thought there was a maxidle test, but it looks like there isn't.  Clearly there should be...\n\n<p></p><hr/>\n<em>2015-Oct-26 13:05:23 by wenger:</em> <br/>\n\nIt looks like what's happening is that the maxidle limit is only being evaluated once per submit cycle.\n\n<p>I'm thinking that maybe the easiest way to fix this is to set the max number of submits per cycle to 1 if you set maxidle, and then also increase the frequency of the submit cycles.  (I guess if you set maxidle and also explicitly set the number of submits per cycle, your setting should be applied but probably with a warning if it's greater than 1...)\n\n</p><p></p><hr/>\n<em>2015-Oct-26 13:12:00 by wenger:</em> <br/>\n\nHmm -- looks like that's not the whole problem.  It looks like we <strong>are</strong> counting clusters, not procs...\n\n<p></p><hr/>\n<em>2015-Oct-26 13:40:46 by wenger:</em> <br/>\n\nNote that writing appropriate tests is now broken out into a separate tickets: <span class=\"ticket\"><a class=\"stalled\" href=\"/wiki-archive/tickets/?ticket=5345\" onclick=\"get_ticket_and_populate_wrapper('5345'); return false;\" title=\"Create DAGMan maxidle test(s)\">#5345</a></span>.\n\n<p></p><hr/>\n<em>2015-Oct-27 16:54:10 by wenger:</em> <br/>\n\nCreated a branch for this: V8_4-gittrac_5333-branch\n\n<p></p><hr/>\n<em>2015-Oct-28 09:36:50 by wenger:</em> <br/>\n\nOkay, it looks like there are actually two problems here:\n<ol>\n<li>First, we only check the maxidle count one time per submit cycle.  So if your maximum number of submits per cycle is high relative to your maxidle setting, maxidle won't work very well.\n</li><li>But the bigger problem is that, because of a bug in how we count idle job procs, we only count each cluster once, no matter how many idle procs it has.  So maxidle doesn't really work right if you have multi-proc submit files for your node jobs.\n</li></ol>\n\n<p>My current thought for the first one is to just force the cycle time and number of submits per cycle to small values if you have maxidle set.\n\n</p><p>The second one is trickier -- I think we'll have to individually keep track of whether each proc in a cluster is idle or not.\n\n</p><p></p><hr/>\n<em>2015-Nov-04 13:45:40 by wenger:</em> <br/>\n\nThere's also a third problem, that removing an idle job, for example, doesn't seem to reduce the idle count.\n\n<p></p><hr/>\n<em>2015-Nov-04 13:47:21 by wenger:</em> <br/>\n\nOops, I'm wrong about removing idle jobs.  At any rate, though, I need to check that the idle counts get updated correctly in a bunch of different cases...\n\n<p></p><hr/>\n<em>2015-Nov-06 08:45:46 by wenger:</em> <br/>\n\nNote:  <span class=\"ticket\"><a class=\"active\" href=\"/wiki-archive/tickets/?ticket=5373\" onclick=\"get_ticket_and_populate_wrapper('5373'); return false;\" title='Clean up DAGMan \"node ending\" code'>#5373</a></span> (Clean up DAGMan \"node ending\" code) is kind of related to this one, too...\n\n<p></p><hr/>\n<em>2015-Nov-06 08:49:34 by wenger:</em> <br/>\n\nThere were actually three somewhat separate problems that I found that could goof up maxidle:\n<ol>\n<li>We were just keeping track of the \"is idle\" state per node, not per proc.\n</li><li>For multi-proc nodes, the node status gets set to STATUS_ERROR as soon as one proc fails; that was causing subsequent proc terminations to not update the idle count, even after the first problem was fixed.\n</li><li>If you have a low maxidle setting (especially if you have multi-proc submit files), the number of submits per cycle can overwhelm maxidle, since the idle count only gets updated once per cycle.\n</li></ol>\n\n<p>Part of the problem with fixing the first one was that Job::Cleanup() was getting called too soon for multi-proc nodes, which was goofing up the idle count.\n\n</p><p></p><hr/>\n<em>2015-Nov-06 16:10:42 by wenger:</em> <br/>\n\nMerged to V8_4-branch on verbal okay from Zach; ticket should be updated with code review note.\n\n<p></p><hr/>\n<em>2015-Dec-22 16:29:53 by zmiller:</em> <br/>\n\n<strong>CODE REVIEW</strong>:  Had already reviewed and given verbal okay, forgot to update the remarks.  Looks good.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"stalled\" href=\"/wiki-archive/tickets/?ticket=5345\" onclick=\"get_ticket_and_populate_wrapper('5345'); return false;\" title=\"Create DAGMan maxidle test(s)\">#5345</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCreate DAGMan maxidle test(s)</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/wiki-archive/tickets/?ticket=5372\" onclick=\"get_ticket_and_populate_wrapper('5372'); return false;\" title=\"Create a DAGMan test that combines maxidle and retries\">#5372</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCreate a DAGMan test that combines maxidle and retries</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/909/mydag.dag.dagman.out\">mydag.dag.dagman.out</a>\n48476 bytes added by ckoch5 on 2015-Oct-23 21:02:08 UTC.\n<br/>\n15 submit files (each submitting 3 jobs), with max_idle of 12<br/>\n</li><li><a href=\"../files/918/gt5333-diff\">gt5333-diff</a>\n21324 bytes added by wenger on 2015-Nov-06 15:07:25 UTC.\n<br/>\nThis is a diff of everything committed on the branch.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Nov-06 15:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/f76f22834bc70ed875b641c0e438c628c2ecb401\">[46218]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5333\" onclick=\"get_ticket_and_populate_wrapper('5333'); return false;\" title=\"Potential bug with DAGMan maxidle/DAGMAN_MAX_JOBS_IDLE\">#5333</a></span>: Added version history and also some notes in the configuration section about DAGMAN_USER_LOG_SCAN_INTERVAL and DAGMAN_MAX_SUBMITS_PER_INTERVAL possibly getting changed automatically. Also fixed a few typos in the version history.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Nov-05 17:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e5d25e073e1086272ecaf991b4e2f4d63b38b298\">[46212]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5333\" onclick=\"get_ticket_and_populate_wrapper('5333'); return false;\" title=\"Potential bug with DAGMan maxidle/DAGMAN_MAX_JOBS_IDLE\">#5333</a></span>: Implementation is (hopefully) complete; still needs a full test run, code review, and documentation.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Nov-05 14:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/8552c9d0934f630d92b3cb3705543b0a7e731115\">[46208]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=5333\" onclick=\"get_ticket_and_populate_wrapper('5333'); return false;\" title=\"Potential bug with DAGMan maxidle/DAGMAN_MAX_JOBS_IDLE\">#5333</a></span>: I think I finally have things basically fixed (although some cleanup is still needed and this commit includes a ton of debug code). (The main fix is to keep a separate isIdle flag for each proc instead of for the node as a whole, but the details of that turned out more complicated than\u00a0[...]\n (By Kent Wenger )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Dec-22 16:31", "status": "resolved", "created": "2015-Oct-22 09:51", "fixed_version": "2015-Oct-22 09:51", "broken_version": "v080400", "priority": "1", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "#5332", "creator": "lmichael", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "lmichael@wisc.edu tannenba@cs.wisc.edu ckoch5@wisc.edu wenger@cs.wisc.edu", "due_date": ""}