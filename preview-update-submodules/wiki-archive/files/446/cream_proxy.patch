diff --git a/src/condor_gridmanager/creamjob.cpp b/src/condor_gridmanager/creamjob.cpp
index 2bf37c7..cbfa604 100644
--- a/src/condor_gridmanager/creamjob.cpp
+++ b/src/condor_gridmanager/creamjob.cpp
@@ -266,7 +266,7 @@ CreamJob::CreamJob( ClassAd *classad )
 		goto error_exit;
 	}
 	snprintf( buff, sizeof(buff), "CREAM/%s",
-			  jobProxy->subject->fqan );
+			  jobProxy->subject->first_fqan );
 
 	gahp = new GahpClient( buff, gahp_path );
 	free( gahp_path );
diff --git a/src/condor_gridmanager/creamresource.cpp b/src/condor_gridmanager/creamresource.cpp
index 87f68b9..af13091 100644
--- a/src/condor_gridmanager/creamresource.cpp
+++ b/src/condor_gridmanager/creamresource.cpp
@@ -84,7 +84,7 @@ CreamResource *CreamResource::FindOrCreateResource( const char *resource_name,
 	const char *canonical_name = CanonicalName( resource_name );
 	ASSERT(canonical_name);
 
-	const char *hash_name = HashName( canonical_name, proxy->subject->fqan );
+	const char *hash_name = HashName( canonical_name, proxy->subject->first_fqan );
 	ASSERT(hash_name);
 
 	rc = ResourcesByName.lookup( HashKey( hash_name ), resource );
@@ -111,6 +111,7 @@ CreamResource::CreamResource( const char *resource_name,
 	initialized = false;
 	proxySubject = strdup( proxy->subject->subject_name );
 	proxyFQAN = strdup( proxy->subject->fqan );
+	proxyFirstFQAN = strdup( proxy->subject->first_fqan );
 	delegationTimerId = daemonCore->Register_Timer( 0,
 							(TimerHandlercpp)&CreamResource::checkDelegation,
 							"CreamResource::checkDelegation", (Service*)this );
@@ -175,7 +176,7 @@ dprintf(D_FULLDEBUG,"    deleting %s\n",next_deleg->deleg_uri?next_deleg->deleg_
 		free( serviceUri );
 	}
 
-	ResourcesByName.remove( HashKey( HashName( resourceName, proxyFQAN ) ) );
+	ResourcesByName.remove( HashKey( HashName( resourceName, proxyFirstFQAN ) ) );
 
 	daemonCore->Cancel_Timer( delegationTimerId );
 	if ( gahp != NULL ) {
@@ -190,6 +191,7 @@ dprintf(D_FULLDEBUG,"    deleting %s\n",next_deleg->deleg_uri?next_deleg->deleg_
 		free( proxySubject );
 	}
 	free( proxyFQAN );
+	free( proxyFirstFQAN );
 }
 
 bool CreamResource::Init()
@@ -201,7 +203,7 @@ bool CreamResource::Init()
 		// TODO This assumes that at least one CreamJob has already
 		// initialized the gahp server. Need a better solution.
 	std::string gahp_name;
-	sprintf( gahp_name, "CREAM/%s", proxyFQAN );
+	sprintf( gahp_name, "CREAM/%s", proxyFirstFQAN );
 
 	gahp = new GahpClient( gahp_name.c_str() );
 
@@ -358,7 +360,7 @@ dprintf(D_FULLDEBUG,"*** deleting delegation %s\n",job->delegatedCredentialURI);
 
 const char *CreamResource::GetHashName()
 {
-	return HashName( resourceName, proxyFQAN );
+	return HashName( resourceName, proxyFirstFQAN );
 }
 
 void CreamResource::PublishResourceAd( ClassAd *resource_ad )
@@ -367,6 +369,7 @@ void CreamResource::PublishResourceAd( ClassAd *resource_ad )
 
 	resource_ad->Assign( ATTR_X509_USER_PROXY_SUBJECT, proxySubject );
 	resource_ad->Assign( ATTR_X509_USER_PROXY_FQAN, proxyFQAN );
+	resource_ad->Assign( ATTR_X509_USER_PROXY_FIRST_FQAN, proxyFirstFQAN );
 }
 
 void CreamResource::registerDelegationURI( const char *deleg_uri,
diff --git a/src/condor_gridmanager/creamresource.h b/src/condor_gridmanager/creamresource.h
index cc5156f..9a61bcc 100644
--- a/src/condor_gridmanager/creamresource.h
+++ b/src/condor_gridmanager/creamresource.h
@@ -82,6 +82,7 @@ class CreamResource : public BaseResource
 
 	char *proxySubject;
 	char *proxyFQAN;
+	char *proxyFirstFQAN;
 	int delegationTimerId;
 	CreamProxyDelegation *activeDelegationCmd;
 	char *serviceUri;
diff --git a/src/condor_gridmanager/proxymanager.cpp b/src/condor_gridmanager/proxymanager.cpp
index 30a16cb..5f003b6 100644
--- a/src/condor_gridmanager/proxymanager.cpp
+++ b/src/condor_gridmanager/proxymanager.cpp
@@ -177,6 +177,7 @@ AcquireProxy( const ClassAd *job_ad, std::string &error,
 	ProxySubject *proxy_subject = NULL;
 	char *subject_name = NULL;
 	char *fqan = NULL;
+	char *first_fqan = NULL;
 	std::string proxy_path;
 	std::string owner;
 	char *param_str = NULL;
@@ -198,6 +199,7 @@ AcquireProxy( const ClassAd *job_ad, std::string &error,
 
 		// Special handling for "use best proxy"
 		job_ad->LookupString( ATTR_X509_USER_PROXY_FQAN, &fqan );
+		job_ad->LookupString( ATTR_X509_USER_PROXY_FIRST_FQAN, &first_fqan );
 		job_ad->LookupString( ATTR_X509_USER_PROXY_SUBJECT, &subject_name );
 		if ( subject_name ) {
 			if ( fqan == NULL ) {
@@ -211,7 +213,8 @@ AcquireProxy( const ClassAd *job_ad, std::string &error,
 				// create a new ProxySubject and fill it out
 				proxy_subject = new ProxySubject;
 				proxy_subject->subject_name = strdup( subject_name );
-				proxy_subject->fqan = strdup( fqan );
+				proxy_subject->fqan = fqan ? strdup( fqan ) : NULL;
+				proxy_subject->first_fqan = first_fqan ? strdup( first_fqan ) : NULL;
 				proxy_subject->has_voms_attrs = has_voms_attrs;
 
 				// Create a master proxy for our new ProxySubject
@@ -247,12 +250,14 @@ AcquireProxy( const ClassAd *job_ad, std::string &error,
 			}
 			free( subject_name );
 			free( fqan );
+			free( first_fqan );
 			return proxy;
 
 		}
 
 		free( subject_name );
 		free( fqan );
+		free( first_fqan );
 		//sprintf( error, "%s is not set in the job ad", ATTR_X509_USER_PROXY );
 		error = "";
 		return NULL;
@@ -294,7 +299,7 @@ AcquireProxy( const ClassAd *job_ad, std::string &error,
 		fqan = NULL;
 #if defined(HAVE_EXT_GLOBUS)
 		int rc = extract_VOMS_info_from_file( proxy_path.c_str(), 0, NULL,
-											  NULL, &fqan );
+											  &first_fqan, &fqan );
 		if ( rc != 0 && rc != 1 ) {
 			dprintf( D_ALWAYS, "Failed to get voms info of proxy %s\n",
 					 proxy_path.c_str() );
@@ -333,6 +338,7 @@ AcquireProxy( const ClassAd *job_ad, std::string &error,
 			proxy_subject = new ProxySubject;
 			proxy_subject->subject_name = strdup( subject_name );
 			proxy_subject->fqan = strdup( fqan );
+			proxy_subject->first_fqan = first_fqan ? strdup( first_fqan ) : NULL;
 			proxy_subject->has_voms_attrs = true;
 
 			// Create a master proxy for our new ProxySubject
@@ -366,6 +372,7 @@ AcquireProxy( const ClassAd *job_ad, std::string &error,
 
 		free( subject_name );
 		free( fqan );
+		free( first_fqan );
 	}
 
 		// MyProxy crap
@@ -541,6 +548,7 @@ ReleaseProxy( Proxy *proxy, TimerHandlercpp func_ptr, Service *data )
 			SubjectsByName.remove( HashKey(proxy_subject->fqan) );
 			free( proxy_subject->subject_name );
 			free( proxy_subject->fqan );
+			free( proxy_subject->first_fqan );
 			delete proxy_subject;
 		}
 
diff --git a/src/condor_gridmanager/proxymanager.h b/src/condor_gridmanager/proxymanager.h
index 2172d54..fbdebac 100644
--- a/src/condor_gridmanager/proxymanager.h
+++ b/src/condor_gridmanager/proxymanager.h
@@ -77,6 +77,7 @@ struct Proxy {
 
 struct ProxySubject {
 	char *fqan;
+	char *first_fqan;
 	char *subject_name;
 	bool has_voms_attrs;
 	Proxy *master_proxy;
