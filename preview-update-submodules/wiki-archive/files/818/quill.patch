diff -r -u condor-8.0.5.orig/src/condor_contrib/condor_dbmsd/DBMSManager.cpp condor-8.0.5/src/condor_contrib/condor_dbmsd/DBMSManager.cpp
--- condor-8.0.5.orig/src/condor_contrib/condor_dbmsd/DBMSManager.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_contrib/condor_dbmsd/DBMSManager.cpp	2014-01-02 09:23:51.000000000 +0100
@@ -183,7 +183,7 @@
     SetTargetTypeName(query_ad, DBMSD_ADTYPE);
 
     MyString line;
-    line.sprintf("%s = TARGET.%s == \"%s\"", ATTR_REQUIREMENTS, ATTR_NAME, m_name.Value());
+    line.formatstr("%s = TARGET.%s == \"%s\"", ATTR_REQUIREMENTS, ATTR_NAME, m_name.Value());
     query_ad.Insert(line.Value());
 	query_ad.Assign(ATTR_NAME,m_name.Value());
 
diff -r -u condor-8.0.5.orig/src/condor_contrib/condor_dbmsd/ManagedDatabase.cpp condor-8.0.5/src/condor_contrib/condor_dbmsd/ManagedDatabase.cpp
--- condor-8.0.5.orig/src/condor_contrib/condor_dbmsd/ManagedDatabase.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_contrib/condor_dbmsd/ManagedDatabase.cpp	2014-01-02 09:23:51.000000000 +0100
@@ -145,7 +145,7 @@
 
 	switch (dt) {				
 	case T_PGSQL:
-		sql_str.sprintf("select quill_purgeHistory(%d, %d, %d)", 
+		sql_str.formatstr("select quill_purgeHistory(%d, %d, %d)", 
 						resourceHistoryDuration,
 						runHistoryDuration,
 						jobHistoryDuration);
@@ -172,7 +172,7 @@
 		  a warning to the administrator 
 		*/
 	
-	sql_str.sprintf("SELECT dbsize FROM quillDBMonitor");
+	sql_str.formatstr("SELECT dbsize FROM quillDBMonitor");
 	ret_st = DBObj->execQuery(sql_str.Value(), num_result);
 
 	if ((ret_st == QUILL_SUCCESS) && 
@@ -246,7 +246,7 @@
 			return;
 		}	
 		
-		sql_str.sprintf("select quill_reindexTables()");
+		sql_str.formatstr("select quill_reindexTables()");
 
 		ret_st = DBObj->execCommand(sql_str.Value());
 		if (ret_st == QUILL_FAILURE) {
diff -r -u condor-8.0.5.orig/src/condor_contrib/condor_tt/condor_ttdb.cpp condor-8.0.5/src/condor_contrib/condor_tt/condor_ttdb.cpp
--- condor-8.0.5.orig/src/condor_contrib/condor_tt/condor_ttdb.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_contrib/condor_tt/condor_ttdb.cpp	2014-01-02 09:23:51.000000000 +0100
@@ -32,7 +32,7 @@
 
 	switch(dt) {
 	case T_PGSQL:
-		rv.sprintf("nextval('%s')", seqName);		
+		rv.formatstr("nextval('%s')", seqName);		
 		break;
 	default:
 		break;
@@ -47,7 +47,7 @@
 
 	switch(dt) {
 	case T_PGSQL:
-		rv.sprintf(" LIMIT 1");
+		rv.formatstr(" LIMIT 1");
 		break;
 	default:
 		break;
@@ -62,7 +62,7 @@
 
 	switch(dt) {
 	case T_PGSQL:
-		rv.sprintf("%s != '%s'", col_nam, literal);
+		rv.formatstr("%s != '%s'", col_nam, literal);
 		break;
 	default:
 		break;
diff -r -u condor-8.0.5.orig/src/condor_contrib/condor_tt/jobqueuecollection.cpp condor-8.0.5/src/condor_contrib/condor_tt/jobqueuecollection.cpp
--- condor-8.0.5.orig/src/condor_contrib/condor_tt/jobqueuecollection.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_contrib/condor_tt/jobqueuecollection.cpp	2014-01-02 09:23:51.000000000 +0100
@@ -481,11 +481,11 @@
 
 		// first generate the key columns
 	if (pid != NULL) {
-		attNameList.sprintf("(scheddname, cluster_id, proc_id");
-		attValList.sprintf("('%s', %s, %s", scheddname, cid, pid);
+		attNameList.formatstr("(scheddname, cluster_id, proc_id");
+		attValList.formatstr("('%s', %s, %s", scheddname, cid, pid);
 	} else {
-		attNameList.sprintf("(scheddname, cluster_id");
-		attValList.sprintf("('%s', %s", scheddname, cid);		
+		attNameList.formatstr("(scheddname, cluster_id");
+		attValList.formatstr("('%s', %s", scheddname, cid);		
 	}
 
 	ad->ResetExpr(); // for iteration initialization
@@ -509,7 +509,7 @@
 					}
 
 					newvalue = condor_ttdb_fillEscapeCharacters(value.Value(), dt);
-					tmpVal.sprintf("'%s'", newvalue.Value());
+					tmpVal.formatstr("'%s'", newvalue.Value());
 
 					break;
 				case CONDOR_TT_TYPE_STRING:	
@@ -519,10 +519,10 @@
 					}
 
 					newvalue = condor_ttdb_fillEscapeCharacters(value.Value(), dt);
-					tmpVal.sprintf("'%s'", newvalue.Value());
+					tmpVal.formatstr("'%s'", newvalue.Value());
 					break;
 				case CONDOR_TT_TYPE_NUMBER:
-					tmpVal.sprintf("%s", value.Value());
+					tmpVal.formatstr("%s", value.Value());
 					break;
 				case CONDOR_TT_TYPE_TIMESTAMP:
 					time_t clock;
@@ -535,7 +535,7 @@
 						return QUILL_FAILURE;
 					}
 					
-					tmpVal.sprintf("%s", ts_expr.Value());
+					tmpVal.formatstr("%s", ts_expr.Value());
 					
 						/* the converted timestamp value is longer, so realloc
 						   the buffer for attValList
@@ -556,7 +556,7 @@
 
 
 				{
-					sql_str.sprintf("INSERT INTO ProcAds_Vertical VALUES('%s', %s, %s, '%s', '%s')", scheddname,cid, pid, name, newvalue.Value());
+					sql_str.formatstr("INSERT INTO ProcAds_Vertical VALUES('%s', %s, %s, '%s', '%s')", scheddname,cid, pid, name, newvalue.Value());
 
 					if (DBObj->execCommand(sql_str.Value()) == QUILL_FAILURE) {
                         dprintf(D_ALWAYS, "JobQueueCollection::loadAd - ERROR [SQL] %s\n", sql_str.Value());
@@ -579,7 +579,7 @@
 					}
 					
 					newvalue = condor_ttdb_fillEscapeCharacters(value.Value(), dt);
-					tmpVal.sprintf("'%s'", newvalue.Value());
+					tmpVal.formatstr("'%s'", newvalue.Value());
 						
 					break;					
 				case CONDOR_TT_TYPE_STRING:					
@@ -589,10 +589,10 @@
 					}
 
 					newvalue = condor_ttdb_fillEscapeCharacters(value.Value(), dt);
-					tmpVal.sprintf("'%s'", newvalue.Value());
+					tmpVal.formatstr("'%s'", newvalue.Value());
 					break;
 				case CONDOR_TT_TYPE_NUMBER:
-					tmpVal.sprintf("%s", value.Value());
+					tmpVal.formatstr("%s", value.Value());
 					break;
 				case CONDOR_TT_TYPE_TIMESTAMP:
 					time_t clock;
@@ -605,7 +605,7 @@
 						return QUILL_FAILURE;
 					}
 					
-					tmpVal.sprintf("%s", ts_expr.Value());
+					tmpVal.formatstr("%s", ts_expr.Value());
 					
 						/* the converted timestamp value is longer, so realloc
 						   the buffer for attValList
@@ -624,7 +624,7 @@
 					newvalue.Length() + strlen(cid);
 
 				{
-					sql_str.sprintf("INSERT INTO ClusterAds_Vertical VALUES('%s', %s, '%s', '%s')", scheddname,cid, name, newvalue.Value());
+					sql_str.formatstr("INSERT INTO ClusterAds_Vertical VALUES('%s', %s, '%s', '%s')", scheddname,cid, name, newvalue.Value());
 					if (DBObj->execCommand(sql_str.Value()) == QUILL_FAILURE) {
                         dprintf(D_ALWAYS, "JobQueueCollection::loadAd - ERROR [SQL] %s\n", sql_str.Value());
                         return QUILL_FAILURE;
@@ -643,10 +643,10 @@
 		// build the sql
 	if (pid != NULL) {
 			// procad		
-		sql_str.sprintf("INSERT INTO ProcAds_Horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
+		sql_str.formatstr("INSERT INTO ProcAds_Horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
 	} else { 
 			// clusterad
-		sql_str.sprintf("INSERT INTO ClusterAds_Horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
+		sql_str.formatstr("INSERT INTO ClusterAds_Horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
 	}
 
 		// execute it
diff -r -u condor-8.0.5.orig/src/condor_contrib/condor_tt/jobqueuedbmanager.cpp condor-8.0.5/src/condor_contrib/condor_tt/jobqueuedbmanager.cpp
--- condor-8.0.5.orig/src/condor_contrib/condor_tt/jobqueuedbmanager.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_contrib/condor_tt/jobqueuedbmanager.cpp	2014-01-02 09:23:51.000000000 +0100
@@ -198,7 +198,7 @@
 				/* create an entry in jobqueuepollinginfo if this schedd is the 
 				 * first time being logged to database
 				 */
-			sql_str.sprintf("INSERT INTO jobqueuepollinginfo (scheddname, last_file_mtime, last_file_size) SELECT '%s', 0, 0 FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM jobqueuepollinginfo WHERE scheddname = '%s')", scheddname, scheddname);
+			sql_str.formatstr("INSERT INTO jobqueuepollinginfo (scheddname, last_file_mtime, last_file_size) SELECT '%s', 0, 0 FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM jobqueuepollinginfo WHERE scheddname = '%s')", scheddname, scheddname);
 		
 			ret_st = DBObj->execCommand(sql_str.Value());
 			if (ret_st == QUILL_FAILURE) {
@@ -211,7 +211,7 @@
 				/* create an entry in currency table if this schedd is the first
 				 * time being logged to database 
 				 */
-			sql_str.sprintf("INSERT INTO currencies (datasource) SELECT '%s' FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM currencies WHERE datasource = '%s')", scheddname, scheddname);
+			sql_str.formatstr("INSERT INTO currencies (datasource) SELECT '%s' FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM currencies WHERE datasource = '%s')", scheddname, scheddname);
 
 			ret_st = DBObj->execCommand(sql_str.Value());
 			if (ret_st == QUILL_FAILURE) {
@@ -340,16 +340,16 @@
 	MyString sql_str[sqlNum];
 	
 		// we only delete job queue related information.
-	sql_str[0].sprintf(
+	sql_str[0].formatstr(
 			"DELETE FROM clusterads_horizontal WHERE scheddname = '%s'", 
 			 scheddname);
-	sql_str[1].sprintf(
+	sql_str[1].formatstr(
 			"DELETE FROM clusterads_vertical WHERE scheddname = '%s'", 
 			 scheddname);
-	sql_str[2].sprintf(
+	sql_str[2].formatstr(
 			"DELETE FROM procads_horizontal WHERE scheddname = '%s'", 
 			 scheddname);
-	sql_str[3].sprintf(
+	sql_str[3].formatstr(
 			"DELETE FROM procads_vertical WHERE scheddname = '%s'", 
 			 scheddname);
 
@@ -906,10 +906,10 @@
 
 	switch(job_id_type) {
 	case IS_CLUSTER_ID:
-		sql_str.sprintf("INSERT INTO ClusterAds_Horizontal (scheddname, cluster_id) VALUES ('%s', '%s')", scheddname, cid);
+		sql_str.formatstr("INSERT INTO ClusterAds_Horizontal (scheddname, cluster_id) VALUES ('%s', '%s')", scheddname, cid);
 		break;
 	case IS_PROC_ID:
-		sql_str.sprintf("INSERT INTO ProcAds_Horizontal (scheddname, cluster_id, proc_id) VALUES ('%s', '%s', '%s')", scheddname, cid, pid);
+		sql_str.formatstr("INSERT INTO ProcAds_Horizontal (scheddname, cluster_id, proc_id) VALUES ('%s', '%s', '%s')", scheddname, cid, pid);
 		break;
 	case IS_UNKNOWN_ID:
 		dprintf(D_ALWAYS, "New ClassAd Processing --- ERROR\n");
@@ -970,15 +970,15 @@
   
 	switch(job_id_type) {
 	case IS_CLUSTER_ID:	// ClusterAds
-		sql_str1.sprintf("DELETE FROM ClusterAds_Horizontal WHERE scheddname = '%s' and cluster_id = %s", scheddname, cid);
+		sql_str1.formatstr("DELETE FROM ClusterAds_Horizontal WHERE scheddname = '%s' and cluster_id = %s", scheddname, cid);
     
-		sql_str2.sprintf("DELETE FROM ClusterAds_Vertical WHERE scheddname = '%s' and cluster_id = %s", scheddname, cid);
+		sql_str2.formatstr("DELETE FROM ClusterAds_Vertical WHERE scheddname = '%s' and cluster_id = %s", scheddname, cid);
 		break;
 	case IS_PROC_ID:
 				/* generate SQL to remove the job from job tables */
-		sql_str1.sprintf("DELETE FROM ProcAds_horizontal WHERE scheddname = '%s' and cluster_id = %s AND proc_id = %s", 
+		sql_str1.formatstr("DELETE FROM ProcAds_horizontal WHERE scheddname = '%s' and cluster_id = %s AND proc_id = %s", 
 						 scheddname, cid, pid);
-		sql_str2.sprintf("DELETE FROM ProcAds_vertical WHERE scheddname = '%s' and cluster_id = %s AND proc_id = %s", 
+		sql_str2.formatstr("DELETE FROM ProcAds_vertical WHERE scheddname = '%s' and cluster_id = %s AND proc_id = %s", 
 						 scheddname, cid, pid);
 		break;
 	case IS_UNKNOWN_ID:
@@ -1060,7 +1060,7 @@
 						return QUILL_FAILURE;
 					}
 
-					sql_str_del_in.sprintf(
+					sql_str_del_in.formatstr(
 										   "UPDATE ClusterAds_Horizontal SET %s = (%s) WHERE scheddname = '%s' and cluster_id = '%s'", name, ts_expr.Value(), scheddname, cid);
 				}
 			} else {
@@ -1074,18 +1074,18 @@
 					// escape single quote within the value
 
 				{
-					sql_str_del_in.sprintf("UPDATE ClusterAds_Horizontal SET %s = '%s' WHERE scheddname = '%s' and cluster_id = '%s'", name, newvalue.Value(), scheddname, cid);
+					sql_str_del_in.formatstr("UPDATE ClusterAds_Horizontal SET %s = '%s' WHERE scheddname = '%s' and cluster_id = '%s'", name, newvalue.Value(), scheddname, cid);
 				}
 			}
 		} else {
 			newvalue = condor_ttdb_fillEscapeCharacters(value, dt);
 
 			{
-				sql_str_del_in.sprintf("DELETE FROM ClusterAds_Vertical WHERE scheddname = '%s' and cluster_id = '%s' AND attr = '%s'", scheddname, cid, name);
+				sql_str_del_in.formatstr("DELETE FROM ClusterAds_Vertical WHERE scheddname = '%s' and cluster_id = '%s' AND attr = '%s'", scheddname, cid, name);
 			}
 
 			{
-				sql_str2.sprintf("INSERT INTO ClusterAds_Vertical (scheddname, cluster_id, attr, val) VALUES ('%s', '%s', '%s', '%s')", scheddname, cid, name, newvalue.Value());
+				sql_str2.formatstr("INSERT INTO ClusterAds_Vertical (scheddname, cluster_id, attr, val) VALUES ('%s', '%s', '%s', '%s')", scheddname, cid, name, newvalue.Value());
 			}
 		}
 
@@ -1106,7 +1106,7 @@
 						return QUILL_FAILURE;
 					}
 				
-					sql_str_del_in.sprintf(
+					sql_str_del_in.formatstr(
 									   "UPDATE ProcAds_Horizontal SET %s = (%s) WHERE scheddname = '%s' and cluster_id = '%s' and proc_id = '%s'", name, ts_expr.Value(), scheddname, cid, pid);
 				}
 			} else {
@@ -1120,18 +1120,18 @@
 				newvalue = condor_ttdb_fillEscapeCharacters(value, dt);
 
 				{
-					sql_str_del_in.sprintf("UPDATE ProcAds_Horizontal SET %s = '%s' WHERE scheddname = '%s' and cluster_id = '%s' and proc_id = '%s'", name, newvalue.Value(), scheddname, cid, pid);
+					sql_str_del_in.formatstr("UPDATE ProcAds_Horizontal SET %s = '%s' WHERE scheddname = '%s' and cluster_id = '%s' and proc_id = '%s'", name, newvalue.Value(), scheddname, cid, pid);
 				}
 			}
 		} else {
 			newvalue = condor_ttdb_fillEscapeCharacters(value, dt);
 
 			{
-				sql_str_del_in.sprintf("DELETE FROM ProcAds_Vertical WHERE scheddname = '%s' and cluster_id = '%s' AND proc_id = '%s' AND attr = '%s'", scheddname, cid, pid, name);
+				sql_str_del_in.formatstr("DELETE FROM ProcAds_Vertical WHERE scheddname = '%s' and cluster_id = '%s' AND proc_id = '%s' AND attr = '%s'", scheddname, cid, pid, name);
 			}
 
 			{
-				sql_str2.sprintf("INSERT INTO ProcAds_Vertical (scheddname, cluster_id, proc_id, attr, val) VALUES ('%s', '%s', '%s', '%s', '%s')", scheddname, cid, pid, name, newvalue.Value());	
+				sql_str2.formatstr("INSERT INTO ProcAds_Vertical (scheddname, cluster_id, proc_id, attr, val) VALUES ('%s', '%s', '%s', '%s', '%s')", scheddname, cid, pid, name, newvalue.Value());	
 			}
 		}
 		
@@ -1200,20 +1200,20 @@
 	switch(job_id_type) {
 	case IS_CLUSTER_ID:
 		if(isHorizontalClusterAttribute(name, attr_type)) {
-			sql_str.sprintf(
+			sql_str.formatstr(
 					 "UPDATE ClusterAds_Horizontal SET %s = NULL WHERE scheddname = '%s' and cluster_id = '%s'", name, scheddname, cid);
 		} else {
-			sql_str.sprintf(
+			sql_str.formatstr(
 					 "DELETE FROM ClusterAds_Vertical WHERE scheddname = '%s' and cluster_id = '%s' AND attr = '%s'", scheddname, cid, name);			
 		}
 
 		break;
 	case IS_PROC_ID:
 		if(isHorizontalProcAttribute(name, attr_type)) {
-			sql_str.sprintf(
+			sql_str.formatstr(
 					 "UPDATE ProcAds_Horizontal SET %s = NULL WHERE scheddname = '%s' and cluster_id = '%s' AND proc_id = '%s'", name, scheddname, cid, pid);
 		} else {
-			sql_str.sprintf(
+			sql_str.formatstr(
 					 "DELETE FROM ProcAds_Vertical WHERE scheddname = '%s' and cluster_id = '%s' AND proc_id = '%s' AND attr = '%s'", scheddname, cid, pid, name);
 			
 		}
@@ -1292,7 +1292,7 @@
 
 	dprintf(D_FULLDEBUG, "Get JobQueue Polling Information\n");
 
-	sql_str.sprintf("SELECT last_file_mtime, last_file_size, last_next_cmd_offset, last_cmd_offset, last_cmd_type, last_cmd_key, last_cmd_mytype, last_cmd_targettype, last_cmd_name, last_cmd_value from JobQueuePollingInfo where scheddname = '%s'", scheddname);
+	sql_str.formatstr("SELECT last_file_mtime, last_file_size, last_next_cmd_offset, last_cmd_offset, last_cmd_type, last_cmd_key, last_cmd_mytype, last_cmd_targettype, last_cmd_name, last_cmd_value from JobQueuePollingInfo where scheddname = '%s'", scheddname);
 
 	ret_st = DBObj->execQuery(sql_str.Value(), num_result);
 		
diff -r -u condor-8.0.5.orig/src/condor_contrib/condor_tt/ttmanager.cpp condor-8.0.5/src/condor_contrib/condor_tt/ttmanager.cpp
--- condor-8.0.5.orig/src/condor_contrib/condor_tt/ttmanager.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_contrib/condor_tt/ttmanager.cpp	2014-01-02 09:23:51.000000000 +0100
@@ -278,7 +278,7 @@
 					return;
 				}
 
-			sql_str.sprintf("UPDATE currencies SET lastupdate = %s WHERE datasource = '%s'", ts_expr.Value(), scheddname);
+			sql_str.formatstr("UPDATE currencies SET lastupdate = %s WHERE datasource = '%s'", ts_expr.Value(), scheddname);
 
 			ret_st = DBObj->execCommand(sql_str.Value());
 			if (ret_st == QUILL_FAILURE) {
@@ -904,13 +904,13 @@
 							   value. The epoch seconds is stored in a column
 							   named lastreportedtime_epoch.
 							*/
-						attNameList.sprintf("(lastreportedtime, lastreportedtime_epoch");
+						attNameList.formatstr("(lastreportedtime, lastreportedtime_epoch");
 
 					} else {
 						if (strcasecmp(attName, ATTR_NAME) == 0) {
-							attNameList.sprintf("(machine_id");
+							attNameList.formatstr("(machine_id");
 						} else {
-							attNameList.sprintf("(%s", attName);
+							attNameList.formatstr("(%s", attName);
 						}
 
 					}
@@ -926,12 +926,12 @@
 							machine_id = attVal;
 						}
 
-						attValList.sprintf("('%s'", strchr(attVal,'\'') ? " " : attVal);
+						attValList.formatstr("('%s'", strchr(attVal,'\'') ? " " : attVal);
 						break;
 					case CONDOR_TT_TYPE_BOOL:
 							// boolean value are stored as string in db, but 
 							// its value is not double quoted
-						attValList.sprintf("('%s'", attVal);
+						attValList.formatstr("('%s'", attVal);
 						break;
 					case CONDOR_TT_TYPE_TIMESTAMP:
 						time_t clock;
@@ -949,17 +949,17 @@
 						}
 
 						if (strcasecmp(attName, "lastreportedtime") == 0) {
-							attValList.sprintf("(%s, %s", ts_expr.Value(), 
+							attValList.formatstr("(%s, %s", ts_expr.Value(), 
 											   attVal);
-							lastReportedTime.sprintf("%s", ts_expr.Value());
+							lastReportedTime.formatstr("%s", ts_expr.Value());
 							lastReportedTimeValue = condor_ttdb_buildtsval(&clock, dt);
 						} else {
-							attValList.sprintf("(%s", ts_expr.Value());
+							attValList.formatstr("(%s", ts_expr.Value());
 						}
 
 						break;
 					case CONDOR_TT_TYPE_NUMBER:
-						attValList.sprintf("(%s", attVal);
+						attValList.formatstr("(%s", attVal);
 						break;
 					default:
 						dprintf(D_ALWAYS, "insertMachines: Unsupported horizontal machine attribute %s\n", attName);
@@ -1000,12 +1000,12 @@
 							machine_id = attVal;
 						}
 
-						tmpVal.sprintf("'%s'", strchr(attVal,'\'') ? " " : attVal);
+						tmpVal.formatstr("'%s'", strchr(attVal,'\'') ? " " : attVal);
 						break;
 					case CONDOR_TT_TYPE_BOOL:
 							// boolean value are stored as string in db, but 
 							// its value is not double quoted
-						tmpVal.sprintf("'%s'", attVal);
+						tmpVal.formatstr("'%s'", attVal);
 						break;
 					case CONDOR_TT_TYPE_TIMESTAMP:
 						time_t clock;
@@ -1023,17 +1023,17 @@
 						}
 						
 						if (strcasecmp(attName, "lastreportedtime") == 0) {
-							tmpVal.sprintf("%s, %s", ts_expr.Value(), 
+							tmpVal.formatstr("%s, %s", ts_expr.Value(), 
 										   attVal);
-							lastReportedTime.sprintf("%s", ts_expr.Value());
+							lastReportedTime.formatstr("%s", ts_expr.Value());
 							lastReportedTimeValue = condor_ttdb_buildtsval(&clock, dt);
 						} else {
-							tmpVal.sprintf("%s", ts_expr.Value());
+							tmpVal.formatstr("%s", ts_expr.Value());
 						}
 
 						break;
 					case CONDOR_TT_TYPE_NUMBER:
-						tmpVal.sprintf("%s", attVal);
+						tmpVal.formatstr("%s", attVal);
 						break;
 					default:
 						dprintf(D_ALWAYS, "insertMachines: Unsupported horizontal machine attribute %s\n", attName);
@@ -1052,7 +1052,7 @@
 				// insert into new ClassAd too (since this needs to go into DB)
 				newClAd->insert(aName, aVal);
 				if (inlist.IsEmpty()) {					
-					inlist.sprintf("('%s'", attName);
+					inlist.formatstr("('%s'", attName);
 				} else {
 					inlist += ",'";
 					inlist += attName;
@@ -1078,7 +1078,7 @@
 
 	{
 			// get the previous lastreportedtime from the database 
-		sql_stmt.sprintf("SELECT lastreportedtime_epoch FROM Machines_Horizontal WHERE machine_id = '%s'", machine_id.Value());
+		sql_stmt.formatstr("SELECT lastreportedtime_epoch FROM Machines_Horizontal WHERE machine_id = '%s'", machine_id.Value());
 
 		ret_st = DBObj->execQuery(sql_stmt.Value(), num_result);
 	}
@@ -1098,9 +1098,9 @@
 		// set end time if the previous lastReporteTime matches, otherwise
 		// leave it as NULL (by default)
 	if (prevLHFInDB == prevLHFInAd) {
-		sql_stmt.sprintf("INSERT INTO Machines_Horizontal_History(machine_id, opsys, arch, state, activity, keyboardidle, consoleidle, loadavg, condorloadavg, totalloadavg, virtualmemory, memory, totalvirtualmemory, cpubusytime, cpuisbusy, currentrank , clockmin, clockday, lastreportedtime, enteredcurrentactivity, enteredcurrentstate, updatesequencenumber, updatestotal, updatessequenced, updateslost, globaljobid, end_time) SELECT machine_id, opsys, arch, state, activity, keyboardidle, consoleidle, loadavg, condorloadavg, totalloadavg, virtualmemory, memory, totalvirtualmemory, cpubusytime, cpuisbusy, currentrank, clockmin, clockday, lastreportedtime, enteredcurrentactivity, enteredcurrentstate, updatesequencenumber, updatestotal, updatessequenced, updateslost, globaljobid, %s FROM Machines_Horizontal WHERE machine_id = '%s'", lastReportedTime.Value(), machine_id.Value());
+		sql_stmt.formatstr("INSERT INTO Machines_Horizontal_History(machine_id, opsys, arch, state, activity, keyboardidle, consoleidle, loadavg, condorloadavg, totalloadavg, virtualmemory, memory, totalvirtualmemory, cpubusytime, cpuisbusy, currentrank , clockmin, clockday, lastreportedtime, enteredcurrentactivity, enteredcurrentstate, updatesequencenumber, updatestotal, updatessequenced, updateslost, globaljobid, end_time) SELECT machine_id, opsys, arch, state, activity, keyboardidle, consoleidle, loadavg, condorloadavg, totalloadavg, virtualmemory, memory, totalvirtualmemory, cpubusytime, cpuisbusy, currentrank, clockmin, clockday, lastreportedtime, enteredcurrentactivity, enteredcurrentstate, updatesequencenumber, updatestotal, updatessequenced, updateslost, globaljobid, %s FROM Machines_Horizontal WHERE machine_id = '%s'", lastReportedTime.Value(), machine_id.Value());
 	} else {
-		sql_stmt.sprintf("INSERT INTO Machines_Horizontal_History (machine_id, opsys, arch, state, activity, keyboardidle, consoleidle, loadavg, condorloadavg, totalloadavg, virtualmemory, memory, totalvirtualmemory, cpubusytime, cpuisbusy, currentrank , clockmin, clockday, lastreportedtime, enteredcurrentactivity, enteredcurrentstate, updatesequencenumber, updatestotal, updatessequenced, updateslost, globaljobid) SELECT machine_id, opsys, arch, state, activity, keyboardidle, consoleidle, loadavg, condorloadavg, totalloadavg, virtualmemory, memory, totalvirtualmemory, cpubusytime, cpuisbusy, currentrank, clockmin, clockday, lastreportedtime, enteredcurrentactivity, enteredcurrentstate, updatesequencenumber, updatestotal, updatessequenced, updateslost, globaljobid FROM Machines_Horizontal WHERE machine_id = '%s'", machine_id.Value());
+		sql_stmt.formatstr("INSERT INTO Machines_Horizontal_History (machine_id, opsys, arch, state, activity, keyboardidle, consoleidle, loadavg, condorloadavg, totalloadavg, virtualmemory, memory, totalvirtualmemory, cpubusytime, cpuisbusy, currentrank , clockmin, clockday, lastreportedtime, enteredcurrentactivity, enteredcurrentstate, updatesequencenumber, updatestotal, updatessequenced, updateslost, globaljobid) SELECT machine_id, opsys, arch, state, activity, keyboardidle, consoleidle, loadavg, condorloadavg, totalloadavg, virtualmemory, memory, totalvirtualmemory, cpubusytime, cpuisbusy, currentrank, clockmin, clockday, lastreportedtime, enteredcurrentactivity, enteredcurrentstate, updatesequencenumber, updatestotal, updatessequenced, updateslost, globaljobid FROM Machines_Horizontal WHERE machine_id = '%s'", machine_id.Value());
 	}
 	
 	{
@@ -1113,7 +1113,7 @@
 	}
 
 	{
-		sql_stmt.sprintf("DELETE FROM Machines_Horizontal WHERE machine_id = '%s'", machine_id.Value());
+		sql_stmt.formatstr("DELETE FROM Machines_Horizontal WHERE machine_id = '%s'", machine_id.Value());
 
 		if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 			dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1123,7 +1123,7 @@
 		}
 	}
 
-	sql_stmt.sprintf("INSERT INTO Machines_Horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
+	sql_stmt.formatstr("INSERT INTO Machines_Horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
 
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 		 dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1138,9 +1138,9 @@
 		// daemon has been shutdown for a while, we should move everything
 		// into the Machines_vertical_history (with a NULL end_time)!
 	if (prevLHFInDB == prevLHFInAd) {
-		sql_stmt.sprintf("INSERT INTO Machines_Vertical_History (machine_id, attr, val, start_time, end_time) SELECT machine_id, attr, val, start_time, %s FROM Machines_Vertical WHERE machine_id = '%s' AND attr NOT IN %s", lastReportedTime.Value(), machine_id.Value(), inlist.Value());
+		sql_stmt.formatstr("INSERT INTO Machines_Vertical_History (machine_id, attr, val, start_time, end_time) SELECT machine_id, attr, val, start_time, %s FROM Machines_Vertical WHERE machine_id = '%s' AND attr NOT IN %s", lastReportedTime.Value(), machine_id.Value(), inlist.Value());
 	} else {
-		sql_stmt.sprintf("INSERT INTO Machines_Vertical_History (machine_id, attr, val, start_time) SELECT machine_id, attr, val, start_time FROM Machines_Vertical WHERE machine_id = '%s'", machine_id.Value());		 
+		sql_stmt.formatstr("INSERT INTO Machines_Vertical_History (machine_id, attr, val, start_time) SELECT machine_id, attr, val, start_time FROM Machines_Vertical WHERE machine_id = '%s'", machine_id.Value());		 
 	}
 
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -1151,9 +1151,9 @@
 	}
 		
 	if (prevLHFInDB == prevLHFInAd) {
-		sql_stmt.sprintf("DELETE FROM Machines_Vertical WHERE machine_id = '%s' AND attr NOT IN %s", machine_id.Value(), inlist.Value());
+		sql_stmt.formatstr("DELETE FROM Machines_Vertical WHERE machine_id = '%s' AND attr NOT IN %s", machine_id.Value(), inlist.Value());
 	} else {
-		sql_stmt.sprintf("DELETE FROM Machines_Vertical WHERE machine_id = '%s'", machine_id.Value());		 
+		sql_stmt.formatstr("DELETE FROM Machines_Vertical WHERE machine_id = '%s'", machine_id.Value());		 
 	}
 
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -1203,7 +1203,7 @@
 			aVal.replaceString("\t"," ");
 
 		if (!useTempTable) {
-			sql_stmt.sprintf("INSERT INTO Machines_Vertical (machine_id, attr, val, start_time) SELECT '%s', '%s', '%s', %s FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM Machines_Vertical WHERE machine_id = '%s' AND attr = '%s')", machine_id.Value(), aName.Value(), aVal.Value(), lastReportedTime.Value(), machine_id.Value(), aName.Value());
+			sql_stmt.formatstr("INSERT INTO Machines_Vertical (machine_id, attr, val, start_time) SELECT '%s', '%s', '%s', %s FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM Machines_Vertical WHERE machine_id = '%s' AND attr = '%s')", machine_id.Value(), aName.Value(), aVal.Value(), lastReportedTime.Value(), machine_id.Value(), aName.Value());
 
 			if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 				dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1214,7 +1214,7 @@
 			
 			clob_comp_expr = condor_ttdb_compare_clob_to_lit(dt, "val", aVal.Value());
 
-			sql_stmt.sprintf("INSERT INTO Machines_Vertical_History (machine_id, attr, val, start_time, end_time) SELECT machine_id, attr, val, start_time, %s FROM Machines_Vertical WHERE machine_id = '%s' AND attr = '%s' AND %s", lastReportedTime.Value(), machine_id.Value(), aName.Value(), clob_comp_expr.Value());
+			sql_stmt.formatstr("INSERT INTO Machines_Vertical_History (machine_id, attr, val, start_time, end_time) SELECT machine_id, attr, val, start_time, %s FROM Machines_Vertical WHERE machine_id = '%s' AND attr = '%s' AND %s", lastReportedTime.Value(), machine_id.Value(), aName.Value(), clob_comp_expr.Value());
 
 			if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 				dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1223,7 +1223,7 @@
 				return QUILL_FAILURE;
 			}
 
-			sql_stmt.sprintf("UPDATE Machines_Vertical SET val = '%s', start_time = %s WHERE machine_id = '%s' AND attr = '%s' AND %s", aVal.Value(), lastReportedTime.Value(), machine_id.Value(), aName.Value(), clob_comp_expr.Value());
+			sql_stmt.formatstr("UPDATE Machines_Vertical SET val = '%s', start_time = %s WHERE machine_id = '%s' AND attr = '%s' AND %s", aVal.Value(), lastReportedTime.Value(), machine_id.Value(), aName.Value(), clob_comp_expr.Value());
 
 			if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 				dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1242,7 +1242,7 @@
 		DBObj->sendBulkData(bulk.Value());
 		DBObj->sendBulkDataEnd();
 
-		sql_stmt.sprintf(
+		sql_stmt.formatstr(
 	"INSERT INTO Machines_Vertical(machine_id, attr, val, start_time) "
 	" 		select '%s', ad.attr, ad.val, %s "
 	"       from ad "
@@ -1261,7 +1261,7 @@
 			// Copy any attributes for this machine whose value have
 			// changed since last time to the machines_vertical_history
 			// table.
-		sql_stmt.sprintf(
+		sql_stmt.formatstr(
 	"INSERT INTO Machines_Vertical_History(machine_id, attr, val, start_time, end_time)"
 	"  select '%s', ad.attr, ad.val, mv.start_time, %s "
 	"         from ad, Machines_Vertical as mv "
@@ -1280,7 +1280,7 @@
 
 			// Update any attributes in the machines_vertical table
 			// that were already there, but now have new values
-		sql_stmt.sprintf(
+		sql_stmt.formatstr(
 	"UPDATE Machines_Vertical "
 	"       SET val = ad.val, start_time = %s "
 	"			from ad "
@@ -1332,8 +1332,8 @@
 	MyString clob_comp_expr;
 	
 		// first generate MyType='Scheduler' attribute
-	attNameList.sprintf("(MyType");
-	attValList.sprintf("('Scheduler'");
+	attNameList.formatstr("(MyType");
+	attValList.formatstr("('Scheduler'");
 
 	sPrintAd(classAd, *ad);
 
@@ -1376,10 +1376,10 @@
 					}
 
 					if (strcasecmp(attName, ATTR_NAME) == 0) {
-						daemonName.sprintf("%s", attVal);
+						daemonName.formatstr("%s", attVal);
 					}
 								
-					tmpVal.sprintf("'%s'", attVal);
+					tmpVal.formatstr("'%s'", attVal);
 					break;
 				case CONDOR_TT_TYPE_TIMESTAMP:
 					time_t clock;
@@ -1397,16 +1397,16 @@
 					}
 
 					if (strcasecmp(attName, "lastreportedtime") == 0) { 
-						tmpVal.sprintf("%s, %s", ts_expr.Value(), attVal);
-						lastReportedTime.sprintf("%s", ts_expr.Value());
+						tmpVal.formatstr("%s, %s", ts_expr.Value(), attVal);
+						lastReportedTime.formatstr("%s", ts_expr.Value());
 						lastReportedTimeValue = condor_ttdb_buildtsval(&clock, dt);
 					} else {
-						tmpVal.sprintf("%s", ts_expr.Value());
+						tmpVal.formatstr("%s", ts_expr.Value());
 					}
 					
 					break;
 				case CONDOR_TT_TYPE_NUMBER:
-					tmpVal.sprintf("%s", attVal);
+					tmpVal.formatstr("%s", attVal);
 					break;
 				default:
 					dprintf(D_ALWAYS, "insertScheddAd: unsupported horizontal daemon attribute %s\n", attName);
@@ -1430,7 +1430,7 @@
 
 					// build an inlist of the vertical attribute names
 				if (inlist.IsEmpty()) {
-					inlist.sprintf("('%s'", attName);
+					inlist.formatstr("('%s'", attName);
 				} else {
 					inlist += ",'";
 					inlist += attName;
@@ -1450,7 +1450,7 @@
 	if (!inlist.IsEmpty()) inlist += ")";
 
 		// get the previous lastreportedtime from the database 
-	sql_stmt.sprintf("SELECT lastreportedtime_epoch FROM daemons_horizontal WHERE MyType = 'Scheduler' AND Name = '%s'", daemonName.Value());
+	sql_stmt.formatstr("SELECT lastreportedtime_epoch FROM daemons_horizontal WHERE MyType = 'Scheduler' AND Name = '%s'", daemonName.Value());
 
 	ret_st = DBObj->execQuery(sql_stmt.Value(), num_result);
 
@@ -1471,9 +1471,9 @@
 		   leave it as NULL (by default)	
 		*/
 	if (prevLHFInDB == prevLHFInAd) {
-		sql_stmt.sprintf("INSERT INTO Daemons_Horizontal_History (MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, endtime) SELECT MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, %s FROM Daemons_Horizontal WHERE MyType = 'Scheduler' AND Name = '%s'", lastReportedTime.Value(), daemonName.Value());
+		sql_stmt.formatstr("INSERT INTO Daemons_Horizontal_History (MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, endtime) SELECT MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, %s FROM Daemons_Horizontal WHERE MyType = 'Scheduler' AND Name = '%s'", lastReportedTime.Value(), daemonName.Value());
 	} else {
-		sql_stmt.sprintf("INSERT INTO Daemons_Horizontal_History (MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory) SELECT MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory FROM Daemons_Horizontal WHERE MyType = 'Scheduler' AND Name = '%s'", daemonName.Value());
+		sql_stmt.formatstr("INSERT INTO Daemons_Horizontal_History (MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory) SELECT MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory FROM Daemons_Horizontal WHERE MyType = 'Scheduler' AND Name = '%s'", daemonName.Value());
 	}
 	
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -1483,7 +1483,7 @@
 		return QUILL_FAILURE;
 	}
 	
-	sql_stmt.sprintf("DELETE FROM  Daemons_Horizontal WHERE MyType = 'Scheduler' AND Name = '%s'", daemonName.Value());
+	sql_stmt.formatstr("DELETE FROM  Daemons_Horizontal WHERE MyType = 'Scheduler' AND Name = '%s'", daemonName.Value());
 
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 		dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1493,7 +1493,7 @@
 	}
 
 		// insert new tuple into daemons_horizontal 
-	sql_stmt.sprintf("INSERT INTO daemons_horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
+	sql_stmt.formatstr("INSERT INTO daemons_horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
 
 	 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 		 dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1511,9 +1511,9 @@
 			don't appear in the new class ad
 		 */
 	 if (prevLHFInDB == prevLHFInAd) {
-		 sql_stmt.sprintf("INSERT INTO Daemons_Vertical_History (MyType, Name, LastReportedTime, attr, val, endtime) SELECT MyType, name, lastreportedtime, attr, val, %s FROM Daemons_Vertical WHERE MyType = 'Scheduler' AND name = '%s' AND attr NOT IN %s", lastReportedTime.Value(), daemonName.Value(), inlist.Value());
+		 sql_stmt.formatstr("INSERT INTO Daemons_Vertical_History (MyType, Name, LastReportedTime, attr, val, endtime) SELECT MyType, name, lastreportedtime, attr, val, %s FROM Daemons_Vertical WHERE MyType = 'Scheduler' AND name = '%s' AND attr NOT IN %s", lastReportedTime.Value(), daemonName.Value(), inlist.Value());
 	 } else {
-		 sql_stmt.sprintf("INSERT INTO Daemons_Vertical_History (MyType, Name, LastReportedTime, attr, val) SELECT MyType, name, lastreportedtime, attr, val FROM Daemons_Vertical WHERE MyType = 'Scheduler' AND name = '%s'", daemonName.Value());		 
+		 sql_stmt.formatstr("INSERT INTO Daemons_Vertical_History (MyType, Name, LastReportedTime, attr, val) SELECT MyType, name, lastreportedtime, attr, val FROM Daemons_Vertical WHERE MyType = 'Scheduler' AND name = '%s'", daemonName.Value());		 
 	 }	 
 
 	 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -1524,9 +1524,9 @@
 	 }
 
 	 if (prevLHFInDB == prevLHFInAd) {
-		 sql_stmt.sprintf("DELETE FROM daemons_vertical WHERE MyType = 'Scheduler' AND name = '%s' AND attr NOT IN %s", daemonName.Value(), inlist.Value());
+		 sql_stmt.formatstr("DELETE FROM daemons_vertical WHERE MyType = 'Scheduler' AND name = '%s' AND attr NOT IN %s", daemonName.Value(), inlist.Value());
 	 } else {
-		 sql_stmt.sprintf("DELETE FROM daemons_vertical WHERE MyType = 'Scheduler' AND name = '%s'", daemonName.Value());		 
+		 sql_stmt.formatstr("DELETE FROM daemons_vertical WHERE MyType = 'Scheduler' AND name = '%s'", daemonName.Value());		 
 	 }
 
 	 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -1555,7 +1555,7 @@
 
 
 		 {
-			 sql_stmt.sprintf("INSERT INTO daemons_vertical (MyType, name, attr, val, lastreportedtime) SELECT 'Scheduler', '%s', '%s', '%s', %s FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM daemons_vertical WHERE MyType = 'Scheduler' AND name = '%s' AND attr = '%s')", daemonName.Value(), aName.Value(), aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value());
+			 sql_stmt.formatstr("INSERT INTO daemons_vertical (MyType, name, attr, val, lastreportedtime) SELECT 'Scheduler', '%s', '%s', '%s', %s FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM daemons_vertical WHERE MyType = 'Scheduler' AND name = '%s' AND attr = '%s')", daemonName.Value(), aName.Value(), aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value());
 
 			 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 				 dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1566,7 +1566,7 @@
 
 			 clob_comp_expr = condor_ttdb_compare_clob_to_lit(dt, "val", aVal.Value());
 
-			 sql_stmt.sprintf("INSERT INTO daemons_vertical_history (MyType, name, lastreportedtime, attr, val, endtime) SELECT MyType, name, lastreportedtime, attr, val, %s FROM daemons_vertical WHERE MyType = 'Scheduler' AND name = '%s' AND attr = '%s' AND %s", lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
+			 sql_stmt.formatstr("INSERT INTO daemons_vertical_history (MyType, name, lastreportedtime, attr, val, endtime) SELECT MyType, name, lastreportedtime, attr, val, %s FROM daemons_vertical WHERE MyType = 'Scheduler' AND name = '%s' AND attr = '%s' AND %s", lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
 
 			 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 				 dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1575,7 +1575,7 @@
 				 return QUILL_FAILURE;
 			 }
 		 
-			 sql_stmt.sprintf("UPDATE daemons_vertical SET val = '%s', lastreportedtime = %s WHERE MyType = 'Scheduler' AND name = '%s' AND attr = '%s' AND %s", aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
+			 sql_stmt.formatstr("UPDATE daemons_vertical SET val = '%s', lastreportedtime = %s WHERE MyType = 'Scheduler' AND name = '%s' AND attr = '%s' AND %s", aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
 		 
 			 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 				 dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1619,8 +1619,8 @@
 	QuillAttrDataType   data_typ[7];
 
 		// first generate MyType='Master' attribute
-	attNameList.sprintf("(MyType");
-	attValList.sprintf("('Master'");
+	attNameList.formatstr("(MyType");
+	attValList.formatstr("('Master'");
 
 	sPrintAd(classAd, *ad);
 
@@ -1664,10 +1664,10 @@
 					}						
 
 					if (strcasecmp(attName, ATTR_NAME) == 0) {
-						daemonName.sprintf("%s", attVal);
+						daemonName.formatstr("%s", attVal);
 					}
 
-					tmpVal.sprintf("'%s'", attVal);
+					tmpVal.formatstr("'%s'", attVal);
 					break;
 				case CONDOR_TT_TYPE_TIMESTAMP:
 					time_t clock;
@@ -1685,16 +1685,16 @@
 					}
 
 					if (strcasecmp(attName, "lastreportedtime") == 0) { 
-						tmpVal.sprintf("%s, %s", ts_expr.Value(), attVal);
-						lastReportedTime.sprintf("%s", ts_expr.Value());
+						tmpVal.formatstr("%s, %s", ts_expr.Value(), attVal);
+						lastReportedTime.formatstr("%s", ts_expr.Value());
 						lastReportedTimeValue = condor_ttdb_buildtsval(&clock, dt);
 					} else {
-						tmpVal.sprintf("%s", ts_expr.Value());
+						tmpVal.formatstr("%s", ts_expr.Value());
 					}
 					
 					break;
 				case CONDOR_TT_TYPE_NUMBER:
-					tmpVal.sprintf("%s", attVal);
+					tmpVal.formatstr("%s", attVal);
 					break;
 				default:
 					dprintf(D_ALWAYS, "insertMasterAd: unsupported horizontal daemon attribute %s\n", attName);
@@ -1719,7 +1719,7 @@
 
 					// build an inlist of the vertical attribute names
 				if (inlist.IsEmpty()) {
-					inlist.sprintf("('%s'", attName);
+					inlist.formatstr("('%s'", attName);
 				} else {
 					inlist += ",'";
 					inlist += attName;
@@ -1740,7 +1740,7 @@
 
 	{
 			// get the previous lastreportedtime from the database 
-		sql_stmt.sprintf("SELECT lastreportedtime_epoch FROM daemons_horizontal WHERE MyType = 'Master' AND Name = '%s'", daemonName.Value());
+		sql_stmt.formatstr("SELECT lastreportedtime_epoch FROM daemons_horizontal WHERE MyType = 'Master' AND Name = '%s'", daemonName.Value());
 	
 		ret_st = DBObj->execQuery(sql_stmt.Value(), num_result);
 	}
@@ -1762,9 +1762,9 @@
 		   leave it as NULL (by default)	
 		*/
 	if (prevLHFInDB == prevLHFInAd) {
-		sql_stmt.sprintf("INSERT INTO Daemons_Horizontal_History (MyType, Name, lastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, endtime) SELECT MyType, Name, lastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, %s FROM Daemons_Horizontal WHERE MyType = 'Master' AND Name = '%s'", lastReportedTime.Value(), daemonName.Value());
+		sql_stmt.formatstr("INSERT INTO Daemons_Horizontal_History (MyType, Name, lastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, endtime) SELECT MyType, Name, lastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, %s FROM Daemons_Horizontal WHERE MyType = 'Master' AND Name = '%s'", lastReportedTime.Value(), daemonName.Value());
 	} else {
-		sql_stmt.sprintf("INSERT INTO Daemons_Horizontal_History (MyType, Name, lastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory) SELECT MyType, Name, lastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory FROM Daemons_Horizontal WHERE MyType = 'Master' AND Name = '%s'", daemonName.Value());
+		sql_stmt.formatstr("INSERT INTO Daemons_Horizontal_History (MyType, Name, lastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory) SELECT MyType, Name, lastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory FROM Daemons_Horizontal WHERE MyType = 'Master' AND Name = '%s'", daemonName.Value());
 	}
 	
 	{
@@ -1777,7 +1777,7 @@
 	}
 
 	{
-		sql_stmt.sprintf("DELETE FROM  Daemons_Horizontal WHERE MyType = 'Master' AND Name = '%s'", daemonName.Value());
+		sql_stmt.formatstr("DELETE FROM  Daemons_Horizontal WHERE MyType = 'Master' AND Name = '%s'", daemonName.Value());
 
 		if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 			dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1788,7 +1788,7 @@
 	}
 
 		// insert new tuple into daemons_horizontal 
-	sql_stmt.sprintf("INSERT INTO daemons_horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
+	sql_stmt.formatstr("INSERT INTO daemons_horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
 	
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 		dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1806,9 +1806,9 @@
 		   don't appear in the new class ad
 		*/
 	 if (prevLHFInDB == prevLHFInAd) {
-		 sql_stmt.sprintf("INSERT INTO Daemons_Vertical_History (MyType, name, lastReportedTime, attr, val, endtime) SELECT MyType, name, lastReportedTime, attr, val, %s FROM Daemons_Vertical WHERE MyType = 'Master' AND name = '%s' AND attr NOT IN %s", lastReportedTime.Value(), daemonName.Value(), inlist.Value());
+		 sql_stmt.formatstr("INSERT INTO Daemons_Vertical_History (MyType, name, lastReportedTime, attr, val, endtime) SELECT MyType, name, lastReportedTime, attr, val, %s FROM Daemons_Vertical WHERE MyType = 'Master' AND name = '%s' AND attr NOT IN %s", lastReportedTime.Value(), daemonName.Value(), inlist.Value());
 	 } else {
-		 sql_stmt.sprintf("INSERT INTO Daemons_Vertical_History (MyType, Name, lastReportedTime, attr, val) SELECT MyType, name, lastReportedTime, attr, val FROM Daemons_Vertical WHERE MyType = 'Master' AND name = '%s'", daemonName.Value());
+		 sql_stmt.formatstr("INSERT INTO Daemons_Vertical_History (MyType, Name, lastReportedTime, attr, val) SELECT MyType, name, lastReportedTime, attr, val FROM Daemons_Vertical WHERE MyType = 'Master' AND name = '%s'", daemonName.Value());
 	 } 
 
 	 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -1819,9 +1819,9 @@
 	 }
 
 	 if (prevLHFInDB == prevLHFInAd) {
-		 sql_stmt.sprintf("DELETE FROM daemons_vertical WHERE MyType = 'Master' AND name = '%s' AND attr NOT IN %s", daemonName.Value(), inlist.Value());
+		 sql_stmt.formatstr("DELETE FROM daemons_vertical WHERE MyType = 'Master' AND name = '%s' AND attr NOT IN %s", daemonName.Value(), inlist.Value());
 	 } else {
-		 sql_stmt.sprintf("DELETE FROM daemons_vertical WHERE MyType = 'Master' AND name = '%s'", daemonName.Value());
+		 sql_stmt.formatstr("DELETE FROM daemons_vertical WHERE MyType = 'Master' AND name = '%s'", daemonName.Value());
 	 }
 
 	 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -1849,7 +1849,7 @@
 		}
 
 		 {
-			 sql_stmt.sprintf("INSERT INTO daemons_vertical (MyType, name, attr, val, lastreportedtime) SELECT 'Master', '%s', '%s', '%s', %s FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM daemons_vertical WHERE MyType = 'Master' AND name = '%s' AND attr = '%s')", daemonName.Value(), aName.Value(), aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value());
+			 sql_stmt.formatstr("INSERT INTO daemons_vertical (MyType, name, attr, val, lastreportedtime) SELECT 'Master', '%s', '%s', '%s', %s FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM daemons_vertical WHERE MyType = 'Master' AND name = '%s' AND attr = '%s')", daemonName.Value(), aName.Value(), aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value());
 
 			 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 				 dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1860,7 +1860,7 @@
 
 			 clob_comp_expr = condor_ttdb_compare_clob_to_lit(dt, "val", aVal.Value());
 
-			 sql_stmt.sprintf("INSERT INTO daemons_vertical_history (MyType, name, lastreportedtime, attr, val, endtime) SELECT MyType, name, lastreportedtime, attr, val, %s FROM daemons_vertical WHERE MyType = 'Master' AND name = '%s' AND attr = '%s' AND %s", lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
+			 sql_stmt.formatstr("INSERT INTO daemons_vertical_history (MyType, name, lastreportedtime, attr, val, endtime) SELECT MyType, name, lastreportedtime, attr, val, %s FROM daemons_vertical WHERE MyType = 'Master' AND name = '%s' AND attr = '%s' AND %s", lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
 
 			 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 				 dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1869,7 +1869,7 @@
 				 return QUILL_FAILURE;
 			 }
 
-			 sql_stmt.sprintf("UPDATE daemons_vertical SET val = '%s', lastreportedtime = %s WHERE MyType = 'Master' AND name = '%s' AND attr = '%s' AND %s", aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
+			 sql_stmt.formatstr("UPDATE daemons_vertical SET val = '%s', lastreportedtime = %s WHERE MyType = 'Master' AND name = '%s' AND attr = '%s' AND %s", aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
 		 
 			 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 				 dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -1910,8 +1910,8 @@
 	MyString clob_comp_expr;
 
 		// first generate MyType='Negotiator' attribute
-	attNameList.sprintf("(MyType");
-	attValList.sprintf("('Negotiator'");
+	attNameList.formatstr("(MyType");
+	attValList.formatstr("('Negotiator'");
 
 	sPrintAd(classAd, *ad);
 
@@ -1955,10 +1955,10 @@
 					}
 
 					if (strcasecmp(attName, ATTR_NAME) == 0) {
-						daemonName.sprintf("%s", attVal);
+						daemonName.formatstr("%s", attVal);
 					}
 
-					tmpVal.sprintf("'%s'", attVal);
+					tmpVal.formatstr("'%s'", attVal);
 					break;
 				case CONDOR_TT_TYPE_TIMESTAMP:
 					time_t clock;
@@ -1976,15 +1976,15 @@
 					}
 
 					if (strcasecmp(attName, "lastreportedtime") == 0) {
-						tmpVal.sprintf("%s, %s", ts_expr.Value(), attVal);
-						lastReportedTime.sprintf("%s", ts_expr.Value());
+						tmpVal.formatstr("%s, %s", ts_expr.Value(), attVal);
+						lastReportedTime.formatstr("%s", ts_expr.Value());
 					} else {
-						tmpVal.sprintf("%s", ts_expr.Value());
+						tmpVal.formatstr("%s", ts_expr.Value());
 					}
 					
 					break;
 				case CONDOR_TT_TYPE_NUMBER:
-					tmpVal.sprintf("%s", attVal);
+					tmpVal.formatstr("%s", attVal);
 					break;
 				default:
 					dprintf(D_ALWAYS, "insertNegotiatorAd: unsupported horizontal daemon attribute\n");
@@ -2009,7 +2009,7 @@
 
 					// build an inlist of the vertical attribute names
 				if (inlist.IsEmpty()) {
-					inlist.sprintf("('%s'", attName);
+					inlist.formatstr("('%s'", attName);
 				} else {
 					inlist += ",'";
 					inlist += attName;
@@ -2029,7 +2029,7 @@
 	if (!inlist.IsEmpty()) inlist += ")";
 
 		// get the previous lastreportedtime from the database 
-	sql_stmt.sprintf("SELECT lastreportedtime_epoch FROM daemons_horizontal WHERE MyType = 'Negotiator' AND Name = '%s'", daemonName.Value());
+	sql_stmt.formatstr("SELECT lastreportedtime_epoch FROM daemons_horizontal WHERE MyType = 'Negotiator' AND Name = '%s'", daemonName.Value());
 	
 	ret_st = DBObj->execQuery(sql_stmt.Value(), num_result);
 
@@ -2050,9 +2050,9 @@
 		   leave it as NULL (by default)	
 		*/
 	if (prevLHFInDB == prevLHFInAd) {
-		sql_stmt.sprintf("INSERT INTO Daemons_Horizontal_History (MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, endtime) SELECT MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, %s FROM Daemons_Horizontal WHERE MyType = 'Negotiator' AND Name = '%s'", lastReportedTime.Value(), daemonName.Value());
+		sql_stmt.formatstr("INSERT INTO Daemons_Horizontal_History (MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, endtime) SELECT MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory, %s FROM Daemons_Horizontal WHERE MyType = 'Negotiator' AND Name = '%s'", lastReportedTime.Value(), daemonName.Value());
 	} else {
-		sql_stmt.sprintf("INSERT INTO Daemons_Horizontal_History (MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory) SELECT MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory FROM Daemons_Horizontal WHERE MyType = 'Negotiator' AND Name = '%s'", daemonName.Value());
+		sql_stmt.formatstr("INSERT INTO Daemons_Horizontal_History (MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory) SELECT MyType, Name, LastReportedTime, MonitorSelfTime, MonitorSelfCPUUsage, MonitorSelfImageSize, MonitorSelfResidentSetSize, MonitorSelfAge, UpdateSequenceNumber, UpdatesTotal, UpdatesSequenced, UpdatesLost, UpdatesHistory FROM Daemons_Horizontal WHERE MyType = 'Negotiator' AND Name = '%s'", daemonName.Value());
 	}
 	
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -2062,7 +2062,7 @@
 		return QUILL_FAILURE;
 	}
 
-	sql_stmt.sprintf("DELETE FROM  Daemons_Horizontal WHERE MyType = 'Negotiator' AND Name = '%s'", daemonName.Value());
+	sql_stmt.formatstr("DELETE FROM  Daemons_Horizontal WHERE MyType = 'Negotiator' AND Name = '%s'", daemonName.Value());
 
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 		dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -2071,7 +2071,7 @@
 		return QUILL_FAILURE;
 	}
 		// insert new tuple into daemons_horizontal 
-	sql_stmt.sprintf("INSERT INTO daemons_horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
+	sql_stmt.formatstr("INSERT INTO daemons_horizontal %s VALUES %s", attNameList.Value(), attValList.Value());
 	
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 		dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -2091,9 +2091,9 @@
 		   don't appear in the new class ad
 		*/
 	 if (prevLHFInDB == prevLHFInAd) {
-		 sql_stmt.sprintf("INSERT INTO Daemons_Vertical_History (MyType, Name, LastReportedTime, attr, val, endtime) SELECT MyType, name, lastreportedtime, attr, val, %s FROM Daemons_Vertical WHERE MyType = 'Negotiator' AND name = '%s' AND attr NOT IN %s", lastReportedTime.Value(), daemonName.Value(), inlist.Value());
+		 sql_stmt.formatstr("INSERT INTO Daemons_Vertical_History (MyType, Name, LastReportedTime, attr, val, endtime) SELECT MyType, name, lastreportedtime, attr, val, %s FROM Daemons_Vertical WHERE MyType = 'Negotiator' AND name = '%s' AND attr NOT IN %s", lastReportedTime.Value(), daemonName.Value(), inlist.Value());
 	 } else {
-		 sql_stmt.sprintf("INSERT INTO Daemons_Vertical_History (MyType, Name, LastReportedTime, attr, val) SELECT MyType, name, lastreportedtime, attr, val FROM Daemons_Vertical WHERE MyType = 'Negotiator' AND name = '%s'", daemonName.Value());
+		 sql_stmt.formatstr("INSERT INTO Daemons_Vertical_History (MyType, Name, LastReportedTime, attr, val) SELECT MyType, name, lastreportedtime, attr, val FROM Daemons_Vertical WHERE MyType = 'Negotiator' AND name = '%s'", daemonName.Value());
 	 }
 
 	 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -2104,9 +2104,9 @@
 	 }
 
 	 if (prevLHFInDB == prevLHFInAd) {
-		 sql_stmt.sprintf("DELETE FROM daemons_vertical WHERE MyType = 'Negotiator' AND name = '%s' AND attr NOT IN %s", daemonName.Value(), inlist.Value());
+		 sql_stmt.formatstr("DELETE FROM daemons_vertical WHERE MyType = 'Negotiator' AND name = '%s' AND attr NOT IN %s", daemonName.Value(), inlist.Value());
 	 } else {
-		 sql_stmt.sprintf("DELETE FROM daemons_vertical WHERE MyType = 'Negotiator' AND name = '%s'", daemonName.Value());
+		 sql_stmt.formatstr("DELETE FROM daemons_vertical WHERE MyType = 'Negotiator' AND name = '%s'", daemonName.Value());
 	 }
 
 	 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -2133,7 +2133,7 @@
 			continue;
 		}
 
-		 sql_stmt.sprintf("INSERT INTO daemons_vertical (MyType, name, attr, val, lastreportedtime) SELECT 'Negotiator', '%s', '%s', '%s', %s FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM daemons_vertical WHERE MyType = 'Negotiator' AND name = '%s' AND attr = '%s')", daemonName.Value(), aName.Value(), aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value());
+		 sql_stmt.formatstr("INSERT INTO daemons_vertical (MyType, name, attr, val, lastreportedtime) SELECT 'Negotiator', '%s', '%s', '%s', %s FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM daemons_vertical WHERE MyType = 'Negotiator' AND name = '%s' AND attr = '%s')", daemonName.Value(), aName.Value(), aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value());
 
 		 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 			 dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -2144,7 +2144,7 @@
 
 		 clob_comp_expr = condor_ttdb_compare_clob_to_lit(dt, "val", aVal.Value());
 
-		 sql_stmt.sprintf("INSERT INTO daemons_vertical_history (MyType, name, lastreportedtime, attr, val, endtime) SELECT MyType, name, lastreportedtime, attr, val, %s FROM daemons_vertical WHERE MyType = 'Negotiator' AND name = '%s' AND attr = '%s' AND %s", lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
+		 sql_stmt.formatstr("INSERT INTO daemons_vertical_history (MyType, name, lastreportedtime, attr, val, endtime) SELECT MyType, name, lastreportedtime, attr, val, %s FROM daemons_vertical WHERE MyType = 'Negotiator' AND name = '%s' AND attr = '%s' AND %s", lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
 
 		 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 			 dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -2153,7 +2153,7 @@
 			 return QUILL_FAILURE;
 		 }
 
-		 sql_stmt.sprintf("UPDATE daemons_vertical SET val = '%s', lastreportedtime = %s WHERE MyType = 'Negotiator' AND name = '%s' AND attr = '%s' AND %s", aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
+		 sql_stmt.formatstr("UPDATE daemons_vertical SET val = '%s', lastreportedtime = %s WHERE MyType = 'Negotiator' AND name = '%s' AND attr = '%s' AND %s", aVal.Value(), lastReportedTime.Value(), daemonName.Value(), aName.Value(), clob_comp_expr.Value());
 		 
 		 if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 			dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -2243,7 +2243,7 @@
 					//is the first in the list
 				isFirst = FALSE;
 
-				attNameList.sprintf("(%s", attName);
+				attNameList.formatstr("(%s", attName);
 					/* if the value begins with a double quote, it means that
 					   it is a string value and should be single quoted. 
 					   This assumption is made in all functions where 	
@@ -2252,9 +2252,9 @@
 					*/
 				if (newvalue[0] == '"') {
 					stripdoublequotes_MyString(newvalue);
-					attValList.sprintf("('%s'", newvalue.Value());
+					attValList.formatstr("('%s'", newvalue.Value());
 				} else {
-					attValList.sprintf("(%s", newvalue.Value());
+					attValList.formatstr("(%s", newvalue.Value());
 				}
 			} else {					
 						// is not the first in the list
@@ -2281,7 +2281,7 @@
 	if (!attNameList.IsEmpty()) attNameList += ")";
 	if (!attValList.IsEmpty()) attValList += ")";
 
-	sql_stmt.sprintf("INSERT INTO %s %s VALUES %s", tableName, attNameList.Value(), attValList.Value());
+	sql_stmt.formatstr("INSERT INTO %s %s VALUES %s", tableName, attNameList.Value(), attValList.Value());
 
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 		dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -2314,8 +2314,8 @@
 		return QUILL_FAILURE;
 	}
 
-	attNameList.sprintf("(run_id");
-	attValList.sprintf("(%s", runid_expr.Value());
+	attNameList.formatstr("(run_id");
+	attValList.formatstr("(%s", runid_expr.Value());
 
 	sPrintAd(classAd, *ad);
 
@@ -2375,7 +2375,7 @@
 	if (!attNameList.IsEmpty()) attNameList += ")";
 	if (!attValList.IsEmpty()) attValList += ")";
 
-	sql_stmt.sprintf("INSERT INTO Runs %s VALUES %s", attNameList.Value(), attValList.Value());
+	sql_stmt.formatstr("INSERT INTO Runs %s VALUES %s", attNameList.Value(), attValList.Value());
 
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 		dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -2459,10 +2459,10 @@
 		}
 
 	if (eventtype == ULOG_JOB_ABORTED || eventtype == ULOG_JOB_HELD || ULOG_JOB_RELEASED) {
-		sql_stmt.sprintf("INSERT INTO events (scheddname, cluster_id, proc_id, globaljobid, eventtype, eventtime, description) VALUES ('%s', %s, %s, '%s', %d, %s, '%s')", 
+		sql_stmt.formatstr("INSERT INTO events (scheddname, cluster_id, proc_id, globaljobid, eventtype, eventtime, description) VALUES ('%s', %s, %s, '%s', %d, %s, '%s')", 
 				scheddname.Value(), cluster.Value(), proc.Value(), gjid.Value(), eventtype, eventts.Value(), messagestr.Value());
 	} else {
-		sql_stmt.sprintf("INSERT INTO events (scheddname, cluster_id, proc_id, run_id, eventtype, eventtime, description) SELECT '%s', %s, %s, run_id, %d, %s, '%s'  FROM runs WHERE scheddname = '%s'  AND cluster_id = %s and proc_id = %s AND spid = %s AND endtype is null", scheddname.Value(), cluster.Value(), proc.Value(), eventtype, eventts.Value(), messagestr.Value(), scheddname.Value(), cluster.Value(), proc.Value(), subproc.Value());
+		sql_stmt.formatstr("INSERT INTO events (scheddname, cluster_id, proc_id, run_id, eventtype, eventtime, description) SELECT '%s', %s, %s, run_id, %d, %s, '%s'  FROM runs WHERE scheddname = '%s'  AND cluster_id = %s and proc_id = %s AND spid = %s AND endtype is null", scheddname.Value(), cluster.Value(), proc.Value(), eventtype, eventts.Value(), messagestr.Value(), scheddname.Value(), cluster.Value(), proc.Value(), subproc.Value());
 	}
 
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -2565,7 +2565,7 @@
 		return QUILL_FAILURE;
 	}
 
-	sql_stmt.sprintf(
+	sql_stmt.formatstr(
 			"INSERT INTO files (file_id, name, host, path, lastmodified, filesize, checksum) SELECT %s, '%s', '%s', '%s', %s, %d, '%s' FROM dummy_single_row_table WHERE NOT EXISTS (SELECT * FROM files WHERE  name='%s' and path='%s' and host='%s' and lastmodified=%s)", seqexpr.Value(), f_name, f_host, f_path, ts_expr.Value(), f_size, hexSum, f_name, f_path, f_host, ts_expr.Value());
 
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -2644,7 +2644,7 @@
 		return QUILL_FAILURE;
 	}
 
-	sql_stmt.sprintf(
+	sql_stmt.formatstr(
 			"INSERT INTO fileusages (globaljobid, file_id, usagetype) SELECT '%s', file_id, '%s' FROM files WHERE  name='%s' and path='%s' and host='%s' and lastmodified=%s %s", globaljobid, type, f_name, f_path, f_host, ts_expr.Value(), onerow_expr.Value());
 	
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -2796,7 +2796,7 @@
   else
 		hexSum[0] = '\0';
   
-  sql_stmt.sprintf(
+  sql_stmt.formatstr(
           "INSERT INTO transfers (globaljobid, src_name, src_host, src_port, src_path, dst_name, dst_host, dst_port, dst_path, transfer_size_bytes, elapsed, dst_daemon, checksum, last_modified, transfer_time, is_encrypted, delegation_method_id) VALUES ('%s', '%s', '%s', %d, '%s', '%s', '%s', %d, '%s', %d, %d, '%s', '%s', %s, %s,'%s',%d)", globaljobid, src_name, src_host, src_port, src_path, dst_name, dst_host, dst_port, dst_path, transfer_size, elapsed, dst_daemon, hexSum, last_modified.Value(), transfer_time_expr.Value(),is_encrypted,delegation_method_id);
 
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -2949,7 +2949,7 @@
 	}
 
 		// build sql stmt
-	sql_stmt.sprintf("UPDATE %s SET %s WHERE %s", tableName, setList.Value(), whereList.Value());		
+	sql_stmt.formatstr("UPDATE %s SET %s WHERE %s", tableName, setList.Value(), whereList.Value());		
 	
 	if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 		dprintf(D_ALWAYS, "Executing Statement --- Error\n");
@@ -2999,7 +2999,7 @@
 	newvalue = condor_ttdb_fillEscapeCharacters(errorSqlStmt.Value(), dt);
 
 		/* insert an entry into the Error_Sqllogs table */
-	sql_stmt.sprintf("INSERT INTO Error_Sqllogs (LogName, Host, LastModified, ErrorSql, LogBody, ErrorMessage) VALUES ('%s', '%s', %s, '%s', '', '%s')", 
+	sql_stmt.formatstr("INSERT INTO Error_Sqllogs (LogName, Host, LastModified, ErrorSql, LogBody, ErrorMessage) VALUES ('%s', '%s', %s, '%s', '', '%s')", 
 					 currentSqlLog.Value(), 
 					 hostname_val.Value(), 
 					 ts_expr.Value(), 
@@ -3042,7 +3042,7 @@
 		buffer[rv] = '\0';
 		newvalue = condor_ttdb_fillEscapeCharacters(buffer, dt);
 
-		sql_stmt.sprintf("UPDATE Error_Sqllogs SET LogBody = LogBody || '%s' WHERE LogName = '%s' and Host = '%s' and LastModified = %s", 
+		sql_stmt.formatstr("UPDATE Error_Sqllogs SET LogBody = LogBody || '%s' WHERE LogName = '%s' and Host = '%s' and LastModified = %s", 
 						 newvalue.Value(), 
 						 currentSqlLog.Value(), 
 						 hostname_val.Value(), 
diff -r -u condor-8.0.5.orig/src/condor_tools/convert_history.cpp condor-8.0.5/src/condor_tools/convert_history.cpp
--- condor-8.0.5.orig/src/condor_tools/convert_history.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_tools/convert_history.cpp	2014-01-02 09:23:54.000000000 +0100
@@ -97,7 +97,7 @@
 			// This line contains delimiter
 			found = 1;
 
-			Delimbuf.sprintf("%s Offset = %d ClusterId = %s ProcId = %s Owner = %s CompletionDate = %s\n", HISTORY_DELIM, entrysum, ClusterId.Value(), ProcId.Value(), Owner.Value(), CompletionDate.Value());
+			Delimbuf.formatstr("%s Offset = %d ClusterId = %s ProcId = %s Owner = %s CompletionDate = %s\n", HISTORY_DELIM, entrysum, ClusterId.Value(), ProcId.Value(), Owner.Value(), CompletionDate.Value());
 			fprintf(NewLogFile, "%s", Delimbuf.Value());
 
 			entrysum = totalsum;
diff -r -u condor-8.0.5.orig/src/condor_tools/dump_history.cpp condor-8.0.5/src/condor_tools/dump_history.cpp
--- condor-8.0.5.orig/src/condor_tools/dump_history.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_tools/dump_history.cpp	2014-01-02 09:23:54.000000000 +0100
@@ -125,10 +125,10 @@
 							   stderr);
 			exit(1);
 		}
-		tmp.sprintf ("%s == \"%s\"", ATTR_NAME, quillName);      		
+		tmp.formatstr ("%s == \"%s\"", ATTR_NAME, quillName);      		
 		quillQuery.addORConstraint (tmp.Value());
 
-                tmp.sprintf ("%s == \"%s\"", ATTR_SCHEDD_NAME, quillName);
+                tmp.formatstr ("%s == \"%s\"", ATTR_SCHEDD_NAME, quillName);
                 quillQuery.addORConstraint (tmp.Value());
 
 		remotequill = true;
diff -r -u condor-8.0.5.orig/src/condor_tools/history.cpp condor-8.0.5/src/condor_tools/history.cpp
--- condor-8.0.5.orig/src/condor_tools/history.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_tools/history.cpp	2014-01-02 09:23:54.000000000 +0100
@@ -136,12 +136,11 @@
   char *dbIpAddr=NULL, *dbName=NULL,*queryPassword=NULL;
   const char * pcolon=NULL;
 
+  char tmp[1000]; 
 
   std::string constraint;
   ExprTree *constraintExpr=NULL;
 
-  std::string tmp;
-
   int i;
   parameters = (void **) malloc(NUM_PARAMETERS * sizeof(void *));
   myDistro->Init( argc, argv );
@@ -224,9 +223,9 @@
 
 */
 		quillName = argv[i];
-
+                
 		sprintf (tmp, "%s == \"%s\"", ATTR_SCHEDD_NAME, quillName);
-		quillQuery.addORConstraint (tmp.c_str());
+		quillQuery.addORConstraint (tmp);
 
 		remotequill = false;
 		readfromfile = false;
diff -r -u condor-8.0.5.orig/src/condor_tools/load_history.cpp condor-8.0.5/src/condor_tools/load_history.cpp
--- condor-8.0.5.orig/src/condor_tools/load_history.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_tools/load_history.cpp	2014-01-02 09:23:54.000000000 +0100
@@ -251,7 +251,7 @@
 
 		// get the password from the .pgpass file
 	MyString writePasswordFile; 
-	writePasswordFile.sprintf("%s/.pgpass", spool);
+	writePasswordFile.formatstr("%s/.pgpass", spool);
 
 	MyString writePassword = getWritePassword(writePasswordFile.Value(), 
 										   host?host:"", port?port:"", 
@@ -259,7 +259,7 @@
 										   DBUser);
 	MyString DBConn;
 
-	DBConn.sprintf("host=%s port=%s user=%s password=%s dbname=%s", 
+	DBConn.formatstr("host=%s port=%s user=%s password=%s dbname=%s", 
 				   host?host:"", port?port:"", 
 				   DBUser?DBUser:"", 
 				   writePassword.Value(), 
@@ -341,7 +341,7 @@
 		// it is in the format of the following:
 		// host:port:db:user:password
 
-	prefix.sprintf("%s:%s:%s:%s:", host, port, db, dbuser);
+	prefix.formatstr("%s:%s:%s:%s:", host, port, db, dbuser);
 
 	len = prefix.Length();
 
@@ -463,8 +463,8 @@
   ad->EvalInteger (ATTR_CLUSTER_ID, NULL, cid);
   ad->EvalInteger (ATTR_PROC_ID, NULL, pid);
 
-  sql_stmt.sprintf("DELETE FROM History_Horizontal WHERE scheddname = '%s' AND cluster_id = %d AND proc = %d", scheddname, cid, pid);
-  sql_stmt2.sprintf("INSERT INTO History_Horizontal(scheddname, cluster_id, proc, enteredhistorytable) VALUES('%s', %d, %d, current_timestamp)", scheddname, cid, pid);
+  sql_stmt.formatstr("DELETE FROM History_Horizontal WHERE scheddname = '%s' AND cluster_id = %d AND proc = %d", scheddname, cid, pid);
+  sql_stmt2.formatstr("INSERT INTO History_Horizontal(scheddname, cluster_id, proc, enteredhistorytable) VALUES('%s', %d, %d, current_timestamp)", scheddname, cid, pid);
 
   if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
 	  fprintf(stderr, "Executing Statement --- Error\n");
@@ -542,11 +542,11 @@
 			  
 			  ts_expr = condor_ttdb_buildts(&clock, dt);	
 				  
-			  sql_stmt.sprintf("UPDATE History_Horizontal SET %s = (%s) WHERE scheddname = '%s' and cluster_id = %d and proc = %d", name.Value(), ts_expr.Value(), scheddname, cid, pid);
+			  sql_stmt.formatstr("UPDATE History_Horizontal SET %s = (%s) WHERE scheddname = '%s' and cluster_id = %d and proc = %d", name.Value(), ts_expr.Value(), scheddname, cid, pid);
 
 		  }	else {
 			  newvalue = condor_ttdb_fillEscapeCharacters(value.Value(), dt);
-			  sql_stmt.sprintf("UPDATE History_Horizontal SET %s = '%s' WHERE scheddname = '%s' and cluster_id = %d and proc = %d", name.Value(), newvalue.Value(), 
+			  sql_stmt.formatstr("UPDATE History_Horizontal SET %s = '%s' WHERE scheddname = '%s' and cluster_id = %d and proc = %d", name.Value(), newvalue.Value(), 
 							   scheddname, cid, pid);			  
 		  }
 	  } else {
@@ -555,9 +555,9 @@
 		  sql_stmt = ""; 
 		  sql_stmt2 = ""; 
 
-		  sql_stmt.sprintf("DELETE FROM History_Vertical WHERE scheddname = '%s' AND cluster_id = %d AND proc = %d AND attr = '%s'", scheddname, cid, pid, name.Value());
+		  sql_stmt.formatstr("DELETE FROM History_Vertical WHERE scheddname = '%s' AND cluster_id = %d AND proc = %d AND attr = '%s'", scheddname, cid, pid, name.Value());
 			  
-		  sql_stmt2.sprintf("INSERT INTO History_Vertical(scheddname, cluster_id, proc, attr, val) VALUES('%s', %d, %d, '%s', '%s')", scheddname, cid, pid, 
+		  sql_stmt2.formatstr("INSERT INTO History_Vertical(scheddname, cluster_id, proc, attr, val) VALUES('%s', %d, %d, '%s', '%s')", scheddname, cid, pid, 
 							name.Value(), newvalue.Value());
 
 	  }	  
diff -r -u condor-8.0.5.orig/src/condor_utils/dbms_utils.cpp condor-8.0.5/src/condor_utils/dbms_utils.cpp
--- condor-8.0.5.orig/src/condor_utils/dbms_utils.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_utils/dbms_utils.cpp	2014-01-02 09:23:55.000000000 +0100
@@ -80,7 +80,7 @@
 
 	switch(dt) {
 	case T_PGSQL:
-		rv.sprintf("'%s'", tsv);		
+		rv.formatstr("'%s'", tsv);		
 		break;
 	default:
 		break;
@@ -237,7 +237,7 @@
 	port[strlen(ptr_colon+1)] = '\0';
 
 		// get the password from the .pgpass file
-	writePasswordFile.sprintf( "%s/.pgpass", spool);
+	writePasswordFile.formatstr( "%s/.pgpass", spool);
 
 	writePassword = getWritePassword(writePasswordFile.Value(), 
 										   host, port,
@@ -578,12 +578,12 @@
   ad->EvalInteger (ATTR_CLUSTER_ID, NULL, cid);
   ad->EvalInteger (ATTR_PROC_ID, NULL, pid);
 
-  scheddbirthdate_str.sprintf("%lu", scheddbirthdate);
+  scheddbirthdate_str.formatstr("%lu", scheddbirthdate);
 
  {
-	  sql_stmt.sprintf(
+	  sql_stmt.formatstr(
 					   "DELETE FROM Jobs_Horizontal_History WHERE scheddname = '%s' AND scheddbirthdate = %lu AND cluster_id = %d AND proc_id = %d", scheddname, (unsigned long)scheddbirthdate, cid, pid);
-	  sql_stmt2.sprintf(
+	  sql_stmt2.formatstr(
 						"INSERT INTO Jobs_Horizontal_History(scheddname, scheddbirthdate, cluster_id, proc_id, enteredhistorytable) VALUES('%s', %lu, %d, %d, current_timestamp)", scheddname, (unsigned long)scheddbirthdate, cid, pid);
 
 	  if (DBObj->execCommand(sql_stmt.Value()) == QUILL_FAILURE) {
@@ -664,7 +664,7 @@
 			  {
 				  ts_expr = condor_ttdb_buildts(&clock, dt);	
 				  
-				  sql_stmt.sprintf(
+				  sql_stmt.formatstr(
 								   "UPDATE Jobs_Horizontal_History SET %s = (%s) WHERE scheddname = '%s' and scheddbirthdate = %lu and cluster_id = %d and proc_id = %d", name.Value(), ts_expr.Value(), scheddname, (unsigned long)scheddbirthdate, cid, pid);
 			  }
 		  }	else {
@@ -680,7 +680,7 @@
 			  newvalue = condor_ttdb_fillEscapeCharacters(value.Value(), dt);
 
 			  {
-				  sql_stmt.sprintf( 
+				  sql_stmt.formatstr( 
 								   "UPDATE Jobs_Horizontal_History SET %s = '%s' WHERE scheddname = '%s' and scheddbirthdate = %lu and cluster_id = %d and proc_id = %d", name.Value(), newvalue.Value(), scheddname, (unsigned long)scheddbirthdate, cid, pid);
 			  }
 		  }
@@ -688,12 +688,12 @@
 		  newvalue = condor_ttdb_fillEscapeCharacters(value.Value(), dt);
 		  
 		  {
-			  sql_stmt.sprintf(
+			  sql_stmt.formatstr(
 							   "DELETE FROM Jobs_Vertical_History WHERE scheddname = '%s' AND scheddbirthdate = %lu AND cluster_id = %d AND proc_id = %d AND attr = '%s'", scheddname, (unsigned long)scheddbirthdate, cid, pid, name.Value());
 		  }
 			
 		  {
-			  sql_stmt2.sprintf( 
+			  sql_stmt2.formatstr( 
 								"INSERT INTO Jobs_Vertical_History(scheddname, scheddbirthdate, cluster_id, proc_id, attr, val) VALUES('%s', %lu, %d, %d, '%s', '%s')", scheddname, (unsigned long)scheddbirthdate, cid, pid, name.Value(), newvalue.Value());
 		  }
 	  }
diff -r -u condor-8.0.5.orig/src/condor_utils/file_transfer_db.cpp condor-8.0.5/src/condor_utils/file_transfer_db.cpp
--- condor-8.0.5.orig/src/condor_utils/file_transfer_db.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_utils/file_transfer_db.cpp	2014-01-02 09:23:55.000000000 +0100
@@ -134,7 +134,7 @@
 	} else {
 		InputFiles = new StringList(NULL,",");
 	}
-	if (ad->LookupString(ATTR_JOB_INPUT, buf) == 1) {
+	if (ad->LookupString(ATTR_JOB_INPUT, buf, ATTRLIST_MAX_EXPRESSION) == 1) {
         // only add to list if not NULL_FILE (i.e. /dev/null)
         if ( ! nullFile(buf) ) {
             if ( !InputFiles->file_contains(buf) )
diff -r -u condor-8.0.5.orig/src/condor_utils/history_utils.h condor-8.0.5/src/condor_utils/history_utils.h
--- condor-8.0.5.orig/src/condor_utils/history_utils.h	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_utils/history_utils.h	2014-01-02 09:23:55.000000000 +0100
@@ -27,8 +27,8 @@
 
 //------------------------------------------------------------------------
 
-void displayJobShort(AttrList* ad);
-void short_header(void);
+static void displayJobShort(AttrList* ad);
+static void short_header(void);
 static void short_print(int,int,const char*,int,int,int,int,int,int,const char *);
 static void shorten (char *, int);
 static const char* format_date( time_t date );
diff -r -u condor-8.0.5.orig/src/condor_utils/pgsqldatabase.cpp condor-8.0.5/src/condor_utils/pgsqldatabase.cpp
--- condor-8.0.5.orig/src/condor_utils/pgsqldatabase.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_utils/pgsqldatabase.cpp	2014-01-02 09:23:55.000000000 +0100
@@ -512,12 +512,12 @@
 	int i;
 
 	if(isfullscan) {
-		procAds_hor_query.sprintf("SELECT cluster_id, proc_id, jobstatus, imagesize, remoteusercpu, remotewallclocktime, remotehost, globaljobid, jobprio,  args, extract(epoch from shadowbday) as shadowbday, extract(epoch from enteredcurrentstatus) as enteredcurrentstatus, numrestarts  FROM procads_horizontal WHERE scheddname=\'%s\' ORDER BY cluster_id, proc_id;", scheddname);
-		procAds_ver_query.sprintf("SELECT cluster_id, proc_id, attr, val FROM procads_vertical WHERE scheddname=\'%s\' ORDER BY cluster_id, proc_id;", scheddname);
+		procAds_hor_query.formatstr("SELECT cluster_id, proc_id, jobstatus, imagesize, remoteusercpu, remotewallclocktime, remotehost, globaljobid, jobprio,  args, extract(epoch from shadowbday) as shadowbday, extract(epoch from enteredcurrentstatus) as enteredcurrentstatus, numrestarts  FROM procads_horizontal WHERE scheddname=\'%s\' ORDER BY cluster_id, proc_id;", scheddname);
+		procAds_ver_query.formatstr("SELECT cluster_id, proc_id, attr, val FROM procads_vertical WHERE scheddname=\'%s\' ORDER BY cluster_id, proc_id;", scheddname);
 
-		clusterAds_hor_query.sprintf("SELECT cluster_id, owner, jobstatus, jobprio, imagesize, extract(epoch from qdate) as qdate, remoteusercpu, remotewallclocktime, cmd, args, jobuniverse FROM clusterads_horizontal WHERE scheddname=\'%s\' ORDER BY cluster_id;", scheddname);
+		clusterAds_hor_query.formatstr("SELECT cluster_id, owner, jobstatus, jobprio, imagesize, extract(epoch from qdate) as qdate, remoteusercpu, remotewallclocktime, cmd, args, jobuniverse FROM clusterads_horizontal WHERE scheddname=\'%s\' ORDER BY cluster_id;", scheddname);
 
-		clusterAds_ver_query.sprintf("SELECT cluster_id, attr, val FROM clusterads_vertical WHERE scheddname=\'%s\' ORDER BY cluster_id;", scheddname);
+		clusterAds_ver_query.formatstr("SELECT cluster_id, attr, val FROM clusterads_vertical WHERE scheddname=\'%s\' ORDER BY cluster_id;", scheddname);
 	}
 
 	/* OK, this is a little confusing.
@@ -574,7 +574,7 @@
 	else {
 	    if(numclusters > 0) {
 			// build up the cluster predicate
-			clusterpredicate.sprintf("%s%d)", 
+			clusterpredicate.formatstr("%s%d)", 
 					" AND ( (cluster_id = ",clusterarray[0]);
 			for(i=1; i < numclusters; i++) {
 				clusterpredicate.formatstr_cat( 
@@ -584,11 +584,11 @@
 			// now build up the proc predicate string. 	
 			// first decide how to open it
 			 if(procarray[0] != -1) {
-					procpredicate.sprintf("%s%d%s%d)", 
+					procpredicate.formatstr("%s%d%s%d)", 
 							" AND ( (cluster_id = ", clusterarray[0], 
 							" AND proc_id = ", procarray[0]);
 	 		} else {  // no proc for this entry, so only have cluster
-					procpredicate.sprintf( "%s%d)", 
+					procpredicate.formatstr( "%s%d)", 
 								" AND ( (cluster_id = ", clusterarray[0]);
 	 		}
 	
@@ -612,17 +612,17 @@
 		} // end of numclusters > 0
 
 
-		procAds_hor_query.sprintf( 
+		procAds_hor_query.formatstr( 
 			"SELECT cluster_id, proc_id, jobstatus, imagesize, remoteusercpu, remotewallclocktime, remotehost, globaljobid, jobprio, args, extract(epoch from shadowbday) as shadowbday, extract(epoch from enteredcurrentstatus) as enteredcurrentstatus, numrestarts FROM procads_horizontal WHERE scheddname=\'%s\' %s ORDER BY cluster_id, proc_id;", scheddname, procpredicate.Value() );
 
-		procAds_ver_query.sprintf(
+		procAds_ver_query.formatstr(
 	"SELECT cluster_id, proc_id, attr, val FROM procads_vertical WHERE scheddname=\'%s\' %s ORDER BY cluster_id, proc_id;", 
 			scheddname, procpredicate.Value() );
 
-		clusterAds_hor_query.sprintf(
+		clusterAds_hor_query.formatstr(
 			"SELECT cluster_id, owner, jobstatus, jobprio, imagesize, extract(epoch from qdate) as qdate, remoteusercpu, remotewallclocktime, cmd, args, jobuniverse FROM clusterads_horizontal WHERE scheddname=\'%s\' %s ORDER BY cluster_id;", scheddname, clusterpredicate.Value());
 
-		clusterAds_ver_query.sprintf(
+		clusterAds_ver_query.formatstr(
 		"SELECT cluster_id, attr, val FROM clusterads_vertical WHERE scheddname=\'%s\' %s ORDER BY cluster_id;", scheddname, clusterpredicate.Value());	
 	}
 
@@ -746,7 +746,7 @@
 
 	const char *dataptr = PQgetvalue(historyHorRes, row - historyHorFirstRowIndex, col);
 	if(QUILLPP_HistoryHorIsQuoted[col]) {
-		bufferedResult.sprintf("\"%s\"", dataptr);
+		bufferedResult.formatstr("\"%s\"", dataptr);
 		*value =  bufferedResult.Value();
 	} else {
 		*value = dataptr;
@@ -801,7 +801,7 @@
 	if(PQgetisnull(procAdsHorRes, row, col)) { return NULL; }
 
 	if(proc_field_is_quoted[col]) {
-		bufferedResult.sprintf("\"%s\"", dataptr);
+		bufferedResult.formatstr("\"%s\"", dataptr);
 		return bufferedResult.Value();
 	} else {
 		return dataptr;
@@ -824,7 +824,7 @@
 	if(PQgetisnull(clusterAdsHorRes, row, col)) { return NULL; }
 
 	if(cluster_field_is_quoted[col]) {
-		bufferedResult.sprintf("\"%s\"", dataptr);
+		bufferedResult.formatstr("\"%s\"", dataptr);
 		return bufferedResult.Value();
 	} else {
 		return dataptr;
diff -r -u condor-8.0.5.orig/src/condor_utils/user_job_policy.cpp condor-8.0.5/src/condor_utils/user_job_policy.cpp
--- condor-8.0.5.orig/src/condor_utils/user_job_policy.cpp	2013-12-02 20:25:26.000000000 +0100
+++ condor-8.0.5/src/condor_utils/user_job_policy.cpp	2014-01-02 09:23:55.000000000 +0100
@@ -314,7 +314,7 @@
 		enabled. */
 	ExprTree *ph_expr = suspect->LookupExpr(ATTR_PERIODIC_HOLD_CHECK);
 	ExprTree *pr_expr = suspect->LookupExpr(ATTR_PERIODIC_REMOVE_CHECK);
-	ExprTree *pl_expr = suspect->LookupExpr(ATTR_PERIODIC_REMOVE_CHECK);
+	ExprTree *pl_expr = suspect->LookupExpr(ATTR_PERIODIC_RELEASE_CHECK);
 	ExprTree *oeh_expr = suspect->LookupExpr(ATTR_ON_EXIT_HOLD_CHECK);
 	ExprTree *oer_expr = suspect->LookupExpr(ATTR_ON_EXIT_REMOVE_CHECK);
 
