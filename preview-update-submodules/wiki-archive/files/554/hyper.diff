diff --git a/src/condor_sysapi/ncpus.cpp b/src/condor_sysapi/ncpus.cpp
index db0f396..8186c03 100644
--- a/src/condor_sysapi/ncpus.cpp
+++ b/src/condor_sysapi/ncpus.cpp
@@ -39,12 +39,53 @@
 #if defined(LINUX)
 static void ncpus_linux( int *num_cpus,int *num_hyperthread_cpus );
 #endif
+SYSTEM_LOGICAL_PROCESSOR_INFORMATION test;
 
+#ifdef WIN32
+/*
+#if _WIN32_WINNT < _WIN32_WINNT_WS03
+typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION {
+  ULONG_PTR                      ProcessorMask;
+  LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
+  union {
+    struct {
+      BYTE Flags;
+    } ProcessorCore;
+    struct {
+      DWORD NodeNumber;
+    } NumaNode;
+    CACHE_DESCRIPTOR Cache;
+    ULONGLONG        Reserved[2];
+  };
+} SYSTEM_LOGICAL_PROCESSOR_INFORMATION, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;
+#endif
+*/
+typedef BOOL (WINAPI *LPFN_GLPI)(
+    PSYSTEM_LOGICAL_PROCESSOR_INFORMATION, 
+    PDWORD);
+#endif
+
+#ifdef WIN32
+static DWORD CountSetBits(ULONG_PTR bitMask)
+{
+    DWORD LSHIFT = sizeof(ULONG_PTR)*8 - 1;
+    DWORD bitSetCount = 0;
+    ULONG_PTR bitTest = (ULONG_PTR)1 << LSHIFT;    
+    DWORD i;
+    
+    for (i = 0; i <= LSHIFT; ++i)
+    {
+        bitSetCount += ((bitMask & bitTest)?1:0);
+        bitTest/=2;
+    }
+
+    return bitSetCount;
+}
+#endif
 
 void
 sysapi_ncpus_raw_no_param(int *num_cpus,int *num_hyperthread_cpus)
 {
-
 	{
 #if defined(sequent)
 	int     cpus = 0;
@@ -76,10 +117,76 @@ sysapi_ncpus_raw_no_param(int *num_cpus,int *num_hyperthread_cpus)
 	if( num_cpus ) *num_cpus = cpus;
 	if( num_hyperthread_cpus ) *num_hyperthread_cpus = cpus;
 #elif defined(WIN32)
-	SYSTEM_INFO info;
-	GetNativeSystemInfo(&info);
-	if( num_cpus ) *num_cpus = info.dwNumberOfProcessors;
-	if( num_hyperthread_cpus ) *num_hyperthread_cpus = info.dwNumberOfProcessors;
+	if(!_sysapi_count_hyperthread_cpus)
+	{
+		LPFN_GLPI glpi;
+		DWORD rc;
+		DWORD returnLength;
+		int byteOffset = 0;
+		int coreCount = 0;
+		int logicalCoreCount = 0;
+		bool done = false;
+		PSYSTEM_LOGICAL_PROCESSOR_INFORMATION buffer = NULL;
+		PSYSTEM_LOGICAL_PROCESSOR_INFORMATION info = NULL;
+		glpi = (LPFN_GLPI) GetProcAddress(
+                            GetModuleHandle(TEXT("kernel32")),
+                            "GetLogicalProcessorInformation");
+		if(glpi == NULL)
+		{
+			EXCEPT("Error: To count physical processors while taking into account hyperthreading requires Windows XP SP3 or Windows Server 2003 SP1 or higher.\n");
+		}
+		while(!done)
+		{
+			rc = glpi(buffer, &returnLength);
+			if(rc == FALSE)
+			{
+				if(GetLastError() == ERROR_INSUFFICIENT_BUFFER)
+				{
+					if(buffer)
+						free(buffer);
+					buffer = (PSYSTEM_LOGICAL_PROCESSOR_INFORMATION)malloc(returnLength);
+					if(!buffer)
+						EXCEPT("Error: Failed to allocate space for SYSTEM_LOGICAL_PROCESSOR_INFORMATION\n");
+				}
+				else
+				{
+					EXCEPT("Error: Failed to call GetLogicalProcessorInformation: %d\n", GetLastError());
+				}
+			}
+			else
+			{
+				done = true;
+			}
+		}
+
+		info = buffer;
+
+		while(byteOffset + sizeof(SYSTEM_LOGICAL_PROCESSOR_INFORMATION) <= returnLength)
+		{
+			switch(info->Relationship)
+			{
+			case RelationProcessorCore:
+				coreCount++;
+				logicalCoreCount += CountSetBits(info->ProcessorMask);
+				break;
+			default:
+				break;
+			}
+
+			byteOffset += sizeof(SYSTEM_LOGICAL_PROCESSOR_INFORMATION);
+			info++;
+		}
+
+		if( num_cpus ) *num_cpus = coreCount;
+		if( num_hyperthread_cpus ) *num_hyperthread_cpus = logicalCoreCount;
+	}
+	else
+	{
+		SYSTEM_INFO info;
+		GetNativeSystemInfo(&info);
+		if( num_cpus ) *num_cpus = info.dwNumberOfProcessors;
+		if( num_hyperthread_cpus ) *num_hyperthread_cpus = info.dwNumberOfProcessors;
+	}
 #elif defined(LINUX)
 	ncpus_linux(num_cpus,num_hyperthread_cpus );
 #elif defined(AIX)
@@ -111,7 +218,7 @@ sysapi_ncpus_raw(void)
 
 	sysapi_ncpus_raw_no_param(&ncpus,&nhyperthread_cpus);
 
-#ifdef LINUX
+#if defined LINUX || WIN32
 	if( _sysapi_count_hyperthread_cpus ) {
 		return nhyperthread_cpus;
 	}
diff --git a/src/condor_sysapi/reconfig.cpp b/src/condor_sysapi/reconfig.cpp
index bd08044..0bb85f9 100644
--- a/src/condor_sysapi/reconfig.cpp
+++ b/src/condor_sysapi/reconfig.cpp
@@ -55,7 +55,7 @@ int _sysapi_reserve_disk = 0;
 int _sysapi_startd_has_bad_utmp = FALSE;
 #endif
 
-#ifdef LINUX
+#if defined LINUX || WIN32
 int _sysapi_count_hyperthread_cpus = FALSE;
 #endif
 
@@ -169,7 +169,8 @@ sysapi_reconfig(void)
 
 	_sysapi_getload = param_boolean_int("SYSAPI_GET_LOADAVG",1);
 
-#ifdef LINUX
+	
+#if defined LINUX || WIN32
 	/* Should we count hyper threads? */
 	_sysapi_count_hyperthread_cpus = 
 		param_boolean_int("COUNT_HYPERTHREAD_CPUS", 1);
diff --git a/src/condor_sysapi/sysapi_externs.h b/src/condor_sysapi/sysapi_externs.h
index 2d32996..5a1a2be 100644
--- a/src/condor_sysapi/sysapi_externs.h
+++ b/src/condor_sysapi/sysapi_externs.h
@@ -85,7 +85,7 @@ extern char* _sysapi_ckptpltfrm;
 /* needed by load_avg.c */
 extern int _sysapi_getload;
 
-#ifdef LINUX
+#if defined LINUX || WIN32
 extern int _sysapi_count_hyperthread_cpus;
 #endif
 
