From e8f087f057de9bd377803bb01db15210b7afa300 Mon Sep 17 00:00:00 2001
From: Lukas Slebodnik <slebodnik@sors.com>
Date: Wed, 19 Oct 2011 17:13:07 +0200
Subject: [PATCH] Added ability to change the sleep interval before re-enabling resources
 after unsuccessful hibernation.

---
 src/condor_startd.V6/ResMgr.cpp |   15 ++++++++++++---
 src/condor_startd.V6/ResMgr.h   |    2 +-
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/src/condor_startd.V6/ResMgr.cpp b/src/condor_startd.V6/ResMgr.cpp
index 655ecd4..723f949 100644
--- a/src/condor_startd.V6/ResMgr.cpp
+++ b/src/condor_startd.V6/ResMgr.cpp
@@ -2126,11 +2126,20 @@ ResMgr::checkHibernate( void )
 	    // plug-in will know the this ad belongs to it when the
 	    // Collector invalidates it.
 	    //
-		if ( disableResources( target ) ) {
+		bool wasDisabledRes;
+		if ( wasDisabledRes = disableResources( target ) ) {
 			m_hibernation_manager->switchToTargetState( );
 		}
 #     if !defined( WIN32 )
-		sleep(10);
+		int waitTime = param_integer( "HIBERNATION_WAIT_INTERVAL", 10 );
+
+		sleep( waitTime );
+		if ( wasDisabledRes ) {
+			dprintf ( D_FULLDEBUG, "ResMgr: WARNING: All resources was "
+					"disabled and swtiched to state %s, sleep %d seconds,"
+					" but we are going to disable hibernation.\n", 
+					target.Value(), waitTime );
+		}
         m_hibernation_manager->setTargetState ( HibernatorBase::NONE );
         for ( int i = 0; i < nresources; ++i ) {
             resources[i]->enable();
@@ -2191,7 +2200,7 @@ ResMgr::cancelHibernateTimer( void )
 }
 
 
-int
+bool
 ResMgr::disableResources( const MyString &state_str )
 {
 
diff --git a/src/condor_startd.V6/ResMgr.h b/src/condor_startd.V6/ResMgr.h
index 4ef27b5..dc1027c 100644
--- a/src/condor_startd.V6/ResMgr.h
+++ b/src/condor_startd.V6/ResMgr.h
@@ -186,7 +186,7 @@ public:
 #if HAVE_HIBERNATION
 	HibernationManager const& getHibernationManager () const;
 	void updateHibernateConfiguration ();
-    int disableResources ( const MyString &state );
+    bool disableResources ( const MyString &state );
 	bool hibernating () const;
 #endif /* HAVE_HIBERNATION */
 
-- 
1.7.4.1

