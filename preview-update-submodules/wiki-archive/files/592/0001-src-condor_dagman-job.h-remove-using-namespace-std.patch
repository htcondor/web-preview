>From f543773df34a690d5b6182af98ec5465423dcfd8 Mon Sep 17 00:00:00 2001
From: Florian Weimer <fweimer@redhat.com>
Date: Tue, 10 Jul 2012 13:24:29 +0200
Subject: [PATCH 1/6] src/condor_dagman/job.h: remove using namespace std

---
 src/condor_dagman/job.cpp |   12 ++++++------
 src/condor_dagman/job.h   |    6 ++----
 2 files changed, 8 insertions(+), 10 deletions(-)

diff --git a/src/condor_dagman/job.cpp b/src/condor_dagman/job.cpp
index c984e4d..5cb012f 100644
--- a/src/condor_dagman/job.cpp
+++ b/src/condor_dagman/job.cpp
@@ -245,7 +245,7 @@ void Job::Dump ( const Dag *dag ) const {
     for (int i = 0 ; i < 3 ; i++) {
         dprintf( D_ALWAYS, "%15s: ", queue_t_names[i] );
 
-		set<JobID_t>::const_iterator qit;
+		std::set<JobID_t>::const_iterator qit;
 		for (qit = _queues[i].begin(); qit != _queues[i].end(); qit++) {
 			Job *node = dag->Dag::FindNodeByNodeID( *qit );
 			dprintf( D_ALWAYS | D_NOHEADER, "%s, ", node->GetJobName() );
@@ -482,7 +482,7 @@ Job::TerminateFailure()
 bool
 Job::Add( const queue_t queue, const JobID_t jobID )
 {
-	pair<set<JobID_t>::iterator, bool> ret;
+	std::pair<std::set<JobID_t>::iterator, bool> ret;
 
 	ret = _queues[queue].insert(jobID);
 
@@ -580,7 +580,7 @@ Job::GetStatusName() const
 bool
 Job::HasChild( Job* child ) {
 	JobID_t cid;
-	set<JobID_t>::iterator it;
+	std::set<JobID_t>::iterator it;
 
 	if( !child ) {
 		return false;
@@ -599,7 +599,7 @@ Job::HasChild( Job* child ) {
 bool
 Job::HasParent( Job* parent ) {
 	JobID_t pid;
-	set<JobID_t>::iterator it;
+	std::set<JobID_t>::iterator it;
 
 	if( !parent ) {
 		return false;
@@ -1014,8 +1014,8 @@ Job::GetPreSkip() const
 void
 Job::FixPriority(Dag& dag)
 {
-	set<JobID_t> parents = GetQueueRef(Q_PARENTS);
-	for(set<JobID_t>::iterator p = parents.begin(); p != parents.end(); ++p){
+	std::set<JobID_t> parents = GetQueueRef(Q_PARENTS);
+	for(std::set<JobID_t>::iterator p = parents.begin(); p != parents.end(); ++p){
 		Job* parent = dag.FindNodeByNodeID(*p);
 		if( parent->_hasNodePriority ) {
 			// Nothing to do if parent priority is small
diff --git a/src/condor_dagman/job.h b/src/condor_dagman/job.h
index 1615c79..a6cad3e 100644
--- a/src/condor_dagman/job.h
+++ b/src/condor_dagman/job.h
@@ -32,8 +32,6 @@
 #include "CondorError.h"
 #include <set>
 
-using namespace std;
-
 class ThrottleByCategory;
 class Dag;
 
@@ -193,7 +191,7 @@ class Job {
 	Script * _scriptPost;
 
     ///
-    inline set<JobID_t> & GetQueueRef (const queue_t queue) {
+    inline std::set<JobID_t> & GetQueueRef (const queue_t queue) {
         return _queues[queue];
     }
 
@@ -542,7 +540,7 @@ private:
 		waiting -> Jobs on which the current Job is waiting for output
     */ 
 	
-	set<JobID_t> _queues[3];
+	std::set<JobID_t> _queues[3];
 
     /*	The ID of this job.  This serves as a primary key for Jobs, where each
 		Job's ID is unique from all the rest 
-- 
1.7.7.6

