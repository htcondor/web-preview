diff --git a/src/condor_kbdd/kbdd.cpp b/src/condor_kbdd/kbdd.cpp
index 7d5b720..068a6f2 100644
--- a/src/condor_kbdd/kbdd.cpp
+++ b/src/condor_kbdd/kbdd.cpp
@@ -20,6 +20,7 @@
 #include "condor_common.h"
 #define KBDD
 #ifdef WIN32
+#pragma comment( linker, "/subsystem:windows" )
 #include "condor_daemon_core.h"
 #include "condor_debug.h"
 #include "condor_uid.h"
@@ -171,34 +172,6 @@ main_init(int, char *[])
 #endif
 }
 
-
-int
-main( int argc, char **argv )
-{
-   #ifdef WIN32
-	// t1031 - tell dprintf not to exit if it can't write to the log
-	// we have to do this before dprintf_config is called 
-	// (which happens inside dc_main), otherwise KBDD on Win32 will 
-	// except in dprintf_config if the log directory isn't writable
-	// by the current user.
-	dprintf_config_ContinueOnFailure( TRUE );
-
-	// check to see if we are running as a service, and if we are
-	// add a Run key value to the registry for HKLM so that the kbdd
-	// will run as the user whenever a user logs on.
-	//
-	hack_kbdd_registry();
-   #endif
-
-	set_mySubSystem( "KBDD", SUBSYSTEM_TYPE_DAEMON );
-
-	dc_main_init = main_init;
-	dc_main_config = main_config;
-	dc_main_shutdown_fast = main_shutdown_fast;
-	dc_main_shutdown_graceful = main_shutdown_graceful;
-	return dc_main( argc, argv );
-}
-
 #ifdef WIN32
 int WINAPI WinMain( __in HINSTANCE hInstance, __in_opt HINSTANCE hPrevInstance, __in_opt LPSTR lpCmdLine, __in int nShowCmd )
 {
@@ -352,5 +325,17 @@ static void hack_kbdd_registry()
 		} //if(regResult != ERROR_SUCCESS)
 	} //if(isService)
 }
+#else
+int
+main( int argc, char **argv )
+{
+	set_mySubSystem( "KBDD", SUBSYSTEM_TYPE_DAEMON );
+
+	dc_main_init = main_init;
+	dc_main_config = main_config;
+	dc_main_shutdown_fast = main_shutdown_fast;
+	dc_main_shutdown_graceful = main_shutdown_graceful;
+	return dc_main( argc, argv );
+}
 #endif
 
