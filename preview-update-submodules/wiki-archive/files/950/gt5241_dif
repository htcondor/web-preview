diff --git a/doc/man-pages/condor_history.tex b/doc/man-pages/condor_history.tex
index 8d83d2c..8c8e5b0 100644
--- a/doc/man-pages/condor_history.tex
+++ b/doc/man-pages/condor_history.tex
@@ -15,7 +15,7 @@
 \oOptArg{-file}{filename}
 \oOptArg{-userlog}{filename}
 \oOptArg{-format}{formatString AttributeName}
-\oOptArg{-autoformat[:tn,lVh]}{attr1 [attr2 ...]}
+\oOptArg{-autoformat[:lhVr,tng]}{attr1 [attr2 ...]}
 \oOpt{-l \Bar -long \Bar -xml} 
 \oOptArg{-match \Bar -limit}{number}
 \oOpt{cluster \Bar cluster.process \Bar owner}
@@ -78,12 +78,50 @@ file.
   \OptItem{\OptArg{-format}{formatString}{AttributeName}}{Display jobs
     with a custom format. See the \Condor{q} man page \Opt{-format} option
     for details.}
-  \OptItem{\OptArg{-autoformat[:tn,lVh]}{attr1 [attr2 ...]} 
-  or \OptArg{-af[:tn,lVh]}{attr1 [attr2 ...]}} {
-    Display attribute(s) or expression(s)
+  \OptItem{\OptArg{-autoformat[:lhVr,tng]}{attr1 [attr2 ...]} 
+  or \OptArg{-af[:lhVr,tng]}{attr1 [attr2 ...]}} {
+    (output option) Display attribute(s) or expression(s)
     formatted in a default way according to attribute types.  
-    See the \Condor{q} man page \Opt{-autoformat} option
-    for details.}
+    This option takes an arbitrary number of attribute names as arguments,
+    and prints out their values, 
+    with a space between each value and a newline character after 
+    the last value.  
+    It is like the \Opt{-format} option without format strings.
+
+    It is assumed that no attribute names begin with a dash character,
+    so that the next word that begins with dash is the 
+    start of the next option.
+    The \Opt{autoformat} option may be followed by a colon character
+    and formatting qualifiers to deviate the output formatting from
+    the default:
+
+    \textbf{l} label each field,
+
+    \textbf{h} print column headings before the first line of output,
+
+    \textbf{V} use \%V rather than \%v for formatting (string values
+    are quoted),
+
+    \textbf{r} print "raw", or unevaluated values,
+
+    \textbf{,} add a comma character after each field,
+
+    \textbf{t} add a tab character before each field instead of 
+    the default space character,
+
+    \textbf{n} add a newline character after each field,
+
+    \textbf{g} add a newline character between ClassAds, and
+    suppress spaces before each field.
+
+    Use \textbf{-af:h} to get tabular values with headings.
+
+    Use \textbf{-af:lrng} to get -long equivalent format.
+
+    The newline and comma characters may \emph{not} be used together.
+    The \textbf{l} and \textbf{h} characters may \emph{not} be used
+    together.
+    }
   \OptItem{\Opt{-l} or \Opt{-long}}{Display job ClassAds in long format.}
   \OptItem{\OptArg{-limit}{Number}}
     {Limit the number of jobs displayed to \Arg{Number}.  Same option as
diff --git a/doc/man-pages/condor_q.tex b/doc/man-pages/condor_q.tex
index 1fcb3dd..9a55bb0 100644
--- a/doc/man-pages/condor_q.tex
+++ b/doc/man-pages/condor_q.tex
@@ -310,8 +310,8 @@ the values of relevant attributes of the machine ClassAd are also displayed.
     but an attribute is still required.
     Include \Bs n to specify a line break. }
 
-  \OptItem{\OptArg{-autoformat[:tn,lVh]}{attr1 [attr2 ...]} 
-  or \OptArg{-af[:tn,lVh]}{attr1 [attr2 ...]}} {
+  \OptItem{\OptArg{-autoformat[:jlhVr,tng]}{attr1 [attr2 ...]} 
+  or \OptArg{-af[:jlhVr,tng]}{attr1 [attr2 ...]}} {
     (output option) Display attribute(s) or expression(s)
     formatted in a default way according to attribute types.  
     This option takes an arbitrary number of attribute names as arguments,
@@ -330,22 +330,34 @@ the values of relevant attributes of the machine ClassAd are also displayed.
     and formatting qualifiers to deviate the output formatting from
     the default:
 
-    \textbf{r} print unevaluated, or raw values,
+    \textbf{j} print the job ID as the first field,
+
+    \textbf{l} label each field,
+
+    \textbf{h} print column headings before the first line of output,
+
+    \textbf{V} use \%V rather than \%v for formatting (string values
+    are quoted),
+
+    \textbf{r} print "raw", or unevaluated values,
+
+    \textbf{,} add a comma character after each field,
 
     \textbf{t} add a tab character before each field instead of 
     the default space character,
 
     \textbf{n} add a newline character after each field,
 
-    \textbf{,} add a comma character after each field,
-
-    \textbf{l} label each field,
+    \textbf{g} add a newline character between ClassAds, and
+    suppress spaces before each field.
 
-    \textbf{V} use \%V rather than \%v for formatting,
+    Use \textbf{-af:h} to get tabular values with headings.
 
-    \textbf{h} print headings before the first line of output.
+    Use \textbf{-af:lrng} to get -long equivalent format.
 
     The newline and comma characters may \emph{not} be used together.
+    The \textbf{l} and \textbf{h} characters may \emph{not} be used
+    together.
     }
   \OptItem{\Opt{-analyze[:<qual>]}}{(analyze option) Perform a matchmaking 
     analysis on why the requested jobs are not running.
diff --git a/doc/man-pages/condor_status.tex b/doc/man-pages/condor_status.tex
index bcd5953..3874da4 100644
--- a/doc/man-pages/condor_status.tex
+++ b/doc/man-pages/condor_status.tex
@@ -181,35 +181,54 @@ Any number of \Arg{custom options} and \Arg{host options} may be specified.
       A format without any conversion specifiers may be specified,
       but an attribute is still required.
       Include \Bs n to specify a line break. }
-    \OptItem{\OptArg{-autoformat[:rtn,lVh]}{attr1 [attr2 ...]}} {
-      (Custom option) Display machine ClassAd attribute values 
-      formatted in a default way according to their attribute types.  
-      This option takes an arbitrary number of attribute names as arguments,
-      and prints out their values.  It is like the \Opt{-format} option,
-      but no format strings are required.
-      It is assumed that no attribute names begin with a dash character,
-      so that the next word that begins with dash is the 
-      start of the next option.
-      The \Opt{autoformat} option may be followed by a colon character
-      and formatting qualifiers:
 
-      \textbf{r} print unevaluated, or raw values,
 
-      \textbf{t} add a tab character before each field instead of 
-      the default space character,
+  \OptItem{\OptArg{-autoformat[:lhVr,tng]}{attr1 [attr2 ...]} 
+  or \OptArg{-af[:lhVr,tng]}{attr1 [attr2 ...]}} {
+    (Output option) Display attribute(s) or expression(s)
+    formatted in a default way according to attribute types.  
+    This option takes an arbitrary number of attribute names as arguments,
+    and prints out their values, 
+    with a space between each value and a newline character after 
+    the last value.  
+    It is like the \Opt{-format} option without format strings.
+    This output option does \emph{not} work in conjunction with the
+    \Opt{-run} option.
 
-      \textbf{n} add a newline character after each field,
+    It is assumed that no attribute names begin with a dash character,
+    so that the next word that begins with dash is the 
+    start of the next option.
+    The \Opt{autoformat} option may be followed by a colon character
+    and formatting qualifiers to deviate the output formatting from
+    the default:
 
-      \textbf{,} add a comma character after each field,
+    \textbf{l} label each field,
 
-      \textbf{l} label each field,
+    \textbf{h} print column headings before the first line of output,
 
-      \textbf{V} use \%V rather than \%v for formatting,
+    \textbf{V} use \%V rather than \%v for formatting (string values
+    are quoted),
 
-      \textbf{h} print headings before the first line of output.
+    \textbf{r} print "raw", or unevaluated values,
 
-      The newline and comma characters may \emph{not} be used together.
-      }
+    \textbf{,} add a comma character after each field,
+
+    \textbf{t} add a tab character before each field instead of 
+    the default space character,
+
+    \textbf{n} add a newline character after each field,
+
+    \textbf{g} add a newline character between ClassAds, and
+    suppress spaces before each field.
+
+    Use \textbf{-af:h} to get tabular values with headings.
+
+    Use \textbf{-af:lrng} to get -long equivalent format.
+
+    The newline and comma characters may \emph{not} be used together.
+    The \textbf{l} and \textbf{h} characters may \emph{not} be used
+    together.
+    }
     \OptItem{\OptArg{-target}{filename}}{(Custom option) Where evaluation
       requires a target ClassAd to evaluate against, file \Arg{filename}
       contains the target ClassAd.  }
diff --git a/doc/man-pages/condor_userprio.tex b/doc/man-pages/condor_userprio.tex
index fc08656..96b33bc 100644
--- a/doc/man-pages/condor_userprio.tex
+++ b/doc/man-pages/condor_userprio.tex
@@ -116,9 +116,6 @@ specifying an Edit Option requires the ADMINISTRATOR level of access.
   {(Display option) Display information for users who have 
   some recorded accumulated usage since the specified date.  }
 
-\OptItem{\OptArg{-af[:rtgn,lVh]}{attr1 [attr2 ...]}} {
-  (Display option) The same as \Opt{-autoformat}. }
-
 \OptItem{\Opt{-all}}
   {(Display option) Display all available fields about each group or user.}
 
@@ -126,40 +123,50 @@ specifying an Edit Option requires the ADMINISTRATOR level of access.
   {(Display option) Display information for all the users 
   who have some recorded accumulated usage.}
 
-\OptItem{\OptArg{-autoformat[:rtgn,lVh]}{attr1 [attr2 ...]}} {
-  (Display option) Modifies the display of information when using the 
-  \Opt{-long} option. 
-  Implies use of the \Opt{-modular} option and displays ClassAd attribute 
-  values formatted in a default way according to their attribute types  
-  and with attribute names consistent with the \Opt{-modular} option.
-  This option takes an arbitrary number of attribute names as arguments,
-  and prints out their values.
-  It is assumed that no attribute names begin with a dash character,
-  so that the next word that begins with dash is the 
-  start of the next option.
-  Option \Opt{-autoformat:h} gives a tabular output with column headings.
-  The \Opt{-autoformat} option may be followed by a colon character
-  and formatting qualifiers:
+  \OptItem{\OptArg{-autoformat[:lhVr,tng]}{attr1 [attr2 ...]} 
+  or \OptArg{-af[:lhVr,tng]}{attr1 [attr2 ...]}} {
+    (Display option) Display attribute(s) or expression(s)
+    formatted in a default way according to attribute types.  
+    This option takes an arbitrary number of attribute names as arguments,
+    and prints out their values, 
+    with a space between each value and a newline character after 
+    the last value.  
+    It is like the \Opt{-format} option without format strings.
+
+    It is assumed that no attribute names begin with a dash character,
+    so that the next word that begins with dash is the 
+    start of the next option.
+    The \Opt{autoformat} option may be followed by a colon character
+    and formatting qualifiers to deviate the output formatting from
+    the default:
+
+    \textbf{l} label each field,
+
+    \textbf{h} print column headings before the first line of output,
 
-  \textbf{r} print unevaluated, or raw values,
+    \textbf{V} use \%V rather than \%v for formatting (string values
+    are quoted),
 
-  \textbf{t} add a tab character before each field instead of 
-  the default space character,
+    \textbf{r} print "raw", or unevaluated values,
 
-  \textbf{g} inject a newline between ClassAds,
+    \textbf{,} add a comma character after each field,
 
-  \textbf{n} add a newline character after each field,
+    \textbf{t} add a tab character before each field instead of 
+    the default space character,
 
-  \textbf{,} add a comma character after each field,
+    \textbf{n} add a newline character after each field,
 
-  \textbf{l} label each field,
+    \textbf{g} add a newline character between ClassAds, and
+    suppress spaces before each field.
 
-  \textbf{V} use \%V formatting, where string values are quoted,
+    Use \textbf{-af:h} to get tabular values with headings.
 
-  \textbf{h} print headings before the first line of output.
+    Use \textbf{-af:lrng} to get -long equivalent format.
 
-  The newline and comma characters may \emph{not} be used together.
-  }
+    The newline and comma characters may \emph{not} be used together.
+    The \textbf{l} and \textbf{h} characters may \emph{not} be used
+    together.
+    }
 
 \OptItem{\OptArg{-constraint}{<expr>}}
   {(Display option) To be used in conjunction with the \Opt{-long} 
diff --git a/doc/man-pages/condor_who.tex b/doc/man-pages/condor_who.tex
index a7a2001..439fe41 100644
--- a/doc/man-pages/condor_who.tex
+++ b/doc/man-pages/condor_who.tex
@@ -105,35 +105,50 @@ then \Condor{who} searches using this ordering:
       A format without any conversion specifiers may be specified,
       but an attribute is still required.
       Include \Bs n to specify a line break. }
-    \OptItem{\OptArg{-autoformat[:rtn,lVh]}{attr1 [attr2 ...]}} {
-      (display option) Display machine ClassAd attribute values 
-      formatted in a default way according to their attribute types.  
-      This option takes an arbitrary number of attribute names as arguments,
-      and prints out their values.  It is like the \Opt{-format} option,
-      but no format strings are required.
-      It is assumed that no attribute names begin with a dash character,
-      so that the next word that begins with dash is the 
-      start of the next option.
-      The \Opt{autoformat} option may be followed by a colon character
-      and formatting qualifiers:
+  \OptItem{\OptArg{-autoformat[:lhVr,tng]}{attr1 [attr2 ...]} 
+  or \OptArg{-af[:lhVr,tng]}{attr1 [attr2 ...]}} {
+    (display option) Display attribute(s) or expression(s)
+    formatted in a default way according to attribute types.  
+    This option takes an arbitrary number of attribute names as arguments,
+    and prints out their values, 
+    with a space between each value and a newline character after 
+    the last value.  
+    It is like the \Opt{-format} option without format strings.
 
-      \textbf{r} print unevaluated, or raw values,
+    It is assumed that no attribute names begin with a dash character,
+    so that the next word that begins with dash is the 
+    start of the next option.
+    The \Opt{autoformat} option may be followed by a colon character
+    and formatting qualifiers to deviate the output formatting from
+    the default:
 
-      \textbf{t} add a tab character before each field instead of 
-      the default space character,
+    \textbf{l} label each field,
 
-      \textbf{n} add a newline character after each field,
+    \textbf{h} print column headings before the first line of output,
 
-      \textbf{,} add a comma character after each field,
+    \textbf{V} use \%V rather than \%v for formatting (string values
+    are quoted),
 
-      \textbf{l} label each field,
+    \textbf{r} print "raw", or unevaluated values,
 
-      \textbf{V} use \%V rather than \%v for formatting,
+    \textbf{,} add a comma character after each field,
 
-      \textbf{h} print headings before the first line of output.
+    \textbf{t} add a tab character before each field instead of 
+    the default space character,
 
-      The newline and comma characters may \emph{not} be used together.
-      }
+    \textbf{n} add a newline character after each field,
+
+    \textbf{g} add a newline character between ClassAds, and
+    suppress spaces before each field.
+
+    Use \textbf{-af:h} to get tabular values with headings.
+
+    Use \textbf{-af:lrng} to get -long equivalent format.
+
+    The newline and comma characters may \emph{not} be used together.
+    The \textbf{l} and \textbf{h} characters may \emph{not} be used
+    together.
+    }
 \end{Options}
 
 \Examples
diff --git a/src/condor_q.V6/queue.cpp b/src/condor_q.V6/queue.cpp
index 2de960c..c51d581 100644
--- a/src/condor_q.V6/queue.cpp
+++ b/src/condor_q.V6/queue.cpp
@@ -2996,10 +2996,10 @@ usage (const char *myName, int other)
 		"\t        h   attribute column headings\n"
 		"\t        V   %%V formatting (string values are quoted)\n"
 		"\t        r   %%r formatting (raw/unparsed values)\n"
-		"\t        t   tab before each value (default is space)\n"
-		"\t        g   newline between ClassAds, no space before values\n"
 		"\t        ,   comma after each value\n"
+		"\t        t   tab before each value (default is space)\n"
 		"\t        n   newline after each value\n"
+		"\t        g   newline between ClassAds, no space before values\n"
 		"\t    use -af:h to get tabular values with headings\n"
 		"\t    use -af:lrng to get -long equivalant format\n"
 		"\t-format <fmt> <attr>\tPrint attribute attr using format fmt\n"
diff --git a/src/condor_status.V6/status.cpp b/src/condor_status.V6/status.cpp
index aa1642a..9014399 100644
--- a/src/condor_status.V6/status.cpp
+++ b/src/condor_status.V6/status.cpp
@@ -770,15 +770,14 @@ usage ()
 		"\t-af[:lhVr,tng] <attr> [attr2 [...]]\n"
 		"\t    Print attr(s) with automatic formatting\n"
 		"\t    the [lhVr,tng] options modify the formatting\n"
-		"\t        j   Display Job id\n"
 		"\t        l   attribute labels\n"
 		"\t        h   attribute column headings\n"
 		"\t        V   %%V formatting (string values are quoted)\n"
 		"\t        r   %%r formatting (raw/unparsed values)\n"
-		"\t        t   tab before each value (default is space)\n"
-		"\t        g   newline between ClassAds, no space before values\n"
 		"\t        ,   comma after each value\n"
+		"\t        t   tab before each value (default is space)\n"
 		"\t        n   newline after each value\n"
+		"\t        g   newline between ClassAds, no space before values\n"
 		"\t    use -af:h to get tabular values with headings\n"
 		"\t    use -af:lrng to get -long equivalant format\n"
 		"\t-print-format <file>\tUse <file> to set display attributes and formatting\n"
diff --git a/src/condor_tools/history.cpp b/src/condor_tools/history.cpp
index af437b4..9e99808 100644
--- a/src/condor_tools/history.cpp
+++ b/src/condor_tools/history.cpp
@@ -80,18 +80,20 @@ void Usage(char* name, int iExitCode)
 		"\t-long\t\t\tDisplay entire classads\n"
 		"\t-wide[:<width>]\tcon\tDon't truncate fields to fit into 80 columns\n"
 		"\t-format <fmt> <attr>\tDisplay attr using printf formatting\n"
-		"\t-autoformat[:lhVr,tng] <attr> [<attr2 ...]   Display attr(s) with automatic formatting\n"
-		"\t-af[:lhVr,tng] <attr> [<attr2 ...]\t    Same as -autoformat above\n"
-		"\t    where the [lhVr,tng] options influence the automatic formatting:\n"
-		"\t    l\tattribute labels\n"
-		"\t    h\tattribute column headings\n"
-		"\t    V\t%%V formatting (string values are quoted)\n"
-		"\t    r\t%%r formatting (raw/unparsed values)\n"
-		"\t    t\ttab before each value (default is space)\n"
-		"\t    g\tnewline between ClassAds, no space before values\n"
-		"\t    ,\tcomma after each value\n"
-		"\t    n\tnewline after each value\n"
+		"\t-autoformat[:lhVr,tng] <attr> [<attr2> [...]]\n"
+		"\t-af[:lhVr,tng] <attr> [attr2 [...]]\n"
+		"\t    Print attr(s) with automatic formatting\n"
+		"\t    the [lhVr,tng] options modify the formatting\n"
+		"\t        l   attribute labels\n"
+		"\t        h   attribute column headings\n"
+		"\t        V   %%V formatting (string values are quoted)\n"
+		"\t        r   %%r formatting (raw/unparsed values)\n"
+		"\t        ,   comma after each value\n"
+		"\t        t   tab before each value (default is space)\n"
+		"\t        n   newline after each value\n"
+		"\t        g   newline between ClassAds, no space before values\n"
 		"\t    use -af:h to get tabular values with headings\n"
+		"\t    use -af:lrng to get -long equivalant format\n"
 		"\t-print-format <file>\tUse <file> to specify the attributes and formatting\n"
 		"\t\t\t\t(experimental, see htcondor-wiki for more information)\n"
 		, name);
diff --git a/src/condor_tools/user_prio.cpp b/src/condor_tools/user_prio.cpp
index b03ee2a..a1b41df 100644
--- a/src/condor_tools/user_prio.cpp
+++ b/src/condor_tools/user_prio.cpp
@@ -1643,19 +1643,20 @@ static void usage(char* name) {
      "\t  -modular\t\tCauses -long to show a classad per userprio record\n"
      "\t-constraint <expr>\tDisplay users/groups that match <expr>\n"
      "\t\t\t\twhen used with -long -modular or -autoformat\n"
-     "\t-autoformat[:lhVr,tng] <attr> [<attr2 ...]   Display attr(s) with automatic\n"
-     "\t      formatting. (Use attribute names consistent with -modular output)\n"
-     "\t-af[:lhVr,tng] <attr> [<attr2 ...]\t    Same as -autoformat above\n"
-     "\t    where the [lhVr,tng] options influence the automatic formatting:\n"
-     "\t    l\tattribute labels\n"
-     "\t    h\tattribute column headings\n"
-     "\t    V\t%%V formatting (string values are quoted)\n"
-     "\t    r\t%%r formatting (raw/unparsed values)\n"
-     "\t    t\ttab before each value (default is space)\n"
-     "\t    g\tnewline between ClassAds, no space before values\n"
-     "\t    ,\tcomma after each value\n"
-     "\t    n\tnewline after each value\n"
+     "\t-autoformat[:lhVr,tng] <attr> [<attr2> [...]]\n"
+     "\t-af[:lhVr,tng] <attr> [attr2 [...]]\n"
+     "\t    Print attr(s) with automatic formatting\n"
+     "\t    the [lhVr,tng] options modify the formatting\n"
+     "\t        l   attribute labels\n"
+     "\t        h   attribute column headings\n"
+     "\t        V   %%V formatting (string values are quoted)\n"
+     "\t        r   %%r formatting (raw/unparsed values)\n"
+     "\t        ,   comma after each value\n"
+     "\t        t   tab before each value (default is space)\n"
+     "\t        n   newline after each value\n"
+     "\t        g   newline between ClassAds, no space before values\n"
      "\t    use -af:h to get tabular values with headings\n"
+     "\t    use -af:lrng to get -long equivalant format\n"
      , name );
   exit(1);
 }
diff --git a/src/condor_who/who.cpp b/src/condor_who/who.cpp
index cd329f0..a27e639 100644
--- a/src/condor_who/who.cpp
+++ b/src/condor_who/who.cpp
@@ -197,13 +197,21 @@ void usage(bool and_exit)
 		"\t-l[ong]\t\t\tDisplay entire classads\n"
 		"\t-w[ide]\t\t\tdon't truncate fields to fit the screen\n"
 		"\t-f[ormat] <fmt> <attr>\tPrint attribute with a format specifier\n"
-		"\t-a[uto]f[ormat]:[V,ntlh] <attr> [<attr2> [<attr3> [...]]\n\t\t\t\tPrint attr(s) with automatic formatting\n"
-		"\t\tV\tUse %%V formatting\n"
-		"\t\t,\tComma separated (default is space separated)\n"
-		"\t\tt\tTab separated\n"
-		"\t\tn\tNewline after each attribute\n"
-		"\t\tl\tLabel each value\n"
-		"\t\th\tHeadings\n"
+
+		"\t-autoformat[:lhVr,tng] <attr> [<attr2> [...]]\n"
+		"\t-af[:lhVr,tng] <attr> [attr2 [...]]\n"
+		"\t    Print attr(s) with automatic formatting\n"
+		"\t    the [lhVr,tng] options modify the formatting\n"
+		"\t        l   attribute labels\n"
+		"\t        h   attribute column headings\n"
+		"\t        V   %%V formatting (string values are quoted)\n"
+		"\t        r   %%r formatting (raw/unparsed values)\n"
+		"\t        ,   comma after each value\n"
+		"\t        t   tab before each value (default is space)\n"
+		"\t        n   newline after each value\n"
+		"\t        g   newline between ClassAds, no space before values\n"
+		"\t    use -af:h to get tabular values with headings\n"
+		"\t    use -af:lrng to get -long equivalant format\n"
 		, App.Name);
 	if (and_exit)
 		exit( 1 );
