diff --git a/src/condor_dagman/dag.cpp b/src/condor_dagman/dag.cpp
index bf11a6f..af81987 100644
--- a/src/condor_dagman/dag.cpp
+++ b/src/condor_dagman/dag.cpp
@@ -1701,7 +1701,7 @@ Dag::PrintReadyQ( debug_level_t level ) const {
 // that is now in schedd.cpp.  We are keeping this here for now in case
 // someone needs to run a 7.5.6 DAGMan with an older schedd.
 // wenger 2011-01-26
-void Dag::RemoveRunningJobs ( const Dagman &dm) const {
+void Dag::RemoveRunningJobs ( const Dagman &dm, bool bForce) const {
 
 	debug_printf( DEBUG_NORMAL, "Removing any/all submitted Condor/"
 				"Stork jobs...\n");
@@ -1711,7 +1711,7 @@ void Dag::RemoveRunningJobs ( const Dagman &dm) const {
 		// first, remove all Condor jobs submitted by this DAGMan
 		// Make sure we have at least one Condor (not Stork) job before
 		// we call condor_rm...
-	bool	haveCondorJob = false;
+	bool	haveCondorJob = bForce;
     ListIterator<Job> jobList(_jobs);
     Job * job;
     while (jobList.Next(job)) {
@@ -1736,6 +1736,7 @@ void Dag::RemoveRunningJobs ( const Dagman &dm) const {
 			debug_printf( DEBUG_NORMAL, "Error removing DAGMan jobs\n");
 		}
 	}
+		
 
 		// Okay, now remove any Stork jobs.
     ListIterator<Job> iList(_jobs);
diff --git a/src/condor_dagman/dag.h b/src/condor_dagman/dag.h
index 0cb646f..696c6fd 100644
--- a/src/condor_dagman/dag.h
+++ b/src/condor_dagman/dag.h
@@ -422,7 +422,7 @@ class Dag {
         condor_rm.  This function <b>is not</b> called when the schedd
         kills Dagman.
     */
-    void RemoveRunningJobs ( const Dagman & ) const;
+    void RemoveRunningJobs ( const Dagman &, bool bForce=false) const;
 
     /** Remove all pre- and post-scripts that are currently running.
 	All currently running scripts will be killed via daemoncore.
diff --git a/src/condor_dagman/dagman_main.cpp b/src/condor_dagman/dagman_main.cpp
index f77a194..f1ead3a 100644
--- a/src/condor_dagman/dagman_main.cpp
+++ b/src/condor_dagman/dagman_main.cpp
@@ -1012,7 +1012,11 @@ void main_init (int argc, char ** const argv) {
 							dagman.multiDags, dagman.maxRescueDagNum,
 							true );
 			}
-
+			
+			dagman.dag->RemoveRunningJobs(dagman, true);
+			unlink( lockFileName );
+			dagman.CleanUp();
+			
 				// Note: debug_error calls DC_Exit().
         	debug_error( 1, DEBUG_QUIET, "Failed to parse %s\n",
 					 	dagFile );
