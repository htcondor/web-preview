From 66006fe07c593aca77152beaf46ca0f378c5fc0f Mon Sep 17 00:00:00 2001
From: Lukas Slebodnik <slebodnik@sors.com>
Date: Thu, 13 Oct 2011 08:28:20 +0200
Subject: [PATCH] StartdHibernator should use HIBERNATION_PLUGIN_ARGS in initialization

---
 src/condor_startd.V6/startd_hibernator.cpp |   22 +++++++++++++++++++---
 1 files changed, 19 insertions(+), 3 deletions(-)

diff --git a/src/condor_startd.V6/startd_hibernator.cpp b/src/condor_startd.V6/startd_hibernator.cpp
index 9e4a693..ec4a458 100644
--- a/src/condor_startd.V6/startd_hibernator.cpp
+++ b/src/condor_startd.V6/startd_hibernator.cpp
@@ -88,14 +88,30 @@ StartdHibernator::update( void )
 bool
 StartdHibernator::initialize( void )
 {
-	char	*args [] =
-		{ const_cast<char*>(m_plugin_path.Value()), "ad", NULL};
+	ArgList	argList;
+	argList.AppendArg( m_plugin_path.Value() );
 
+	if ( m_plugin_args ) {
+		m_plugin_args->rewind();
+		char	*tmp;
+		while( ( tmp = m_plugin_args->next() ) != NULL ) {
+			argList.AppendArg( tmp );
+		}
+	}
+
+	argList.AppendArg( "ad" );
 
 		// Run the plugin with the "ad" option,
 		// and grab the output as a ClassAd
 	m_ad.Clear();
-	FILE *fp = my_popenv( args, "r", FALSE );
+	char **args = argList.GetStringArray();
+	FILE *fp = my_popenv( args, "r", TRUE );
+	deleteStringArray( args );
+
+	MyString	cmd;
+	argList.GetArgsStringForDisplay( &cmd );
+	dprintf( D_FULLDEBUG,
+			 "Initially invoking hibernation plugin '%s'\n", cmd.Value() );
 
 	if( ! fp ) {
 		dprintf( D_ALWAYS, "Failed to run hibernation plugin '%s ad'\n",
-- 
1.7.4.1

