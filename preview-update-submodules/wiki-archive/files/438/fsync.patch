diff --git a/src/condor_io/cedar_no_ckpt.cpp b/src/condor_io/cedar_no_ckpt.cpp
index 79a8f51..a06a465 100644
--- a/src/condor_io/cedar_no_ckpt.cpp
+++ b/src/condor_io/cedar_no_ckpt.cpp
@@ -44,6 +44,7 @@
 #include "condor_netdb.h"
 #include "internet.h"
 #include "ipv6_hostname.h"
+#include "condor_fsync.h"
 
 #ifdef WIN32
 #include <mswsock.h>	// For TransmitFile()
@@ -225,7 +226,7 @@ ReliSock::get_file( filesize_t *size, int fd,
 	}
 
 	if (flush_buffers && fd != GET_FILE_NULL_FD ) {
-		fsync(fd);
+		condor_fsync(fd);
 	}
 
 	if( fd == GET_FILE_NULL_FD ) {
@@ -598,7 +599,7 @@ ReliSock::get_x509_delegation( filesize_t *size, const char *destination,
 		if ( fd < 0 ) {
 			rc = fd;
 		} else {
-			rc = fsync( fd );
+			rc = condor_fsync( fd, destination );
 			::close( fd );
 		}
 		if ( rc < 0 ) {
diff --git a/src/condor_utils/classad_log.cpp b/src/condor_utils/classad_log.cpp
index 0915f41..a6441c7 100644
--- a/src/condor_utils/classad_log.cpp
+++ b/src/condor_utils/classad_log.cpp
@@ -27,6 +27,7 @@
 #include "condor_debug.h"
 #include "util_lib_proto.h"
 #include "classad_merge.h"
+#include "condor_fsync.h"
 
 #if defined(HAVE_DLOPEN)
 #include "ClassAdLogPlugin.h"
@@ -203,7 +204,7 @@ ClassAdLog::AppendLog(LogRecord *log)
 					EXCEPT("flush to %s failed, errno = %d", logFilename(), errno);
 				}
 					//MD: syncing the data as done before
-				if (fsync(fileno(log_fp)) < 0) {
+				if (condor_fsync(fileno(log_fp)) < 0) {
 					EXCEPT("fsync of %s failed, errno = %d", logFilename(), errno);
 				}
 			}
@@ -642,7 +643,7 @@ ClassAdLog::LogState(FILE *fp)
 	if (fflush(fp) !=0){
 	  EXCEPT("fflush of %s failed, errno = %d", logFilename(), errno);
 	}
-	if (fsync(fileno(fp)) < 0) {
+	if (condor_fsync(fileno(fp)) < 0) {
 		EXCEPT("fsync of %s failed, errno = %d", logFilename(), errno);
 	} 
 }
diff --git a/src/condor_utils/condor_config.cpp b/src/condor_utils/condor_config.cpp
index 97167ae..03d4b91 100644
--- a/src/condor_utils/condor_config.cpp
+++ b/src/condor_utils/condor_config.cpp
@@ -120,6 +120,7 @@ static ExtraParamTable *extra_info = NULL;
 static char* tilde = NULL;
 extern DLL_IMPORT_MAGIC char **environ;
 static bool have_config_source = true;
+extern bool fsync_on;
 
 MyString global_config_source;
 StringList local_config_sources;
@@ -832,6 +833,9 @@ real_config(char* host, int wantsQuiet, bool wantExtraInfo)
 
 	ConfigConvertDefaultIPToSocketIP();
 
+	// Configure condor_fsync
+	fsync_on = param_boolean("CONDOR_FSYNC", true);
+
 	(void)SetSyscalls( scm );
 }
 
diff --git a/src/condor_utils/libcondorapi_stubs.cpp b/src/condor_utils/libcondorapi_stubs.cpp
index 0b87a9f..0f8a8ba 100644
--- a/src/condor_utils/libcondorapi_stubs.cpp
+++ b/src/condor_utils/libcondorapi_stubs.cpp
@@ -106,6 +106,11 @@ static int not_impl(void)
 	return -1;
 }
 
+int condor_fsync(int, const char*)
+{
+	return 0;
+}
+
 BEGIN_C_DECLS
 void
 config( int, bool )
diff --git a/src/condor_utils/log_transaction.cpp b/src/condor_utils/log_transaction.cpp
index 5ace2ca..003a504 100644
--- a/src/condor_utils/log_transaction.cpp
+++ b/src/condor_utils/log_transaction.cpp
@@ -23,6 +23,7 @@
 #include "condor_debug.h"
 #include "condor_config.h"
 #include "condor_mkstemp.h"
+#include "condor_fsync.h"
 
 #define TRANSACTION_HASH_LEN 10000
 
@@ -336,7 +337,7 @@ fsync_with_status(stream_with_status_t* s)
        fileno.  Whether or not this is the right thing to do, it's at
        least backwards-compatible. */
 
-	if (fsync(fd) < 0) {
+	if (condor_fsync(fd) < 0) {
 	  s->why = WHY_FSYNC;
 	  s->err = errno;
 	  return -1;
diff --git a/src/condor_utils/write_user_log.cpp b/src/condor_utils/write_user_log.cpp
index ccaf239..add5947 100644
--- a/src/condor_utils/write_user_log.cpp
+++ b/src/condor_utils/write_user_log.cpp
@@ -48,6 +48,7 @@
 #include "stat_wrapper.h"
 #include "file_lock.h"
 #include "user_log_header.h"
+#include "condor_fsync.h"
 
 // Set to non-zero to enable fine-grained rotation debugging / timing
 #define ROTATION_TRACE	0
@@ -1121,7 +1122,10 @@ WriteUserLog::doWriteEvent( ULogEvent *event,
 	if ( (   is_global_event  && m_global_fsync_enable ) ||
 		 ( (!is_global_event) && m_enable_fsync ) ) {
 		before = time(NULL);
-		if ( fsync( fileno( fp ) ) != 0 ) {
+		char *fname;
+		if ( is_global_event ) fname = m_global_path;
+		else fname = m_path;
+		if ( condor_fsync( fileno( fp ), fname ) != 0 ) {
 		  dprintf( D_ALWAYS,
 				   "fsync() failed in WriteUserLog::writeEvent"
 				   " - errno %d (%s)\n",
