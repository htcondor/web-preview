commit d4c54e48ec8f0f773a4cf1e6f62d84911bc5092a
Author: Dan Bradley <dan@hep.wisc.edu>
Date:   Wed Jun 13 17:12:57 2012 -0500

    Add QUEUE_SUPER_USER_MAY_IMPERSONATE. #3030
    
    This is needed when routing jobs from one schedd to another,
    when the JobRouter is running as root and the target schedd
    has never had jobs submitted to it by the owner of the jobs
    that are being routed.

diff --git a/src/condor_schedd.V6/qmgmt.cpp b/src/condor_schedd.V6/qmgmt.cpp
index ecf412d..21646d4 100644
--- a/src/condor_schedd.V6/qmgmt.cpp
+++ b/src/condor_schedd.V6/qmgmt.cpp
@@ -101,6 +101,7 @@ static int cluster_initial_val = 1;		// first cluster number to use
 static int cluster_increment_val = 1;	// increment for cluster numbers of successive submissions 
 static int cluster_maximum_val = 0;     // maximum cluster id (default is 0, or 'no max')
 static int job_queued_count = 0;
+static Regex *queue_super_user_may_impersonate_regex = NULL;
 
 static void AddOwnerHistory(const MyString &user);
 
@@ -563,6 +564,18 @@ InitQmgmt()
 			);
 	}
 
+	delete queue_super_user_may_impersonate_regex;
+	queue_super_user_may_impersonate_regex = NULL;
+	std::string queue_super_user_may_impersonate;
+	if( param(queue_super_user_may_impersonate,"QUEUE_SUPER_USER_MAY_IMPERSONATE") ) {
+		queue_super_user_may_impersonate_regex = new Regex;
+		const char *errptr=NULL;
+		int erroffset=0;
+		if( !queue_super_user_may_impersonate_regex->compile(queue_super_user_may_impersonate.c_str(),&errptr,&erroffset) ) {
+			EXCEPT("QUEUE_SUPER_USER_MAY_IMPERSONATE is an invalid regular expression: %s",queue_super_user_may_impersonate.c_str());
+		}
+	}
+
 	schedd_forker.Initialize();
 	int max_schedd_forkers = param_integer ("SCHEDD_QUERY_WORKERS",3,0);
 	schedd_forker.setMaxWorkers( max_schedd_forkers );
@@ -1142,6 +1155,9 @@ DestroyJobQueue( void )
 		}
 		delete [] super_users;
 	}
+
+	delete queue_super_user_may_impersonate_regex;
+	queue_super_user_may_impersonate_regex = NULL;
 }
 
 
@@ -1209,6 +1225,14 @@ SuperUserAllowedToSetOwnerTo(const MyString &user) {
 		// The JobRouter depends on this when it is running as
 		// root/condor.
 
+	if( queue_super_user_may_impersonate_regex ) {
+		if( queue_super_user_may_impersonate_regex->match(user.Value()) ) {
+			return true;
+		}
+		dprintf(D_FULLDEBUG,"Queue super user not allowed to set owner to %s, because this does not match the ALLOW_QUEUE_SUPER_USER_TO_IMPERSONATE regular expression.\n",user.Value());
+		return false;
+	}
+
 	int junk = 0;
 	if( owner_history.lookup(user,junk) != -1 ) {
 		return true;
