From 6d345ef89b6a3953d9cc15ccfab2a84805219f48 Mon Sep 17 00:00:00 2001
From: Derek Weitzel <djw8605@gmail.com>
Date: Mon, 11 Feb 2013 13:45:32 -0600
Subject: [PATCH] Append standard error user hold message for blahp startup. #3489

Appending the stderr from the blahp startup is very useful since
the error can usually be seen from the stderr.
---
 src/condor_gridmanager/gahp-client.cpp  |   27 +++++++++++++++++++++++++++
 src/condor_gridmanager/gahp-client.h    |    3 +++
 src/condor_gridmanager/infnbatchjob.cpp |    9 +++++++--
 3 files changed, 37 insertions(+), 2 deletions(-)

diff --git a/src/condor_gridmanager/gahp-client.cpp b/src/condor_gridmanager/gahp-client.cpp
index 2411e5c..f0ccd5a 100644
--- a/src/condor_gridmanager/gahp-client.cpp
+++ b/src/condor_gridmanager/gahp-client.cpp
@@ -1329,6 +1329,24 @@ GahpClient::getErrorString()
 }
 
 const char *
+GahpClient::getGahpStderr()
+{
+	static std::string output;
+
+	output = "";
+
+	for (std::list<std::string>::iterator it = server->m_gahp_error_list.begin();
+			it != server->m_gahp_error_list.end(); it++) {
+		output += *it;
+		output += "\\n";
+	}
+
+	return output.c_str();
+}
+
+
+
+const char *
 GahpClient::getVersion()
 {
 	return server->m_gahp_version;
@@ -1423,6 +1441,15 @@ GahpServer::err_pipe_ready(int  /*pipe_end*/)
 			*newline = '\0';
 			dprintf( D_FULLDEBUG, "GAHP[%d] (stderr) -> %s%s\n", m_gahp_pid,
 					 m_gahp_error_buffer.c_str(), prev_line );
+
+            // Add the stderr line to the gahp_error_queue
+            if (m_gahp_error_list.size() > 3) {
+                m_gahp_error_list.pop_front();
+            }
+            std::string errorline(m_gahp_error_buffer);
+            errorline += prev_line;
+            m_gahp_error_list.push_back(errorline);
+
 			// For a gahp running over ssh with tunneling, look for a
 			// line declaring the listen port on the remote end.
 			// For correctness, we should be checking m_gahp_errorfd
diff --git a/src/condor_gridmanager/gahp-client.h b/src/condor_gridmanager/gahp-client.h
index 839277b..ab5852e 100644
--- a/src/condor_gridmanager/gahp-client.h
+++ b/src/condor_gridmanager/gahp-client.h
@@ -31,6 +31,7 @@
 #include "condor_arglist.h"
 #include <map>
 #include <queue>
+#include <list>
 #include <string>
 
 
@@ -168,6 +169,7 @@ class GahpServer : public Service {
 	int m_gahp_writefd;
 	int m_gahp_errorfd;
 	std::string m_gahp_error_buffer;
+	std::list<std::string> m_gahp_error_list;
 	bool m_gahp_startup_failed;
 	char m_gahp_version[150];
 	StringList * m_commands_supported;
@@ -306,6 +308,7 @@ class GahpClient : public Service {
 		bool isInitialized() { return server->is_initialized; }
 
 		const char *getErrorString();
+		const char *getGahpStderr();
 
 		const char *getVersion();
 
diff --git a/src/condor_gridmanager/infnbatchjob.cpp b/src/condor_gridmanager/infnbatchjob.cpp
index eecadf4..cee474f 100644
--- a/src/condor_gridmanager/infnbatchjob.cpp
+++ b/src/condor_gridmanager/infnbatchjob.cpp
@@ -374,8 +374,10 @@ void INFNBatchJob::doEvaluateState()
 			if ( gahp->Startup() == false ) {
 				dprintf( D_ALWAYS, "(%d.%d) Error starting GAHP\n",
 						 procID.cluster, procID.proc );
+				std::string error_string = "Failed to start GAHP: ";
+				error_string += gahp->getGahpStderr();
 
-				jobAd->Assign( ATTR_HOLD_REASON, "Failed to start GAHP" );
+				jobAd->Assign( ATTR_HOLD_REASON, error_string.c_str() );
 				gmState = GM_HOLD;
 				break;
 			}
@@ -386,7 +388,10 @@ void INFNBatchJob::doEvaluateState()
 					dprintf( D_ALWAYS, "(%d.%d) Error starting transfer GAHP\n",
 							 procID.cluster, procID.proc );
 
-					jobAd->Assign( ATTR_HOLD_REASON, "Failed to start transfer GAHP" );
+					std::string error_string = "Failed to start transfer GAHP: ";
+					error_string += gahp->getGahpStderr();
+
+					jobAd->Assign( ATTR_HOLD_REASON, error_string.c_str() );
 					gmState = GM_HOLD;
 					break;
 				}
-- 
1.7.4.1

