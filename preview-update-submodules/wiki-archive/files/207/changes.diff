diff --git a/src/condor_util_lib/dprintf_config.c b/src/condor_util_lib/dprintf_config.c
index df29a0a..01f96ff 100644
--- a/src/condor_util_lib/dprintf_config.c
+++ b/src/condor_util_lib/dprintf_config.c
@@ -148,11 +148,47 @@ dprintf_config( const char *subsys )
 			// *after* the param -- param can dprintf() in some cases
 			{
 				char	*tmp = DebugFile[debug_level];
-				// This is looking up configuration options that I can't
-				// find documentation for, so intead of coding in an incorrect
-				// default value, I'm gonna use param_without_default.
-				// tristan 5/29/09
-				DebugFile[debug_level] = param_without_default(pname);
+				if(debug_level == 0 || !strcmp(pname, "NEGOTIATOR_MATCH_LOG")) {
+					char	*tmp2 = param(pname);
+
+					// No default value found, so use $(LOG)/$(SUBSYSTEM)Log
+					if(!tmp2) {
+						char *log = param("LOG");
+						char *subsys = param("SUBSYSTEM");
+						if(!log || !subsys) {
+							EXCEPT("Unable to find LOG or SUBSYSTEM.\n");
+						}
+						
+						// This malloc will never be freed, but as long as
+						// defaults are defined in condor_c++_util/param_info.in
+						// we will never get here.
+						char *str = (char*)malloc(strlen(log) + strlen(subsys) 
+							+ 5);
+						if(!strcmp(pname, "NEGOTIATOR_MATCH_LOG")) {
+							sprintf(str, "%s%c%sLog", log, DIR_DELIM_CHAR, 
+									"MATCH");
+						}
+						else {
+							sprintf(str, "%s%c%sLog", log, DIR_DELIM_CHAR, 
+									subsys);
+						}
+						DebugFile[debug_level] = str;
+
+						free(log);
+						free(subsys);
+					}
+					else {
+						DebugFile[debug_level] = tmp2;
+					}
+				}
+				else {
+					// This is looking up configuration options that I can't
+					// find documentation for, so intead of coding in an
+					// incorrect default value, I'm gonna use 
+					// param_without_default.
+					// tristan 5/29/09
+					DebugFile[debug_level] = param_without_default(pname);
+				}
 				if ( tmp ) {
 					free( tmp );
 				}
