{"id": 7094, "title": "Ticket #7094: Auto-request tokens based on missing trust domains.", "description": "<blockquote>\nEach collector should advertise its trust domain as part of the auth handshake, so the client can construct a list of unique failed trust domains, which then the client can turn into a set of collectors, each of which we contact with a token request, concurrently.\n\n<p>We should log which request went to which collector when we do this.\n\n</p><p>See <a class=\"external\" href=\"https://github.com/htcondor/htcondor/pull/50\">https://github.com/htcondor/htcondor/pull/50</a>, commit messages:\n\n</p><p></p><ul>\n<li>'Add infrastructure to determine per-daemon trust domains. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7006\" onclick=\"get_ticket_and_populate_wrapper('7006'); return false;\" title=\"Add support for a token request workflow\">#7006</a></span>'\n</li><li>'Request tokens per trust domain. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7006\" onclick=\"get_ticket_and_populate_wrapper('7006'); return false;\" title=\"Add support for a token request workflow\">#7006</a></span>'</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2019-Jun-07 11:27:58 by bbockelm:</em> <br/>\n\nCorresponding PR:\n\n<p><a class=\"external\" href=\"https://github.com/htcondor/htcondor/pull/56\">https://github.com/htcondor/htcondor/pull/56</a>\n\n</p><p></p><hr/>\n<em>2019-Jun-20 09:01:18 by bbockelm:</em> <br/>\n\nToddM sent the following review comments over email:\n\n<p></p><div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \n1.  Is the change to calc_token_requests() to actually assign the identity\n   already in #7100, or should I add it in for this ticket?\n</td></tr></tbody></table></div>\n\n\n<p>This is purposely not done yet.  There's some refactoring I promised after <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7100\" onclick=\"get_ticket_and_populate_wrapper('7100'); return false;\" title=\"Per-submitter Flocking\">#7100</a></span> (specifically to move this into daemon core as part of <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7093\" onclick=\"get_ticket_and_populate_wrapper('7093'); return false;\" title=\"Refactor/merge Scheduler:: and ResMgr:: try_token_request()\">#7093</a></span>) and I would like to do it then.  I added a reminder to that ticket.\n\n</p><p></p><div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \n2.  In Scheduler::count_jobs(), the variable you added is called blocking,\n   but the variable in DCCollector::sendUpdates() is called nonblocking;\n   this is confusing at best.\n</td></tr></tbody></table></div>\n\n\n<p>OK, will fix.\n\n</p><p></p><div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \n3.  Is the change to whether or not an update is blocking required for\n   this change to work?  (I don't see how it could be, but I'm used to be\n   wrong about HTCondor at this point.)  If not, it should be split out\n   and put in a separate.  If so, I need to understand why, especially\n   why only the first update is [non]blocking.\n\n4.  I apologize for missing it in the commits, but the question 3 applies\n   to the set of normal collectors update, as well.  (I think we all like\n   the idea of the schedd blocking less often, but in some cases there's\n   good reasons for it, apparently.)\n</td></tr></tbody></table></div>\n\n\n<p>Chatted with ToddT on this last Friday.  Right now, we can only detect authorization failures immediately afterward (I even tried examining it after the next <code>count_jobs</code>; doesn't work).  This requires either blocking or a callback on failures for the non-blocking case (daemon client work)  We plan to add a callback afterward (again, <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7093\" onclick=\"get_ticket_and_populate_wrapper('7093'); return false;\" title=\"Refactor/merge Scheduler:: and ResMgr:: try_token_request()\">#7093</a></span>) in order to avoid even more review work given there's outstanding branches that also touch this code.\n\n</p><p></p><hr/>\n<em>2019-Jun-20 14:39:47 by tlmiller:</em> <br/>\n\n<span class=\"quote\">quote</span>\n2. In Scheduler::count_jobs(), the variable you added is called blocking, but the variable in DCCollector::sendUpdates() is called nonblocking; this is confusing at best.\n\n<p>OK, will fix.\n{endquote}\n\n</p><p>I'll take care of this and get the merge done shortly.\n\n</p><p></p><hr/>\n<em>2019-Jun-20 15:03:00 by tlmiller:</em> <br/>\n\nMerged.\n\n<p></p><hr/>\n<em>2019-Jul-05 13:24:03 by tlmiller:</em> <br/>\n\nTJ discovered a serious problem with this patch: it can not be known, in <code>Daemon::startCommand_internal()</code>, if <code>sock</code> is still valid after the call to <code>sec_man-&gt;startCommand()</code>.  The code can't, therefore, generally pull <code>should_try_token_request</code> and <code>trust_domain</code> out of <code>sock</code> at that point in the code.\n\n<p>It seems like the best solution is to extend <code>Sock</code> a little so that it updates externally-managed memory when that information becomes available.  That is <code>Daemon::startCommand_internal()</code> would just do something like <code>sock-&gt;recordTokenInformationHere( trust_domain, should_try_token_request )</code> before calling <code>sec_man-&gt;startCommand()</code>, and <code>Sock</code> would do the rest.  If there's no good hook, <code>Sock</code> could instead write to an external bool when the destructor is called; if the <code>Sock</code> hasn't written that bool yet, it can be asked for the token information.\n\n</p><p>TJ has a partial fix that involves pulling <code>should_try_token_request</code> and <code>trust_domain</code> out of <code>sock</code> several layers higher in the call-chain, where it is known if the callback will destroy the socket or not.\n\n</p><p>It's possible that it's always safe to ask <code>sock</code> about tokens if <code>sec_main-&gt;startCommand()</code> returns <code>StartCommandInProgress</code>, but that seems awfully subtle and more error-prone than just having <code>Sock</code> manage the problem.\n\n</p><p></p><hr/>\n<em>2019-Jul-05 17:14:08 by johnkn:</em> <br/>\n\nNOTE: commit <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/a02b1ed08ed508d6707c63913802b51dbe45cd9e\">[57334]</a></span> leaves this ticket in a not-working state.\n\n<p></p><hr/>\n<em>2019-Jul-11 23:52:27 by bbockelm:</em> <br/>\n\nFixing the memory management piece as part of <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7093\" onclick=\"get_ticket_and_populate_wrapper('7093'); return false;\" title=\"Refactor/merge Scheduler:: and ResMgr:: try_token_request()\">#7093</a></span>.\n\n<p>Basically, we <strong>have to</strong> convert this to all nonblocking with callbacks.  At that point, the piece that invokes the callback (<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SecMan\" title=\"Sec Man\">SecMan</a></span>) already knows whether the socket is valid.\n\n</p><p>In fact, we can rip out the changes to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonList\" title=\"Daemon List\">DaemonList</a></span> since the information doesn't need to percolate through every layer -- callback is invoked directly by the lowest one.\n\n</p><p>The callback approach is absolutely required for the submitter-based flocking (and arguably for this ticket as well!).  Might as well take advantage of the fact it solves this problem as well!\n\n</p><p></p><hr/>\n<em>2019-Aug-05 22:35:19 by bbockelm:</em> <br/>\n\nPut in a first attempt at documentation for this ticket.  Todd, can you review it?\n\n<p></p><hr/>\n<em>2019-Aug-06 15:44:01 by tlmiller:</em> <br/>\n\nTo be explicit: BrianB says that <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/a02b1ed08ed508d6707c63913802b51dbe45cd9e\">[57334]</a></span> is obsoleted by <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7093\" onclick=\"get_ticket_and_populate_wrapper('7093'); return false;\" title=\"Refactor/merge Scheduler:: and ResMgr:: try_token_request()\">#7093</a></span> (now that it's done).\n\n<p></p><hr/>\n<em>2019-Aug-06 16:49:35 by tlmiller:</em> <br/>\n\n<strong>Doc Review</strong>\n\n<p>Found a few typos and other very minor tweaks, which I've already pushed.  Otherwise looks pretty good.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-06 16:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/42f3a2e29be2235f673b429229acf30c4e08ee56\">[57612]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7094\" onclick=\"get_ticket_and_populate_wrapper('7094'); return false;\" title=\"Auto-request tokens based on missing trust domains.\">#7094</a></span>) Hopefully final tweaks to token documentation.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-05 22:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/7ccab78e53c4702d6583260f2a0c38f5c5008336\">[57599]</a></span>: Fixup various token documentation. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7094\" onclick=\"get_ticket_and_populate_wrapper('7094'); return false;\" title=\"Auto-request tokens based on missing trust domains.\">#7094</a></span> <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7006\" onclick=\"get_ticket_and_populate_wrapper('7006'); return false;\" title=\"Add support for a token request workflow\">#7006</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-04 21:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c490a032bc91a0fa0c122beed6212b2752b50aca\">[57586]</a></span>: Add documentation for auto-approval and other requests. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7006\" onclick=\"get_ticket_and_populate_wrapper('7006'); return false;\" title=\"Add support for a token request workflow\">#7006</a></span> Also includes documents for <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7080\" onclick=\"get_ticket_and_populate_wrapper('7080'); return false;\" title=\"Auto-approve token rules\">#7080</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7094\" onclick=\"get_ticket_and_populate_wrapper('7094'); return false;\" title=\"Auto-request tokens based on missing trust domains.\">#7094</a></span>.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jul-05 17:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/a02b1ed08ed508d6707c63913802b51dbe45cd9e\">[57334]</a></span>: fix use after free bug in <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7094\" onclick=\"get_ticket_and_populate_wrapper('7094'); return false;\" title=\"Auto-request tokens based on missing trust domains.\">#7094</a></span>. this commit leaves the code not working as intended. a new strategy will be needed to make it work correctly and still avoid use-after-free  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jun-20 14:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/73956345c17d8f591cee8e149b2e11b788944c57\">[57208]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7094\" onclick=\"get_ticket_and_populate_wrapper('7094'); return false;\" title=\"Auto-request tokens based on missing trust domains.\">#7094</a></span>) Some pre-merge fix-ups.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jun-07 11:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/bebbc206d45f3f0d2e92f0369ab39f077603f661\">[57206]</a></span>: Various bugfixes for multi-token request branch. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7094\" onclick=\"get_ticket_and_populate_wrapper('7094'); return false;\" title=\"Auto-request tokens based on missing trust domains.\">#7094</a></span> This includes: - Improved logging to help future folks debug. - Ensure that the trust domain used is the server's, not the client's. - Keep track of the flock collectors we've never advertised to; make advertisement blocking for the first attempt.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jun-07 11:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/fb59e564ba5f5bb96937a527bdf4c63ea611c4ad\">[57205]</a></span>: Request tokens per trust domain. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7094\" onclick=\"get_ticket_and_populate_wrapper('7094'); return false;\" title=\"Auto-request tokens based on missing trust domains.\">#7094</a></span> This allows multiple token requests to be in flight, including to both the main and the flocked collectors.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jun-07 11:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/5f716f26ed98db402ba92104aac31bb056e65c9b\">[57204]</a></span>: Add infrastructure to determine per-daemon trust domains. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7094\" onclick=\"get_ticket_and_populate_wrapper('7094'); return false;\" title=\"Auto-request tokens based on missing trust domains.\">#7094</a></span> With this information, we can better infer which domains we will need a new token request for.  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-Aug-06 16:49", "status": "resolved", "created": "2019-Jun-04 14:31", "fixed_version": "2019-Jun-04 14:31", "broken_version": "", "priority": "4", "subsystem": "Security", "assigned_to": "bbockelm", "derived_from": "#7006", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}