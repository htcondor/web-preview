{"id": 312, "title": "Ticket #312: Pipe read/write limitations", "description": "<blockquote>\nWhen communicating with children via pipes, condor is subject to an OS limitation in the amount of data it can send to the child and a built in limitation to the amount of data it can read from the child.  When sending data to the child (stdin pipe), condor is subject to the Operating System's definition of the maximum pipe buffer size.  In linux, this size of 4096 prior to 2.6.11 kernels, and 64k in 2.6.11+ kernels.  This manifests itself with the Job Router hooks, where the finalize hook tries to send &gt;4k of data to the hook.  On Red Hat Enterprise Linux 4, only 4k of data will get to the child.\n\n<p>When reading data from the child (stdout,stderr), condor has a number of built in limitations:\n1) There's a hard coded limit of 10k of data.\n2) Condor will close the stdout/err pipe once it reads all data.  If a child writes data, then pauses for a period of time before outputting more data then it's likely not all data will make it to condor.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Mar-10 14:26:30 by tannenba:</em> <br/>\n\nDo you consider the patch attached below ready for a code review?  Does the patch address all the shortcomings you talk about above?  Any known limitations of the patch below, e.g. it doesn't do anything for Win32 users etc ?\n\n<p>Thanks R^2 !\n\n</p><p></p><hr/>\n<em>2009-Mar-10 14:37:18 by rrati:</em> <br/>\n\nThis patch is ready for review and should address the issues I identified, and should work on windows as well.  It uses the pre-existing pipe read/write methods, so as long as those + Register_Pipe work on windows this should as well.  Windows testing should be completed, preferably by someone more intimate with windows than myself.\n\n<p></p><hr/>\n<em>2009-Mar-26 21:43:07 by gthain:</em> <br/>\n\nOK, this is looking better.  As long as we're in here, what's really the point of DC_PIPE_BUF_SIZE (1024)?  If we're willing to store up to PIPE_BUFFER_MAX (default 10k) bytes in memory, what's the point of only reading 1k at a time?  I guess if someone set PIPE_BUFFER_MAX to 1mb, it would be unfortunate to put that on the stack?  Seems like we really want the reads to be the max pipe size (e.g. 4k or 64k)</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/33/daemoncore_pipe_buffer_fix.patch\">daemoncore_pipe_buffer_fix.patch</a>\n8226 bytes added by rrati on 2009-Mar-10 18:46:13 UTC.\n<br/>\nThis patch will allow more than the Operating System's pipe buffer to be written to the child.  It will handle the pipe in BLOCKING or NONBLOCKING mode.\n\n<p>It will also remove the limitation on the amount of data condor will read from the child.  By default, 10k is the most condor will allow to be read from a pipe, but a new configuration option (PIPE_BUFFER_MAX) will allow the administrator to configure the maximum amount of data a child process can send to condor.  Additionally, the problem of the child pausing in outputting data and condor not receiving it all should be handled.<br/>\n</p></li><li><a href=\"../files/40/dc_pipe_buffer_fix.patch\">dc_pipe_buffer_fix.patch</a>\n7843 bytes added by rrati on 2009-Mar-25 12:28:36 UTC.\n<br/>\nMinor changes after initial review<br/>\n</li><li><a href=\"../files/41/dc_pipe_buffer_noloop_fix.patch\">dc_pipe_buffer_noloop_fix.patch</a>\n8463 bytes added by rrati on 2009-Mar-27 18:29:57 UTC.\n<br/>\nRemoved the loop from pipeHandler and upped the buffer read amount to 64k from 1k.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Mar-31 15:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/596fb7b47ae8bc82ea73c06dde437a920e6121bb\">[14346]</a></span>: This is ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=312\" onclick=\"get_ticket_and_populate_wrapper('312'); return false;\" title=\"Pipe read/write limitations\">#312</a></span>, several pipe related fixes Especially for systems with pipe buffers &gt; 4k Signed-off-by: Greg Thain &lt;gthain@cs.wisc.edu&gt; Committer: Greg Thain  (By Rob Rati )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2009-Dec-26 20:15", "status": "resolved", "created": "2009-Mar-10 13:41", "fixed_version": "2009-Mar-10 13:41", "broken_version": "v070200", "priority": "2", "subsystem": "Daemons", "assigned_to": "rrati", "derived_from": "", "creator": "rrati", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu", "due_date": ""}