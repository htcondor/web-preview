{"id": 6514, "title": "Ticket #6514: Group quotas don't allow both surplus and oversubscription", "description": "<blockquote>\nCERN reports problems with allocation of group quotas in Condor.  They would like to give the whole pool, when needed to the \"highprio\" group.  That group rarely has jobs, though.  When there are no \"highprio\" jobs, they would like to give out slots in a 3 to 1 ratio of analysis to production.\n\n<p>To implement this policy, they have in their condor config\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">GROUP_ACCEPT_SURPLUS = True\nGROUP_NAMES = production, analysis, highprio\nGROUP_QUOTA_DYNAMIC_production=0.0025\nGROUP_QUOTA_DYNAMIC_analysis=0.0075\nGROUP_QUOTA_DYNAMIC_highprio = 0.99\n</pre></div>\n\n\n<p>The 99% for highprio isn't quite what they'd like, but it is close.  Assuming a pool with 20 slots, and no high prio jobs, they'd like to see 15 analysis job and 5 production jobs.\n\n</p><p>What they do see is that analysis is allocated 30 (!) slots, and production 10:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">12/15/17 14:28:57 group quotas: group= analysis  quota= 0.15  requested= 100  allocated= 30  unallocated= 70\n12/15/17 14:28:57 group quotas: group= production  quota= 0.05  requested= 100  allocated= 10  unallocated= 90\n</pre></div>\n\n\n<p>Analysis is furthest from quota, so it negotiates first, and gets all of the pool.\n\n</p><p>The root cause is a combination of problems. First, the knob NEGOTIATOR_ALLOW_QUOTA_OVERSUBSCRIPTION defaults to true.  When false, the configured quotas are scaled so that their sum is the size of the pool.  When true, they are left as is, to allow one group strict priority access to pool by setting a very large quota.  The root of the quota tree, the \"&lt;none&gt;\" group cannot be given a quota administrative.  When NEGOTIATOR_ALLOW_OVERSCRIPTION is true, the generated config quota for &lt;none&gt; is the whole pool.  When false, it is the size of the pool, minus the sum of configured quotas for all children, recursively.  That is, usualy 0 slots.\n\n</p><p>Now, when ACCEPT_SURPLUS is true, the negotiation calculates any surplus for every group.  This is defined as the difference (if any) between the configured quota and the demand at that node.  So, if NEGOTIATOR_ALLOW_QUOTA_OVERSUBSCRIPTION is true, and the config quota of a node is 1,000,000 slots, and there is no demand, the surplus at that node is 1,000,000 slots (no matter how many slots are actually in the pool), which will get divided up, and break quotas mightily.\n\n</p><p>Setting NEGOTIATOR_ALLOW_OVERSCRIPTION to false fixes the problem, if sites don't need oversubscription.</p></blockquote>", "remarks": "<blockquote>\n<em>2017-Dec-20 13:44:23 by johnkn:</em> <br/>\n\n<strong>CODE_REVIEW</strong> changes look good.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Dec-19 10:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=53033\">[53033]</a></span>: Document <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6514\" onclick=\"get_ticket_and_populate_wrapper('6514'); return false;\" title=\"Group quotas don't allow both surplus and oversubscription\">#6514</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Dec-16 12:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=53021\">[53021]</a></span>: Allow quotas to work bettre with oversubscription and surplus enabled <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6514\" onclick=\"get_ticket_and_populate_wrapper('6514'); return false;\" title=\"Group quotas don't allow both surplus and oversubscription\">#6514</a></span>  (By Greg Thain )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2017-Dec-20 15:55", "status": "resolved", "created": "2017-Dec-15 14:41", "fixed_version": "2017-Dec-15 14:41", "broken_version": "v080600", "priority": "1", "subsystem": "", "assigned_to": "gthain", "derived_from": "", "creator": "gthain", "rust": "", "customer_group": "cern", "visibility": "public", "notify": "", "due_date": ""}