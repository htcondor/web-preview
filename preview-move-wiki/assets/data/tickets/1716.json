{"id": 1716, "title": "Ticket #1716: condor_getcwd() foiled by getcwd() libc bug on solaris", "description": "<blockquote>\n<code>getcwd()</code> has a bug under solaris as described here: <a class=\"external\" href=\"http://bugs.python.org/issue9185#msg110182\">getcwd() bug</a>\n\n<p>This affects Condor because <code>condor_getcwd()</code> manually allocates memory trying to\nfind a big enough buffer such that it can hold the path in question.\n\n</p><p>However, when <code>getcwd()</code> is called in a directory whose real path is &gt; PATH_MAX,\nit will <strong>NEVER</strong> return anything other than NULL and ERANGE, even if the passed in\nbuffer and size is plenty big enough to hold the path.\n\n</p><p>The fix should be in the <code>if (errno <span class=\"quote\">==</span> ERANGE)</code> code block in <code>condor_getcwd()</code> function to check that if buflen is &gt; 20 Megs, it is probably an error and the function should bail. I think we can survive with &lt; 20 Meg paths for a good long time.... :)\n\n</p><p>This bug was found by our unit tests.</p></blockquote>", "remarks": "<blockquote>\n<em>2010-Oct-14 16:26:59 by psilord:</em> <br/>\n\nThere were some mines in a minefield while checking in the change, so I had to\nend up cherry picking it from master into V7_4-branch. Sorry.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Oct-14 16:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=19172\">[19172]</a></span>: Fixed an obscure bug with getcwd() in condor_getcwd() that our unit tests found. Under Solaris, if getcwd() is called in a directory which is larger than PATH_MAX then getcwd() returns NULL and ERANGE regardless if the buffer and buflen passed into it are plenty big enough to hold the path or not--forever.\u00a0[...]\n (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Oct-14 15:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=19170\">[19170]</a></span>: Fixed an obscure bug with getcwd() in condor_getcwd() that our unit tests found. Under Solaris, if getcwd() is called in a directory which is larger than PATH_MAX then getcwd() returns NULL and ERANGE regardless if the buffer and buflen passed into it are plenty big enough to hold the path or not--forever.\u00a0[...]\n (By Peter Keller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2010-Oct-14 16:27", "status": "resolved", "created": "2010-Oct-14 15:10", "fixed_version": "2010-Oct-14 15:10", "broken_version": "v070000", "priority": "4", "subsystem": "Tests", "assigned_to": "psilord", "derived_from": "#1239", "creator": "psilord", "rust": "", "customer_group": "other", "visibility": "public", "notify": "psilord@cs.wisc.edu", "due_date": ""}