{"id": 2277, "title": "Ticket #2277: generalize GROUP_DYNAMIC_MACH_CONSTRAINT", "description": "<blockquote>\nLong ago, Dan Forrest patched the GLOW central manager to add a knob that duplicates the functionality of GROUP_DYNAMIC_MACH_CONSTRAINT but makes it apply more generally---not just to dynamic group quotas.  He called this DYNAMIC_MACH_CONSTRAINT.\n\n<p>I have attached the patch.  It never made it into the Condor source, due to inertia: we expected some better solution to the \"matching against a subset of the pool\" problem to be implemented.\n\n</p><p>Question to be answered: can this effectively replace GROUP_DYNAMIC_MACH_CONSTRAINT, or do we really need two knobs, one with general scope and one that only applies to dynamic quotas?</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Jun-28 15:06:23 by bbockelm:</em> <br/>\n\nHi Dan,\n\n<p>TJ and I just discussed this: I don't think there's \"non-group-based\" code in the negotiator anymore.  If there's no accounting group, your job gets inserted into a group named \"&lt;none&gt;\".\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2011-Jun-28 15:10:42 by johnkn:</em> <br/>\n\nI propose that we have two constraint params one to control which slots are never considered for matchmaking, and one to control which slots are ignored when calculating the poolsize.\n\n<p></p><div class=\"code\">\n<pre class=\"code\">NEGOTIATOR_SLOT_CONSTRAINT\nNEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT\n</pre></div>\n\n\n<p><code>GROUP_DYNAMIC_MACH_CONSTRAINT</code> will be retained as an alternate name for <code>NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT</code>, which gives us backward compatibility\n\n</p><p></p><hr/>\n<em>2011-Jun-30 21:00:36 by eje:</em> <br/>\n\nFYI, GROUP_DYNAMIC_MACH_CONSTRAINT applies to all slots, dynamic or otherwise  (which does make it poorly named, if nothing else).  e.g. see repro/test for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2232\" onclick=\"get_ticket_and_populate_wrapper('2232'); return false;\" title=\"enable additional GROUP_DYNAMIC_MACH_CONSTRAINT behavior\">#2232</a></span>\n\n<p></p><hr/>\n<em>2011-Jul-11 17:08:16 by danb:</em> <br/>\n\nIn the negotiator, there <em>is</em> still special handling of the non-group case:\n\n<p></p><pre>    if (hgq_groups.size() &lt;= 1) {\n        // If there is only one group (the root group) we are in traditional non-HGQ mode.\n        // It seems cleanest to take the traditional case separately for maximum backward-compatible behavior.\n        // A possible future change would be to unify this into the HGQ code-path, as a \"root-group-only\" case.\n        negotiateWithGroup(untrimmed_num_startds, untrimmedSlotWeightTotal, minSlotWeight, startdAds, claimIds, scheddAds);\n    }\n</pre>\n\n<p>The size of the pool that is passed into this function is not affected by GROUP_DYNAMIC_MACH_CONSTRAINT.  This is the motivation for this ticket.\n\n</p><p></p><hr/>\n<em>2011-Jul-13 12:00:30 by danb:</em> <br/>\n\nI believe that the problem that Dan Forrest's DYNAMIC_MACH_CONSTRAINT was trying to solve is mostly addressed by the new GROUP_QUOTA_ROUND_ROBIN_RATE.  When negotiating with groups, this knob can be used to hand out only a fraction of the pie per negotiation iteration.  By handing out only a fraction of the pie per iteration, one can reduce starvation effects when submitters are vying for subsets of the pool.  The tradeoff is that the smaller the fraction, the more iterations it may take to hand out all the resources, which may lengthen the negotiation cycle.\n\n<p>Even if one is not really using groups, one can make use of this feature by defining one dummy group to flip the negotiator into group negotiation mode.  Longer-term, (as stated in the comment in the code above), this distinction between group and non-group mode should probably go away to avoid this bifurcation of the feature-set.\n\n</p><p>One gotcha: GROUP_QUOTA_ROUND_ROBIN_RATE does not reduce the number of slots per iteration that can be claimed by machine rank preemption.  This means starvation effects may still result when submitters are vying for a subset of machines already claimed by lower-ranked users.  The reason GROUP_QUOTA_ROUND_ROBIN_RATE does not limit rank preemption is that it operates by adjusting the effective quota of submitters.  Quotas do not constrain machine rank preemption.  I think it is desirable for the round robin rate to constrain machine rank preemption.  This might be achieved by adjusting the effective size of the pie rather than (or in addition to) adjusting the effective quota in each iteration.\n\n</p><p>In summary: The existing GROUP_QUOTA_ROUND_ROBIN_RATE can be used to achieve most of the goals of this ticket, but it requires that at least one group be defined in GROUP_NAMES.  It is desirable to have a negotiation round robin rate that applies even when no groups are defined.  It is also desirable that this round robin rate apply to machine rank preemption, which it currently does not.  If these goals were achieved, I think it would be good to rename the knob NEGOTIATOR_ROUND_ROBIN_RATE.\n\n</p><p></p><hr/>\n<em>2011-Aug-11 14:21:13 by danb:</em> <br/>\n\nTJ,\n\n<p>Thanks for your patch!  Sorry for the delay in reviewing it.  Comments:\n\n</p><p></p><ol>\n<li>The new configuration variables NEGOTIATOR_SLOT_CONSTRAINT and NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT need to be added to param_info.in.\n\n<p></p></li><li>Log messages still refer to GROUP_QUOTA_DYNAMIC_MACH_CONSTRAINT rather than the new NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT.  Ideally, the log message would correspond to whichever one was actually used.  But if it is just hard-coded to one or the other, the log message should at least mention the non-deprecated configuration value.\n\n<p></p></li><li>You added unconstrained_slots to <code>NegotiationCycleStats</code>, but it is not published in <code>publishNegotiationCycleStats()</code>.  If you did the optimization suggested in my next comment, then we would not be able to conveniently compute unconstrained_slots anyway, so it could just be removed altogether.\n\n<p></p></li><li>You do the trimming before the call to <code>accountant.CheckMatches(startdAds)</code> and before <code>untrimmedSlotWeightTotal</code> is computed.  I think that is fine.  It means that the trimmed slots have no effect whatsoever in the negotiator other than being (almost) reported in <code>NegotiationCycleStats</code>.  That being the case, I would suggest an optimization: perhaps the constraint could be applied in the query that is sent to the collector in <code>obtainAdsFromCollector()</code>.  Then the trimmed ads would not consume any memory in the negotiator or consume any bandwidth in the query to the collector.\n</li></ol>\n\n<p></p><hr/>\n<em>2011-Aug-18 15:30:14 by jrt:</em> <br/>\n\nI think the ads should be trimmed after <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CheckMatches\" title=\"Check Matches\">CheckMatches</a></span>. An Ad could match in cycle 1, be matched, but then get removed in the following cycle before checkmatches.\n\n<p>I think the params can co-exist. So we have something like:\n\n</p><p></p><pre>  NEGOTIATOR_SLOT_CONSTRAINT\n  NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT\n  NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT_REMOVE\n</pre>\n\n<p>NEGOTIATOR_SLOT_CONSTRAINT first removes startdAds and reduces\nuntrimmed_num_startds. NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT reduces numDynGroupSlots. The question here is whether numDynGroupSlots should be used in the non group path in place of untrimmed_num_startds. I would think this would be fine.  NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT_REMOVE behaves as NEGOTIATOR_STARTD_CONSTRAINT_REMOVE. This is essentially a performance tweak to avoid iterating across startdAds that will never match (or we don't want to match). It seems the ads could be removed by default, but in the interest of backward compat the new param was used.\n\n</p><p>The original patch attached to <a class=\"external\" href=\"https://condor-wiki.cs.wisc.edu/index.cgi/tktview?tn=2232\">https://condor-wiki.cs.wisc.edu/index.cgi/tktview?tn=2232</a> changed GROUP_DYNAMIC_MACH_CONSTRAINT language to NEGOTIATOR_STARTD_CONSTRAINT language. We could change it again to NEGOTIATOR_SLOT_POOLSIZE and add code for NEGOTIATOR_SLOT_CONSTRAINT.\n\n</p><p></p><hr/>\n<em>2011-Sep-15 11:15:35 by danb:</em> <br/>\n\nTJ,\n\n<p>Version 2 of the patch looks improved to me.  As you noted, the new params must still be added to param_info.in.  I'm assuming you will clean out the #if 0 section.\n\n</p><p>Would it be better to EXCEPT immediately when you discover that the constraint cannot be parsed?  If that produces a negotiator obituary email that makes the cause of the problem more obvious than it would be otherwise, I'd say yes.\n\n</p><p>The implementation of NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT looks to me like it only applies to dynamic group quotas.  I thought the intention was for it to apply to all calculations of pool size.  Specifically, it does not appear to affect this case:\n\n</p><p></p><pre>    if (hgq_groups.size() &lt;= 1) {\n        // If there is only one group (the root group) we are in traditional non-HGQ mode.\n        // It seems cleanest to take the traditional case separately for maximum backward-compatible behavior.\n        // A possible future change would be to unify this into the HGQ code-path, as a \"root-group-only\" case.\n        negotiateWithGroup(untrimmed_num_startds, untrimmedSlotWeightTotal, minSlotWeight, startdAds, claimIds, scheddAds);\n    }\n</pre>\n\n<p></p><hr/>\n<em>2011-Sep-15 11:36:05 by danb:</em> <br/>\n\njrt,\n\n<p>I agree with your comment that the non-group case should use the trimmed number of slots.\n\n</p><p>As for whether the slot constraint should be applied before or after <code>CheckMatches()</code>, I agree that we <em>could</em> try to support the case where the accountant keeps track of usage on slots that are excluded from matchmaking in some cycles.  For example, that is what is achieved by NEGOTIATOR_CONSIDER_PREEMPTION=False.  I still think it is useful to have an option that completely excludes slots from both the accountant and the matchmaking.  In very large pools, doing the trimming in the query to the collector is much more efficient.  Perhaps we need to make a list of use-cases so we can understand what is covered by TJ's patch and what isn't.\n\n</p><p>I don't understand why you would want CONSTRAINT, POOLSIZE_CONSTRAINT and POOLSIZE_CONSTRAINT_REMOVE.  POOLSIZE_CONSTRAINT_REMOVE seems more than an optimization to me, because it has a big side-effect that could change the outcome of matchmaking, not just make it faster.  This makes the semantics of POOLSIZE_CONSTRAINT seem rather muddy.  Your thoughts?\n\n</p><p></p><hr/>\n<em>2011-Sep-23 15:55:25 by danb:</em> <br/>\n\nCode review:\n\n<p>Thanks, TJ!\n\n</p><p>In the following (non-group matchmaking case), the constrained pool size is passed to the matchmaking algorithm, but the unconstrained weighted pool size is passed.  I think the constrained weighted size should be passed.  Currently, that is stored in a variable named hgq_total_quota.\n\n</p><p></p><pre>           negotiateWithGroup(cPoolsize, untrimmedSlotWeightTotal, minSlotWeight, startdAds, claimIds, scheddAds);\n</pre>\n\n<p>I also just noticed that in the group matchmaking case, we are calling <code>negotiateWithGroup()</code> with the unconstrained pool size (both weighted and unweighted).  This means the poolsize constraint is only applied when calculating the dynamic quotas, not when carving up the resource pie.  For consistency, I think the constrained pool size should be passed (unweighted and weighted).\n\n</p><p></p><pre>   negotiateWithGroup(untrimmed_num_startds, untrimmedSlotWeightTotal, minSlotWeight,\n      startdAds, claimIds, *(group-&gt;submitterAds),\n      slots, group-&gt;name.c_str());\n</pre>\n\n<p>In the following log message, the text \"for dynamic quotas\" should be removed, since it is now more broadly applicable.\n\n</p><p></p><pre>            dprintf(D_ALWAYS, \"warning: 0 out of %d slots match \"\n                    \"NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT for dynamic quotas\\n\",\n                    cPoolsize);</pre>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/390/dynamic_mach_constraint.patch\">dynamic_mach_constraint.patch</a>\n2846 bytes added by danb on 2011-Jun-28 19:26:59 UTC.\n<br/>\nThis patch from Daniel Forrest is from some time around Oct 2008.<br/>\n</li><li><a href=\"../files/415/slotconstraint.patch\">slotconstraint.patch</a>\n5359 bytes added by johnkn on 2011-Jul-20 18:52:14 UTC.\n<br/>\nimplements NEGOTIATOR_SLOT_CONSTRAINT and NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT<br/>\n</li><li><a href=\"../files/459/slotconstraint2.patch\">slotconstraint2.patch</a>\n8702 bytes added by johnkn on 2011-Sep-13 20:19:34 UTC.\n<br/>\nImplemements NEGOTIATOR_SLOT_CONSTRAINT and NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT taking into account Dan's most of dan's notes in the previous patch.  In particular, the query to the collector passes the constraint, so there is no need to remove Ads from the collections after they are fetched.  This patch does not add the new params into the default param table. <br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-13 13:38</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/f43236ca6e65759705082d1c9ad5939de8a42f7e\">[27805]</a></span>: musical chairs editing update of config knobs NEGOTIATOR_SLOT_CONSTRAINT, NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT, NEGOTIATOR_STARTD_CONSTRAINT_REMOVE, and GROUP_DYNAMIC_MACH_CONSTRAINT ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2277\" onclick=\"get_ticket_and_populate_wrapper('2277'); return false;\" title=\"generalize GROUP_DYNAMIC_MACH_CONSTRAINT\">#2277</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-26 10:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/4f2171257fb94ac5d79c4d9f4f0d3716be90c575\">[27395]</a></span>: fix <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CountMatches\" title=\"Count Matches\">CountMatches</a></span> typo in matchmaker from previous commit for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2277\" onclick=\"get_ticket_and_populate_wrapper('2277'); return false;\" title=\"generalize GROUP_DYNAMIC_MACH_CONSTRAINT\">#2277</a></span> ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-22 14:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0e3e208e95b4a66ccaa2d0d1b2f7786cd694be4c\">[27347]</a></span>: Add NEGOTIATOR_SLOT_CONSTRAINT and NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT to the param table <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2277\" onclick=\"get_ticket_and_populate_wrapper('2277'); return false;\" title=\"generalize GROUP_DYNAMIC_MACH_CONSTRAINT\">#2277</a></span> ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-22 14:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/cabe3658baa199254c8dd45ca5d628a8ee42c07e\">[27346]</a></span>: Version History commit for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2277\" onclick=\"get_ticket_and_populate_wrapper('2277'); return false;\" title=\"generalize GROUP_DYNAMIC_MACH_CONSTRAINT\">#2277</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-22 11:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/dfb012feca791fa14292828a58fa3d077ff7d9de\">[27344]</a></span>: Add param NEGOTIATOR_SLOT_CONSTRAINT to constrain the query for Ads from the negotiator to the collector. Add param NEGOTIATOR_SLOT_POOLSIZE_CONSTRIANT to exclude some of the Ads returned from the calculation of the poolsize for determining quotas. For backward compatibility GROUP_DYNAMIC_MACH_CONSTRAINT\u00a0[...]\n (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2013-Jan-28 15:37", "status": "resolved", "created": "2011-Jun-28 14:26", "fixed_version": "2011-Jun-28 14:26", "broken_version": "v070700", "priority": "4", "subsystem": "", "assigned_to": "johnkn", "derived_from": "#2232", "creator": "danb", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "eje@cs.wisc.edu, tstclair@redhat.com,jthomas@redhat.com,dan@hep.wisc.edu", "due_date": ""}