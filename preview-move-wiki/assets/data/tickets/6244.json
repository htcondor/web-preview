{"id": 6244, "title": "Ticket #6244: Build python bindings for MacOSX", "description": "<blockquote>\nTony Tiradani would really like to use the python bindings in the MacOSX tarball.\n\n<p><strong>Python Versions</strong>\n\n</p><p>Our cmake scripts currently require that the versions of the python library and interpreter match exactly. Otherwise, we disable the python bindings when building. On our MacOSX build machines, the versions that come with the OS are slightly different (2.7.6 library and 2.7.10 interpreter). If we don't set <code>PythonInterp_FIND_VERSION_EXACT</code> in cmake, then the <code>PythonInterp</code> module will accept an older library and newer interpreter (as long they're still the same major version). We should allow this looser matching of versions.\n\n</p><p>Our build machines also have an older version of python under /usr/local/bin, which comes earlier in the PATH. We're planning to remove that copy, so that /usr/bin/python is used.\n\n</p><p><strong>Plugins</strong>\n\n</p><p>The build fails on the python collector plugin, because <code>CollectorPlugin::CollectorPlugin</code> and <code>CollectorPlugin::~CollectorPlugin</code> can't be resolved at link time. These class methods are defined in <code>CollectorPluginManager.cpp</code>, which ends up in a library named <code>libcollectorlib.a</code>. This library isn't distributed, and is only used to link the <code>condor_collector</code> executable.\n\n</p><p>One solution is to move the definitions of these methods into the class declaration in <code>CollectorPlugin.h</code>. The same may need to be done for other plugin types.\n\n</p><p><strong>Library Paths</strong>\n\n</p><p>In MacOSX, shared libraries contain the path where they can be found at runtime. This can be an absolute path or a path relative to the executable loading the library. This can be set at link time with the -install_name flag. When an executable or shared library is linked, the install_names of the shared libraries it depends on are saved in the new executable/library. These values are used at runtime to find the libraries. Additional search locations for libraries can be provided at runtime via the DYLD_LIBRARY_PATH environment variable.\n\n</p><p>A library's install_name and the install_names of dependent libraries can be queried with <code>otool -L</code>. These values can be modified in existing executables and libraries with <code>install_name_tool</code>.\n\n</p><p>When building HTCondor executables and libraries, we include cmake rules to rewrite the dependent library install_names to be relative paths appropriate for the file layout in the tarball. In the NMI build scripts, we set DYLD_LIBRARY_PATH so that we can run the executables, including unit tests, without having to assemble everything with <code>make install</code> first.\n\n</p><p>This setup breaks with the python unit tests. The python interpreter in /usr/bin is covered by SIP, which protects OS programs from potential malicious abuse. This includes removing DYLD_LIBRARY_PATH from the environment. Thus, the python bindings can't find their libraries. Running a shell script that runs a binary in the build tree would similarly fail (unless the script itself set DYLD_LIBRARY_PATH).\n\n</p><p>The best fix for this (for both NMI and interactive builds) is to change how we set library install_names. For executables and libraries residing in the build tree, the library install_names should be the full paths to the library files. During the install step, the executable and library files in <code>release_dir</code> should be rewritten so that the library install_names have the appropriate relative paths.</p></blockquote>", "remarks": "<blockquote>\n<em>2017-Jun-19 15:55:35 by tim:</em> <br/>\n\n<strong>CODE REVIEW</strong>: Looks good.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jul-21 13:34</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/2018f9e529b85686a8e0635dbb1aef72bcbadbc2\">[51898]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6343\" onclick=\"get_ticket_and_populate_wrapper('6343'); return false;\" title=\"Collector Python plugin has undefined symbols\">#6343</a></span>) This breaks collector plugins for OSG Revert \"Move <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CollectorPlugin\" title=\"Collector Plugin\">CollectorPlugin</a></span> constructor/destructor into header file. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6244\" onclick=\"get_ticket_and_populate_wrapper('6244'); return false;\" title=\"Build python bindings for MacOSX\">#6244</a></span>\" This reverts commit ba80c01a440f793a49c731efc541fda3d59af831.  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jun-20 13:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/9e70bb426886b9ab25dedfbc179919487d0b324b\">[51756]</a></span>: Fix <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LaTex\" title=\"La Tex\">LaTex</a></span> typo <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6244\" onclick=\"get_ticket_and_populate_wrapper('6244'); return false;\" title=\"Build python bindings for MacOSX\">#6244</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jun-20 11:28</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/3ec506bb027bec356b142300647f95e49e3cbd99\">[51751]</a></span>: Docs for python bindings on mac. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6244\" onclick=\"get_ticket_and_populate_wrapper('6244'); return false;\" title=\"Build python bindings for MacOSX\">#6244</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-23 16:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/ed098ed1120d08d0a4bf7c543b9224c30b5c274b\">[50708]</a></span>: Restore the old dynamic library path rewriting for test programs on mac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6244\" onclick=\"get_ticket_and_populate_wrapper('6244'); return false;\" title=\"Build python bindings for MacOSX\">#6244</a></span> The test programs don't have an install directive. They're just written into src/condor_tests. When a test run is done in the batlab, a symlink is made so that ../lib points to the necessary lib directory. And since the tests\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-23 14:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/2bd6ba98d3cda4326e839b673efb4918950062a5\">[50706]</a></span>: Strip path from mac shared libraries' id in the install step <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6244\" onclick=\"get_ticket_and_populate_wrapper('6244'); return false;\" title=\"Build python bindings for MacOSX\">#6244</a></span> We recently changed our shared libraries so that their -install_name contains their full path within the build space. That simplifies building and running unit tests that use the libraries. But once we stage the libraries outside of the\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-22 15:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/11354b5a65ff36f2b7b55f0ab07f561d5c164fa0\">[50698]</a></span>: Enforce use of the OS version of python on our mac build machines. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6244\" onclick=\"get_ticket_and_populate_wrapper('6244'); return false;\" title=\"Build python bindings for MacOSX\">#6244</a></span> Some of our MacOSX build machines have an alternate version of python installed in /usr/local/bin, which appears early in the default PATH. This version may be older than the python library in /usr/lib, causing our cmake configuration\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-22 15:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/b93f92c4f878a813467c24c37052ef855701a9cb\">[50699]</a></span>: Change how we set dynamic library paths for MacOSX executables. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6244\" onclick=\"get_ticket_and_populate_wrapper('6244'); return false;\" title=\"Build python bindings for MacOSX\">#6244</a></span> When creating a shared library, use the full path to the library for its -install_name, rather than its basename. Call install_name_tool to rename paths of dependent libraries at install time, rather than at build time. The relative\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-18 13:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/ba80c01a440f793a49c731efc541fda3d59af831\">[50682]</a></span>: Move <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CollectorPlugin\" title=\"Collector Plugin\">CollectorPlugin</a></span> constructor/destructor into header file. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6244\" onclick=\"get_ticket_and_populate_wrapper('6244'); return false;\" title=\"Build python bindings for MacOSX\">#6244</a></span> On MacOSX, all symbols must be resolvable at link time, not just at run time. Thus, when creating a collector plugin, the implementations of CollectorPlugin's constructor and destructor must be available.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-18 13:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/b50ef3ad1599130a6c7cd3fc6d7c2a873132b905\">[50681]</a></span>: Relax version matching rules for python bindings. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6244\" onclick=\"get_ticket_and_populate_wrapper('6244'); return false;\" title=\"Build python bindings for MacOSX\">#6244</a></span> Allow python library and interpreter versions to be different, as long as the interpreter is newer and has the same major version. Some of our mac build machines have minor version skew, which shouldn't cause any issues.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2017-Jun-20 11:28", "status": "resolved", "created": "2017-May-02 15:04", "fixed_version": "2017-May-02 15:04", "broken_version": "", "priority": "2", "subsystem": "PythonBinding", "assigned_to": "jfrey", "derived_from": "", "creator": "tim", "rust": "", "customer_group": "fermi", "visibility": "public", "notify": "tiradani@fnal.gov", "due_date": ""}