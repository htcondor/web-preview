{"id": 6342, "title": "Ticket #6342: Memory leak during clean-up of an authenticated socket", "description": "<blockquote>\nThere is a memory leak during clean-up of a negotiated network socket, which may\nbe particularly noticeable in the <code>condor_collector</code>.\n\n<p>Noted valgrind error when debugging the condor-ce:\n\n</p><p></p><div class=\"verbatim\">\n<pre>==3050358== Mismatched free() / delete / delete []\n==3050358==    at 0x4C29CDD: free (vg_replace_malloc.c:530)\n==3050358==    by 0x52A61BC: Sock::~Sock() (sock.cpp:198)\n==3050358==    by 0x52C6918: ReliSock::~ReliSock() (reli_sock.cpp:109)\n==3050358==    by 0x530E443: DaemonCommandProtocol::finalize() (daemon_command.cpp:1714)\n==3050358==    by 0x5312359: DaemonCommandProtocol::doProtocol() (daemon_command.cpp:186)\n==3050358==    by 0x53124FE: DaemonCommandProtocol::SocketCallback(Stream*) (daemon_command.cpp:240)\n==3050358==    by 0x5323833: DaemonCore::CallSocketHandler_worker(int, bool, Stream*) (daemon_core.cpp:4158)\n==3050358==    by 0x53239AC: DaemonCore::CallSocketHandler_worker_demarshall(void*) (daemon_core.cpp:4117)\n==3050358==    by 0x51EFDA4: CondorThreads::pool_add(void (*)(void*), void*, int*, char const*) (condor_threads.cpp:1109)\n==3050358==    by 0x5323B09: DaemonCore::CallSocketHandler(int&amp;, bool) (daemon_core.cpp:4105)\n==3050358==    by 0x53298B2: DaemonCore::Driver() (daemon_core.cpp:3978)\n==3050358==    by 0x533A0B3: dc_main(int, char**) (daemon_core_main.cpp:2733)\n==3050358==  Address 0xc0dd4b0 is 0 bytes inside a block of size 136 alloc'd\n==3050358==    at 0x4C29203: operator new(unsigned long) (vg_replace_malloc.c:334)\n==3050358==    by 0x52A640F: Sock::setPolicyAd(classad::ClassAd const&amp;) (sock.cpp:295)\n==3050358==    by 0x52E02D5: Condor_Auth_X509::authenticate_server_gss(CondorError*, bool) (condor_auth_x509.cpp:1274)\n==3050358==    by 0x52E091C: Condor_Auth_X509::authenticate_continue(CondorError*, bool) (condor_auth_x509.cpp:1035)\n==3050358==    by 0x52DA220: Authentication::authenticate_continue(CondorError*, bool) (authentication.cpp:184)\n==3050358==    by 0x52C4455: ReliSock::authenticate_continue(CondorError*, bool, char**) (reli_sock.cpp:1228)\n==3050358==    by 0x530F0E1: DaemonCommandProtocol::AuthenticateContinue() (daemon_command.cpp:1130)\n==3050358==    by 0x5312384: DaemonCommandProtocol::doProtocol() (daemon_command.cpp:165)\n==3050358==    by 0x53124FE: DaemonCommandProtocol::SocketCallback(Stream*) (daemon_command.cpp:240)\n==3050358==    by 0x5323833: DaemonCore::CallSocketHandler_worker(int, bool, Stream*) (daemon_core.cpp:4158)\n==3050358==    by 0x53239AC: DaemonCore::CallSocketHandler_worker_demarshall(void*) (daemon_core.cpp:4117)\n==3050358==    by 0x51EFDA4: CondorThreads::pool_add(void (*)(void*), void*, int*, char const*) (condor_threads.cpp:1109)\n==3050358==\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2017-Jul-10 13:13:08 by bbockelm:</em> <br/>\n\nFix looks good to me.\n\n<p>Since this issue is handled transparently on all known platforms, I'd suggest we don't need any mention in the release notes.\n\n</p><p></p><hr/>\n<em>2017-Jul-11 10:25:13 by tim:</em> <br/>\n\n<strong>DOC REVIEW:</strong> No docs needed\n\n<p></p><hr/>\n<em>2017-Jul-17 14:47:56 by jfrey:</em> <br/>\n\nThis bug results in a memory leak, which may contribute noticeably to the growing memory usage of the collector in the CMS global pool that is currently under investigation.\n\n<p></p><hr/>\n<em>2017-Jul-17 15:15:54 by bbockelm:</em> <br/>\n\nWhy would it result in a memory leak?\n\n<p>I'd expect a memory leak if a \"new []\" was mismatched with a \"free()\" (i.e., array variant with non-array variant), but mismatching \"new\" and \"free\"?\n\n</p><p>(I mean, it's undefined behavior regardless...)\n\n</p><p></p><hr/>\n<em>2017-Jul-17 15:44:00 by jfrey:</em> <br/>\n\nIt's memory leak because it's a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> that's being free()d. That means the destructor isn't called, so all data that's not in the base <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> structure is leaked.\n\n<p></p><hr/>\n<em>2017-Jul-17 15:45:33 by bbockelm:</em> <br/>\n\nAh yes, good point!  That would be one potential cause, particularly places where many authenticated sockets are created.\n\n<p></p><hr/>\n<em>2017-Jul-18 09:19:32 by tim:</em> <br/>\n\nThis merits a version history entry.\n\n<p></p><hr/>\n<em>2017-Jul-18 09:22:44 by bbockelm:</em> <br/>\n\nAgreed.  Sorry for the incorrect original analysis; glad Jaime caught it!\n\n<p></p><hr/>\n<em>2017-Jul-26 09:06:14 by tim:</em> <br/>\n\n<strong>CODE REVIEW:</strong> Looks good</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jul-26 08:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/4fa26ae9b628be9ea3c6872d43735046400a1ae2\">[51914]</a></span>: Minor version history edits (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6317\" onclick=\"get_ticket_and_populate_wrapper('6317'); return false;\" title=\"Add avx2 to the list of attributes the startd advertises\">#6317</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6342\" onclick=\"get_ticket_and_populate_wrapper('6342'); return false;\" title=\"Memory leak during clean-up of an authenticated socket\">#6342</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6347\" onclick=\"get_ticket_and_populate_wrapper('6347'); return false;\" title=\"Condor_starter hangs on Debian because of disabled cgroup accounting\">#6347</a></span>)  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jul-25 14:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/9662d2c4ba6e1e55025512871493f9dca1e2e191\">[51910]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6342\" onclick=\"get_ticket_and_populate_wrapper('6342'); return false;\" title=\"Memory leak during clean-up of an authenticated socket\">#6342</a></span>) Release note.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jul-10 11:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/bd332e3ed4ee3685b78162a7fd79b6d6e99f1583\">[51848]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6342\" onclick=\"get_ticket_and_populate_wrapper('6342'); return false;\" title=\"Memory leak during clean-up of an authenticated socket\">#6342</a></span>) Fix bug where new()d memory was free()d rather than delete()d.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2017-Oct-20 11:50", "status": "resolved", "created": "2017-Jul-10 10:43", "fixed_version": "2017-Jul-10 10:43", "broken_version": "v080508", "priority": "4", "subsystem": "Security", "assigned_to": "tlmiller", "derived_from": "#5064", "creator": "bbockelm", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "bbockelm@cse.unl.edu", "due_date": ""}