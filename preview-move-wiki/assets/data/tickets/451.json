{"id": 451, "title": "Ticket #451: Event Log writer leaks when re-initialized", "description": "<blockquote>\nThe current log writer API allows the application to call \"initialize\" on an already initialized writer object; this can cause the log writer to leak memory and/or file descriptors, particularly if EVENT_LOG is set.\n\n<p>Matt fixed the use case of the schedd invoking the writer in this way (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=395\" onclick=\"get_ticket_and_populate_wrapper('395'); return false;\" title=\"EventLog.lock fd leak and submission events are bogus\">#395</a></span>), but that doesn't fix the problem in the log writer code itself.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-May-04 17:40:02 by tannenba:</em> <br/>\n\nHow does the commit below <span class=\"chng\"><a href=\"chngview?cn=14633\">[14633]</a></span> \"fix several leaks\" as the commit description describes?  Looks like it just moves some code that de-allocated resources from the dtor into a function called by the dtor.  12 resources deallocated in the dtor, 12 resources are deallocated in the new function.  What was being leaked that is now \"fixed\" ?\n\n<p></p><hr/>\n<em>2009-May-04 21:01:25 by nleroy:</em> <br/>\n\nGood catch.  A bad commit on my part.  I've pushed the fix to V7_2-branch, and will push the trunk shortly.\n\n<p></p><hr/>\n<em>2009-May-05 07:33:01 by matt:</em> <br/>\n\nWouldn't the best fix be to not have a constructor that does no initialization. Then you could have the ctor do init and the dtor free?\n\n<p></p><hr/>\n<em>2009-May-05 08:52:42 by nleroy:</em> <br/>\n\nPerhaps that would be a better solution, but I don't know for certain that there aren't any users in the wild that a) use the event log writer API and b) take advantage of that portion of the API.\n\n<p>For better or for worse, we do ship header files and library files to allow users to create a stand-alone program that does use the writer API.\n\n</p><p>If somebody can tell me \"I know that nobody uses that and it's OK to change the API\", I'd be more than happy to do what you describe.\n\n</p><p></p><hr/>\n<em>2009-May-05 09:43:49 by matt:</em> <br/>\n\nWhat you've done is horribly worse then. You've changed the semantics of the function itself. The change is highly correlated with the test breakages from last night too.\n\n<p>Maybe it's time to really look into versioning of the libraries shipped with Condor.\n\n</p><p></p><hr/>\n<em>2009-May-05 09:53:36 by nleroy:</em> <br/>\n\n&gt;What you've done is horribly worse then. You've changed the semantics of the &gt;function itself. The change is highly correlated with the test breakages from &gt;last night too.\n\n<p>Huh?  Yes, there does seem to be a correlation, and I'm looking into it.  But, I have <em>not</em> changed the semantics of the function -- rather I made it work as currently advertised.  I don't believe that the test failures are related to this change -- I'm currently running batch_test.pl in a personal condor with no failures (it's probably 25% done).\n\n</p><p></p><hr/>\n<em>2009-May-05 09:58:41 by matt:</em> <br/>\n\nMuch worse - you seem worried about changing the syntax of the API, but what you did in your commit was leave the syntax the same and change the semantics.\n\n<p>If you are worried about breaking existing programs using the library, you need to keep the semantics consistent even more than the syntax.\n\n</p><p>If you want to ever change either then you need some form of versioning.\n\n</p><p></p><hr/>\n<em>2009-May-05 10:05:25 by nleroy:</em> <br/>\n\nHow do you figure <strong>that</strong>????  Previously, if a user would have used the API as it was available, it would have leaked resources.  The only change I made is to prevent that leak.  You can still use the API exactly as before, but now it works \"as advertised\".  By your logic, any time a bug is fixed in a library that can affect its behavior (pretty much any bug fix), the library's API has changed.  This makes no sense at all.\n\n<p></p><hr/>\n<em>2009-May-05 10:20:10 by matt:</em> <br/>\n\nWhere's the description of the API that people are using? The thing that specifies you just fixed a bug vs changed the semantics of the function.\n\n<p>And even then, you did more than fix a leak with the change.\n\n</p><p></p><hr/>\n<em>2009-May-05 10:22:45 by tannenba:</em> <br/>\n\nCouple comments:\n\n<p></p><ol>\n<li>Perhaps all the test broke because, based on a quick 30 second look at this patch, I think you may be calling delete &amp; free on uninitialized pointers.  Think about it --  you are now de-allocating everying in Configure(), and yet the ctor doesn't initialize these pointers etc to NULL (because it wasn't needed in the previous version of the code).  Exactly how was this change tested???\n\n<p></p></li><li>Re Matt's comment above about how the ctor should allocate everything...  ctors should never perform any operation that can fail.  Any operation that could fail should be done in an initialize() method.\n</li></ol>\n\n<p></p><hr/>\n<em>2009-May-05 10:29:04 by nleroy:</em> <br/>\n\nI thought of that, but if you look, all of the ctor's invoke Reset() which <em>does</em> initialize 'em all (unless I'm missing something).\n\n<p></p><hr/>\n<em>2009-May-05 13:32:29 by matt:</em> <br/>\n\n2. That's only because you don't have a way to fail constructors 8o)\n\n<p>Let's not ignore the API issue here.\n\n</p><p></p><hr/>\n<em>2009-May-05 18:21:47 by tannenba:</em> <br/>\n\nWell, this was responsible for breaking all of Condor, as all user logs were empty.  The code initializes the user log file name, then deallocates it, and as a result no events get written into the user log... thus almost all tests timeout waiting for something to be written into the user log. Score another one for the Condor regression tests, whoot! I still don't know how any of this could have worked, other than franking.\n\n<p>Responsible commit reverted on both master and v7.2.\n\n</p><p>Changing status on this to not be active, it simply is not worth fixing at this time.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-May-06 12:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14649\">[14649]</a></span>: Fixed bad behavior of the event logger in regards to re-initializing it, updated tests to check for this, etc. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=451\" onclick=\"get_ticket_and_populate_wrapper('451'); return false;\" title=\"Event Log writer leaks when re-initialized\">#451</a></span>)  (By Nick <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LeRoy\" title=\"Le Roy\">LeRoy</a></span> )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-May-05 17:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14647\">[14647]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=14639\">[14639]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=14646\">[14646]</a></span>, Merge branch 'V7_2-branch' <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=451\" onclick=\"get_ticket_and_populate_wrapper('451'); return false;\" title=\"Event Log writer leaks when re-initialized\">#451</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-May-05 17:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14646\">[14646]</a></span>: Revert \"Ooops, this should have been a part of commit\" This reverts commit 9752af088da2edaec6f0a47187c02459ff2d9553. This commit causes no user log events to be written. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=451\" onclick=\"get_ticket_and_populate_wrapper('451'); return false;\" title=\"Event Log writer leaks when re-initialized\">#451</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-May-04 20:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14635\">[14635]</a></span>: Fixed several leaks in the event log writing code (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=451\" onclick=\"get_ticket_and_populate_wrapper('451'); return false;\" title=\"Event Log writer leaks when re-initialized\">#451</a></span>).  (By Nick <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LeRoy\" title=\"Le Roy\">LeRoy</a></span> )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-May-04 20:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14634\">[14634]</a></span>: Ooops, this should have been a part of commit c9716728db1dcdc4affb886ff153e541abaeb993 (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=451\" onclick=\"get_ticket_and_populate_wrapper('451'); return false;\" title=\"Event Log writer leaks when re-initialized\">#451</a></span>)  (By Nick <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LeRoy\" title=\"Le Roy\">LeRoy</a></span> )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-May-04 16:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=14633\">[14633]</a></span>: Fixed several leaks in the event log writing code (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=451\" onclick=\"get_ticket_and_populate_wrapper('451'); return false;\" title=\"Event Log writer leaks when re-initialized\">#451</a></span>).  (By Nick <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LeRoy\" title=\"Le Roy\">LeRoy</a></span> )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2010-Jan-31 08:36", "status": "resolved", "created": "2009-May-04 14:37", "fixed_version": "2009-May-04 14:37", "broken_version": "v070200", "priority": "4", "subsystem": "Libs", "assigned_to": "nleroy", "derived_from": "#395", "creator": "nleroy", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu", "due_date": ""}