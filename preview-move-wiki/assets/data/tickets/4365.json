{"id": 4365, "title": "Ticket #4365: Conditional depends on unit memory in schedd", "description": "<blockquote>\n<div class=\"code\">\n<pre class=\"code\">==10286== Conditional jump or move depends on uninitialised value(s)\n==10286==    at 0x4FC5F3: SetAttribute(int, int, char const*, char const*, unsigned char) (qmgmt.cpp:2586)\n==10286==    by 0x4F0348: do_Q_request(ReliSock*, bool&amp;) (qmgmt_receivers.cpp:374)\n==10286==    by 0x4F9E96: handle_q(Service*, int, Stream*) (qmgmt.cpp:1658)\n==10286==    by 0x4FDED9F: DaemonCore::CallCommandHandler(int, Stream*, bool, bool, float, float) (daemon_core.cpp:4050)\n==10286==    by 0x4FD2ACA: DaemonCommandProtocol::ExecCommand() (daemon_command.cpp:1555)\n==10286==    by 0x4FCE55C: DaemonCommandProtocol::doProtocol() (daemon_command.cpp:158)\n==10286==    by 0x4FCE7D3: DaemonCommandProtocol::SocketCallback(Stream*) (daemon_command.cpp:222)\n==10286==    by 0x4FDE359: DaemonCore::CallSocketHandler_worker(int, bool, Stream*) (daemon_core.cpp:3849)\n==10286==    by 0x4FDE08B: DaemonCore::CallSocketHandler_worker_demarshall(void*) (daemon_core.cpp:3811)\n==10286==    by 0x4E4783C: CondorThreads::pool_add(void (*)(void*), void*, int*, char const*) (condor_threads.cpp:1106)\n==10286==    by 0x4FDE02E: DaemonCore::CallSocketHandler(int&amp;, bool) (daemon_core.cpp:3799)\n==10286==    by 0x4FDDA31: DaemonCore::Driver() (daemon_core.cpp:3672)\n==10286==    by 0x4FC63F2: dc_main(int, char**) (daemon_core_main.cpp:2772)\n==10286==    by 0x48F176: main (schedd_main.cpp:210)\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2014-May-13 16:58:03 by tlmiller:</em> <br/>\n\nI think this will work...\n\n<p></p><div class=\"verbatim\">\n<pre>diff --git a/src/condor_schedd.V6/qmgmt.cpp b/src/condor_schedd.V6/qmgmt.cpp\nindex 5098a12..d796178 100644\n--- a/src/condor_schedd.V6/qmgmt.cpp\n+++ b/src/condor_schedd.V6/qmgmt.cpp\n@@ -2580,7 +2580,7 @@ SetAttribute(int cluster_id, int proc_id, const char *attr\n        // Get the job's status and only mark dirty if it is running\n        // Note: Dirty attribute notification could work for local and\n        // standard universe, but is currently not supported for them.\n-       int universe;\n+       int universe = -1;\n        GetAttributeInt( cluster_id, proc_id, ATTR_JOB_STATUS, &amp;status );\n        GetAttributeInt( cluster_id, proc_id, ATTR_JOB_UNIVERSE, &amp;universe );\n        if( ( universe != CONDOR_UNIVERSE_SCHEDULER &amp;&amp;\n</pre></div>\n\n\n<p></p><hr/>\n<em>2014-May-14 13:36:27 by tlmiller:</em> <br/>\n\nThe above patch does silence Valgrind, at it won't make anything worse.\n\n<p>I'm assuming the original code has good reason not to verify that the GetAttributeInt() calls succeeded.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-14 13:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40132\">[40132]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4365\" onclick=\"get_ticket_and_populate_wrapper('4365'); return false;\" title=\"Conditional depends on unit memory in schedd\">#4365</a></span>) Encourage valgrind to consider the merits of silence.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-May-16 14:26", "status": "resolved", "created": "2014-May-13 13:52", "fixed_version": "2014-May-13 13:52", "broken_version": "v070000", "priority": "2", "subsystem": "", "assigned_to": "tlmiller", "derived_from": "#4362", "creator": "gthain", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}