{"id": 6041, "title": "Ticket #6041: Simplify how the Daemon client object locates the daemon", "description": "<blockquote>\nWhen the Daemon client object attempts to obtain the contact information for its daemon, it tries to be clever. If it determines that the requested daemon is the \"local\" one, it attempts to read the daemon's address file on the local filesystem to avoid a query to the collector.\n\n<p>The daemon is considered local if the Daemon is constructed with a NULL name argument. If the Daemon is constructed with a non-NULL name or <code>&lt;subsys&gt;_HOST</code> is set in the config file, it may decide that the daemon is local if it determines that a daemon using the same configuration as itself would choose that name. It does this by looking up <code>&lt;subsys&gt;_NAME</code> in the config file.\n\n</p><p>This has caused problems, specifically at Fermilab, where they have multiple schedds on a single machine. If <code>&lt;subsys&gt;_NAME</code> and the address file params aren't set to the same schedd's values in a tool's configuration, then it can end up talking to the wrong schedd when using -name or <code>&lt;subsys&gt;_HOST</code>.\n\n</p><p>We propose changing the Daemon object so that when the daemon has an explicit name (either via the constructor or <code>&lt;subsys&gt;_HOST</code>), the Daemon object always queries the collector, and doesn't attempt to access the address files.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2016-Dec-05 16:03", "status": "new", "created": "2016-Dec-05 16:03", "fixed_version": "2016-Dec-05 16:03", "broken_version": "v080500", "priority": "4", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "#5221", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "jfrey@cs.wisc.edu,tannenba@cs.wisc.edu,johnkn@cs.wisc.edu", "due_date": ""}