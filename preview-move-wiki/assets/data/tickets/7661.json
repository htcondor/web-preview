{"id": 7661, "title": "Ticket #7661: condor_procd spontaneous EXCEPTs which causes a condor_startd EXCEPT", "description": "<blockquote>\nThe condor_procd erroneously claims that the master has exited and EXCEPTs. Then, the condor_startd asks the newly started condor_procd about a process family that it has been tracking and EXCEPTs when it cannot update usage data.\n\n<p>In all of the cases examined to date, the procd believes most or all of the pids that it's tracking have exited, including the condor_master. Death of the master (which started it) causes the procd to exit. in the case of e2015 on 05/28/20, the procd thought the startd and starters had exited but not the master. So the procd remained running, and stopped tracking the process families that the startd and starters had asked it to track. This still caused grief for those daemons.\n\n</p><p>When the procd exits, the master restarts it. All of the daemons notice, kindly wait a second, and reconnect to the new procd process. But they are wholly unprepared for the consequences. All of their requests relating to previously-registered process families fail, because the new procd doesn't know about the registrations. Chaos ensues. Each daemon can't even kill its children, because that's generally done via a kill_family request to the procd.\n\n</p><p>A first look through the procapi snapshot code and the procd logs suggests that when the procd reads <code>/proc</code> to get the set of current pids on the system, it's getting few or no results.\n\n</p><p><span class=\"subsection\"></span></p><h3>OOM Events</h3>\n\n<p>After a restart of the procd, each starter running a vanilla job says it got an OOM event, logging one of the following:\n</p><div class=\"code\">\n<pre class=\"code\">Job was held due to OOM event: Job has gone over memory limit of 4096 megabytes. Peak usage: 32626 megabytes.\n</pre></div>\n\n<div class=\"code\">\n<pre class=\"code\">Spurious OOM event, usage is 0, slot size is 4096 megabytes, ignoring OOM (read 8 bytes)\n</pre></div>\n\n\n<p>In all cases examined so far, the reported job memory usage is either very small or approximately 32GB (exact values vary). <code>/var/log/messages</code> doesn't show any OOM events.</p></blockquote>", "remarks": "<blockquote>\n<em>2020-May-27 11:58:42 by tim:</em> <br/>\n\nMost recent crashes:\n\n<p><table border=\"1\" cellspacing=\"0\">\n<tbody><tr>\n<td>\n <strong>machine</strong> </td>\n<td>\n <strong>time</strong> </td>\n</tr>\n\n<tr>\n<td>\n e0381 </td>\n<td>\n 05/25/20 13:08:53 </td>\n</tr>\n\n<tr>\n<td>\n e2372 </td>\n<td>\n 05/28/20 06:05:08 </td>\n</tr>\n\n<tr>\n<td>\n e2003 </td>\n<td>\n 05/27/20 23:47:37 </td>\n</tr>\n\n<tr>\n<td>\n e2014 </td>\n<td>\n 05/28/20 00:15:35 </td>\n</tr>\n\n<tr>\n<td>\n e2017 </td>\n<td>\n 05/28/20 01:59:15 </td>\n</tr>\n\n<tr>\n<td>\n e2012 </td>\n<td>\n 05/28/20 04:38:04 </td>\n</tr>\n\n<tr>\n<td>\n e2015 </td>\n<td>\n 05/28/20 00:37:58 </td>\n</tr>\n\n</tbody></table>\n</p><p></p><hr/>\n<em>2020-Jun-08 08:59:09 by tim:</em> <br/>\n\nWe got useful information from a ProcD failure. On e278 at 07:23:20 this morning. The startd crashed because it could not get usage information. Looking at the log, the procd had no trouble reading the proc file system. However, it took 55 snapshots in less than 2 seconds. That does not sound right.\n\n<p></p><hr/>\n<em>2020-Jun-08 09:44:58 by jfrey:</em> <br/>\n\nThe procd failure on e278 has some odd behavior. In the first snapshot taken at 07:23:20, the total pid count drops by 77 from the snapshot taken 15 seconds previously. In the second and subsequent snapshots taken at 07:23:20, the pid count jumps up by about 95 pids. In the first snapshot at 07:23:20, the startd and procd itself are among the absent pids.\n\n<p>Relevant lines from the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ProcLog\" title=\"Proc Log\">ProcLog</a></span>:\n\n</p><p></p><div class=\"verbatim\">\n<pre>06/08/20 07:23:05 : ProcAPI: read 529 pid entries out of 590 total entries in /proc\n06/08/20 07:23:20 : ProcAPI: read 452 pid entries out of 513 total entries in /proc\n06/08/20 07:23:20 : ProcAPI: read 549 pid entries out of 610 total entries in /proc\n</pre></div>\n\n\n<p></p><hr/>\n<em>2020-Jun-30 11:33:17 by tim:</em> <br/>\n\n<table border=\"1\" cellspacing=\"0\">\n<tbody><tr>\n<td>\n <strong>machine</strong> </td>\n<td>\n <strong>time</strong> </td>\n</tr>\n\n<tr>\n<td>\n e2005 </td>\n<td>\n 06/04/20 03:07:39 </td>\n</tr>\n\n<tr>\n<td>\n e2354 </td>\n<td>\n 06/05/20 23:57:03 </td>\n</tr>\n\n<tr>\n<td>\n e2015 </td>\n<td>\n 06/06/20 10:13:12 </td>\n</tr>\n\n<tr>\n<td>\n e0137 </td>\n<td>\n 06/08/20 04:37:28 </td>\n</tr>\n\n<tr>\n<td>\n e278  </td>\n<td>\n 06/08/20 07:23:20 </td>\n</tr>\n\n<tr>\n<td>\n e265  </td>\n<td>\n 06/15/20 17:54:43 </td>\n</tr>\n\n<tr>\n<td>\n e2385 </td>\n<td>\n 06/16/20 11:54:22 </td>\n</tr>\n\n<tr>\n<td>\n e323  </td>\n<td>\n 06/18/20 17:28:10 </td>\n</tr>\n\n<tr>\n<td>\n e2012 </td>\n<td>\n 06/18/20 18:47:18 </td>\n</tr>\n\n<tr>\n<td>\n e319  </td>\n<td>\n 06/18/20 23:56:33 </td>\n</tr>\n\n<tr>\n<td>\n e335  </td>\n<td>\n 06/20/20 19:22:47 </td>\n</tr>\n\n<tr>\n<td>\n e383  </td>\n<td>\n 07/14/20 03:04:48 </td>\n</tr>\n\n<tr>\n<td>\n e1032 </td>\n<td>\n 07/18/20 13:49:05 </td>\n</tr>\n\n<tr>\n<td>\n e331  </td>\n<td>\n 07/18/20 21:15:17 </td>\n</tr>\n\n<tr>\n<td>\n e2397 </td>\n<td>\n 07/20/20 01:11:04 </td>\n</tr>\n\n<tr>\n<td>\n e2373 </td>\n<td>\n 07/20/20 01:59:27 </td>\n</tr>\n\n<tr>\n<td>\n e2377 </td>\n<td>\n 07/20/20 08:39:31 </td>\n</tr>\n\n<tr>\n<td>\n e327  </td>\n<td>\n 08/06/20 20:19:21 </td>\n</tr>\n\n<tr>\n<td>\n e2405 </td>\n<td>\n 08/09/20 07:04:42 </td>\n</tr>\n\n<tr>\n<td>\n e235  </td>\n<td>\n 08/10/20 18:09:45 </td>\n</tr>\n\n<tr>\n<td>\n e068  </td>\n<td>\n 08/10/20 21:55:14 </td>\n</tr>\n\n<tr>\n<td>\n e2366 </td>\n<td>\n 08/10/20 22:10:33 </td>\n</tr>\n\n<tr>\n<td>\n e080  </td>\n<td>\n 08/11/20 01:18:55 </td>\n</tr>\n\n<tr>\n<td>\n e2006 </td>\n<td>\n 08/11/20 04:06:24 </td>\n</tr>\n\n<tr>\n<td>\n e204  </td>\n<td>\n 08/11/20 07:21:19 </td>\n</tr>\n\n<tr>\n<td>\n e277  </td>\n<td>\n 08/11/20 14:20:52 </td>\n</tr>\n\n<tr>\n<td>\n e2360 </td>\n<td>\n 08/11/20 15:08:10 </td>\n</tr>\n\n<tr>\n<td>\n e065  </td>\n<td>\n 08/13/20 12:01:44 </td>\n</tr>\n\n<tr>\n<td>\n e2363 </td>\n<td>\n 08/13/20 15:15:53 </td>\n</tr>\n\n<tr>\n<td>\n e2429 </td>\n<td>\n 08/13/20 17:26:28 </td>\n</tr>\n\n<tr>\n<td>\n e2008 </td>\n<td>\n 08/13/20 20:55:10 </td>\n</tr>\n\n<tr>\n<td>\n e359  </td>\n<td>\n 08/13/20 23:11:41 </td>\n</tr>\n\n<tr>\n<td>\n e041  </td>\n<td>\n 08/15/20 02:18:56 </td>\n</tr>\n\n<tr>\n<td>\n e2433 </td>\n<td>\n 08/15/20 10:20:44 </td>\n</tr>\n\n<tr>\n<td>\n e379  </td>\n<td>\n 08/15/20 13:14:17 </td>\n</tr>\n\n<tr>\n<td>\n e2010 </td>\n<td>\n 08/15/20 13:14:44 </td>\n</tr>\n\n<tr>\n<td>\n e266  </td>\n<td>\n 08/16/20 12:05:18 </td>\n</tr>\n\n<tr>\n<td>\n e1049 </td>\n<td>\n 08/17/20 04:07:37 </td>\n</tr>\n\n<tr>\n<td>\n e2399 </td>\n<td>\n 08/17/20 14:09:08 </td>\n</tr>\n\n<tr>\n<td>\n e300  </td>\n<td>\n 08/19/20 00:11:50 </td>\n</tr>\n\n<tr>\n<td>\n e3243 </td>\n<td>\n 08/19/20 21:51:06 </td>\n</tr>\n\n<tr>\n<td>\n e1053 </td>\n<td>\n 08/20/20 15:24:54 </td>\n</tr>\n\n<tr>\n<td>\n e3167 </td>\n<td>\n 08/21/20 17:46:02 </td>\n</tr>\n\n<tr>\n<td>\n e305  </td>\n<td>\n 08/22/20 06:41:16 </td>\n</tr>\n\n<tr>\n<td>\n e2007 </td>\n<td>\n 08/23/20 20:45:34 </td>\n</tr>\n\n<tr>\n<td>\n e2009 </td>\n<td>\n 08/23/20 22:24:56 </td>\n</tr>\n\n<tr>\n<td>\n e344  </td>\n<td>\n 08/26/20 05:25:18 </td>\n</tr>\n\n<tr>\n<td>\n e2369 </td>\n<td>\n 08/28/20 06:42:19 </td>\n</tr>\n\n<tr>\n<td>\n e346  </td>\n<td>\n 08/28/20 12:15:31 </td>\n</tr>\n\n<tr>\n<td>\n e271  </td>\n<td>\n 08/28/20 18:30:12 </td>\n</tr>\n\n<tr>\n<td>\n e1072 </td>\n<td>\n 08/29/20 11:00:49 </td>\n</tr>\n\n<tr>\n<td>\n e157  </td>\n<td>\n 08/30/20 04:45:05 </td>\n</tr>\n\n<tr>\n<td>\n e2315 </td>\n<td>\n 09/02/20 15:04:32 </td>\n</tr>\n\n<tr>\n<td>\n e304  </td>\n<td>\n 09/03/20 02:56:40 </td>\n</tr>\n\n<tr>\n<td>\n e2292 </td>\n<td>\n 09/03/20 17:12:32 </td>\n</tr>\n\n<tr>\n<td>\n e2388 </td>\n<td>\n 09/03/20 17:27:43 </td>\n</tr>\n\n<tr>\n<td>\n e1072 </td>\n<td>\n 09/07/20 00:58:36 </td>\n</tr>\n\n<tr>\n<td>\n e2337 </td>\n<td>\n 09/07/20 03:58:12 </td>\n</tr>\n\n<tr>\n<td>\n e313  </td>\n<td>\n 09/13/20 02:49:22 </td>\n</tr>\n\n<tr>\n<td>\n e2338 </td>\n<td>\n 09/18/20 19:01:31 </td>\n</tr>\n\n<tr>\n<td>\n e2357 </td>\n<td>\n 09/19/20 18:42:26 </td>\n</tr>\n\n<tr>\n<td>\n e0058 </td>\n<td>\n 09/20/20 06:00:19 </td>\n</tr>\n\n<tr>\n<td>\n e2358 </td>\n<td>\n 09/21/20 20:34:17 </td>\n</tr>\n\n<tr>\n<td>\n e065  </td>\n<td>\n 09/23/20 20:50:53 </td>\n</tr>\n\n<tr>\n<td>\n e346  </td>\n<td>\n 09/25/20 12:42:53 </td>\n</tr>\n\n<tr>\n<td>\n e2272 </td>\n<td>\n 09/25/20 17:30:33 </td>\n</tr>\n\n<tr>\n<td>\n e2010 </td>\n<td>\n 09/27/20 07:41:11 </td>\n</tr>\n\n<tr>\n<td>\n e355  </td>\n<td>\n 09/27/20 17:12:11 </td>\n</tr>\n\n<tr>\n<td>\n e2003 </td>\n<td>\n 09/30/20 03:08:53 </td>\n</tr>\n\n<tr>\n<td>\n e300  </td>\n<td>\n 09/30/20 19:20:06 </td>\n</tr>\n\n<tr>\n<td>\n e3233 </td>\n<td>\n 10/01/20 16:34:32 </td>\n</tr>\n\n<tr>\n<td>\n e232  </td>\n<td>\n 10/01/20 16:52:57 </td>\n</tr>\n\n<tr>\n<td>\n e3240 </td>\n<td>\n 10/01/20 19:27:54 </td>\n</tr>\n\n<tr>\n<td>\n e349  </td>\n<td>\n 10/01/20 19:45:45 </td>\n</tr>\n\n<tr>\n<td>\n e266  </td>\n<td>\n 10/01/20 20:37:47 </td>\n</tr>\n\n<tr>\n<td>\n e3239 </td>\n<td>\n 10/01/20 20:39:01 </td>\n</tr>\n\n<tr>\n<td>\n e074  </td>\n<td>\n 10/01/20 20:54:15 </td>\n</tr>\n\n<tr>\n<td>\n e3224 </td>\n<td>\n 10/01/20 21:05:53 </td>\n</tr>\n\n<tr>\n<td>\n e439  </td>\n<td>\n 10/01/20 21:09:39 </td>\n</tr>\n\n<tr>\n<td>\n e343  </td>\n<td>\n 10/02/20 09:36:33 </td>\n</tr>\n\n<tr>\n<td>\n e3113 </td>\n<td>\n 10/05/20 10:34:23 </td>\n</tr>\n\n<tr>\n<td>\n e290  </td>\n<td>\n 10/05/20 13:46:17 </td>\n</tr>\n\n<tr>\n<td>\n e2294 </td>\n<td>\n 10/05/20 14:51:02 </td>\n</tr>\n\n<tr>\n<td>\n e2387 </td>\n<td>\n 10/05/20 15:10:42 </td>\n</tr>\n\n<tr>\n<td>\n e3242 </td>\n<td>\n 10/05/20 16:10:40 </td>\n</tr>\n\n<tr>\n<td>\n e2356 </td>\n<td>\n 10/05/20 16:12:37 </td>\n</tr>\n\n<tr>\n<td>\n e228  </td>\n<td>\n 10/05/20 16:35:12 </td>\n</tr>\n\n<tr>\n<td>\n e275  </td>\n<td>\n 10/05/20 16:56:57 </td>\n</tr>\n\n<tr>\n<td>\n e420  </td>\n<td>\n 10/08/20 20:40:18 </td>\n</tr>\n\n<tr>\n<td>\n e406  </td>\n<td>\n 10/10/20 07:41:15 </td>\n</tr>\n\n<tr>\n<td>\n e261  </td>\n<td>\n 10/17/20 04:59:45 </td>\n</tr>\n\n<tr>\n<td>\n e302  </td>\n<td>\n 10/17/20 22:06:10 </td>\n</tr>\n\n<tr>\n<td>\n e2435 </td>\n<td>\n 10/18/20 13:48:40 </td>\n</tr>\n\n<tr>\n<td>\n e0137 </td>\n<td>\n 10/19/20 14:03:13 </td>\n</tr>\n\n</tbody></table>\n<p></p><hr/>\n<em>2020-Aug-21 08:37:20 by tim:</em> <br/>\n\nI am beginning to think that this is a memory corruption problem. When we reinstalled with a new version, the failures disappeared for about 3 weeks. Now, they are sporadically happening again.\n\n<p></p><hr/>\n<em>2020-Nov-09 12:19:34 by tim:</em> <br/>\n\nThis work moved to HTCondor-32</blockquote>", "derived_tickets": "", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/1050/e0381-ProcLog.old.2020_05_25_19\">e0381-ProcLog.old.2020_05_25_19</a>\n145261 bytes added by tim on 2020-May-27 17:00:07 UTC.\n<br/>\nProcd log around crash, search for \"Bye\"<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-May-28 13:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59724\">[59724]</a></span>: Add some logging to the procd when reading /proc. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=7661\" onclick=\"get_ticket_and_populate_wrapper('7661'); return false;\" title=\"condor_procd spontaneous EXCEPTs which causes a condor_startd EXCEPT\">#7661</a></span> Log the number of pid directories found, and if readdir() fails.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "incident", "last_change": "2020-Nov-09 12:20", "status": "abandoned", "created": "2020-May-23 14:02", "fixed_version": "2020-May-23 14:02", "broken_version": "", "priority": "2", "subsystem": "DaemonProcD", "assigned_to": "tlmiller", "derived_from": "", "creator": "tim", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "tannenba@cs.wisc.edu", "due_date": ""}