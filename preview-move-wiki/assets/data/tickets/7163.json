{"id": 7163, "title": "Ticket #7163: Schedd doesn't write core files after clone()", "description": "<blockquote>\nAfter any use of clone() in DaemonCore::Create_Process(), daemons will not write a core file on a crash. As the only current user of clone(), the schedd is the only affected daemon.\n\n<p>Glibc caches the pid and tid values for each thread in a process in an attempt to reduce calls it has to make to getpid() and gettid(). When clone() is called with the CLONE_VM flag, glibc sets these cached values to -1. They are never reset to the actual values. In DaemonCore's signal handler for SIGSEGV and friends, it calls raise() to re-raise a caught signal. The raise() call uses the cached pid and tid values to call the tgkill() syscall. This will fail with an EINVAL. DaemonCore's signal handler then fails back on _exit(4) to terminate the process.\n\n</p><p>Glibc's clearing of the cached pid and tid values will have consequences for a number of thread-related operations. So far, I haven't found a way to maintain or restore the proper cached values via any public interface.\n\n</p><p>Linus's opinion on glibc caching these values is entertaining: <a class=\"external\" href=\"https://yarchive.net/comp/linux/getpid_caching.html\">https://yarchive.net/comp/linux/getpid_caching.html</a>\n\n</p><p>To fix this, I plan to call kill() instead of raise() in DaemonCore's signal handler. The use of clone() will likely cause other bugs if/when we employ actual threads in the schedd.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Aug-07 13:08:54 by gthain:</em> <br/>\n\n<strong>CODE REVIEW</strong> Looks good.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jul-25 11:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57485\">[57485]</a></span>: Docs for daemons not writing core files after clone() fix. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7163\" onclick=\"get_ticket_and_populate_wrapper('7163'); return false;\" title=\"Schedd doesn't write core files after clone()\">#7163</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jul-24 11:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57469\">[57469]</a></span>: Schedd doesn't write core files after clone(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7163\" onclick=\"get_ticket_and_populate_wrapper('7163'); return false;\" title=\"Schedd doesn't write core files after clone()\">#7163</a></span> On linux, after a call to clone() with flag CLONE_VM, calls to raise() will fail. This is due to cached values for the current pid and tid in glibc being invalidated. To work around this, we call kill() instead.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Aug-07 13:09", "status": "resolved", "created": "2019-Jul-24 11:45", "fixed_version": "2019-Jul-24 11:45", "broken_version": "", "priority": "4", "subsystem": "Libs", "assigned_to": "gthain", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "", "due_date": ""}