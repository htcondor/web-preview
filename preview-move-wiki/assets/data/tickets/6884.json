{"id": 6884, "title": "Ticket #6884: Do not perform a network turnaround for each file transfer", "description": "<blockquote>\nTurns out that HTCondor's file transfer performs a network turnaround (roundtrip communication between shadow and starter) for each file transferred by File Transfer.  This is really unfortunate as it hurts network throughput due to i) latency (esp if submit and execute host are separated by the WAN), and ii) by preventing the TCP window from filling up, esp if many small files are being transferred.\n\n<p>Prior to any command sent by the file transfer object, the object will check to see if it needs a go-ahead from its peer.\n\n</p><p>The <code>condor_starter</code> gives a \"go-ahead always\", meaning that the shadow never again waits.  The <code>condor_shadow</code> gives a \"go-ahead once\", meaning the transfers between the shadow and starter requires a round trip between peers to finish.\n\n</p><p>If <code>condor_shadow</code> is configured to not limit transfers (<code>MAX_CONCURRENT_UPLOADS=0</code> or <code>MAX_CONCURRENT_DOWNLOADS=0</code>), then it will always send a \"go-ahead always\" without acquiring a transfer token.  Additionally, the <code>condor_shadow</code> will send a \"go-ahead always\" after it has acquired the token <em>only if</em> <code>MAX_CONCURRENT_UPLOADS=0</code>.  This appears to be dead code as, in this case, the shadow never acquires the token!\n\n</p><p>Currently, once a transfer token is received, the shadow <strong>never</strong> relinquishes it\u00a0and it does not appear to expire.  Accordingly, it appears the starter always requests a go-ahead and the shadow provides one unconditionally without contacting the schedd.\n\n</p><p>This setup appears to serve no purpose.  We should have the shadow send a \"go-ahead always\" once it gets the transfer token.  I believe this change is of minimal risk: if, in the future, we decide the token should be a lease (or go back to the \"go-ahead once\" behavior), the change is shadow-side only.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Jan-30 14:31:19 by tannenba:</em> <br/>\n\nPerhaps this patch should be merged into v8.8?\n\n<p></p><hr/>\n<em>2019-Jan-30 14:33:36 by bbockelm:</em> <br/>\n\nA backport wouldn't be a bad idea.  Just to be conservative, my preference would be to wait until we have a 8.9.x with this that CHTC is happy with.\n\n<p>I consider this a 9-year-old bug given that code exists to make this asynchronous already -- but the code was unreachable!  Hence, it's a late-coming bugfix.\n\n</p><p></p><hr/>\n<em>2019-Jan-31 16:40:44 by tannenba:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>Patch looks good.  I confirmed it works as expected; in the <code>ShadowLog</code> immediately after receiving the transfer token from the schedd:\n\n</p><p></p><pre>   Sending GoAhead for 127.0.0.1 to receive C:\\condor\\test\\first_file.sub\n</pre>\n\n<p>With the patch it now says:\n\n</p><p></p><pre>   Sending GoAhead for 127.0.0.1 to receive C:\\condor\\test\\first_file.sub and all further files.\n</pre>\n\n<p>Also confirmed by inspecting shadowlog and starterlog with D_NETWORK enabled that there are no longer any network turnarounds between each file being sent.  Woot!\n\n</p><p>Only comments are:\n</p><ol>\n<li>Needs an entry in the version history (I'll add that).\n</li><li>For such a simple/small patch, suggest in the future just pushing to master branch in git instead of creating a topic branch.\n</li><li>Upon release if HTCondor v8.9.1 (i.e. after surviving beta testing), I think this patch should be backported to the stable series.\n</li><li>Would be great to take some measurements of the performance improvement resulting from this patch (perhaps by simulating some WAN latency)</li></ol>\n</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7000\" onclick=\"get_ticket_and_populate_wrapper('7000'); return false;\" title=\"Back port #6884 to Stable\">#7000</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nBack port <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6884\" onclick=\"get_ticket_and_populate_wrapper('6884'); return false;\" title=\"Do not perform a network turnaround for each file transfer\">#6884</a></span> to Stable</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jan-31 16:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56100\">[56100]</a></span>: documentation update for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6884\" onclick=\"get_ticket_and_populate_wrapper('6884'); return false;\" title=\"Do not perform a network turnaround for each file transfer\">#6884</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jan-29 22:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56091\">[56091]</a></span>: Do not have starter check if transfer token is valid. Transfer token is valid for the entirety of the session: there's no need to have the starter ask the shadow if it is OK to proceed as the answer has always been \"yes\" for as long as there has been a file transfer token.  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-Jan-31 16:51", "status": "resolved", "created": "2019-Jan-29 18:36", "fixed_version": "2019-Jan-29 18:36", "broken_version": "", "priority": "2", "subsystem": "FileTransfer", "assigned_to": "tannenba", "derived_from": "#6885", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "bbockelman@morgridge.org; tannenba@cs.wisc.edu", "due_date": ""}