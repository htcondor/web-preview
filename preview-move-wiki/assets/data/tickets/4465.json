{"id": 4465, "title": "Ticket #4465: Improve DAEMON_SOCKET_DIR", "description": "<blockquote>\nI sat down to merge <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3813\" onclick=\"get_ticket_and_populate_wrapper('3813'); return false;\" title=\"shared port should be enabled by default\">#3813</a></span> and was surprised to see <strong>BOOM</strong> - tests fail across the board.\n\n<p>It turns out that the default value of DAEMON_SOCKET_DIR is $(LOCK)/daemon_sock; unfortunately, $(LOCK) is sometimes a deeply nested directory and DAEMON_SOCKET_DIR results in being more than 100 characters long.  In turn, the name of shared port sockets is more than 108 characters, which is the limit for Unix sockets, resulting in the master excepting.\n\n</p><p>So, unfortunately, we must handle this situation better before USE_SHARED_PORT can be set by default.  We expect this would be a common situation for glideins - I suspect this will render CMS unable to use shared port on the execute side for now.  Bummer.\n\n</p><p>I propose the following solution:\n\n</p><p></p><ul>\n<li>On Unix platforms, default DAEMON_SOCKET_DIR to \"auto\"; this results in the current default of $(LOCK)/daemon_sock <strong>or</strong> have mkstemp create a directory of the form /tmp/condor_daemon_sock_XXXXX.\n</li><li>The value of DAEMON_SOCKET_DIR is encoded in the environment of any daemon core process when launched via Create_Process.  This causes an entire process tree to agree on the value in the case where it is randomly generated.\n  *: The master is responsible for cleaning this directory on graceful exit.\n</li><li>On Linux, we use abstract Unix domain sockets of the form condor_daemon_sock_XXXXX/$ID.  Thus, the sockets will get automatically cleaned when the process exits; DAEMON_SOCKET_DIR effectively does not exist on the filesystem.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2014-Jul-17 12:36:26 by tannenba:</em> <br/>\n\nI would love to use abstract domain sockets... do they exist on MacOS as well, or only Linux?  Also, do we know if the limit on the path name size exists primarily just on linux and other platforms like macos have more reasonable size limits?  If there is no such silly path name size limit on MacOS, perhaps we can just use abstract domain socks on Linux and keep everything else the same on macos and friends.\n\n<p></p><hr/>\n<em>2014-Jul-17 13:56:18 by bbockelm:</em> <br/>\n\nAbstract domain sockets are, unfortunately, Linux-only.  They do seem to work perfectly for what we need, however.\n\n<p>The limit on the path name seems to be uniform across the Unix platforms; when I ran the default shared port branch through the unit tests, they all blew up.\n\n</p><p>Batlab tests look good so far (still in progress) with this branch.  I'll try to merge it into V8_3-gt3813 and see how much that helps.  There may still be some testing framework changes we need to do for that branch (not certain).\n\n</p><p></p><hr/>\n<em>2014-Jul-17 21:11:17 by bbockelm:</em> <br/>\n\nOk, this passed all the batlab tests and I can confirm <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3813\" onclick=\"get_ticket_and_populate_wrapper('3813'); return false;\" title=\"shared port should be enabled by default\">#3813</a></span> now passes on most platforms when merged with this branch (some Windows issues remain...).  Todd, can you do a review before I commit?\n\n<p></p><hr/>\n<em>2014-Jul-17 21:27:48 by bbockelm:</em> <br/>\n\nIgor pointed out the DAEMON_SOCKET_DIR documentation gives an example of where condor_ssh_to_job needs access to DAEMON_SOCKET_DIR (when the execute node is behind the CCB and the condor_ssh_to_job is run on a node where shared port is used).\n\n<p>Since abstract sockets have no filesystem permissions, I considered the location of the \"directory\" for a HTCondor instance to be a secret.  Now, we could allow it to divulge the secret if configured to do so -- or, alternately, open a FD on behalf of the client and use file descriptor passing techniques to give an endpoint to the client without letting it know where it came from.\n\n</p><p>Thoughts?\n\n</p><p></p><hr/>\n<em>2014-Jul-23 08:03:38 by bbockelm:</em> <br/>\n\nReviewed this with Jaime on the phone.  After a bit more tuning in batlab, I merged this in last night.\n\n<p></p><hr/>\n<em>2014-Jul-25 10:49:47 by jfrey:</em> <br/>\n\nI'm starting a review of the actual code now, and this ticket can't be resolved yet. So far, I've found that the code in DaemonCore::Create_Process() to handle CONDOR_PRIVATE_SHARED_PORT_COOKIE is dead code. It's wrapped in linux-only and windows-only ifdef's. And the code won't compile if it isn't dead.\n\n<p></p><hr/>\n<em>2014-Jul-25 15:48:02 by jfrey:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>* Code in DaemonCore::Create_Process() is wrapped in nested linux-only\nand win32-only ifdefs, so it's never compiled. On linux, there's no\n'newnev' object, so the code won't compile anyway. As it is, the\nCONDOR_PRIVATE_SHARED_PORT_COOKIE environment variable will be inherited\nby all child processes where we don't explicitly scrub the whole\nenvironment, including user jobs.\n\n</p><p>* In DaemonCore::Create_Process(), when we don't want the child process\nto receive the CONDOR_PRIVATE_SHARED_PORT_COOKIE value, we should remove\nthe variable from the environment, not set it to \"unavailable\". This\nwould require adding a remove method to the Env class.\n\n</p><p>* In SharedPortClient::PassSocket(), change pipe_name to\na std::string and eliminate tmp_name.\n\n</p><p>* In SharedPortState::HandleUnbound(), is a stringstream and extra\ncopying better than using formatstr_cat()? This also makes the\nconstruction of the socket name different than in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SharedPortEndpoint\" title=\"Shared Port Endpoint\">SharedPortEndpoint</a></span>,\nwhich uses formatstr().\n\n</p><p>* In SharedPortState::HandleUnbound(), if there is no primary socket\nname (because there's no CONDOR_PRIVATE_SHARED_PORT_COOKIE set) and the\nalternate socket name is too long, then the helpful error message about\nthe name being too long isn't printed. It will instead attempt and fail\nto connect to a bogus primary socket name.\n\n</p><p>* I'd prefer a more descriptive name than USE_ABSTRACT, like\nUSE_ABSTRACT_DOMAIN_SOCKET.\n\n</p><p>* In SharedPortEndpoint::RealInitializeDaemonSocketDir(), the string\npointed at by keybuf is leaked.\n\n</p><p>* In <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SharedPortEndpoint\" title=\"Shared Port Endpoint\">SharedPortEndpoint</a></span>, you use a socket name of \"collector\" to see if\nthe full socket pathname will be too long. You should use a longer test\nname. Right now, our pool has a daemon with a shared port sock named\n\"15337_9022_90\".\n\n</p><p>* In <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SharedPortEndpoint\" title=\"Shared Port Endpoint\">SharedPortEndpoint</a></span>, I think we should also do the length check\nwhen DAEMON_SOCKET_DIR is set to something other than \"auto\", and refuse\nto use any DAEMON_SOCKET_DIR path that's too long.\n\n</p><p></p><hr/>\n<em>2014-Jul-29 11:35:45 by bbockelm:</em> <br/>\n\nHi Jaime,\n\n<p>I think I took care of all the issues in the latest commit.  I'm running through batlab currently and will merge to master if it succeeds.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2014-Jul-31 13:45:54 by jfrey:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>The new changes look good.\n\n</p><p>My only comment is that you should match the indenting style of the surrounding code (tabs vs spaces). There's at least one place where you didn't.</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4603\" onclick=\"get_ticket_and_populate_wrapper('4603'); return false;\" title=\"DAEMON_SOCKET_DIR=auto breaks partial use of shared port\">#4603</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nDAEMON_SOCKET_DIR=auto breaks partial use of shared port</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4678\" onclick=\"get_ticket_and_populate_wrapper('4678'); return false;\" title=\"macro_expand() ignores default param values\">#4678</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nmacro_expand() ignores default param values</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Sep-11 10:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/796c7a85823118ae5e0bd1b242a2974fac70de97\">[41144]</a></span>: Edits of the edits. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4465\" onclick=\"get_ticket_and_populate_wrapper('4465'); return false;\" title=\"Improve DAEMON_SOCKET_DIR\">#4465</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Sep-10 15:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/096a60f249f978a1c2babd783381f72e96730f38\">[41137]</a></span>: Clarify the new behavior of DAEMON_SOCKET_DIR. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4465\" onclick=\"get_ticket_and_populate_wrapper('4465'); return false;\" title=\"Improve DAEMON_SOCKET_DIR\">#4465</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Aug-20 14:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/02398ea209ad287950f5df0bdc8794095aa37f70\">[41002]</a></span>: edit 8.3.1 version history item, and update DAEMON_SOCKET_DIR definition, since it changed. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4465\" onclick=\"get_ticket_and_populate_wrapper('4465'); return false;\" title=\"Improve DAEMON_SOCKET_DIR\">#4465</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Jul-29 13:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/647042496f6dfc2b0eb58013e6017c1b38eedc3f\">[40795]</a></span>: Address issues from code review. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4465\" onclick=\"get_ticket_and_populate_wrapper('4465'); return false;\" title=\"Improve DAEMON_SOCKET_DIR\">#4465</a></span> Most notable is that we now delete the cookie from the environment instead of setting it to 'unavailable'. This will likely work better with glidein-like nested HTCondor environments.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Jul-29 11:29</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/ba7330bd4e1d0b403bc909e6174cb4101ad5d2d9\">[40785]</a></span>: Address issues from code review. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4465\" onclick=\"get_ticket_and_populate_wrapper('4465'); return false;\" title=\"Improve DAEMON_SOCKET_DIR\">#4465</a></span> Most notable is that we now delete the cookie from the environment instead of setting it to 'unavailable'. This will likely work better with glidein-like nested HTCondor environments.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Jul-22 20:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/d20a01e09f20ebcec7cbcc0b60ebcb1ec0e63304\">[40727]</a></span>: Fixups for Windows based on batlab tests. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4465\" onclick=\"get_ticket_and_populate_wrapper('4465'); return false;\" title=\"Improve DAEMON_SOCKET_DIR\">#4465</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Jul-21 09:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/45f2d2a298de1566f94990b77f35f04458d6c28d\">[40707]</a></span>: Allow shared_port to fall back to local directory. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4465\" onclick=\"get_ticket_and_populate_wrapper('4465'); return false;\" title=\"Improve DAEMON_SOCKET_DIR\">#4465</a></span> In some cases, we don't actually want to use the abstract namespaces - for example, if a client (condor_ssh_to_job) wants to register a socket with the shared port. Hence, we allow fallback to the old style DAEMON_SOCKET_DIR.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Jul-17 12:32</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0a9fabc8d4d69766f473b510b3ec3a66cc04adde\">[40695]</a></span>: Gracefully handle long DAEMON_SOCKET_DIR path names. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4465\" onclick=\"get_ticket_and_populate_wrapper('4465'); return false;\" title=\"Improve DAEMON_SOCKET_DIR\">#4465</a></span> With this commit, all platforms will be able to handle arbitrarily long DAEMON_SOCKET_DIR names. Previously, they were limited to 108 characters due to how Unix domain sockets work.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2014-Sep-10 15:21", "status": "resolved", "created": "2014-Jul-16 21:27", "fixed_version": "2014-Jul-16 21:27", "broken_version": "", "priority": "3", "subsystem": "DaemonSharedP", "assigned_to": "tannenba", "derived_from": "#3813", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "tannenba@cs.wisc.edu, burt@fnal.gov, bbockelm@cse.unl.edu", "due_date": ""}