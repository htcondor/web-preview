{"id": 444, "title": "Ticket #444: Increasing DAGMan throughput with condor_submit", "description": "<blockquote>\nIf DAGMan has 1000 ready nodes and is told it may submit all of them, then it will do one submit per ready node. It would be much nicer if dagman could collect all of the submit files, concatenate them in memory, then blast them all to the schedd in <strong>one condor_submit</strong> using its stdin as a pipe. There would still just be one cluster node per dag node in this model, it would just increase the throughput of the jobs submitted into Condor.\n\n<p>It would seem that a new feature would have to be added to condor_submit's parsing of its submit file, that of the keyword \"newcluster\" which would reset everything back to default for a new cluster to be described after the keyword. Multiple uses of the keyword may appear.\n\n</p><p>A small performance test needs to be written to see if 100,000 jobs submitted individually, or 100,000 jobs in one submit file submitted with one condor_q would be faster. If faster, this ticket should stay, if equal or slower, then this ticket should be abandoned as it won't increase throughput.\n\n</p><p>Things in dagman that would have to change would be the condor_submit parsing code, and the submission code for the ready node list.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Apr-30 16:08:05 by psilord:</em> <br/>\n\nAfter having a conversation with Dan about it, this is what he had to say:\n\n<p></p><div class=\"verbatim\">\n<pre>(16:00:13) Peter Keller: Hey, if I submitted 100,000 clusters into Condor with individual submits, or with a gigantic file and one submit, which do you think would be faster? After both submits the job ad information would be identical in the schedd.\n(16:01:12) Dan Bradley: I think the individual submit file would be faster.\n(16:01:21) Dan Bradley: But not by much\n(16:01:46) Peter Keller: What do you think is the limiting factor?\n(16:04:22) Dan Bradley: In my recent submit speed tests, I found that the time it takes for submit to initialize itself (reading config etc.) has a cost.  Running 5 submit loops in parallel is faster.  Behond that, there's not much gain.\n(16:04:54) Dan Bradley: The peak submit rate (with ~5 submit loops) is about 30% higher than with a single submit loop.\n(16:05:15) Dan Bradley: Therefore, I'd guess about the same performance difference for a single submit vs. a submit loop.\n(16:05:29) Peter Keller: Interesting. Thanks!\n</pre></div>\n\n\n<p>So, initially, maybe this wouldn't buy us anything. Someone would have to look closely at Dan's submit speed tests and see if an advantage would be had.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2010-Jan-31 13:21", "status": "new", "created": "2009-Apr-30 15:58", "fixed_version": "2009-Apr-30 15:58", "broken_version": "", "priority": "4", "subsystem": "Dag", "assigned_to": "", "derived_from": "", "creator": "psilord", "rust": "", "customer_group": "other", "visibility": "public", "notify": "psilord@cs.wisc.edu, wenger@cs.wisc.edu", "due_date": ""}