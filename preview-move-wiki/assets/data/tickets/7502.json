{"id": 7502, "title": "Ticket #7502: Avoid blocking i/o in shared port daemon", "description": "<blockquote>\nTimT found the following fascinating stack trace:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">Caught signal 6: si_code=0, si_pid=9444, si_uid=0, si_addr=0x24E4\nStack dump for process 8755 at timestamp 1581382147 (24 frames)\n/usr/lib64/libcondor_utils_8_9_5.so(dprintf_dump_stack+0x24)[0x7fada53bdeb4]\n/usr/lib64/libcondor_utils_8_9_5.so(_Z17unix_sig_coredumpiP9siginfo_tPv+0x69)[0x7fada5572d69]\n/usr/lib64/libpthread.so.0(+0xf5f0)[0x7fada361b5f0]\n/usr/lib64/libpthread.so.0(recv+0x1d)[0x7fada361aa4d]\n/usr/lib64/libcondor_utils_8_9_5.so(_Z11condor_readPKciPciiib+0x358)[0x7fada5508cf8]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN8ReliSock6RcvMsg10rcv_packetEPKcii+0xf5)[0x7fada550a685]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN8ReliSock9get_bytesEPvi+0x3c)[0x7fada5509dbc]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN6Stream3getERi+0x1c)[0x7fada551890c]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN15SharedPortState10HandleRespERP6Stream+0x3c)[0x7fada55145fc]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN15SharedPortState6HandleEP6Stream+0x61)[0x7fada5515821]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN16SharedPortClient10PassSocketEP4SockPKcS3_b+0xa1)[0x7fada5515a51]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN8ReliSock28do_shared_port_local_connectEPKcbS1_+0x10f)[0x7fada551304f]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN4Sock15special_connectEPKcib+0x24d)[0x7fada5512a6d]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN4Sock10do_connectEPKcib+0x77)[0x7fada54f0337]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN6Daemon11connectSockEP4SockiP11CondorErrorbb+0x50)[0x7fada5528220]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN6Daemon8reliSockEilP11CondorErrorbb+0x64)[0x7fada55286c4]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN11DCMessenger12startCommandE18classy_counted_ptrI5DCMsgE+0x2cb)[0x7fada554707b]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN6Daemon7sendMsgE18classy_counted_ptrI5DCMsgE+0x6d)[0x7fada552758d]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN15DaemonKeepAlive17SendAliveToParentEv+0x321)[0x7fada554c931]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN12TimerManager7TimeoutEPiPd+0x280)[0x7fada554e2c0]\n/usr/lib64/libcondor_utils_8_9_5.so(_ZN10DaemonCore6DriverEv+0x8d1)[0x7fada5562311]\n/usr/lib64/libcondor_utils_8_9_5.so(_Z7dc_mainiPPc+0x1712)[0x7fada5577792]\n/usr/lib64/libc.so.6(__libc_start_main+0xf5)[0x7fada3260505]\ncondor_shared_port[0x400d89]\n</pre></div>\n\n\n<p>The shared port daemon appears to blocked in <code>recv()</code> when the master kills it.\n\n</p><p></p><ul>\n<ol>\n<li>There's a comment in <code>SharedPortState::HandleResp()</code> describing how this <code>recv()</code> is the only blocking part of the socket hand-off protocol, and how it's only necessary on Mac OS X 10.5.8, which is hilariously obsolete at this point.\n<ol>\n<li>We should try disabling this code on all other platforms.\n</li><li>We should test to see if this code is required at all (with newer MacOS X versions).\n</li></ol>\n</li><li>Should we be worried that the master isn't picking up its sockets?  Note that this hand-off occurs during <code>DaemonKeepAlive::SendAliveToParent()</code>, via <code>ReliSock::do_shared_port_local_connect()</code>.  What was the master doing?</li></ol>\n</ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2020-Feb-11 13:42:09 by tlmiller:</em> <br/>\n\nThe relevant portion of the master log appears to be:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">02/10/20 18:02:27 (D_ALWAYS) SECMAN: Succesfully sent DC_SEC_QUERY classad to &lt;128.105.244.176:38373&gt;!\nAuthorizationSucceeded = true\n02/10/20 18:48:58 (D_ALWAYS) ERROR: Child pid 8755 appears hung! Killing it hard\n</pre></div>\n\n<hr/>\n<em>2020-Apr-10 07:43:03 by tim:</em> <br/>\n\nBulk change of target version from v080808 to v080809 using ticket-target-mover.\n\n<p></p><hr/>\n<em>2020-Jul-28 13:12:58 by jfrey:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>This code looks good.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-21 11:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60170\">[60170]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7502\" onclick=\"get_ticket_and_populate_wrapper('7502'); return false;\" title=\"Avoid blocking i/o in shared port daemon\">#7502</a></span>) Release note.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Mar-11 17:15</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59134\">[59134]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7502\" onclick=\"get_ticket_and_populate_wrapper('7502'); return false;\" title=\"Avoid blocking i/o in shared port daemon\">#7502</a></span>) Remove the Mac OS X -specific code in shared port socket handoff.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Mar-09 15:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59103\">[59103]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7502\" onclick=\"get_ticket_and_populate_wrapper('7502'); return false;\" title=\"Avoid blocking i/o in shared port daemon\">#7502</a></span>) Disable blocking ACK in shared port socket handoff protocol for all platforms other than MacOS X.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2020-Jul-28 13:13", "status": "resolved", "created": "2020-Feb-11 13:39", "fixed_version": "2020-Feb-11 13:39", "broken_version": "", "priority": "2", "subsystem": "Libs", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, tim@cs.wisc.edu", "due_date": ""}