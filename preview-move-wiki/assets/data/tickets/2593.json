{"id": 2593, "title": "Ticket #2593: Issues when teaching Condor to students", "description": "<blockquote>\nHi all,\n\n<p>We teach a \"Grid and Cluster Computing\" course once every 3 semesters, and today was our first hands-on day with building Condor clusters.  I'm opening this ticket to record all the issues students ran into, under the assumption that other new Condor admins will hit the same things.  In no particular order:\n\n</p><p>1) Security is a nightmare to ease folks in on.  See <a class=\"external\" href=\"https://condor-wiki.cs.wisc.edu/index.cgi/tktview?tn=2320\">https://condor-wiki.cs.wisc.edu/index.cgi/tktview?tn=2320</a> <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=2320\" onclick=\"get_ticket_and_populate_wrapper('2320'); return false;\" title=\"Improve security configuration in 7.7.x\">#2320</a></span>.  You either tell folks to run things insecure until they understand it, or spend a huge amount of time going over auth policies.  I really like the idea of a \"permissive mode\" where the collector will distribute security tokens to anyone that connects, then is later turned off.\n\n</p><p>2) We had an issue where a student got <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=InstanceLock\" title=\"Instance Lock\">InstanceLock</a></span> to exist, but the condor_master appeared to be dead.  When he did \"service condor restart\", Condor failed because it couldn't get the instance lock.  Is advisory locking not working correctly?  If another daemon actually has the lock, we should print out the PID of the \"other guy\" so the sysadmin can go searching for it.\n\n</p><p>3) If there is unparseable garbage in the config file, \"service condor start\" fails with: \"FATAL: Unable to locate LOG in /etc/condor/condor_config\" (regardless of what file or line is unparseable; always references LOG).  This is specific to the UW RPM.\n\n</p><p>4) ALLOW_WRITE=* does not imply ALLOW_NEGOTIATOR by default.  We had an issue where the CONDOR_HOST mapped to the external interface name, and the negotiator would contact the startd on the internal interface.  This was fine by ALLOW_WRITE, but ALLOW_NEGOTIATOR=$(CONDOR_HOST), and the $(CONDOR_HOST) interface was not used.\n\n</p><p>4b) In the permission denied message, we should at least print out who has permission to that access level.  It took me quite awhile to figure it out.\n\n</p><p>Overall, much better than last time we taught this course, as we switched to the RPM.  Got 5 working student clusters in a class period.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "todo", "last_change": "2011-Oct-27 14:37", "status": "new", "created": "2011-Oct-27 14:37", "fixed_version": "2011-Oct-27 14:37", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "attebury@cse.unl.edu", "due_date": ""}