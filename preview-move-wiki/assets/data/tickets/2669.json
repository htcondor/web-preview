{"id": 2669, "title": "Ticket #2669: race condition in hibernation", "description": "<blockquote>\nIn linux, after initiating hibernation, the startd sleeps for 10 seconds and then resumes normal operation.  If hibernation completes within the sleep, all is well.  If hibernation does not complete until after the end of the sleep, the startd will likely send a new ad to the collector, which has the side-effect of removing its persistent offline ad.  Then when hibernation happens, the startd will have no offline ad to represent it.  Therefore, the machine will never be woken by rooster and must be revived by some other means.\n\n<p>It is not clear to me if a similar problem affects windows.  The sleep(10) does not happen, but the issue is clouded by a confusing comment in the code that suggests hibernation is still asynchronous.\n\n</p><p>I can think of two possible lines of attack:\n\n</p><p></p><ol>\n<li>make the switch to hibernation block until complete\n\n<p></p></li><li>revamp the concept of offline ads so that they are not lost when the machine advertises its online status\n</li></ol>\n\n<p>The second option sounds more fault-tolerant, but will require more thought.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2011-Dec-07 14:31", "status": "new", "created": "2011-Nov-28 11:16", "fixed_version": "2011-Nov-28 11:16", "broken_version": "v070600", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "#2564", "creator": "danb", "rust": "", "customer_group": "other", "visibility": "public", "notify": "dan@hep.wisc.edu, tstclair@redhat.com", "due_date": ""}