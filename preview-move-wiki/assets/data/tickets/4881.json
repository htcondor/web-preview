{"id": 4881, "title": "Ticket #4881: Eliminate or expand addrinfo_iterator::ipv6", "description": "<blockquote>\naddrinfo_iterator (<a class=\"file\" href=\"rlog?f=src/condor_includes/ipv6_addrinfo.h\">/src/condor_includes/ipv6_addrinfo.h</a> and <a class=\"file\" href=\"rlog?f=src/condor_utils/ipv6_addrinfo.cpp\">/src/condor_utils/ipv6_addrinfo.cpp</a>) has a member variable \"ipv6\", which identifies if ENABLE_IPV6=TRUE. If present, IPv6 addresses will be returned; otherwise they'll be skipped. (We can't just filter using getaddrinfo; at least OS we support has a buggy implementation.)\n\n<p>But, the filtering should not be necessary!  Currently if ENABLE_IPV4=FALSE, ENABLE_IPV6=TRUE, any code walking addrinfo_iterator will get IPv4 addresses, despite IPv4 being disabled. As far as we know, it works just fine.  This suggests we can just get rid of addrinfo_iterator::ipv6 and all code paths where it is false.\n\n</p><p>However, it's possible that it's actually broken, in which case addrinfo_iterator probably needs a member variables ipv4 and to do similar filtering.\n\n</p><p>Plan:\n\n</p><p></p><ul>\n<li>Are there any problems when ENABLE_IPV4=FALSE, ENABLE_IPV6=TRUE\n<ul>\n<li>Yes: Add addrinfo_iterator::ipv4 with parallel logic.  (Actually, you might want to generalize. set of ints representing ai_familys that we accept?)\n</li><li>No: Remove the addrinfo_iterator::ipv6 code. Now does ENABLE_IPV4=TRUE, ENABLE_IPV6=FALSE work?\n<ul>\n<li>Yes: Huzzah!\n</li><li>No: Revert the previous step, be baffled, documented bafflement here, close ticket.</li></ul>\n</li></ul>\n</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2017-Dec-21 13:30:04 by jfrey:</em> <br/>\n\nThere are problems with ENABLE_IPV4=FALSE, ENABLE_IPV6=TRUE. When the collector is given as a hostname that resolves to both IPv4 and IPv6 addresses, the Daemon client object will happily try to use the IPv4 address, which may not work.\n\n<p>In the getaddrinfo() bug described in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4838\" onclick=\"get_ticket_and_populate_wrapper('4838'); return false;\" title=\"HTCondor 8.3.3 excepts on start-up on SL 6.3\">#4838</a></span>, the second record returned was complete garbage, including ai_family. I propose we eliminate addrinfo_iterator::ipv6 and restore filtering based on the family in the hint argument to getaddrinfo(). Add in filtering out IPv4 records if ENABLE_IPV4=False. Keep the code from <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4838\" onclick=\"get_ticket_and_populate_wrapper('4838'); return false;\" title=\"HTCondor 8.3.3 excepts on start-up on SL 6.3\">#4838</a></span> that skips records with unknown ai_family values.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Jan-17 16:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=53156\">[53156]</a></span>: Docs for ignoring IPv4 DNS results when ENABLE_IPV4=False. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4881\" onclick=\"get_ticket_and_populate_wrapper('4881'); return false;\" title=\"Eliminate or expand addrinfo_iterator::ipv6\">#4881</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Jan-12 14:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=53134\">[53134]</a></span>: Remove unused variables. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4881\" onclick=\"get_ticket_and_populate_wrapper('4881'); return false;\" title=\"Eliminate or expand addrinfo_iterator::ipv6\">#4881</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Jan-09 15:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=53123\">[53123]</a></span>: Simplify code that processes results of getaddrinfo(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4881\" onclick=\"get_ticket_and_populate_wrapper('4881'); return false;\" title=\"Eliminate or expand addrinfo_iterator::ipv6\">#4881</a></span> ai_canonname is non-NULL only in the first item returned by getaddrinfo(), and addrinfo_iterator maintains this behavior. There's no need to iterate over multiple items.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Jan-09 14:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=53122\">[53122]</a></span>: Add comment about code that could be removed. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4881\" onclick=\"get_ticket_and_populate_wrapper('4881'); return false;\" title=\"Eliminate or expand addrinfo_iterator::ipv6\">#4881</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Dec-21 13:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=53056\">[53056]</a></span>: Allow ignoring of IPv4 reults from getaddrinfo(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4881\" onclick=\"get_ticket_and_populate_wrapper('4881'); return false;\" title=\"Eliminate or expand addrinfo_iterator::ipv6\">#4881</a></span> IPv4 results are no longer returned by ipv6_getaddrinfo() when ENABLE_IPV4=False. Filtering of IPv4 and IPv6 results is now done via the hint paremeter in getaddrinfo(), instead of in the iterator of results. Before this patch, clients with ENABLE_IPV4=False\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2018-Jan-17 16:23", "status": "resolved", "created": "2015-Feb-11 13:32", "fixed_version": "2015-Feb-11 13:32", "broken_version": "v080304", "priority": "4", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}