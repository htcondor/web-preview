{"id": 6379, "title": "Ticket #6379: Job cluster completion and progress notification", "description": "<blockquote>\nNote that notifications from Dagman are beyond the scope of this ticket.  This ticket is about notifications implemented in the Schedd.\n\n<p>Email notification on completion of a single job is fairly useless in a world where users are running hundreds or even tens of thousands of jobs - what is need is notifications that work at the cluster level or even at the batch level.\n\n</p><p>Some expected use cases\n\n</p><p></p><ul>\n<li>I want to know when all of my jobs have completed (i.e. left the queue).\n</li><li>I want to know when my job has started running. (i.e. high memory jobs)\n</li><li>I want to know if any, all, or some number of my jobs go on hold\n</li><li>I want to know when my jobs is no longer making progress (i.e. either finished, or on hold, or the dag/materialization factory has been paused)\n</li><li>I want periodic (daily?) updates on the progress of my jobs.\n</li></ul>\n\n<p>The current design for notification consists of two statements in the submit file.\n</p><div class=\"code\">\n<pre class=\"code\">notification = NEVER|COMPLETE|ERROR|ALWAYS\nnotify_user = &lt;email_or_username&gt;\n</pre></div>\n\nThese attributes are checked on each shadow exit, and an email is either sent or not based on the shadow exit code and the notification value.\n\n<p>I propose to \"embrace and extend\" this mechanism by redefining the notification mechanism so it is triggered by CLUSTER removal rather than shadow exit, and/or by periodic expression evaluation.  The user interface for this will be 2 new submit statements and 4 new options for the <code>notification</code> keyword.\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">notification = NEVER|COMPLETE|ERROR|ALWAYS|START|HOLD|PERIODIC|STUCK\nnotification_requirements = &lt;expr&gt;\nnotification_rate = &lt;number&gt;[&lt;units&gt;]\nnotify_user = &lt;email_or_username&gt;\n</pre></div>\n\n\n<p>This would have the effect of changing the notification for multi-proc jobs from one per job to one for all of the jobs.  This is a better fit for all of the use cases listed above.  There will be a SCHEDD knob to allow the old per-proc notification behavior, <strong>and</strong> a new job attribute that must be set in order for a user to opt in to the old per-proc notification behavior on schedds that allow it.\n\n</p><p>Multiple values will be allowed for the notification keyword in the submit file, for instance this: </p><div class=\"code\">\n<pre class=\"code\">notification = start,complete,stuck</pre></div>\n would result in notifications being sent when the first job starts, when the cluster is no longer capable of making progress or when the jobs are all complete.\n\n<p>There will be two trigger points in the schedd for the new notification behavior for multi-proc jobs (single proc jobs will still use the shadow for notifications)\n\n</p><p></p><ol>\n<li>When the cluster object is removed, a final notification may be sent.\n</li><li>Periodically, (5 minute intervals?) an expression will be evaluated against the cluster object, when it triggers - and if the previous notification was not too recent, it will send a notification.\n</li></ol>\n\n<p>Attributes will be added to a special ad created for purposes of evaluation of the notification trigger expression. These attributes will contain counts of jobs in various states.  The ad will be created on the fly and not stored in the job queue, (so it will not end up being written to the history file in each of the jobs.)\n\n</p><p>Notifications will be edge triggered, so for instance, </p><div class=\"code\">\n<pre class=\"code\">notification=HOLD</pre></div>\n will send a notification the <strong>first</strong> time a job goes on hold, not each time.\nNotifications can also be triggered by complex conditions, and will be rate limited. so it will be possible to request a notification when more than 10% of jobs go on hold, or to get a status email once a day.</blockquote>", "remarks": "<blockquote>\n<em>2017-Dec-20 13:17:06 by tannenba:</em> <br/>\n\nLIGO requests that we think about how this functionality may (or may not) work with respect to DAG workflows.  Could the proposed mechanism be tweaked to enable DAG users to reap the benefits ?\n\n<p></p><hr/>\n<em>2017-Dec-22 13:39:24 by tpdownes:</em> <br/>\n\nHow flexible do you intend periodic expression notification to be?\n\n<p>For example, it is your intent that I could setup a rule that said \"hey, I noticed your job is using X but you requested Y\"?\n\n</p><p>Where X is either well below or well above Y and could be CPU, Memory, etc.\n\n</p><p></p><hr/>\n<em>2018-Oct-17 13:06:44 by johnkn:</em> <br/>\n\nIt was not my intent that PERIODIC these notifications have the ability to change the state of any jobs.  The intent here is to report on progress - so the PERIODIC notifications would indicate number of jobs in each state. In particular, the expressions would probably not have access to any specific job attributes - only aggregates would be available.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2020-Nov-09 10:51", "status": "new", "created": "2017-Aug-22 10:01", "fixed_version": "2017-Aug-22 10:01", "broken_version": "", "priority": "4", "subsystem": "DaemonsSubmitNode", "assigned_to": "johnkn", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}