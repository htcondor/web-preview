{"id": 4479, "title": "Ticket #4479: Invalid security sessions re-used repeatedly.", "description": "<blockquote>\nIf a client (a Condor-C GAHP) contacts a server (a remote schedd) with an invalid session (as it would after the schedd crashes and restarts), and the network does not permit a reverse connection (to the client's UDP command port?), the client will never realize its connections are being dropped because of an invalid session.  The lease added in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1169\" onclick=\"get_ticket_and_populate_wrapper('1169'); return false;\" title=\"Add a lease to cached security sessions\">#1169</a></span> is ineffective because the lease is renewed on each attempt to use it, rather than each success.  This prevents Condor-C from working after a schedd restart.\n\n<p>The recommended course of action is to shoot our protocol into the sun.\n\n</p><p>Failing that, we could move session lease renewal to <em>after</em> a successful security negotiation (handshake?).</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Jul-22 15:02:57 by bbockelm:</em> <br/>\n\nCurrently, when an invalid security session is used, IIRC, we immediately close the socket.\n\n<p>Don't suppose it's possible to send back an error message?\n\n</p><p>For the python bindings, we basically have to fork a subprocess any time we want to do an authenticated session in order to avoid this issue.\n\n</p><p></p><hr/>\n<em>2014-Jul-22 15:44:37 by tlmiller:</em> <br/>\n\n<div class=\"verbatim\">\n<pre>&gt; Currently, when an invalid security session is used, IIRC, we immediately\n&gt; close the socket.\n\nThat's why it's so hard for the client to know that the problem is an invalid\nsecurity session.\n\n&gt; Don't suppose it's possible to send back an error message?\n\nWe do, but not on the connection before we close it -- we open a wholly new\nreverse connection which doesn't succeed (because of the firewall, I assume).\n\nUnless you mean \"is it possible to change the protocol to send back an error\nmessage on the same connection\", to which the answer is \"probably, but I'd have\nto ask Zach.\"  I assume the reason we used an out-of-band message in the first\nplace is because it was less painful than changing the protocol.\n\n&gt; For the python bindings, we basically have to fork a subprocess any time we\n&gt; want to do an authenticated session in order to avoid this issue.\n\nWe should be able to do better, especially since we _already_ forked a sub process (the CGAHP worker thread).\n</pre></div>\n\n\n<p></p><hr/>\n<em>2014-Jul-22 16:15:58 by tlmiller:</em> <br/>\n\nAn important note: this can only happen because the schedd is reacquiring the same port number.  This is happening because the firewall only has one port open, but because we don't need to talk to anything other than the schedd (and to minimize other configuration changes in the SWAMP), I didn't use the shared port daemon.  The shared port daemon would rebind to the same port, but the second instance of the schedd would get a different shared port ID, so the old session couldn't be used again.  (This will stop helping if we change the shared port daemon to reuse IDs for restarted daemons, as we've been thinking about.)\n\n<p>In normal situations, the only HTCondor daemon that would rebind to the same port on restart would be the collector.  It's possible that we don't see this problem with the collector because collectors can usually reach their startds via UDP.  We should, however, investigate at glideInWMS -- if their collector falls over, any startd running a job in the pool should have this problem (the others will suicide after twenty minutes, and so could go unnoticed).  Jaime reports that Igor reports occasional mismatches between different metrics for how many startds are doing useful work; this could be a reason.\n\n</p><p></p><hr/>\n<em>2014-Aug-06 14:28:10 by tlmiller:</em> <br/>\n\nDoes the client ever invalidate the claim on it its own?  I started to see authentication errors after 24 hours when submitting jobs to the SWAMP, and I'm wondering if the schedd's inability to invalide claims, possibly combined with the clocks being wildly different, is causing problems.\n\n<p></p><hr/>\n<em>2015-May-10 20:04:16 by bbockelm:</em> <br/>\n\nNo longer marking this as related to OSG -- we think our underlying problem was the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ReliSock\" title=\"Reli Sock\">ReliSock</a></span> state corruption issue (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4915\" onclick=\"get_ticket_and_populate_wrapper('4915'); return false;\" title=\"Collector reuses invalid socket for forwarding\">#4915</a></span>).</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2015-May-10 20:04", "status": "new", "created": "2014-Jul-22 14:31", "fixed_version": "2014-Jul-22 14:31", "broken_version": "v070501", "priority": "4", "subsystem": "Security", "assigned_to": "zmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "batlab", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, jfrey@cs.wisc.edu", "due_date": ""}