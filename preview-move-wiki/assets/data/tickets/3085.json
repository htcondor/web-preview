{"id": 3085, "title": "Ticket #3085: Add (certain) invalidated ads to absent list.", "description": "<blockquote>\nThe BaTLab uses absent ads to maintain a persistent idea of what platforms \"should\" be in the pool, assuming that we intend all \"clean\" shut-downs to happen.  However, it has become obvious that is is not the case; the startd is simply \"too good\" at getting its invalidation messages to the collector before it goes away, even if we'd prefer it didn't.  This breaks absent ads because the ads immediately leave the collector upon invalidation; they don't get a chance to time-out and \"go absent\" that way.  To correct that:\n\n<p></p><pre>  &gt;      However, I like your idea for a knob in the collector that would\n  &gt; cause to ignore invalidation requests (for ads that meet the\n  &gt; ABSENT_REQUIREMENTS), or maybe just immediately force the invalidated ad\n  &gt; into the absent list.  Our pool doesn't change all that fast, so manually\n  &gt; correcting the absent list won't be too much of a pain -- until we get\n  &gt; our run-as-root service working, at which point we'll need a way to\n  &gt; handle it automagically, since those machines will be rather transient.\n  &gt; Perhaps the knob could be INVALIDATION_REQUIREMENTS?  That is, only ads\n  &gt; which match that expression could be invalidated, and all others would\n  &gt; go absent instead.\n</pre>\n\n<p>This would allow the BaTLab to keep track of which machines \"should\" be in the pool for automation purposes -- most noticeably, whitelisting platforms for job submission -- automatically.</p></blockquote>", "remarks": "<blockquote>\n<hr/>\n<em>2012-Jul-03 13:58:56 by tlmiller:</em> <br/>\n\nImplemented as described.  However, the collector plugin API doesn't presently permit a plugin to decline (or force the collector to decline) to invalidate an ad.  This may require further consultation with ToddT.\n\n<p></p><ul>\n<li>Why does the collector have hard-coded calls to the offline plugin?\n</li><li>Can the calls to the plugins be safely moved to before the call to process_invalidation() in CollectorDaemon::receive_invalidation()?  How much of the code after that call needs to be called even if a plugin declines to invalidate?\n</li></ul>\n\n<p></p><hr/>\n<em>2012-Jul-03 16:18:41 by tlmiller:</em> <br/>\n\nInstead of answering either of those questions, we had to look at the question of how many ads a single call to the plugin could invalidate.\n\n<p>The answer is: the collector passes the plugin the same /query/ ad that it uses to determine which ads to remove.  The key is that, by definition (construction?), any query for which a hashkey can be constructed refers to only one ad; every other query must be handled by an O(n) scan of the table.  The collector handles the latter case (directly above the call to the plugin).  The plugin (presently) does not; instead, it ignores queries without hashkeys.\n\n</p><p>This also applies to update(), although it may semantically invalid to update multiple ads simultaneously.\n\n</p><p>The expire() function can return false (unlike invalidate() and update()) because the collector is handing it a specific ad (not query) from out of the table to examine.\n\n</p><p></p><hr/>\n<em>2012-Sep-28 14:19:32 by tlmiller:</em> <br/>\n\nDesign: right now, absent ads are all \"unexcused absences\" -- the startd vanished without excusing itself.  It would suffice to add \"excused absences\" to the absent list: as an option in the collector, force all invalidated ads to become absent.  Additional elaboration could include recording the excuse status in the ad, and adding -excused and -unexecused flags to condor_status.\n\n<p>This may be faster to get committed because it doesn't change the plugin API.\n\n</p><p></p><hr/>\n<em>2013-Mar-01 16:16:44 by tlmiller:</em> <br/>\n\nAfter further investigation and consultation with GregT and ToddT, the plan is as follows:\n\n<p>(1) Turn the IGNORE_INVALIDATE knob, see if allowing invalidated ads to expire instead (eventually) generates the list that we (the BaTLab) are looking for.\n\n</p><p>(2) If so, add an EXPIRE_INVALIDATED_ADS knob which, instead of deleting invalid ads, sets them to expire immediately.  This code may be substantially similar to the HOUSEKEEPING_ON_INVALIDATE code.  (It will need to set the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LastHeardFrom\" title=\"Last Heard From\">LastHeardFrom</a></span> attribute to something other than 0 (1?), because the collector engine treats those ads as invalidated, and doesn't call the offline code's expire() function for them.)\n\n</p><p>Work for another ticket:\n\n</p><p>(3) Have the EXPIRE_INVALIDATED_ADS code add an attribute (<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AbsentReason\" title=\"Absent Reason\">AbsentReason</a></span>?) to the ad saying that the ad was invalidated.  This will help users write their ABSENT_REQUIREMENTS expressions when we implement 'condor_off -reason' or similar.\n\n</p><p>(4) Likewise, the expire() function should set the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AbsentReason\" title=\"Absent Reason\">AbsentReason</a></span> (?) to 'expired' if there isn't one already.\n\n</p><p></p><hr/>\n<em>2013-Mar-08 10:53:22 by tlmiller:</em> <br/>\n\n(1) Turning the IGNORE_INVALIDATE knob causes condor_off'd startds to become absent, as desired.  (kill -9'd startds become absent as well.)\n\n<p></p><hr/>\n<em>2013-Mar-08 15:47:17 by tlmiller:</em> <br/>\n\nThe attached patch implements the EXPIRE_INVALIDATED_ADS knob.  However, since it's composed mostly of cargo-cult programming, I'd like it reviewed before committing, instead of after. :)  In particular, CollectorEngine::expire() is a mix of CollectorEngine::remove() and code from cleanHashTable().\n\n<p></p><hr/>\n<em>2013-Apr-09 16:52:38 by gthain:</em> <br/>\n\n<strong>CODE REVIEW</strong>\nLooks good to me -- a few comments would be handy here.  I had to look up that offline_plugin::expire returning \"true\" meant 'keep the ad'.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/694/absent-ads.diff\">absent-ads.diff</a>\n5264 bytes added by tlmiller on 2013-Mar-08 21:47:34 UTC.\n</li><li><a href=\"../files/695/GT%233085-DesignDoc-V1.docx\">GT#3085-DesignDoc-V1.docx</a>\n4973 bytes added by tlmiller on 2013-Mar-11 16:37:52 UTC.\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Apr-12 16:56</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35398\">[35398]</a></span>: documentation for new knob EXPIRE_INVALIDATED_ADS, which causes invalidated <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> to be treated as expired ones instead, allowing them to become absent <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3085\" onclick=\"get_ticket_and_populate_wrapper('3085'); return false;\" title=\"Add (certain) invalidated ads to absent list.\">#3085</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Apr-10 17:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35373\">[35373]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3085\" onclick=\"get_ticket_and_populate_wrapper('3085'); return false;\" title=\"Add (certain) invalidated ads to absent list.\">#3085</a></span>) Allow invalidated ads to be expired instead. (Implement EXPIRE_INVALIDATED_ADS knob.)  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2013-May-20 15:50", "status": "resolved", "created": "2012-Jun-25 17:07", "fixed_version": "2012-Jun-25 17:07", "broken_version": "v070705", "priority": "3", "subsystem": "Daemons", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "batlab", "visibility": "public", "notify": "", "due_date": ""}