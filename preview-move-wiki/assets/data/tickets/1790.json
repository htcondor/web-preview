{"id": 1790, "title": "Ticket #1790: Allow for policy adjustment via qedit/chirp for running jobs", "description": "<blockquote>\nUsing condor_qedit to edit a job updates the classad within the schedd, but\nit doesn't send that update through to the startd running the job.  This makes is impossible to update job policy for a running job.</blockquote>", "remarks": "<blockquote>\n<em>2010-Dec-03 12:36:47 by matt:</em> <br/>\n\nTicket <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=1598\" onclick=\"get_ticket_and_populate_wrapper('1598'); return false;\" title=\"using qedit to update periodic* exprs on running jobs.\">#1598</a></span>: using qedit to update periodic* exprs on running jobs.\n\n<p></p><pre>    It would be advantageous to be able to update the periodic* expressions using qedit, currently it is not allowed. A couple ideas have been passed around, one possible solution is to allow for an explicit push schedd-&gt;shadows of elements which have +UpdateExprs in their submission file.\n</pre>\n\n<p></p><hr/>\n<em>2010-Dec-20 11:49:06 by jfrey:</em> <br/>\n\nHere are my comments on the proposed patch:\n\n<p></p><ul>\n<li>I'd rather avoid adding the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobDirty\" title=\"Job Dirty\">JobDirty</a></span> attribute to the job ad. It's not\nuseful to the user and the daemons don't need it to be stored\npersistently on disk. Instead of having the gridmanager query for jobs\nwith JobDirty==true, how about having a\nGetAllDirtyAttributesByConstraint() call, similar to\nGetAllJobsByConstraint(), that iterates over the DirtyJobIDs list? That\nwould be much more efficient and not require a new job attribute.\n\n<p></p></li><li>DCSchedd::clearDirtyAttrs() should take a list of job ids. Otherwise,\nthe gridmanager can end up making a lot of separate connections to the\nschedd needlessly. Better yet, roll it into DCSChedd::actOnJobs() as a\nnew type of action.\n\n<p></p></li><li>In the CLEAR_DIRTY_JOB_ATTRS command protocol, there's no\nacknowledgement sent to the client. This isn't a problem if you roll\nthis command into actOnJobs().\n\n<p></p></li><li>In SetAttribute(), notification of the shadow/gridmanager is triggered\nonly if SETDIRTY is set and the job is RUNNING. The gridmanager also\nhandles idle jobs, and should be notified for those jobs as well.\n\n<p></p></li><li>In GetDirtyAttributes(), you end up unparsing and reparsing each\n<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprTree\" title=\"Expr Tree\">ExprTree</a></span> when you add it to the udpate ad. It would be a little more\nefficient to make a deep copy of the tree and insert that into the new\nad.\n\n<p></p></li><li>In the send/receive stubs for GetDirtyAttributes(), you unparse the\n<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> and send it as a single string. Why not use ClassAd::put() and\nClassAd::initFromStream(), as the other stubs do?\n\n<p></p></li><li>qedit.cpp always uses the new CONDOR_SetAttributeByConstraint2\nqueue-management command. Thus, it can't talk to older schedds. Some\nkind of backwards-compatibility check should be there. That can be as\nsimple as retrying without SETDIRTY if the first attempt fails.\n\n<p></p></li><li>The commented-out code in schedd.cpp should be removed.</li></ul>\n</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=3864\" onclick=\"get_ticket_and_populate_wrapper('3864'); return false;\" title=\"Improve UPDATE_JOBAD handling in the schedd\">#3864</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nImprove UPDATE_JOBAD handling in the schedd</td></tr>\n</tbody></table>", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/253/qedit_into_job_managers.patch\">qedit_into_job_managers.patch</a>\n44928 bytes added by rrati on 2010-Dec-15 23:34:23 UTC.\n<br/>\nThis patch pushes the changes from qedit into the shadows or gridmanager if the job is running.<br/>\n</li><li><a href=\"attach_get/256/qedit_into_job_managers2.patch\">qedit_into_job_managers2.patch</a>\n49722 bytes added by rrati on 2010-Dec-21 23:13:43 UTC.\n<br/>\nUpdated patch addressing the issues from review.<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jan-20 11:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=20045\">[20045]</a></span>: Fix some bugs in attribute updates to the gridmanager. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1790\" onclick=\"get_ticket_and_populate_wrapper('1790'); return false;\" title=\"Allow for policy adjustment via qedit/chirp for running jobs\">#1790</a></span> In BaseJob::JobAdUpdateFromSchedd(), we need to distinguish between full copies of the job ad from the schedd and ads that only contain modified attributes. Otherwise, we can end up in an endless loop of retrieving the full ad and trying to\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jan-13 08:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=19933\">[19933]</a></span>: Attribute changes from condor_qedit are now updated in the shadow or the gridmanager. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1790\" onclick=\"get_ticket_and_populate_wrapper('1790'); return false;\" title=\"Allow for policy adjustment via qedit/chirp for running jobs\">#1790</a></span>)  (By Robert Rati )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2011-Mar-01 10:28", "status": "resolved", "created": "2010-Dec-01 11:38", "fixed_version": "2010-Dec-01 11:38", "broken_version": "", "priority": "3", "subsystem": "Tools", "assigned_to": "rrati", "derived_from": "", "creator": "rrati", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}