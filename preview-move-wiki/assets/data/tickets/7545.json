{"id": 7545, "title": "Ticket #7545: Monitoring a condor job via a separate time-scheduled condor job", "description": "<blockquote>\nThe parameter estimation (astrophysics inference) team here is interested in running a repeating job via condor that effectively monitors the output of a running condor job. I think they want something like this in a DAG\n\n<p>- start main processing job (MCMC)\n- start a second job that monitors the MCMC (makes HTML pages and plots), this should repeatedly execute every N minutes\n- when the MCMC job finishes, run one last instance of the monitoring job, then exit\n\n</p><p>Is still something easily configurable with a condor DAG and/or condor's time scheduling?</p></blockquote>", "remarks": "<blockquote>\n<em>2020-Mar-24 10:38:45 by pfc:</em> <br/>\n\nPeter C. will get more requirements (streaming, etc.) from and discuss with PE folks, and then report back here.\n\n<p>Options include:\n\n</p><p></p><pre>  * sidecar runs on execute side and streams results back\n  * sidecar runs on execute side and chirps to job log\n  * sidecar runs on submit side and inspects sandbox files being streamed back\n  * sidecar runs on submit side and uses condor_ssh_to_job\n</pre>\n\n<p>Info can be \"streamed\" back via streaming i/o, chirp to classad, or chirp file xfer.\n\n</p><p>Would be good to split \"how to get the monitor started\" and \"what does the monitor do?\"\n\n</p><p></p><hr/>\n<em>2020-Mar-24 10:42:05 by tlmiller:</em> <br/>\n\nWith respect to scaling, no human is actually going to be looking at 10,000 separate graphs, so if that's the output, we can think about query-driven monitoring workflows.\n\n<p></p><hr/>\n<em>2020-Mar-31 10:15:38 by pfc:</em> <br/>\n\nThe ball is in Peter's court to clarify the PE use-case and requirements.\n\n<p></p><hr/>\n<em>2020-Jun-30 10:38:36 by pfc:</em> <br/>\n\nSince the PE chairs haven't asked about this lately, demoting to priority 3.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "todo", "last_change": "2020-Nov-03 10:33", "status": "abandoned", "created": "2020-Mar-10 10:57", "fixed_version": "2020-Mar-10 10:57", "broken_version": "", "priority": "3", "subsystem": "Dag", "assigned_to": "coatsworth", "derived_from": "", "creator": "pfc", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "peter.couvares@ligo.org, duncan.macleod@ligo.org, stuart.anderson@ligo.org", "due_date": ""}