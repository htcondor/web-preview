{"id": 2487, "title": "Ticket #2487: Multiple claims: enable multiple claims in startd and schedd", "description": "<blockquote>\nMilestone 1 (due 20110926):\n\n<p>The goal of this milestone is to get the basic plumbing for the multiple claim work in place. After completion, everything in Condor should still work as it used to. Essential changes include:\n\n</p><p></p><ul>\n<li>Extend Startd (and -client) side to support super- and subclaims.\n</li><li>Change API to forward claim-specific functions to all subclaims\n</li></ul>\n\n<p>State: code complete but requires more testing and definitely code review (because this ticket is a work-in-progress ticket, I will create a separate code review ticket for Zach)\n\n</p><p>Milestone 2 (due 20111017):\n\n</p><p>The goal of this milestone is to enable async file transfer by creating a subclaim for the output file transfer itself.\n\n</p><p></p><hr/>\nAfter the first round of reviews, the following items need to be addressed:\n\n<p></p><ul>\n<li>Remove cloned functions (obviously)\n</li><li>Replace <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ReliSock\" title=\"Reli Sock\">ReliSock</a></span> in new DCSchedd function called from Shadow to inform about started file transfer\n</li><li>Have only the parent claim send keep alives (inherit from children)\n</li><li>Add boolean value into match record to indicate active/inactive claim/subclaim. Down the road, the match record should also know about resources used such that schedd can make scheduling decisions within claim\n</li><li>Make sure that startd state is appropriately advertised to negotiator (i.e. only take into account state changes induced by parent claim)\n</li><li>Investigate carefully that parent claim can never time out before a subclaim\n</li><li>Add config knob that turns on async file transfer and keep a code path in place that supports old claiming protocol such that async transfer can be tested but will not be imposed right away</li></ul>\n</blockquote>", "remarks": "<blockquote>\nCurrently in review, schedd is solid now, startd side is now back to improvements since I rolled back to an earlier version of the claim object.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2572\" onclick=\"get_ticket_and_populate_wrapper('2572'); return false;\" title=\"Multiple claims work review\">#2572</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nMultiple claims work review</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-26 22:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28004\">[28004]</a></span>: IO is now interleaving with CPU usage. No more crashes observed. Sometimes complete claim tear-down seems to happen before new subclaim request - that is the open issue at the moment <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2487\" onclick=\"get_ticket_and_populate_wrapper('2487'); return false;\" title=\"Multiple claims: enable multiple claims in startd and schedd\">#2487</a></span>  (By Cathrin Weiss )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-26 14:32</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27995\">[27995]</a></span>: Some minor edits after a code walk-though with Zach -- the startd will still exit, though, but at this point does not segfault <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2487\" onclick=\"get_ticket_and_populate_wrapper('2487'); return false;\" title=\"Multiple claims: enable multiple claims in startd and schedd\">#2487</a></span>  (By Cathrin Weiss )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-24 12:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27955\">[27955]</a></span>: The startd side for multiple claims. This was rolled back to an older version during the schedd segfault hunt. with this version the startd is excepting due to bad management of the subclaims within a resource. Additionally this commit still contains all the debugging output that needs to be removed\u00a0[...]\n (By Cathrin Weiss )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-24 12:45</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27954\">[27954]</a></span>: Changes for the schedd to deal with multiple claims. This code a) makes the shadow notify the schedd once output transfer is initiated b) lets the schedd check whether there is another job for the exisiting claim and c) makes it request a new subclaim if that is the case d) Finally, the schedd starts\u00a0[...]\n (By Cathrin Weiss )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2012-Dec-17 13:58", "status": "defer", "created": "2011-Sep-21 12:34", "fixed_version": "2011-Sep-21 12:34", "broken_version": "", "priority": "4", "subsystem": "Daemons", "assigned_to": "zmiller", "derived_from": "#2362", "creator": "cweiss", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tstclair@redhat.com", "due_date": ""}