{"id": 3698, "title": "Ticket #3698: Proper gsoap crashes", "description": "<blockquote>\nFedora/EPEL adds a patch to their gsoap for IPv6 support.\n\n<p>Unfortunately, this changes the layout of struct soap.  By default, objects compiled against the EPEL /usr/include/stdsoap2.h result in code INCOMPATIBLE with /usr/lib64/libgsoapssl++.so.  Things will link fine, but segfault at runtime.\n\n</p><p>One variant of this issue is when a Globus callout is made where the globus plugin uses gsoap - half the symbols are from condor and half from the gsoap library.  So, the plugin, condor, and the gsoap library all need to be compiled with '-DWITH_IPV6'.  This affects PROPER builds only; UW builds were fixed in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3625\" onclick=\"get_ticket_and_populate_wrapper('3625'); return false;\" title=\"Statically compiled gsoap functions cause segfault in GSI plugins\">#3625</a></span> (in UW builds, we statically link in libgsoapssl++ and hide symbols from IPv6).  The fix for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3625\" onclick=\"get_ticket_and_populate_wrapper('3625'); return false;\" title=\"Statically compiled gsoap functions cause segfault in GSI plugins\">#3625</a></span> also broke compilation on SL6 for HTCondor 8.0.0 when PROPER and gsoap are enabled (symbol visibility issues).\n\n</p><p>To fix this, we need to compile anything that uses gsoap with '-DWITH_IPV6'.  We should turn this on for PROPER builds but have the code continue to work even if the gsoap version used doesn't have the IPv6 patch.</p></blockquote>", "remarks": "<blockquote>\n<em>2013-Jun-12 15:00 by johnkn:</em> <br/>\n\nAlan, please review Brian's patch, and if it looks ok, cherry-pick it back to the V8.0-branch.\n\n<p></p><hr/>\n<em>2013-Jun-28 16:34:42 by adesmet:</em> <br/>\n\nReview notes (Finished 2013-Jul-08)\n\n<p></p><ol>\n<li>condor_sockaddr::condor_sockaddr(const sockaddr_storage * sa) 's implementation doesn't work.  It looks like the intent is to call another constructor.  What it actually does is construct a temporary condor_sockaddr and immediately discard it; the immediate object remains uninitialized.  The code in condor_sockaddr(const sockaddr * saddr); needs to be moved to a shared function and both functions should call it.\n\n<p></p><ul>\n<li>Actually it doesn't look like the new constructor is being used at all. But... likely to be useful in the future.\n</li></ul>\n\n<p></p></li><li>RESOLVED: How safe is relying on sizeof(sockaddr_in) not matching sizeof(sockaddr_storage). Seems highly likely to work, but is it actually guaranteed? (Also, confirm that struct soap::peer is actually sockaddr_in)\n\n<p></p></li><li>RESOLVED: In soap_core.cpp, why are we memcpying when simple assignment should work?  Resolution: It doesn't work because we need to make the compiler happy, and it won't let us slip invalid code through just because it's on a code that that should never be run.  Sadly, the preprocessor lacks knowledge of types and sizeof, so it can't help us.  We could solve the problem with a compile time option, but that makes making a mistake easier.  We could solve the problem with a mess of casting, but that's a mess of casting. Brian's solution appears to be the best one we're left with.\n<ul>\n<li>if (sizeof(cursoap-&gt;peer) == sizeof(sockaddr_storage))\n<ul>\n<li>then presumably cursoap-&gt;peer is sockaddr_storage, and a straight assignment should work.\n</li></ul>\n</li><li>else\n<ul>\n<li>then (hopefully? ASSERT(sizeof(cursoap-&gt;peer) == sizeof(sockaddr_in))?), cursoap-&gt;peer is sockaddr_in, and simple assignment should work.\n</li></ul>\n</li></ul>\n\n<p></p></li><li>Why is to_storage monkeying around with copying?  Can't we just return this-&gt;storage?\n\n<p></p></li><li>Ideally add unit tests for the new condor_sockaddr constructor and condor_sockaddr::to_storage to /src//condor_unit_tests/OTEST_condor_sockaddr.cpp .  I'm most worried about the new constructor, as it's unused.\n\n<p></p></li><li>Match local style.  <a class=\"file\" href=\"rlog?f=src/condor_daemon_core.V6/soap_core.cpp\">/src/condor_daemon_core.V6/soap_core.cpp</a> cuddles braces next to if/else.  (True in condor_sockaddr.cpp as well, but the code in question is going to disappear per point 4.)\n\n<p></p></li><li>Would the name daemon.proper.version be better than daemon.version.proper?  \".version\" is arguably the extension (\"This is a version script, suitable for passing to ld --version-script\").  Seems like it would more obviously connect it to the existing daemon.version.\n\n<p></p></li><li>RESOLVED: I was unclear about the purpose of the custom linker script; bbockelm's explaination below satisfies me.\n</li></ol>\n\n<p></p><hr/>\n<em>2013-Jun-28 18:45:37 by bbockelm:</em> <br/>\n\nThoughts:\n\n<p></p><ul>\n<li>Bah.  I always screw up constructors in C++.  Will fix.\n</li><li>We are guaranteed that sizeof(sockaddr_in) != sizeof(sockaddr_storage) -- at least on platforms which have IPv6 support.  The definition of sockaddr_storage is that it must be castable to sockaddr_in if it is an IPv4 address.  \"struct soap::peer\" is of type sockaddr_storage if \"-DWITH_IPV6\" is handed to the compiler; otherwise, it is sockaddr_in.  That headache is the whole reason for this patch...\n</li><li>Simple assignment doesn't work.  See below.  I guess I could reinterpret_cast and do some pointer manipulation if you'd prefer that over memcpy.\n</li><li>Didn't realize that condor_sockaddr is a union.  I can switch to returning this-&gt;storage.\n</li></ul>\n\n<p></p><div class=\"verbatim\">\n<pre>/usr/include/sys/socket.h:359:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'const sockaddr_in' to 'const sockaddr_storage' for 1st argument;\n</pre></div>\n\n\n<p>Anything else?  If you can respond to points 2 and 3, I will commit fixes to 1 and 4.\n\n</p><p></p><hr/>\n<em>2013-Jul-01 11:06:16 by adesmet:</em> <br/>\n\nSorry, you caught my review halfway done. I'm keeping my work in progress in the ticket.  Almost done.  However, I believe we're in agreement on points 1-4.\n\n<p></p><hr/>\n<em>2013-Jul-01 11:16:10 by adesmet:</em> <br/>\n\nUpon re-consideration, I stand by point 3.  I'd expect something like this:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">\tif (sizeof(cursoap-&gt;peer) == sizeof(sockaddr_storage)) \t{\n\t\tcursoap-&gt;peer = socket-&gt;peer_addr().to_storage();\n\t} else {\n\t\tASSERT(sizeof(cursoap-&gt;peer) == sizeof(sockaddr_in));\n\t\tcursoap-&gt;peer = socket-&gt;peer_addr().to_sin();\n\t}\n</pre></div>\n\n\n<p>It's not clear from the error message you cite what the compiler doesn't like.  As best I can tell, the types are the same, and the default assignment implementation should work fine.\n\n</p><p></p><hr/>\n<em>2013-Jul-01 11:21:34 by adesmet:</em> <br/>\n\nDoh! Bad Alan, no pretending that you can mix compile-time and run-time evaluation.\n\n<p>So, yeah, Brian, you're correct on point 3.  Seems like a better solution should exist, but mine isn't it. Thinking...\n\n</p><p></p><hr/>\n<em>2013-Jul-01 11:27:39 by adesmet:</em> <br/>\n\nRight, Brian's solution for point 3 is as good as I can think of.  That's resolved.\n\n<p></p><hr/>\n<em>2013-Jul-01 15:56:34 by johnkn:</em> <br/>\n\nAs per Brian's request, I cherry picked 092ec6af24571e2 into the V8_0-branch (for 8.0.1).  According to Alan, the commit I picked has a bug in it (in code that is not currently called), so when that bug is fixed, the fix should be picked back to 8.0.\n\n<p></p><hr/>\n<em>2013-Jul-01 19:43:33 by bbockelm:</em> <br/>\n\nAlan asked via email about the motivation for the soap_* symbols to be publicly exported when doing a PROPER build as he thought libgsoap++ would provide them.  For posterity, here was my response:\n\n<p></p><div class=\"verbatim\">\n<pre>Here's where things go awry.  libgsoap++ does *not* include these functions.\nRather, it expects these to be provided by executable linking against the library,\nas it has missing references to these.\n\nUW-build:\n\nThese symbols all remain hidden as libgsoap++ is statically linked against the\ncondor_* binary.  No gsoap-related symbols are publicly exported. Thus, any\nplugin using gsoap can be loaded by condor without worrying about symbol leakage.\n\nPROPER-build:\n\nThese symbols are public in order for the binary to be successfully linked against\nlibgsoap++.  Thus, any plugin using gsoap must use the exact same set of\ndefines as HTCondor and the system compilation of libgsoap++ in order to use\nthe same symbols (hence the addition of -DWITH_IPV6).\n\ngsoap is a bad, bad library in that the structures align differently depending on\nthe defines - and the Fedora/EPEL packaging makes it so programs use the wrong\nset of flags by default.  Doh!\n\n(I feel like I've gotten a whole new level of linker education while working with gsoap...)\n</pre></div>\n\n\n<p>Hopefully someone finding this ticket via Google will find this enlightening.\n\n</p><p></p><hr/>\n<em>2013-Jul-03 17:11:50 by adesmet:</em> <br/>\n\nI reverted johnkn's merge onto V8_0-branch. (Revert is16444defea75e7630be1dd356e441b8b53c88ac7).  The merged code breaks the test soap_job_tests.  Reverting it allows the test to work.  I don't know if master is similarly broken; I'll investigate. bt reports that the test is disabled on master, which may be how this slipped by.\n\n<p></p><hr/>\n<em>2013-Jul-08 12:08:42 by adesmet:</em> <br/>\n\nThe revert is now on master as well.  This wasn't intentional; it happened automatically when gthain merged V7_8-branch into master.   I zoned and should have handled the merge myself.  But I'll let it stand for now.\n\n<p>It looks like the soap_job_tests test is broken on master, with or without the patch.  Fixing it seems high priority if we're hacking on this SOAP code.\n\n</p><p></p><hr/>\n<em>2013-Jul-08 14:47:38 by adesmet:</em> <br/>\n\nThe problem that soap_job_tests is broken on master is now in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3740\" onclick=\"get_ticket_and_populate_wrapper('3740'); return false;\" title=\"Fix soap_job_tests on master\">#3740</a></span>: Fix soap_job_tests on master\n\n<p></p><hr/>\n<em>2013-Aug-06 13:54:40 by adesmet:</em> <br/>\n\nCurrent state of the review:\n\n<p>1. Needs to be fixed.  In its current state it's a landmine for future developers.\n\n</p><p>2. RESOLVED.\n\n</p><p>3. RESOLVED.\n\n</p><p>4. Should be fixed.\n\n</p><p>5. Should be fixed.\n\n</p><p>6. Should be fixed.\n\n</p><p>7. Would be nice. I could probably be talked out of it.\n\n</p><p>8. RESOLVED.\n\n</p><p></p><hr/>\n<em>2013-Aug-12 13:27:26 by adesmet:</em> <br/>\n\nAfter doing work trying to identify which files count as \"code\", I'm firmer on point 7. The file should be daemon.proper.version.\n\n<p>For point 1, deleting the function is an acceptable fix.\n\n</p><p></p><hr/>\n<em>2013-Aug-12 16:06:22 by bbockelm:</em> <br/>\n\nI pushed fixes for everything but the unittest in V8_1-gt3698.  Now that the constructor is simply a reinterpret_cast, I don't think there's much we need in terms of testing.\n\n<p>Please take a look!\n\n</p><p></p><hr/>\n<em>2013-Aug-19 12:48:59 by bbockelm:</em> <br/>\n\nPing!\n\n<p></p><hr/>\n<em>2020-Jul-13 13:05:47 by blin:</em> <br/>\n\nSince gsoap is dead and gone, can we close this ticket?</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3839\" onclick=\"get_ticket_and_populate_wrapper('3839'); return false;\" title=\"HTCondor fails to build on Debian 7 due to gsoap symbol collisions\">#3839</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nHTCondor fails to build on Debian 7 due to gsoap symbol collisions</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-12 16:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37171\">[37171]</a></span>: Fix issues found from code review. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3698\" onclick=\"get_ticket_and_populate_wrapper('3698'); return false;\" title=\"Proper gsoap crashes\">#3698</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-03 11:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37088\">[37088]</a></span>: Revert \"Revert \"Fix gsoap usage for PROPER builds. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3698\" onclick=\"get_ticket_and_populate_wrapper('3698'); return false;\" title=\"Proper gsoap crashes\">#3698</a></span>.\"\" This reverts commit 16444defea75e7630be1dd356e441b8b53c88ac7.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-02 15:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37085\">[37085]</a></span>: Revert \"Revert \"Fix gsoap usage for PROPER builds. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3698\" onclick=\"get_ticket_and_populate_wrapper('3698'); return false;\" title=\"Proper gsoap crashes\">#3698</a></span>.\"\" This reverts commit 16444defea75e7630be1dd356e441b8b53c88ac7.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-03 17:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36762\">[36762]</a></span>: Revert \"Fix gsoap usage for PROPER builds. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3698\" onclick=\"get_ticket_and_populate_wrapper('3698'); return false;\" title=\"Proper gsoap crashes\">#3698</a></span>.\" This reverts commit 092ec6af24571e2b95632544b64cd722538d2399. This patch reliably breaks soap_job_tests. Reverting it reliably fixes it.  (By Alan De Smet )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-01 10:15</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36728\">[36728]</a></span>: Fix gsoap usage for PROPER builds. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3698\" onclick=\"get_ticket_and_populate_wrapper('3698'); return false;\" title=\"Proper gsoap crashes\">#3698</a></span>. This should fix both straight-up compilation issues AND allow HTCondor to support both gsoap with the IPV6 patch (Fedora) and gsoap without (upstream). Committer: John (TJ) Knoeller  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-12 13:36</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36538\">[36538]</a></span>: Fix gsoap usage for PROPER builds. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=3698\" onclick=\"get_ticket_and_populate_wrapper('3698'); return false;\" title=\"Proper gsoap crashes\">#3698</a></span>. This should fix both straight-up compilation issues AND allow HTCondor to support both gsoap with the IPV6 patch (Fedora) and gsoap without (upstream).  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2020-Jul-21 09:10", "status": "abandoned", "created": "2013-Jun-12 13:36", "fixed_version": "2013-Jun-12 13:36", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "bbockelm", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "adesmet@cs.wisc.edu", "due_date": ""}