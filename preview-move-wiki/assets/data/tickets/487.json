{"id": 487, "title": "Ticket #487: Transfer as much output as possible (think: --keep-going)", "description": "<blockquote>\nIf one of the files in transfer_output_files does not exist after the job exits, it would be nice to transfer any other files that do exist.\n\n<p>Johnson Koil Raj from condor-users:\n\n</p><p>when Starter send the file back to spool directory after condor_vacate_job it started transfer some 19 files in between it failed to transfer one file due to permission issue. It put the job into hold and stop transferring.\n\n</p><p>why can't condor skip that particular file and continue transferring remaining files to the spool. so we won't last all files. Is it a bug.\n\n</p><p>I attached the Starter Log.\n\n</p><p></p><div class=\"verbatim\">\n<pre>5/13 19:27:22 Sending changed file vmware.log, t: 1242223031,\n1242205712, s: 1010653, 3034\n5/13 19:27:22 Sending changed file vmware-0.log, t: 1242205712,\n1242205713, s: 3034, 568994\n5/13 19:27:22 Sending changed file vmj9mEQU_condor.vmx, t: 1242205909,\n1242205656, s: 1062, 1062\n5/13 19:27:22 Skipping file vmj9mEQU_condor.vmsd, t:\n1242205675==1242205675, s: 563==563\n5/13 19:27:22 Sending changed file windowsxp-000001-s004.vmdk, t:\n1242222793, 1242205718, s: 32571392, 31064064\n5/13 19:27:23 Sending new file vmj9mEQU_condor.vmem, time==1242223043,\nsize==567279616\n5/13 19:27:23 Skipping file vmj9mEQU_condor-Snapshot1.vmsn, t:\n1242205675==1242205675, s: 8941==8941\n5/13 19:27:23 Skipping file vmj9mEQU_condor-disk2-vmware.vmdk, t:\n1242205637==1242205637, s: 589824==589824\n5/13 19:27:23 Sending new file vmj9mEQU_condor.vmss, time==1242222795,\nsize==53493\n5/13 19:27:23 Sending changed file nvram, t: 1242205909, 1242205656, s:\n8664, 8664\n5/13 19:27:23 Sending new file vmware-1.log, time==1242205713,\nsize==568994\n5/13 19:27:23 Sending new file vmj9mEQU_condor-swapdisk-vmware.vmdk,\ntime==1242222792, size==13303808\n5/13 19:27:23 Sending changed file windowsxp-000001-s001.vmdk, t:\n1242222793, 1242205712, s: 343605248, 215613440\n5/13 19:27:23 Sending changed file windowsxp-000001-s005.vmdk, t:\n1242222794, 1242205712, s: 65536, 65536\n5/13 19:27:23 Sending changed file windowsxp-000001-s003.vmdk, t:\n1242222793, 1242205675, s: 246546432, 97517568\n5/13 19:27:23 Skipping file windowsxp.vmx, t: 1242205636==1242205636, s:\n1085==1085\n5/13 19:27:23 Sending changed file windowsxp-000001.vmdk, t: 1242206245,\n1242205712, s: 476, 476\n5/13 19:27:23 Sending changed file windowsxp-000001-s002.vmdk, t:\n1242222793, 1242205656, s: 147914752, 101908480\n5/13 19:27:23 Sending changed file\nvmj9mEQU_condor-disk2-vmware-000001.vmdk, t: 1242222793, 1242205675, s:\n24903680, 589824\n5/13 19:27:23 FileTransfer::UploadFiles: sent\nTransKey=1#4a0a8e775db1bdb2655d5c35\n5/13 19:27:23 entering FileTransfer::Upload\n5/13 19:27:23 entering FileTransfer::DoUpload\n5/13 19:27:23 DoUpload: send file vmware.log\n5/13 19:27:23 Received GoAhead from peer to\nsend /vmexecute/execute/t17-1d-10/dir_12815/vmware.log.\n5/13 19:27:23 Sending GoAhead for 192.168.10.7 to\nreceive /vmexecute/execute/t17-1d-10/dir_12815/vmware.log and all\nfurther files.\n5/13 19:27:23 ReliSock::put_file_with_permissions(): going to send\npermissions 100644\n5/13 19:27:23 put_file: going to send from\nfilename /vmexecute/execute/t17-1d-10/dir_12815/vmware.log\n5/13 19:27:23 put_file: Found file size 1010653\n5/13 19:27:23 put_file: sending 1010653 bytes\n5/13 19:27:23 ReliSock: put_file: sent 1010653 bytes\n5/13 19:27:23 DoUpload: send file vmware-0.log\n5/13 19:27:24 Received GoAhead from peer to\nsend /vmexecute/execute/t17-1d-10/dir_12815/vmware-0.log.\n5/13 19:27:24 ReliSock::put_file_with_permissions(): going to send\npermissions 100644\n5/13 19:27:24 put_file: going to send from\nfilename /vmexecute/execute/t17-1d-10/dir_12815/vmware-0.log\n5/13 19:27:24 put_file: Found file size 3034\n5/13 19:27:24 put_file: sending 3034 bytes\n5/13 19:27:24 ReliSock: put_file: sent 3034 bytes\n5/13 19:27:24 DoUpload: send file vmj9mEQU_condor.vmx\n5/13 19:27:24 Received GoAhead from peer to\nsend /vmexecute/execute/t17-1d-10/dir_12815/vmj9mEQU_condor.vmx.\n5/13 19:27:24 ReliSock::put_file_with_permissions(): going to send\npermissions 100770\n5/13 19:27:24 ReliSock: put_file: Failed to open\nfile /vmexecute/execute/t17-1d-10/dir_12815/vmj9mEQU_condor.vmx, errno =\n13.\n5/13 19:27:24 DoUpload: exiting at 2381\n5/13 19:27:24 DoUpload: (Condor error code 13, subcode 13) STARTER at\n192.168.10.109 failed to send file(s) to &lt;192.168.10.7:9709&gt;: error\nreading from /vmexecute/execute/t17-1d-10/dir_12815/vmj9mEQU_condor.vmx:\n(errno 13) Permission denied; SHADOW failed to receive file(s) from\n&lt;192.168.10.109:9610&gt;\n5/13 19:27:24 JIC::transferOutput() failed, waiting for job lease to\nexpire or for a reconnect attempt\n5/13 19:27:24 Got SIGQUIT.  Performing fast shutdown.\n5/13 19:27:24 ShutdownFast all jobs.\n5/13 19:27:24 Got ShutdownFast when no jobs running.\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2010-Jul-09 16:15:41 by psilord:</em> <br/>\n\nIt turns out this has become a high priority ticket slated for implementation into the stable series.\n\n<p>The reason is that it turns out when a program core dumps and you are using transfer_output_files, then if not all of the files exist, you don't get anything back, including the core file.\n\n</p><p>I have a code complete fix and am now testing it.\n\n</p><p></p><hr/>\n<em>2010-Jul-09 16:18:00 by psilord:</em> <br/>\n\nNote, the manual must be fixed to note that any file not transferred back in this scenario will be made a zero length file when brought back from the execute machine. Currently there is no way to tell what the complete set of files were that were failed to be brought back from the starter.\n\n<p></p><hr/>\n<em>2010-Jul-09 16:41:43 by psilord:</em> <br/>\n\nzmiller code reviewed the change, I tested it, I committed it and merged it to master.\n\n<p>I'm leaving this ticket open so I document it in the stable 7.4.x version history monday.\n\n</p><p></p><hr/>\n<em>2010-Aug-18 14:39:34 by psilord:</em> <br/>\n\nSent doc message to Karen.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=1504\" onclick=\"get_ticket_and_populate_wrapper('1504'); return false;\" title=\"Filetransfer: don't create 0 length dest files when src file noexist\">#1504</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nFiletransfer: don't create 0 length dest files when src file noexist</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Jul-14 16:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=25561\">[25561]</a></span>: Documentation for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=487\" onclick=\"get_ticket_and_populate_wrapper('487'); return false;\" title=\"Transfer as much output as possible (think: --keep-going)\">#487</a></span>.  (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Jul-14 15:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18568\">[18568]</a></span>: If a bunch of file transfers failed strictly due to PUT_FILE_OPEN_FAILED, then we keep track of the information relating to the first failed one, and continue to attempt to transfer the rest in the list. At the end of the transfer, the job will go on hold with the information of the first failed transfer.\u00a0[...]\n (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Jul-09 16:38</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18564\">[18564]</a></span>: If a bunch of file transfers failed strictly due to PUT_FILE_OPEN_FAILED, then we keep track of the information relating to the first failed one, and continue to attempt to transfer the rest in the list. At the end of the transfer, the job will go on hold with the information of the first failed transfer.\u00a0[...]\n (By Peter Keller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Jun-24 14:17", "status": "resolved", "created": "2009-May-15 07:35", "fixed_version": "2009-May-15 07:35", "broken_version": "", "priority": "1", "subsystem": "Daemons", "assigned_to": "psilord", "derived_from": "", "creator": "matt", "rust": "", "customer_group": "users", "visibility": "public", "notify": "zmiller@cs.wisc.edu psilord@cs.wisc.edu", "due_date": ""}