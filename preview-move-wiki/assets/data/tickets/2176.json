{"id": 2176, "title": "Ticket #2176: Hierarchical Groups can cause starvation", "description": "<blockquote>\nHierarchical groups can cause starvation.  Consider this configuration as an example:\n\n<p></p><div class=\"verbatim\">\n<pre>GROUP_NAMES = \\\n              foo, \\\n              cms, \\\n              cms.prod, \\\n              cms.other, \\\n\nGROUP_QUOTA_foo = 200\nGROUP_QUOTA_DYNAMIC_cms = 1\nGROUP_QUOTA_cms.prod = 200\nGROUP_QUOTA_DYNAMIC_cms.other = 1\n\nGROUP_ACCEPT_SURPLUS = True\n\n</pre></div>\n\n\n<p>Ok, consider the case of a cluster with 300 slots, no jobs from \"foo\", 300 cms.prod jobs, and 300 cms.other jobs.  How many job slots should each group get?  I would claim the <strong>desired</strong> distribution of jobs is 200 for cms.prod and 100 for cms.other.\n\n</p><p>Unfortunately, the algorithm as implemented will give 300 slots to cms.prod and 0 to cms.other.  This is because we first calculate the number of job slots, then allocate the surplus.  First, the allocation:\n\n</p><p></p><ul>\n<li>300 slots in the cluster.\n</li><li>At the top level, 200 go to foo leaving 100 slots for dynamic quotas, all going to cms.\n</li><li>Because cms only has 100 slots, cms.prod's allocation gets trimmed to 100 slots and cms.other receives a quota of 0.\n</li></ul>\n\n<p>Then, the allocation of surplus:\n</p><ul>\n<li>There's no foo jobs, so 200 surplus slots go to cms (for a total of 300 slots).\n</li><li>In Matchmaker::hgq_allocate_surplus, surplus is allocated to groups with &gt;0 quotas, then groups with =0 quotas.\n</li><li>cms.prod (quota is 100) is allocated all 300 slots, as it has sufficient demand and there are 300 slots to hand out.\n</li><li>cms.other gets 0 slots as there is nothing left.\n</li></ul>\n\n<p>I don't have a solution - but I think the implementation is not what is desired.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-May-19 15:04:19 by eje:</em> <br/>\n\nDeclaring static quotas larger than the quota available to the parent (which is what tkt <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=2176\" onclick=\"get_ticket_and_populate_wrapper('2176'); return false;\" title=\"Hierarchical Groups can cause starvation\">#2176</a></span> configuration does, as you correctly describe) is somewhat of a no-no, although it will do its best by rescaling (with a warning).\n\n<p>Part of the issue is that quotas are by necessity assigned prior to the redistribution of surplus.   The logic of mixed static and dynamic quotas requires that static quotas are serviced first, which is why you ended up with zero quota left for group cms.other.  Quota surplus is then shared in proportion to quota for nonzero quotas (with any remaining given to zero quotas equally).  Therefore cms.prod, with nonzero quota, gets all the surplus, and so cms.other gets none.\n\n</p><p>Given the dynamic nature of slot availability on a condor pool, I tend to recommend that static quotas are not used at all, unless there are compelling reasons to use them.   When they are used, they should ideally be declared small enough that a dip in reporting slots does not cause a static quota to become larger than the quota available to its parent.\n\n</p><p></p><hr/>\n<em>2011-Dec-22 16:56:22 by eje:</em> <br/>\n\nWill <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2678\" onclick=\"get_ticket_and_populate_wrapper('2678'); return false;\" title=\"RFE: expose accounting group negotiation-ordering to configuration\">#2678</a></span> and <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2679\" onclick=\"get_ticket_and_populate_wrapper('2679'); return false;\" title=\"RFE: Alter semantic of GROUP_AUTOREGROUP to replicate legacy behavior\">#2679</a></span> resolve this in a satisfactory way?</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "incident", "last_change": "2011-Dec-22 16:56", "status": "new", "created": "2011-May-19 13:55", "fixed_version": "2011-May-19 13:55", "broken_version": "v070506", "priority": "5", "subsystem": "Daemons", "assigned_to": "eje", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "", "due_date": ""}