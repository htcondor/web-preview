{"id": 4926, "title": "Ticket #4926: document and add to param table PIPE_BUFFER_MAX", "description": "<blockquote>\nFrom condor-users:\n<div class=\"verbatim\">\n<pre>Hi Dan, Brian,\n\nboth suggestions worked flawlessly!\n\nPIPE_BUFFER_MAX did successfully increase the number of characters JobRouter\nreads. I\u2019ve tested values up to 102400, reading long job ClassAds without\nnegative side-effects.\n\nUsing gzip for compressing the additional information used only by the hooks is\n perfect for our use case. Since we pass lists of files that usually reside in\n the same directory, compression can squash lots of duplicate strings.\n\nCheers,\nMax\n\n&gt; Am 24.02.2015 um 17:47 schrieb Dan Bradley &lt;dan@hep.wisc.edu&gt;:\n&gt;\n&gt; Hi Max,\n&gt;\n&gt; Glancing at the hook handling code, I see an undocumented configuration\n&gt; variable PIPE_BUFFER_MAX.  It is set to 10240.  Does configuring a\n&gt; larger value change the behavior in your problem case?\n&gt;\n&gt; --Dan\n&gt;\n&gt; On 2/23/15 12:29 PM, Brian Bockelman wrote:\n&gt;&gt; Hi Max,\n&gt;&gt;\n&gt;&gt; I'm not aware of any specific buffer limits (although I suppose something must exist!).\n&gt;&gt;\n&gt;&gt; What happens if you try to parse the classad with the python bindings?  Do\n they similarly fail?  This might allow one to differentiate between failures\n in the classad library versus failures in the JR.\n&gt;&gt;\n&gt;&gt; (Apologies - I can't quite test this for you, my mail client mauled the formatting of your email.)\n&gt;&gt;\n&gt;&gt; On to slightly crazier ideas: in other context when I've needed to pass huge\n amounts of data via classads (i.e., there's some reason I can't do it as an\n input file), I've had good luck in passing the string through gzip and\n converting the binary output to base64.\n&gt;&gt;\n&gt;&gt; Brian\n&gt;&gt;\n&gt;&gt;&gt; On Feb 23, 2015, at 5:06 AM, Fischer, Max (SCC) &lt;max.fischer@kit.edu&gt; wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt; Hi All,\n&gt;&gt;&gt;\n&gt;&gt;&gt; we use the JobRouter to update scheduling information from external sources\n with Hooks [1]. When doing an information scale test, we found that the\n JobRouter crashes for large job ClassAds. This seems to be a problem with how\n the Router parses the ClassAd.\n&gt;&gt;&gt;\n&gt;&gt;&gt; The JobRouter fails to extract the Owner from the job ClassAd[1], even\nthough it is enforced by the Route [2]. (Checking condor_q also correctly shows the Owner.)\n&gt;&gt;&gt; In a similar fashion, if the hook produces too much output (the translate\n hook *must* output the entire ClassAd), we see errors that indicate the\nClassAd is not fully digested. E.g. parsing of RequestMemory stops before the argument is done.\n&gt;&gt;&gt;\n&gt;&gt;&gt; This appears to be due to a limited buffer size. For our hooks,\nwe can pass the information also via files, but\n&gt;&gt;&gt; is there a fixed limitation to ClassAd sizes we need to be aware of? Is\n this exclusive to the JobRouter?\n&gt;&gt;&gt;\n&gt;&gt;&gt; Cheers,\n&gt;&gt;&gt; Max\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-05 17:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=43528\">[43528]</a></span>: define existing knob PIPE_BUFFER_MAX and put it in the param table <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4926\" onclick=\"get_ticket_and_populate_wrapper('4926'); return false;\" title=\"document and add to param table PIPE_BUFFER_MAX\">#4926</a></span>  (By Karen Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Mar-05 17:14", "status": "resolved", "created": "2015-Mar-05 13:02", "fixed_version": "2015-Mar-05 13:02", "broken_version": "v080000", "priority": "3", "subsystem": "Unknown", "assigned_to": "smoler", "derived_from": "", "creator": "smoler", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}