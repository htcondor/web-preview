{"id": 2921, "title": "Ticket #2921: regression - incorrect recovery in dagman", "description": "<blockquote>\nWhen recovery occurs for jobs between termination and post script termination such as:\n\n<p>ULOG_JOB_TERMINATED\n&lt;recovery&gt;\nULOG_POST_SCRIPT_TERMINATED\n\n</p><p>the state information isn't handled correctly in recovery. Although the jobs have post scripts and a ULOG_JOB_TERMINATED event, the jobs do not transition to running the post script. The result is you see the following in the dagman out file and a rescue is dumped:\n\n</p><p> 02/28/12 09:14:32 ERROR: DAG finished but not all nodes are complete -- checking\n for a cycle...\n02/28/12 09:14:32 ... ERROR: no cycle found; unknown error condition\n\n</p><p>What should happen is the post scripts should be run at the tail end of bootstrap (or before) and the recovery should work.</p></blockquote>", "remarks": "<blockquote>\n<em>2012-Apr-04 08:32:42 by nwp:</em> <br/>\n\nThe attached patch does not apply to master, V7_6-branch, nor V7_6_4-branch-tag.\n\n<p></p><hr/>\n<em>2012-Apr-04 09:06:18 by nwp:</em> <br/>\n\nThis was resolved in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2057\" onclick=\"get_ticket_and_populate_wrapper('2057'); return false;\" title=\"Always run POST script, even if PRE script fails\">#2057</a></span>\n\n<p></p><hr/>\n<em>2012-Apr-04 09:12:23 by jrt:</em> <br/>\n\nseems to be fixed in 2057 as per below. Any idea what fixed it?\n\n<p>2011-Sep-01 14:07:44 by wenger:\nJust found a new bug in this branch: If you have a node with a POST script, and DAGMan is then held while the POST script is running, when DAGMan is released and goes into recovery mode, it doesn't correctly deal with things and thinks the DAG is finished even though the node is not complete! I tested things with the 7.7.2 master, and that works okay, so it's definitely something in this branch.\n\n</p><p></p><hr/>\n<em>2012-Apr-04 09:14:47 by nwp:</em> <br/>\n\nLook at <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/7ce3a85c756e8317bdb440ae3269faa7f12fe44e\">[27074]</a></span> for the fix.\n\n<p></p><hr/>\n<em>2012-Apr-04 12:03:03 by wenger:</em> <br/>\n\nDo we need to cherry-pick that over to 7.6?\n\n<p></p><hr/>\n<em>2012-Apr-04 12:05:20 by wenger:</em> <br/>\n\nHmm -- I guess cherry-picking things over might be hard since the fix is part of a new feature in the 7.7 series.  One question is, how long has this bug existed?  If it has existed for a long time, especially, maybe we should just document it in 7.6 and not fix it, especially since 7.8 will be coming out fairly soon.\n\n<p></p><hr/>\n<em>2012-Apr-04 12:06:41 by jrt:</em> <br/>\n\nIt was a regression from 7.6.0 to 7.6.4\n\n<p></p><hr/>\n<em>2012-Apr-04 12:08:34 by jrt:</em> <br/>\n\nActually those versions are probably not entirely correct.\n\n<p></p><hr/>\n<em>2012-Apr-04 12:11:35 by wenger:</em> <br/>\n\nRe yim with Matt:  one way to fix this might be to cherry-pick over the whole implementation of <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2057\" onclick=\"get_ticket_and_populate_wrapper('2057'); return false;\" title=\"Always run POST script, even if PRE script fails\">#2057</a></span> -- the main issue with that is that it would be introducing a new feature (at least somewhat) to the stable series.  If we \"manually\" fix it in 7.6, that will take more work, and also probably cause a merge conflict.\n\n<p>Nathan -- can you add a test for this?\n\n</p><p></p><hr/>\n<em>2012-Apr-04 16:04:33 by nwp:</em> <br/>\n\nThere is a test on master.  Furthermore, the current head of 7.6 does not show this behavior for me on my desktop.  Ticket will be resolved until jrt has different information.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/549/postrun.patch\">postrun.patch</a>\n1342 bytes added by jrt on 2012-Apr-04 12:27:57 UTC.\n<br/>\nI think the change in behavior was due to the move of status and postrunnodecount from <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ProcessJobProcEnd\" title=\"Process Job Proc End\">ProcessJobProcEnd</a></span> and bootstrap. This essentially changes it back.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "", "type": "defect", "last_change": "2012-Apr-04 16:04", "status": "resolved", "created": "2012-Apr-04 07:23", "fixed_version": "2012-Apr-04 07:23", "broken_version": "v070604", "priority": "2", "subsystem": "Dag", "assigned_to": "nwp", "derived_from": "", "creator": "jrt", "rust": "", "customer_group": "other", "visibility": "public", "notify": "jthomas@redhat.com wenger@cs.wisc.edu", "due_date": ""}