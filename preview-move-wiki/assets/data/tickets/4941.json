{"id": 4941, "title": "Ticket #4941: Preserve time zone info in python bindings", "description": "<blockquote>\n<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> absTime() values include a time zone offset. Python datetime values can include timezone information. When converting between the two types, we should preserve the time zone information.</blockquote>", "remarks": "<blockquote>\n<em>2015-Mar-17 13:45:14 by jfrey:</em> <br/>\n\nI've attached a patch that handles the time zone information in the Python-&gt;ClassAd value conversion.\n\n<p>To do the same for ClassAd-&gt;Python conversions, we need to define a subclass of datetime.tzinfo that encapsulates the time zone offset. I don't know how to do that from within the C++ bindings.\n\n</p><p></p><hr/>\n<em>2015-Mar-17 14:03:39 by jfrey:</em> <br/>\n\nThe Python module <code>pytz</code> provides subclasses of tzinfo for every hour offset from GMT. But that doesn't help if the offset isn't an even number of hours. Also, can we assume that <code>pytz</code> is available everywhere?\n\n<p>The following Python code would do the trick, but can we define and then use a chunk of Python code from within the bindings library?\n\n</p><p></p><div class=\"verbatim\">\n<pre>class FixedOffset(tzinfo):\n    \"\"\"Fixed offset in minutes east from UTC.\"\"\"\n    def __init__(self, offset, name):\n        self.__offset = timedelta(minutes = offset)\n        self.__name = name\n    def utcoffset(self, dt):\n        return self.__offset\n    def tzname(self, dt):\n        return self.__name\n    def dst(self, dt):\n        return timedelta(0)\n</pre></div>\n\n\n<p>Or can we define and wrap a C++ class that implements all of the methods of tzinfo without being derived from it?\n\n</p><p></p><hr/>\n<em>2015-Mar-17 14:24:20 by jfrey:</em> <br/>\n\nThe dateutil module includes the <code>tzoffset</code> class, which implements a fixed offset timezone with a granularity of seconds. Can we assume that will be available everywhere?\n\n<p></p><hr/>\n<em>2015-Mar-17 14:34:06 by jfrey:</em> <br/>\n\nIt appears dateutil is not part of the base install for Red Hat 5, but is available.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/867/python_tz.patch\">python_tz.patch</a>\n1237 bytes added by jfrey on 2015-Mar-17 18:41:39 UTC.\n<br/>\nPreserve time zone info in Python-&gt;ClassAd value conversion.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "", "type": "enhance", "last_change": "2015-Mar-17 14:55", "status": "new", "created": "2015-Mar-17 13:39", "fixed_version": "2015-Mar-17 13:39", "broken_version": "v080200", "priority": "4", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "#4936", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}