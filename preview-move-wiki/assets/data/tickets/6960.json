{"id": 6960, "title": "Ticket #6960: shared port on Windows can make damons slow to notice signals", "description": "<blockquote>\nWhen shared port is enabled on Windows, daemons can be slow to notice \"signals\" that are sent using the <code>DC_RAISESIGNAL</code> command.\n\n<p>The problem is that after the command handler for <code>HandleSigCommand</code> updates the daemon core signal table.  the daemon core pump goes back into select, and only notices the pending signal in the table after select wakes again - usually after a timeout.  For example\n\n</p><p></p><div class=\"snip\">\n<pre class=\"sniplabel\">StartLog fragment</pre>\n<pre class=\"snip\">03/19/19 14:39:31.372 (D_ALWAYS) PERF: leaving select\n03/19/19 14:39:31.372 (D_ALWAYS) State = TIMED_OUT\n03/19/19 14:39:31.372 (D_ALWAYS) max_fd = 756\n03/19/19 14:39:31.372 (D_ALWAYS) Selection FD's\n03/19/19 14:39:31.372 (D_ALWAYS)        Read {756 } = 1\n03/19/19 14:39:31.372 (D_ALWAYS)        Write {} = 0\n03/19/19 14:39:31.372 (D_ALWAYS)        Except {} = 0\n03/19/19 14:39:31.372 (D_ALWAYS) Timeout = 1.000000 seconds\n03/19/19 14:39:31.372 (D_ALWAYS) PERF: entering select. timeout=59\n03/19/19 14:39:58.129 (D_ALWAYS) PERF: leaving select\n03/19/19 14:39:58.129 (D_ALWAYS) State = FDS_READY\n03/19/19 14:39:58.129 (D_ALWAYS) max_fd = 756\n03/19/19 14:39:58.129 (D_ALWAYS) Selection FD's\n03/19/19 14:39:58.129 (D_ALWAYS)        Read {756 } = 1\n03/19/19 14:39:58.129 (D_ALWAYS)        Write {} = 0\n03/19/19 14:39:58.129 (D_ALWAYS)        Except {} = 0\n03/19/19 14:39:58.129 (D_ALWAYS) Ready FD's\n03/19/19 14:39:58.129 (D_ALWAYS)        Read {756 } = 1\n03/19/19 14:39:58.129 (D_ALWAYS)        Write {} = 0\n03/19/19 14:39:58.129 (D_ALWAYS)        Except {} = 0\n03/19/19 14:39:58.129 (D_ALWAYS) Timeout = 59.000000 seconds\n03/19/19 14:39:58.129 (D_COMMAND) Calling HandleReq &lt;HandleSigCommand()&gt; (0) for command 60000 (DC_RAISESIGNAL) from ...\n03/19/19 14:39:58.129 (D_COMMAND) Return from HandleReq &lt;HandleSigCommand()&gt; ...\n03/19/19 14:39:58.129 (D_ALWAYS) PERF: entering select. timeout=32\n03/19/19 14:40:30.129 (D_ALWAYS) PERF: leaving select\n03/19/19 14:40:30.129 (D_ALWAYS) State = TIMED_OUT\n03/19/19 14:40:30.129 (D_ALWAYS) max_fd = 756\n03/19/19 14:40:30.129 (D_ALWAYS) Selection FD's\n03/19/19 14:40:30.129 (D_ALWAYS)        Read {756 } = 1\n03/19/19 14:40:30.129 (D_ALWAYS)        Write {} = 0\n03/19/19 14:40:30.129 (D_ALWAYS)        Except {} = 0\n03/19/19 14:40:30.129 (D_ALWAYS) Timeout = 32.000000 seconds\n03/19/19 14:40:30.130 (D_ALWAYS) Calling Handler &lt;handle_dc_sighup()&gt; for Signal 1 &lt;SIGHUP&gt;\n03/19/19 14:40:30.130 (D_ALWAYS) Got SIGHUP.  Re-reading config files.\n03/19/19 14:40:30.248 (D_ALWAYS) History file rotation is enabled.\n03/19/19 14:40:30.248 (D_ALWAYS)   Maximum history file size is: 20971520 bytes\n03/19/19 14:40:30.248 (D_ALWAYS)   Number of rotated history files is: 2\n03/19/19 14:40:31.097 (D_ALWAYS) PERF: entering select. timeout=3\n</pre></div>\n\n\n<p>Notice that <code>HandleSigCommand</code> is processed at 14:39:58.129, then select is entered and returns ~30 sec later at 14:40:30.129 having timed out. Only then does the pump notice the SIGHUP and does the reconfig.\n\n</p><p><span class=\"subsection\"></span></p><h3>Analysis </h3>\nThe problem is that when shared port is enabled, the <code>DC_RAISESIGNAL</code> command <strong>might</strong> be handled in <code>SharedPortEndpoint::DoListenerAccept</code> which is processed by <code>DoPumpWork</code> on Windows because the socket actually arrives via named pipe on a different thread.\n\n<p><code>DoPumpWork</code> is processed with the timers, after the signal handlers and before select.  If <code>DoPumpWork</code> were before the signal handlers, then there would not be this delay.   Alternatively, if we forced the select timer to be 0 when the signal table is set, this would also avoid the delay.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Mar-20 12:15:44 by tlmiller:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>This looks good.  There should be no further implications of moving the (Windows-specific) work pump in front of the signal handling, because Windows doesn't actually have signals.  (It may be possible for the DC_RAISESIGNAL to be handled during normal socket-handling, depending on the security settings, if the work pump handles security but the command packet is delayed, but that's fine: select() will exit when the command packet arrives and the signal will be handled after pumping work on the next go-around.)\n\n</p><p></p><hr/>\n<em>2019-Mar-20 12:16:52 by tlmiller:</em> <br/>\n\nThis might be worth mentioning in the version history (and maybe to fill out a release announcement).</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=6735\" onclick=\"get_ticket_and_populate_wrapper('6735'); return false;\" title=\"Delay between execution of jobs on Windows with shared_port enabled\">#6735</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nDelay between execution of jobs on Windows with shared_port enabled</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Apr-08 16:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/3918a080b52ee07195e723defe099a0d9d47cb23\">[56521]</a></span>: Version history for several issues with Windows restart, reconfig and shutdown. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6952\" onclick=\"get_ticket_and_populate_wrapper('6952'); return false;\" title=\"shared port + procd on Windows causes the master to fail to restart\">#6952</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6957\" onclick=\"get_ticket_and_populate_wrapper('6957'); return false;\" title='Schedd on Windows restarts with \"fd_set is full\" message'>#6957</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6960\" onclick=\"get_ticket_and_populate_wrapper('6960'); return false;\" title=\"shared port on Windows can make damons slow to notice signals\">#6960</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Mar-20 10:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/261a8d6f37e08159f05d5092ff07cb5b567e58d5\">[56393]</a></span>: Fix for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6960\" onclick=\"get_ticket_and_populate_wrapper('6960'); return false;\" title=\"shared port on Windows can make damons slow to notice signals\">#6960</a></span>. shared port on Windows can make daemons slow to notice signals ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Apr-08 16:44", "status": "resolved", "created": "2019-Mar-19 16:02", "fixed_version": "2019-Mar-19 16:02", "broken_version": "", "priority": "3", "subsystem": "Daemons", "assigned_to": "johnkn", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}