{"id": 3918, "title": "Ticket #3918: Provide stream parser for python bindings", "description": "<blockquote>\nRight now, we have no mechanism to parse a stream of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>.  This makes parsing the output of something like condor_history tedious.\n\n<p>Here's what I'd like to do:\n\n</p><p></p><div class=\"verbatim\">\n<pre>&gt;&gt;&gt; import classad\n&gt;&gt;&gt; import os\n&gt;&gt;&gt; fd = os.popen(\"condor_history -l -match 4\")\n&gt;&gt;&gt; ads = classad.parseOldAds(fd)\n&gt;&gt;&gt; print [ad[\"ClusterId\"] for ad in ads]\n[23389L, 23388L, 23386L, 23387L]\n&gt;&gt;&gt;\n</pre></div>\n\n\n<p>I propose adding two new functions to classad:\n</p><ul>\n<li>parseAds(input): takes a string or file, returns an iterator of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>.\n</li><li>parseOldAds(input: takes a string or file, returns an iterator of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> in old format.\n</li></ul>\n\n<p>(plus corresponding unit tests, of course)</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Oct-31 10:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=38044\">[38044]</a></span>: add version history and documentation for new Python bindings <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> methods parseAds() and parseOldAds() <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3918\" onclick=\"get_ticket_and_populate_wrapper('3918'); return false;\" title=\"Provide stream parser for python bindings\">#3918</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-14 07:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37611\">[37611]</a></span>: Rearrange headers to prevent a F18 warning. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3918\" onclick=\"get_ticket_and_populate_wrapper('3918'); return false;\" title=\"Provide stream parser for python bindings\">#3918</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-13 21:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37610\">[37610]</a></span>: Provide a stream parser for python bindings. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3918\" onclick=\"get_ticket_and_populate_wrapper('3918'); return false;\" title=\"Provide stream parser for python bindings\">#3918</a></span>  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2013-Oct-31 10:47", "status": "resolved", "created": "2013-Sep-13 21:24", "fixed_version": "2013-Sep-13 21:24", "broken_version": "", "priority": "4", "subsystem": "Tools", "assigned_to": "tim", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}