{"id": 7733, "title": "Ticket #7733: Improve job id validation checks", "description": "<blockquote>\nThe schedd has poor validation of job ids for SetAttribute() and DeleteAttribute() qmgmt calls. If the job id isn't a valid key in the committed job queue log, it assumes the ad has been created in the active transaction (if any). It rejects the attribute modification unless the cluster id matches <code>active_cluster_num</code> and the proc id is less than <code>next_proc_num</code>. When submitting a new cluster, this allows <code>SetAttribute()</code> of arbitrary negative proc ids. When not submitting a new cluster, this allows <code>SetAttribute()</code> of cluster id -1 with arbitrary negative proc ids.\n\n<p>The actions are logged in <code>job_queue.log</code>, but don't appear to affect the in-memory queue (since the ads don't actually exist). When the log is compressed, the errant entries disappear (since they aren't in the in-memory version). The only practical effects appear to be that the <code>SetAttribute()</code> and <code>DeleteAttribute()</code> calls succeed, and the Job Router will report errors when reading the log.\n\n</p><p>We are making the following changes to improve the code that validates <code>SetAttribute()</code> and <code>DeleteAttribute()</code> calls:\n</p><ul>\n<li>Change <code>TotalSubmitProcs</code> from immutable to secure and remove the special exception for it.\n</li><li>Reject all modification of nonexistent job ids by default, even for calls internal to the schedd.\n<ul>\n<li>Use of the NONDURABLE flag is no longer required to detect an invalid job id, which the dedicated scheduler was relying on.\n</li><li>Submit transforms and late materialization are exempted from this check. They may need to modify ads created in the active transaction that would be rejected by our heuristic for allowed in-transaction edits (examining <code>active_cluster_num</code> and <code>next_proc_num</code>). They are internal code and assumed trustworthy. We could remove this exemption if we had an efficient way to check a job id against all of the ids created in the active transaction.</li></ul>\n</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2020-Jul-23 13:04:18 by zmiller:</em> <br/>\n\nFound a couple other surprises when messing around.  <code>256.0</code> is a valid job in the queue.\n<div class=\"code\">\n<pre class=\"code\">% condor_qedit 256.-250 foo 1\nSet attribute \"foo\" for 1 matching jobs.\n\n% condor_qedit 256.-25000000000000000 foo 1\nSet attribute \"foo\" for 1 matching jobs.\n\n% condor_qedit 256.-2500000000000000000000000 foo 1\nFailed to set attribute \"foo\" for job 256.1.\nQueue transaction failed.  No attributes were set.\n\n% condor_qedit 256.9223372036854775807 foo 1\nSet attribute \"foo\" for 1 matching jobs.\n\n% condor_qedit 256.9223372036 foo 1\nFailed to set attribute \"foo\" for job 256.633437444.\nQueue transaction failed.  No attributes were set.\n</pre></div>\n\n\n<p></p><hr/>\n<em>2020-Jul-23 13:56:33 by jfrey:</em> <br/>\n\nWhen there's no qmgmt client, SetAttribute() will approve setting of attributes for non-existent job ids. The record is written to the job_queue.log, but is ignored in-memory. A caller in the schedd can opt into checking whether the job id exists by using the NONDURABLE flag. The dedicated scheduler depends on the this to set the attribute <code>Scheduler</code> for all jobs in a given cluster. It calls SetAttribute() with NONDURABLE with increasing procids until a failure is returned.\n\n<p>This very non-obvious behavior can be cleaned up if SetAttribute() has a proper check for non-existent job ids.\n\n</p><p></p><hr/>\n<em>2020-Jul-23 13:59:22 by jfrey:</em> <br/>\n\nAbout Zach's surprising qedits: It appears condor_qedit ignores \"bogus\" procids and pretends they weren't given. It then does an edit of the entire cluster by constraint. Negative values and overly-large values (possibly just ones that overflow to a negative value) are \"bogus\".\n\n<p></p><hr/>\n<em>2020-Jul-27 15:55:55 by jfrey:</em> <br/>\n\nSome additional candidates for cleanup in the SetAttribute() validation code:\n\n<p></p><ul>\n<li>Instead having ATTR_TOTAL_SUBMIT_PROCS be an immutable attribute and having a special case exception for late materialization to modify it, it should be a protected or secure attribute.\n</li><li>Extend the restriction on modifying cluster 0 to also reject modifying negative cluster ids.\n</li></ul>\n\n<p></p><hr/>\n<em>2020-Nov-10 14:28:43 by jfrey:</em> <br/>\n\nThis ticket should have no user-visible effects, so I'm not making a version history entry.\n\n<p></p><hr/>\n<em>2020-Nov-10 14:30:53 by zmiller:</em> <br/>\n\nDoes this need to stay private?  I.e. did you identify any security risks while working on this code?\n\n<p></p><hr/>\n<em>2020-Nov-10 14:32:53 by jfrey:</em> <br/>\n\nNo, it doesn't need to be private.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Oct-28 16:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=61574\">[61574]</a></span>: Change <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=TotalSubmitProcs\" title=\"Total Submit Procs\">TotalSubmitProcs</a></span> attribute from immutable to secure. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7733\" onclick=\"get_ticket_and_populate_wrapper('7733'); return false;\" title=\"Improve job id validation checks\">#7733</a></span> <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=TotalSubmitProcs\" title=\"Total Submit Procs\">TotalSubmitProcs</a></span> isn't immutable for late materialization. This removes a special exemption for it in ModifyAttrCheck().  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Oct-28 16:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=61575\">[61575]</a></span>: Improve checks for bad job ids in Set/DeleteAttribute(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7733\" onclick=\"get_ticket_and_populate_wrapper('7733'); return false;\" title=\"Improve job id validation checks\">#7733</a></span> Always return failure for nonexistent job ids (except for submit transforms and late materialization). Before, many modification requests, including some from schedd clients, were allowed. These were generally harmless, generating extra lines\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2020-Nov-10 14:32", "status": "resolved", "created": "2020-Jul-08 15:13", "fixed_version": "2020-Jul-08 15:13", "broken_version": "", "priority": "3", "subsystem": "DaemonsSubmitNode", "assigned_to": "jfrey", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "zmiller@cs.wisc.edu", "due_date": ""}