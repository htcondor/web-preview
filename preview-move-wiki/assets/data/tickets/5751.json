{"id": 5751, "title": "Ticket #5751: add a userMap function to condor ClassAds", "description": "<blockquote>\nFor use in the job router and in the future submit transforms - a function is needed in classads that will take a username as input and look it up in a mapfile (like the security mapfile) and return an accounting group or list of groups.\n\n<p>the list of userMaps to load is configured on a per-daemon basis.  We do this to avoid having a naieve configuration causing the tools and shadows/starters to parse a userMap file that they will never use.  The knobs are:\n\n</p><p></p><ul>\n<li><code>&lt;subsystem&gt;_CLASSAD_USER_MAP_NAMES</code> = name1 name2 etc\n</li><li><code>CLASSAD_USER_MAPFILE_&lt;name1&gt;</code> initalize userMap &lt;name1&gt; by parsing this file\n</li><li><code>CLASSAD_USER_MAPDATA_&lt;name1&gt;</code> initialze userMap &lt;name1&gt; by parsing the value of this knob.\n</li></ul>\n\n<p>If both <code>CLASSAD_USER_MAPFILE_&lt;name1&gt;</code> and <code>CLASSAD_USER_MAPDATA_&lt;name1&gt;</code> are specified the <code>MAPFILE</code> will be read and the <code>MAPDATA</code> ignored.\n\n</p><p>The format of the MAPFILE or MAPDATA will be the same as security Canonicalization files.  The first field must be * (or a subset name - see below), the second field is a regex that we will match against the input, and the third field will be the output if the regex matches, the 3 and 4 argument form of userMap expect that the third field will be a comma separated list of values. for example\n\n</p><p></p><div class=\"snip\">\n<pre class=\"sniplabel\">groups.mapdata </pre>\n<pre class=\"snip\">* John  chemistry,physics,glassblowing\n* Juan  physics,chemistry\n* Bob   security\n* Alice security,math\n</pre></div>\n\n\n<p>The classad userMap function takes 2 to 4 arguments. In all forms the mapping table indicated by mapname is scanned until field2 of a row matches the input. If a match is found, the return value is based on the other args and the value of field3 from that row.  If there is no matching row, then the return value is undefined (or arg4 if using the 4 argument form).\n\n</p><p>The various forms of userMap are:\n\n</p><p></p><ul>\n<li>userMap(mapname,input) -&gt; returns field3 of the mapdata or undefined\n</li><li>userMap(mapname,input,preference) -&gt; returns the value from field3 of the map data that matches preference. returns undefined if no field3 or it does not match the preference.\n</li><li>userMap(mapname,input,undefined) -&gt; returns the first value from field3 of the map data. returns undefined if there is no field3\n</li><li>userMap(mapname,input,preference,default) -&gt; returns default if no row matches the input, or if field3 doesn't contain the preference. otherwise behaves the same as the 3 argument form.\n</li><li>userMap(mapname,input,undefined,default) -&gt; returns default if no row matches the input, or if field3 is empty, otherwise returns the first item from field3\n</li></ul>\n\n<p><strong>Optional submaps</strong>\nIf the first field of the mapfile contains something other than *, then a submap is defined.  To select a submap for lookup, the first argument for userMap should be \"mapname.submap\". for example\n\n</p><p></p><div class=\"snip\">\n<pre class=\"sniplabel\">mapdata 'groups' with submaps</pre>\n<pre class=\"snip\">*   Bob   security\n*   Alice security,math\nalt Alice math,hacking\n</pre></div>\n\n\n<p>Using the above mapfile.  the following lookups will result\n\n</p><p></p><ul>\n<li>userMap(\"groups\",\"Alice\") -&gt; returns security,math\n</li><li>userMap(\"groups.alt\",\"Alice\") -&gt; returns math,hacking</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2016-Jun-29 21:46:42 by bbockelm:</em> <br/>\n\nSeems really strange that the <code>*</code> doesn't match before <code>alt</code>.\n\n<p>I think of <code>*</code> as a wildcard, not \"default if nothing else is specified\".\n\n</p><p></p><hr/>\n<em>2016-Jun-30 10:31:10 by johnkn:</em> <br/>\n\nThink * as meaning 'unspecified'. but I'm open to changing to some other character to avoid confusion.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5779\" onclick=\"get_ticket_and_populate_wrapper('5779'); return false;\" title=\"the MapFile class needs to handle literal keys\">#5779</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nthe <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MapFile\" title=\"Map File\">MapFile</a></span> class needs to handle literal keys</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-28 16:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48861\">[48861]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5751\" onclick=\"get_ticket_and_populate_wrapper('5751'); return false;\" title=\"add a userMap function to condor ClassAds\">#5751</a></span>: Added documentation of the new userMap() <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> function and related config knobs (and documented userHome(), which was missing).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-20 15:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48820\">[48820]</a></span>: Version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5530\" onclick=\"get_ticket_and_populate_wrapper('5530'); return false;\" title=\"condor_q does not respect QUEUE_SUPER_USERS from CERTIFICATE_MAPFILE\">#5530</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5721\" onclick=\"get_ticket_and_populate_wrapper('5721'); return false;\" title=\"config/submit language should support multiline values\">#5721</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5507\" onclick=\"get_ticket_and_populate_wrapper('5507'); return false;\" title=\"Expose condor_drain functionality in the Python bindings\">#5507</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5751\" onclick=\"get_ticket_and_populate_wrapper('5751'); return false;\" title=\"add a userMap function to condor ClassAds\">#5751</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-30 10:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48705\">[48705]</a></span>: for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5751\" onclick=\"get_ticket_and_populate_wrapper('5751'); return false;\" title=\"add a userMap function to condor ClassAds\">#5751</a></span>. change to per-subsystem config for lists of map names and fix leak of map on parse failure  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-29 11:38</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48693\">[48693]</a></span>: unit test for userMap using $EVAL. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5751\" onclick=\"get_ticket_and_populate_wrapper('5751'); return false;\" title=\"add a userMap function to condor ClassAds\">#5751</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-29 10:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48688\">[48688]</a></span>: fix for previous commit to <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5751\" onclick=\"get_ticket_and_populate_wrapper('5751'); return false;\" title=\"add a userMap function to condor ClassAds\">#5751</a></span>. fix for $EVAL and unit test for $STRING and $EVAL  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-24 14:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48635\">[48635]</a></span>: fix bug in previous commit for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5751\" onclick=\"get_ticket_and_populate_wrapper('5751'); return false;\" title=\"add a userMap function to condor ClassAds\">#5751</a></span> in here-file parsing for userMap data.  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-24 13:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48633\">[48633]</a></span>: add userMap function to condor classads and $EVAL to config so that it can be used there also. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5751\" onclick=\"get_ticket_and_populate_wrapper('5751'); return false;\" title=\"add a userMap function to condor ClassAds\">#5751</a></span> user maps for use with this function are configuring using new knobs: CLASSAD_USER_MAP_NAMES defines the list of map names CLASSAD_USER_MAPFILE_* gives the filename for each of the map files ===VersionHistory:Pending===\u00a0[...]\n (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2016-Jul-28 16:19", "status": "resolved", "created": "2016-Jun-24 13:56", "fixed_version": "2016-Jun-24 13:56", "broken_version": "", "priority": "3", "subsystem": "", "assigned_to": "johnkn", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}