{"id": 5729, "title": "Ticket #5729: Allow \"for all\" for node name for script, retry, etc.", "description": "<blockquote>\nI was just talking with Miron about <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=1326\" onclick=\"get_ticket_and_populate_wrapper('1326'); return false;\" title=\"Allow regexp for node name for script, retry, etc.\">#1326</a></span>, and he suggested that a first step is to allow some kind of special \"for all\" string that's not a regex -- you just either specify an explicit node name, or you get everything in your DAG.  This would clearly be easier to implement than regexes, and Miron thinks it might be more understandable for the average user.\n\n<p>Also, it just occurred to me that if you specify this inside a splice, it would only apply to nodes within that splice -- that would give users a way to have a command apply to only a subset of the nodes of their entire workflow, which might make the regex less necessary.\n\n</p><p>One note about this:  whatever the \"for each\" string is, we'd have to disallow actually having that for a node name...</p></blockquote>", "remarks": "<blockquote>\n<em>2016-Jun-15 14:33:25 by wenger:</em> <br/>\n\nI'm thinking that if the DAG file contains something like\n\n<p></p><pre>  SCRIPT PRE _for_all_ ...\n</pre>\n\n<p>that that command will only apply to nodes that have already been defined at that point in the DAG file.\n\n</p><p>(Hmm -- I'd have to think about whether a \"for all\" command in a top-level DAG would apply to nodes that are spliced in.  Seems like it would be more intuitive for it <strong>not</strong> do, but I should get some feedback on that, and think about implementation details.)\n\n</p><p>In terms of implementation, I'm thinking we'd want to write a new method (probably static) in parse.cpp that would be an iterator on the Job objects matching the specified name.\n\n</p><p>We might want to finish up <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4602\" onclick=\"get_ticket_and_populate_wrapper('4602'); return false;\" title=\"Clean up DAGMan VARS parsing\">#4602</a></span> before implementing this.\n\n</p><p></p><hr/>\n<em>2016-Jun-15 14:43:28 by wenger:</em> <br/>\n\nHmm -- if we want a \"for all\" command to apply to all nodes, even those defined later in the file, maybe we should just go to a two-pass parsing of the DAG file, where in the first pass we only parse JOB and SUBDAG EXTERNAL commands, and in the second pass we parse everything else.  (That would also allow, say, a PARENT/CHILD command to come before some or all of the node definitions.)\n\n<p></p><hr/>\n<em>2016-Jun-15 15:27:26 by wenger:</em> <br/>\n\nOkay, just had a discussion about this with Lauren, and she thinks that a \"for all\" command should apply to all nodes within a DAG file, including ones that are defined after the \"for all\" command.  (I tend to agree with this -- I think it's easier to understand that applying only to nodes defined before the \"for all\" command.)  We also both agreed that a \"for all\" command in a DAG file should <strong>not</strong> apply to nodes within a splice referenced by that DAG file.\n\n<p>(Hmm -- I just thought of something else:  should \"for all\" commands apply to FINAL nodes?  Some cannot (e.g., PARENT/CHILD), for some (e.g., SCRIPT) it's not obvious.)  I'm tending to think that the \"for all\" commands should just not apply to FINAL nodes...\n\n</p><p>See <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5732\" onclick=\"get_ticket_and_populate_wrapper('5732'); return false;\" title=\"Allow more flexible command order within DAG files\">#5732</a></span>.\n\n</p><p></p><hr/>\n<em>2016-Jun-24 11:51:24 by wenger:</em> <br/>\n\nDo something like this:\n\n<p></p><pre>   Job *Dag::FindAllNodesByName( const char *name );\n</pre>\n\n<p>First call it with a specific node name, then with NULL.  So in parse functions it would be like this:\n\n</p><p></p><pre>   const char *nodeName = ...\n   while ( Job *node = FindAllNodesByName( nodeName ) ) {\n     nodeName = NULL;\n     do actual work here...\n   }\n   if ( nodeName ) {\n     error (node not found)...\n   }\n</pre>\n\n<p>If you call FindAllNodesByName() with a name other than \"ALL_NODES\", and\nthat node doesn't exist, FindAllNodesByName() should print an error\nmessage.  Also, I guess if you call FindAllNodesByName() with \"ALL_NODES\"\nand there aren't any nodes, that should probably be an error.\n\n</p><p></p><hr/>\n<em>2016-Jul-24 15:47:33 by wenger:</em> <br/>\n\nHmm -- something to think about:  what if the user does something like this?:\n\n<p></p><pre>  ...\n  VARS all_nodes name=\"$(JOB)\"\n  ...\n  VARS NodeX name=\"special_name\"\n  ...\n</pre>\n\n<p>Does the VARS for a specific node override the all_nodes one?  If so, I guess we have to parse all of the all_nodes ones first, and then parse the node-specific ones...\n\n</p><p></p><hr/>\n<em>2016-Aug-04 16:04:15 by wenger:</em> <br/>\n\nOr maybe we just parse VARS, etc., in the order they are in the DAG file, and later ones override earlier ones (I think that's what we do now with node-specific ones).\n\n<p></p><hr/>\n<em>2016-Aug-04 16:05:17 by wenger:</em> <br/>\n\nProbably do this first for VARS -- I think that has the biggest demand...\n\n<p></p><hr/>\n<em>2016-Aug-05 13:54:19 by wenger:</em> <br/>\n\nI currently have this just about finished for VARS (because that seemed like the command for which ALL_NODES is most useful).\n\n<p>Which other commands do we want ALL_NODES to apply to?  I'm thinking the following:\n</p><ul>\n<li>SCRIPT\n</li><li>PRE_SKIP\n</li><li>RETRY\n</li><li>ABORT-DAG-ON\n</li><li>Maybe CATEGORY (could be useful for splices)\n</li><li>Maybe PRIORITY (could be useful for splices)\n</li></ul>\n\n<p></p><hr/>\n<em>2016-Sep-12 09:51:16 by wenger:</em> <br/>\n\nRight now this won't work right for multiple DAGs on the condor_submit_dag command line (ALL_NODES specifications in later DAGs will also apply to already-parsed DAGs).\n\n<p></p><hr/>\n<em>2016-Sep-12 09:55:56 by wenger:</em> <br/>\n\nHmm -- need to make sure this works right with INCLUDE, too...\n\n<p></p><hr/>\n<em>2016-Sep-21 10:52:22 by wenger:</em> <br/>\n\nThe changes for this ticket (on V8_5_gittrac_5729-branch) also include fixes for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4602\" onclick=\"get_ticket_and_populate_wrapper('4602'); return false;\" title=\"Clean up DAGMan VARS parsing\">#4602</a></span>.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=5940\" onclick=\"get_ticket_and_populate_wrapper('5940'); return false;\" title=\"Clean up DAG VARS parsing as related to ALL_NODES\">#5940</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nClean up DAG VARS parsing as related to ALL_NODES</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Oct-25 16:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/84cdd464db69ebebeeb436edbb254c220039a6ac\">[49473]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Finished documentation.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Oct-25 14:34</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/a2d806b83092b33ce380dcaac93257ecdef5a3a6\">[49472]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Changed the job_dagman_all_nodes test DAG to use the INCLUDE command.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Oct-13 16:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/25ea392f8c9f4976a53870861157307a3769ea25\">[49431]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Added ALL_NODES to PRE_SKIP, hopefully final cleanup (doc not done, though).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Oct-13 14:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/8ed6b5d136182aa89157981a4909afc967c016a8\">[49430]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: More cleanup of the ALL_NODES code, including fixing a memory leak, and dealing with multiple assignments of scripts to a node; test makes sure overriding works correctly.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Oct-13 10:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/da25edf527d8239e92976b2f1d726be3ba1e192f\">[49424]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: More cleanup of the ALL_NODES code.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Sep-30 16:15</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/ddd0622894dc869d4991ef71cfdcc7634a443ac0\">[49361]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Cleaned up checks for final nodes in ALL_NODES mode; started on ALL_NODES section in documentation; added version history item.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Sep-21 17:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/b5b587d47f95ec5aba035701b6d004dc8eeb1cc9\">[49258]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: More cleanup of the VARS parsing code, although we still re-parse most of the VARS line for each node...  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Sep-21 15:45</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/dedeba38124a466a291cfb4c7e47a35f51f255a0\">[49257]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Various cleanups to the ALL_NODES code, especially checking for FINAL nodes and skipping them; updated the job_dagman_all_nodes test to make sure that ALL_NODES does not apply to FINAL nodes.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Sep-21 14:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/ae70b38cca879a844853c4019b11e4120eb1be60\">[49255]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Added ALL_NODES capability to CATEGORY and modified the job_dagman_all_nodes test accordingly; various fixes to the ALL_NODES code; made some ALL_NODES changes to the DAGMan manual section.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Sep-21 12:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/bf99bc1bcfca146330056864595a91cc6f55d066\">[49254]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Added all_nodes capability to ABORT-DAG-ON and PRIORITY; changed Dag::RecordInitialAndFinalNodes() to Dag::RecordInitialAndTerminalNodes() to avoid confusion with FINAL nodes; added a splice to the job_dagman_all_nodes test, and also added scripts, ABORT-DAG-ON, and PRIORITY.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Sep-12 10:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/b1e3b002d2995dcd3ccaad97f9714fd05704762f\">[49167]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Cleaned up some of the parsing code a little bit; added a test that tests ALL_NODES for SCRIPT, VARS, and RETRY.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Aug-12 16:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/97ebf02d5007e3d024bd69ff6f4a98613f67f255\">[49003]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Mostly implemented ALL_NODES for SCRIPT; disallowed \"ALL_NODES\" for node names; extended VARS/ALL_NODES test to include splices; other cleanups. (Note: ALL_NODES doesn't work with multiple DAGs in one DAGMan, because of name munging.)  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Aug-05 15:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/3124975040fcc18eb55a43224a7ccf49b146714b\">[48958]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Made provision for the test to use the INCLUDE feature when things are merged to master (INCLUDE is not implemented on this branch).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Aug-05 13:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/839774c4268719ca2f5849ab94f7405ac118af71\">[48957]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Made a special iterator for ALL_NODES, instead of iterating directly on Dag::_jobs.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Aug-05 11:32</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/8d021e7785a85f64861e490658dd8f5834ee833f\">[48956]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Basic ALL_NODES functionality works (code needs lots of cleanup, though); added a test for this.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Aug-04 16:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0338a1f7c5a9e82424e16540f9ad3c5710b9e14c\">[48948]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5729\" onclick=\"get_ticket_and_populate_wrapper('5729'); return false;\" title='Allow \"for all\" for node name for script, retry, etc.'>#5729</a></span>: Started a little bit of the implementation to be able to do VARS on all_nodes; but I want to tear out the varq stuff before I go any further.  (By Kent Wenger )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2016-Oct-25 16:59", "status": "resolved", "created": "2016-Jun-14 15:28", "fixed_version": "2016-Jun-14 15:28", "broken_version": "v080505", "priority": "2", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "#1326", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu, zmiller@cs.wisc.edu", "due_date": ""}