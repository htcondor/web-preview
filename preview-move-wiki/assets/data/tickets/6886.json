{"id": 6886, "title": "Ticket #6886: Improve multifile curl plugin to allow uploads", "description": "<blockquote>\nThe multifile curl plugin does not currently support uploads, but this is needed to make the work in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6885\" onclick=\"get_ticket_and_populate_wrapper('6885'); return false;\" title=\"Allow multifile uploads\">#6885</a></span> usable.\n\n<p>In terms of interfaces, I believe this can be done with two changes:\n\n</p><p></p><ol>\n<li>The plugin should take an additional argument <code>-upload</code>; in that case, instead of downloading the provided URL <em>to</em> a local filename, it uploads the URL <em>from</em> the local file.\n</li><li>In the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> from the starter, we should rename the attribute <code>DownloadFileName</code> to <code>LocalFileName</code> to reflect the fact it doesn't actually download in this case.\n</li></ol>\n\n<p>For the code itself - we likely need to refactor / clean up so we can separate out common <code>libcurl</code> setup / teardown from the download-specific pieces.  This would allow us to share code between the upload and the download logic.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Feb-09 08:54:37 by bbockelm:</em> <br/>\n\nPer discussion with ToddT, went ahead and merged this.\n\n<p>There are no user-visible changes right now as there is no way to get HTCondor to invoke the multifile curl plugin.\n\n</p><p>However, we hopefully soon will enable the multifile upload code.  If that code makes it for 8.9.1, then this is likely worth a mention.\n\n</p><p></p><hr/>\n<em>2019-Apr-12 16:13:39 by coatsworth:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p></p><ul>\n<li><code>ShouldRetryTransfer()</code> should also return true for <code>CURLE_WRITE_ERROR</code>\n</li><li><code>OpenLocalFile()</code> should use <code>safe_fopen_wrapper()</code> instead of regular <code>fopen()</code>.\n</li><li><code>DownloadMultipleFiles()</code> should exit immediately if <code>BuildTransferRequests()</code> returns non-zero.\n</li><li>Why are we still supporting the <code>dav://</code> an <code>davs://</code> protocols? I thought these were only for testing and not needed anymore?\n</li></ul>\n\n<p></p><hr/>\n<em>2019-Apr-15 16:27:13 by coatsworth:</em> <br/>\n\nI've pushed a couple of small updates that I suggested in this code review. If Brian or anyone else feels strongly about these, let me know and I can revert (or you can revert them yourself).\n\n<p></p><ul>\n<li><code>ShouldRetryTransfer()</code> should also return true for <code>CURLE_WRITE_ERROR</code>\n<ul>\n<li>I goofed on this, it was clearly already in the list, not sure how I missed it.\n</li></ul>\n</li><li><code>OpenLocalFile()</code> should use <code>safe_fopen_wrapper()</code> instead of regular <code>fopen()</code>.\n<ul>\n<li>Done.\n</li></ul>\n</li><li><code>DownloadMultipleFiles()</code> should exit immediately if <code>BuildTransferRequests()</code> returns non-zero.\n<ul>\n<li>Done.\n</li></ul>\n</li><li>Why are we still supporting the <code>dav://</code> an <code>davs://</code> protocols? I thought these were only for testing and not needed anymore?\n<ul>\n<li>I'm leaving this here for now just in case Brian still needs it. If so I'd like to understand how/why it's being used.</li></ul>\n</li></ul>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Apr-15 16:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56631\">[56631]</a></span>: Small code review fixes, added full documentation on Submitting a Job page (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6886\" onclick=\"get_ticket_and_populate_wrapper('6886'); return false;\" title=\"Improve multifile curl plugin to allow uploads\">#6886</a></span>)  (By Mark Coatsworth )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jan-30 15:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56094\">[56094]</a></span>: Implement upload command for multifile curl plugin. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6886\" onclick=\"get_ticket_and_populate_wrapper('6886'); return false;\" title=\"Improve multifile curl plugin to allow uploads\">#6886</a></span> This provides an implementation of the `-upload` command for the multifile curl plugin. The semantics are quite similar compared to the download case. Two external changes of note:\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-Apr-15 16:27", "status": "resolved", "created": "2019-Jan-30 15:08", "fixed_version": "2019-Jan-30 15:08", "broken_version": "", "priority": "3", "subsystem": "FileTransfer", "assigned_to": "coatsworth", "derived_from": "#6885", "creator": "bbockelm", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "bbockelman@morgridge.org; tannenba@cs.wisc.edu", "due_date": ""}