{"id": 4292, "title": "Ticket #4292: Allow output from evictions to be not-spooled", "description": "<blockquote>\nHere's the setup:\n<ul>\n<li>Running jobs as part of a DAG node.\n</li><li>We use periodic_remove to evict jobs that go over their memory limit.\n</li><li>Users want to retrieve stdout / err from these cases in order to figure out what the heck went wrong with their jobs.\n</li></ul>\n\n<p>Right now, if we set:\n\n</p><p></p><div class=\"verbatim\">\n<pre>WhenToTransferOutput = \"ON_EXIT_OR_EVICT\"\n</pre></div>\n\n\n<p>then the stdout is copied to the schedd into the spool and the spool is deleted.  AFAICT, there's no way to get access to the job's incomplete output from a DAGMan post-script.\n\n</p><p>Traditionally, CMS has used a separate monitoring thread in its wrapper script to kill the job\u00a0and make sure the output is returned; this drives me nuts because it replicates the procd.\n\n</p><p>I'd like to have a new job attribute, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SpoolOnEvict\" title=\"Spool On Evict\">SpoolOnEvict</a></span> (defaults to true if not set) which controls whether job output is moved to the spool on an eviction.\n\n</p><p>For CMS to be able to use this\u00a0and not re-implement the current approach, this knob would need to go into 8.1.6.  The implementation is fairly trivial if we can get agreement on the approach.\n\n</p><p>Brian</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Apr-16 11:42:49 by bbockelm:</em> <br/>\n\nDiscussed this on the phone 2 weeks ago with Todd.  No objections were raised to the approach, although he asked me to verify that repeated condor_hold/condor_release on such jobs had predictable behavior.\n\n<p>Just did the testing this morning; there are no apparent issues in evicting the jobs multiple times.  The output files from the second eviction overwrites the files from the first.\n\n</p><p></p><hr/>\n<em>2014-Apr-16 14:04:56 by tannenba:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>Only feedback is to edit <code>condor_submit</code> to that folks can enter either\n\n</p><p></p><pre>   +SpoolOnEvict = True\n</pre>\n\n<p>or\n\n</p><p></p><pre>   spool_on_evict = True\n</pre>\n\n<p>or\n\n</p><p></p><pre>   SpoolOnEvict = True\n</pre>\n\n<p>just like all the other submit knobs.  Once this is done this ticket can go to docpending state.  Thanks for the patch!\n\n</p><p></p><hr/>\n<em>2014-Apr-16 14:13:40 by bbockelm:</em> <br/>\n\nHi Todd,\n\n<p>I'd be happy to do that - however, it makes the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SpoolOnEvict\" title=\"Spool On Evict\">SpoolOnEvict</a></span> knob relatively prominent (where I was thinking of it being a somewhat hidden knob for a specific use case).  Are you OK with making this a first-class config knob?  I assume that I somehow should add this to the manpage too.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2014-Apr-16 14:33:26 by tannenba:</em> <br/>\n\nBrian, re your first remark above:  my concern wasn't about output files being overwritten, it was with intermediate (checkpoint) files.  Imagine a job that writes out a self-checkpoint and has transfer files ON_EXIT_OR_EVICT.  If <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SpoolOnEvict\" title=\"Spool On Evict\">SpoolOnEvict</a></span> is True (as it always has been), then checkpoint file is written to spool and the job will resume where it left off upon restart because files in spool are a) written atomically, and b) sent to the execute node on restart.  If a self-checkpointing job has <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SpoolOnEvict\" title=\"Spool On Evict\">SpoolOnEvict</a></span> set to False, what happens on restart?  This is what I wanted you to test...  my guess is the job will restart from the beginning, right?  If true, at the very least, the documentation should note that setting <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SpoolOnEvict\" title=\"Spool On Evict\">SpoolOnEvict</a></span> will prevent user level checkpoint/resume and is only intended for debugging purposes?\n\n<p>Re the question about keeping <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SpoolOnEvict\" title=\"Spool On Evict\">SpoolOnEvict</a></span> hidden or not - I'd vote for documenting it, but doing so in a way that clearly states the use case for this knob and what breaks/surprises are in store if you use it.\n\n</p><p></p><hr/>\n<em>2014-Nov-04 13:36:07 by tannenba:</em> <br/>\n\nSee <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4679\" onclick=\"get_ticket_and_populate_wrapper('4679'); return false;\" title=\"Make SpoolOnEvict more useful\">#4679</a></span> for follow-on work to this.\n\n<p>As an aside, I am confused about why this ticket was moved (by TimT) from active to docpending without any of the code review changes being addressed, and then moved (by brian) from docpending to resolved without any documentation being added.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/828/gt4282.patch\">gt4282.patch</a>\n980 bytes added by bbockelm on 2014-Apr-02 02:22:13 UTC.\n<br/>\nMinimal patch for implementing <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SpoolOnEvict\" title=\"Spool On Evict\">SpoolOnEvict</a></span>.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-22 11:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40214\">[40214]</a></span>: edit new 8.1.6 version history item. Place the item in the 8.1.6 subsection of the version history. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4292\" onclick=\"get_ticket_and_populate_wrapper('4292'); return false;\" title=\"Allow output from evictions to be not-spooled\">#4292</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-22 09:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40209\">[40209]</a></span>: Version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4292\" onclick=\"get_ticket_and_populate_wrapper('4292'); return false;\" title=\"Allow output from evictions to be not-spooled\">#4292</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Apr-16 11:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39961\">[39961]</a></span>: Allow the user to disable spooling of output files on evictions. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4292\" onclick=\"get_ticket_and_populate_wrapper('4292'); return false;\" title=\"Allow output from evictions to be not-spooled\">#4292</a></span> This allows the user to recover output files if the job is removed from the queue. The original use case is for CMS, where jobs that go over their memory limits are removed via <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PeriodicRemove\" title=\"Periodic Remove\">PeriodicRemove</a></span> and users would like to be able to read\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2014-Nov-04 13:41", "status": "resolved", "created": "2014-Apr-01 20:48", "fixed_version": "2014-Apr-01 20:48", "broken_version": "", "priority": "2", "subsystem": "FileTransfer", "assigned_to": "bbockelm", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "wenger@cs.wisc.edu, bbockelm@cse.unl.edu, tannenba@cs.wisc.edu", "due_date": ""}