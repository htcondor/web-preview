{"id": 1084, "title": "Ticket #1084: Undo merge of V7_5-cream_hardening-branch into V7_4-branch", "description": "<blockquote>\nThe changes documented below involve versions of Condor that were never released.  Customers do not need to worry about them.\n\n<p>V7_5-cream_hardening-branch was merged into V7_4-branch in commit 80fc0a87a790657756aed97dd3d4bdc852e50081.  This is probably wrong.  Notably, V7_5-cream_hardening-branch has repeatedly had master merged into it, so V7_4-branch now contains all of the master (7.5.x) work!\n\n</p><p>This has been undone, but it has ramifications for anyone working with out Git repository.\n\n</p><p>All developers will need to check to make sure they don't have the bad merge lurking in their repositories. If you haven't done a \"git pull\" or fetch since December 20th, you're probably okay, but check anyway.\n\n</p><p>To check, on any local branch you have that is based on V7_4-branch, do the following, replacing V7_4-branch with your local branch name.  Note that this only applies to branches based on or intended to merge to V7_4-branch.  Branches based on or intended to merge with 7.5.something (AKA \"master\") are fine and do not need changes.\n\n</p><p></p><ol>\n<li>Check if you have the bad merge on the branch:\n<div class=\"code\">\n<pre class=\"code\">git rev-list V7_4-branch | grep 80fc0a87a790657756aed97dd3d4bdc852e50081\n</pre></div>\n\n</li><li>Check the output and return code (\"echo $?\") of the previous command:\n<ul>\n<li>If there is <strong>no output</strong> and a <strong>non-zero return code</strong>, all is well.  This branch is safe.  Go back to the start and repeat for other branches based on V7_4-branch.  If you're out of branches, you're done!\n</li><li>If the <strong>return code is 0</strong> and the <strong>output is \"80fc0a87a790657756aed97dd3d4bdc852e50081\"</strong>, then you have the bad merge.  If this is the case, you <strong>must</strong> destroy and recreate the branch, otherwise you could reinfect the central repository.  Continue:\n</li></ul>\n</li><li>You'll need to delete your infected V7_4-branch and recreate it.  Do you have committed changes to V7_4-branch that you haven't pushed?\n<ul>\n<li><strong>No un-pushed changes:</strong> Just run the following to delete and recreate the local branch:\n<div class=\"code\">\n<pre class=\"code\">git checkout master\ngit branch -D V7_4-branch\ngit branch V7_4-branch origin/V7_4-branch\n</pre></div>\n\n</li><li><strong>Un-pushed changes:</strong> You will want to store your good changes away and reapply them. Be careful to not accidentally drag in the bad merge!  You can <em>not</em> use git stash for this, as git stash will just stash away the bad merge.  You can do this by hand, or you can use \"git format-patch\" and \"git am\" to store them away and re-apply them.   Use \"gitk\" or similar to find the ranges of SHAs that contain your changes.  Be sure to <em>not</em> include 80fc0a87a790657756aed97dd3d4bdc852e50081 in the range!  If you have multiple ranges, simply call \"git format-patch\" repeatedly, appending to the same file.  Once you have your ranges, use the following, or something similar:\n<div class=\"code\">\n<pre class=\"code\">git format-patch --stdout EARLIEST_GOOD_SHA1..CURRENT_GOOD_SHA1 &gt; v7.4-rescue\ngit checkout master\ngit branch -D V7_4-branch\ngit branch V7_4-branch origin/V7_4-branch\ngit checkout V7_4-branch\ngit am v7.4-rescue\n</pre></div>\n\n</li></ul>\n</li></ol>\n\n<p></p><hr/>\n<span class=\"section\"><h2>How the revert was done</h2></span>\n\n<p>This is old notes on how the revert was done.  It is not necessary reading for a developer just wanting to fix their local repository.\n\n</p><p>Reverting a merge is Hard.  <a class=\"external\" href=\"http://www.kernel.org/pub/software/scm/git/docs/howto/revert-a-faulty-merge.txt\">Here's the official reason why and how to do it.</a>  The official way to do it assumes that you'll want to redo the merge at some later date, or will never want to do the merge.  We will never do the merge, but will may cherry pick some stuff over.  Doing a straight revert would leave us with a landmine if any developer later tries to cherry pick stuff from master to V7_4-branch.  Furthermore, it would leave Git with a confused view of the world; if you ask \"is this commit part of this branch?\" Git will unhelpfully say \"yes\", when in fact it was part of the reverted merge.  So instead we're going to \"git reset\" to cause the commit to never have happened at all.\n\n</p><p>The plan:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\"># Save good work on V7_4-branch.  Check the second version number is the head.\ngit-format-patch --stdout 80fc0a87a790657756aed97dd3d4bdc852e50081..63964181bbe027cfead32e3a6886349dbfab61a7 &gt; v7.4-rescue\n\n# Back V7_4-branch to the commit immediately before the bad merge. 584e2bb18f4e038066e44b53cddd9945e0b9dbbb\ngit reset --hard 584e2bb18f4e038066e44b53cddd9945e0b9dbbb\n\n# Reapply the good work\ngit am v7.4-rescue\n\n# Push it up\ngit push --force\n</pre></div>\n\n\n<p>That didn't work.  Our main respository is a \"bare\" repository; it lacks a working directory.  We can't \"git push --force\" to stomp over the old versions.  We need to delete the branch (\"git push origin :V7_4-branch\"), then recreate it (\"git push origin +V7_4-branch\").  So, what actually happened:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\"># Save good work on V7_4-branch.  Check the second version number is the head.\ngit-format-patch --stdout 80fc0a87a790657756aed97dd3d4bdc852e50081..63964181bbe027cfead32e3a6886349dbfab61a7 &gt; v7.4-rescue\n\n# Back V7_4-branch to the commit immediately before the bad merge. 584e2bb18f4e038066e44b53cddd9945e0b9dbbb\ngit reset --hard 584e2bb18f4e038066e44b53cddd9945e0b9dbbb\n\n# Reapply the good work\ngit am v7.4-rescue\n\n# Delete upstream version\ngit push origin :V7_4-branch\n# Push corrected version\ngit push origin +V7_4-branch\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1091\" onclick=\"get_ticket_and_populate_wrapper('1091'); return false;\" title=\"undo bad rebase of V7_4-branch\">#1091</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nundo bad rebase of V7_4-branch</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2010-Jan-04 13:56", "status": "resolved", "created": "2009-Dec-23 16:18", "fixed_version": "2009-Dec-23 16:18", "broken_version": "v070402", "priority": "1", "subsystem": "", "assigned_to": "adesmet", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}