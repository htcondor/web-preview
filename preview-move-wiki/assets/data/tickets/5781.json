{"id": 5781, "title": "Ticket #5781: add caching of script output to config include command", "description": "<blockquote>\nIt is a common use pattern to have a config file include the output of a command, but to want to capture that output to a file after the first run and then use the resulting file for subsequent parsing of the config.  This is especially important if only one process can safely run the command at the same time.\n\n<p>It is possible to work around this by using a combination of config if statements and temporary config variables, like this.\n\n</p><p></p><div class=\"snip\">\n<pre class=\"sniplabel\">example condor_config</pre>\n<pre class=\"snip\">REQUIRE_LOCAL_CONFIG_FILE = false\nLOCAL_CONFIG_FILE = $(LOCAL_DIR)/stuff.config, $(LOCAL_DIR)/condor_config.local\n</pre></div>\n\n<div class=\"snip\">\n<pre class=\"sniplabel\">example condor_config.local</pre>\n<pre class=\"snip\">if ! defined STUFF\n  # stuff.pl writes \"STUFF=1\" to stdout and to $(LOCAL_DIR)/stuff.config\n  include command : perl $(LOCAL_DIR)/stuff.pl\nendif\n</pre></div>\n\n\n<p>But this mechanism is a bit hard to use, especially for RPM users. It would be better to have a first-class mechanism to declare that config files do not have to exist and to have config write the output of a script to a file and then use the file.\n\n</p><p>To do this two new keywords will be added to the <code>include :</code> statements in config (and submit) files: <code>into</code> and <code>ifexist</code>\n</p><div class=\"verbatim\">\n<pre>include [ifexist] command [into &lt;cache-file&gt;] : &lt;cmdline&gt;\ninclude [ifexist] [into &lt;cache-file&gt;] : &lt;cmdline&gt; |\ninclude [ifexist] : &lt;file&gt;\n</pre></div>\n\n\n<p>The <code>into</code> keyword must be followed by the full pathname of a file to write the output of the script into, If that file exists, it will be read and the script will not be executed.  If that file does not exist, the output of the script will be written into it and then it will be read.  If the script produces no output, a zero length file will be created.  If the script returns a non-zero error code, configuration will abort and the cache file will not be created unless the <code>ifexist</code> keyword is also specified.\n\n</p><p>Also, two new keywords will make it possible to deal with script errors in a more deterministic way.\n\n</p><p></p><div class=\"verbatim\">\n<pre>error : error message\nwarning : warning message\n</pre></div>\n\n\n<p>So the above example would become\n</p><div class=\"snip\">\n<pre class=\"sniplabel\">any config file</pre>\n<pre class=\"snip\"># stuff.pl writes \"STUFF=1\" to stdout\ninclude into $(LOCAL_DIR)/stuff.config : perl $(LOCAL_DIR)/stuff.pl\nif ! defined stuff\n  error : stuff is needed!\nendif\n</pre></div>\n\n\n<p>It should be noted that the automatic configuration variables <code>$(IsMaster)</code> and <code>$(CondorIsAdmin)</code> can be used to help insure that the cache file is written only by a rootly daemon if that is needed, something like this\n\n</p><p></p><div class=\"snip\">\n<pre class=\"sniplabel\">any config file</pre>\n<pre class=\"snip\">if $(IsMaster)\n   include into $(LOCAL_DIR)/stuff.config : perl $(LOCAL_DIR)/stuff.pl\n   if ! defined stuff\n      error : there must be stuff!\n   endif\nelse\n   include ifexist : $(LOCAL_DIR)/stuff.config\nendif\n</pre></div>\n\n\n<p>In the future, it might be good to have a way to pass an argument to condor_reconfig to request that all scripts be run even if the cache files exist.</p></blockquote>", "remarks": "<blockquote>\n<em>2016-Jul-10 12:45:40 by johnkn:</em> <br/>\n\nWith caching of script output a first-class config feature, condor_urlfetch should be changed so that it can optionally NOT write a cache file and have the config system deal with the cache. As a side note, it would also be good if condor_urlfetch could fetch (and unpack?) archives.\n\n<p></p><hr/>\n<em>2016-Sep-20 14:41:38 by wenger:</em> <br/>\n\nAlso add documentation of \"include command\" -- probably put all of this into section 3.3.1.6 Including Configuration from Elsewhere.\n\n<p></p><hr/>\n<em>2016-Sep-27 10:46:15 by wenger:</em> <br/>\n\nAlso document \"error\" and \"warning\"...</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=5925\" onclick=\"get_ticket_and_populate_wrapper('5925'); return false;\" title=\"Add condor_reconfig arg to disable script output caching\">#5925</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nAdd condor_reconfig arg to disable script output caching</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=5926\" onclick=\"get_ticket_and_populate_wrapper('5926'); return false;\" title=\"Have option for condor_urlfetch to *not* write cache file\">#5926</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nHave option for condor_urlfetch to <strong>not</strong> write cache file</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Sep-28 14:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49326\">[49326]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5781\" onclick=\"get_ticket_and_populate_wrapper('5781'); return false;\" title=\"add caching of script output to config include command\">#5781</a></span>: Updated configuration documentation to include the new script output caching option (include into); the new ifexist option to include; and the new warning and error commands. Also added a corresponding version history section.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-12 17:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48773\">[48773]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5781\" onclick=\"get_ticket_and_populate_wrapper('5781'); return false;\" title=\"add caching of script output to config include command\">#5781</a></span>) Add .pl, .py, and .sh to the default exclude list for config.d.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-12 17:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48771\">[48771]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5781\" onclick=\"get_ticket_and_populate_wrapper('5781'); return false;\" title=\"add caching of script output to config include command\">#5781</a></span>) Add .pl, .py, and .sh to the default exclude list for config.d.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-10 12:38</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48757\">[48757]</a></span>: add ifexist and into keywords to config include statements. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5781\" onclick=\"get_ticket_and_populate_wrapper('5781'); return false;\" title=\"add caching of script output to config include command\">#5781</a></span> this commit also adds error and warning keywords to config. ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2016-Sep-28 15:14", "status": "resolved", "created": "2016-Jul-10 12:37", "fixed_version": "2016-Jul-10 12:37", "broken_version": "", "priority": "4", "subsystem": "Libs", "assigned_to": "johnkn", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}