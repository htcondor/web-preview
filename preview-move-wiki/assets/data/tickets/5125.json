{"id": 5125, "title": "Ticket #5125: Python bindings for the negotiation protocol", "description": "<blockquote>\nCurrently, the negotiation protocol is tied to the <code>condor_negotiator</code> implementation.  There's no way to perform large-scale experimentation with how condor does matchmaking.\n\n<p>I'd like to expose the basic pieces of the negotiation protocol to the python bindings so alternate matchmaking approaches (parallel matchmaking, iterative matchmaking for new glideins) can be explored.\n\n</p><p>I think the API should look along these lines:\n\n</p><p></p><div class=\"verbatim\">\n<pre>claims = htcondor.Collector().getClaims() # TODO\nschedd = htcondor.Schedd()\nwith schedd.negotiate(\"bbockelm@unl.edu\") as session:\n  for request in session:\n    candidate = myGreatMatchmaker(request, claims)\n    if candidate:\n      session.sendClaim(claim)\n</pre></div>\n\n\n<p>The above would be a very silly negotiator indeed - but the basic building blocks would be there.\n\n</p><p>As the aim is to allow experimentation, API coverage is purposely light: no support for consumption policies, no support for p-slot claiming, etc.</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Jun-30 12:05:34 by bbockelm:</em> <br/>\n\nFirst version of the API is posted.  Here's the world's least-useful negotiator implementation using the API:\n\n<p></p><div class=\"verbatim\">\n<pre>import htcondor\n\ncoll = htcondor.Collector()\nprivate_ads = coll.query(htcondor.AdTypes.StartdPrivate)\nstartd_ads = coll.query(htcondor.AdTypes.Startd)\n\nclaim_ads = []\nfor ad in startd_ads:\n    if \"Name\" not in ad: continue\n    found_private = False\n    for pvt_ad in private_ads:\n        if pvt_ad.get('Name') == ad['Name']:\n            found_private = True\n            ad['ClaimId'] = pvt_ad['Capability']\n            claim_ads.append(ad)\n\nwith htcondor.Schedd().negotiate(\"bbockelm@unl.edu\") as session:\n\n   found_claim = False\n   for resource_request in session:\n       for claim_ad in claim_ads:\n           if resource_request.symmetricMatch(claim_ad):\n               print \"Sending claim for\", claim_ad[\"Name\"]\n               session.sendClaim(claim_ads[0])\n               found_claim = True\n               break\n       if found_claim: break\n</pre></div>\n\n\n<p>Nevertheless, it's sufficient for chucking matches at a schedd.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Aug-08 11:29</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/cf13e9a2a05ddca1d5ed906237694353030c0b1e\">[45544]</a></span>: Initial version history and documentation. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5125\" onclick=\"get_ticket_and_populate_wrapper('5125'); return false;\" title=\"Python bindings for the negotiation protocol\">#5125</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Aug-08 11:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/7d0ce1a159e664e1e369393bbf7eee2a7b3a8c06\">[45543]</a></span>: Merged <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/78cec860a2efdbdb041619e0a9f66aeb64ff7aae\">[45178]</a></span>, <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/67ad5c8f61c47e264988d845a200d4ee65e144be\">[45197]</a></span>, <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/42a9728249882008f69f591f8ac7db95e84a2264\">[45198]</a></span>, <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/d7253345dc1efd4033b70429709aee3000608a14\">[45541]</a></span>, Merge branch 'V8_3-gt5125'. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5125\" onclick=\"get_ticket_and_populate_wrapper('5125'); return false;\" title=\"Python bindings for the negotiation protocol\">#5125</a></span> Conflicts: src/python-bindings/schedd.cpp src/python-bindings/tests/htcondor_tests.py  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Aug-08 10:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/d7253345dc1efd4033b70429709aee3000608a14\">[45541]</a></span>: Properly end negotiations. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5125\" onclick=\"get_ticket_and_populate_wrapper('5125'); return false;\" title=\"Python bindings for the negotiation protocol\">#5125</a></span> As noted in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5174\" onclick=\"get_ticket_and_populate_wrapper('5174'); return false;\" title=\"Add resource request prefetch phase to the negotiator\">#5174</a></span>, we can't just send END_NEGOTIATE to the schedd whenever we want to stop negotiation - if we do, it'll leave scary-looking log messages schedd-side. Fix implementation of the negotiation protocol to make sure END_NEGOTIATE is used only when proper.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-01 22:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/42a9728249882008f69f591f8ac7db95e84a2264\">[45198]</a></span>: Unit tests for negotiation protocol. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5125\" onclick=\"get_ticket_and_populate_wrapper('5125'); return false;\" title=\"Python bindings for the negotiation protocol\">#5125</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-01 22:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/67ad5c8f61c47e264988d845a200d4ee65e144be\">[45197]</a></span>: Make claim ID separate from offer. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5125\" onclick=\"get_ticket_and_populate_wrapper('5125'); return false;\" title=\"Python bindings for the negotiation protocol\">#5125</a></span> This tweaks the sendClaim API to distinguish the claim, the offer, and the request. This makes the claim used more explicit - essential for the long-term goal of making a first-class Claim object.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jun-30 12:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/78cec860a2efdbdb041619e0a9f66aeb64ff7aae\">[45178]</a></span>: First revision of python negotiation API. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5125\" onclick=\"get_ticket_and_populate_wrapper('5125'); return false;\" title=\"Python bindings for the negotiation protocol\">#5125</a></span> This allows the python bindings to perform the matchmaking protocol with a remote schedd. In particular, they can: - Iterate through the submitter's resource requests. - Send a generic claim back to the schedd\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "experimental", "last_change": "2015-Oct-19 13:57", "status": "resolved", "created": "2015-Jun-29 21:30", "fixed_version": "2015-Jun-29 21:30", "broken_version": "", "priority": "4", "subsystem": "Tools", "assigned_to": "bbockelm", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "bbockelm@cse.unl.edu", "due_date": ""}