{"id": 6732, "title": "Ticket #6732: speed up the schedd check for a change in an autoclustered attribute", "description": "<blockquote>\nStats from a busy CMS Schedd show that we are spending quite a bit of time determining if a <code>SetAttribute</code> call is changing a significant attribute of a job.\n<div class=\"snip\">\n<pre class=\"sniplabel\">from Brian's email</pre>\n<pre class=\"snip\">  - We spend a good chunk of time reading off the next setAttribute command from the socket.\n    Would be useful to be able to batch attribute updates.\n  - A shocking amount of time is going to AutoCluster::preSetAttribute.\n    Seems that we are re-parsing the list of significant attributes\n   (allocating lists and strings galore) to see if the changed attribute is\n    in the list of sigattrs.  Could we not turn this into a hashmap lookup?\n     String search?  If we bulk-processed updates, we could at least re-parse\n     the list only once.\n  - To quantify, it seems we are paying 0.5ms per attribute.\n    I'm seeing 13 - 45ms per shadow update -- seems small, but adds up to 1\n    week of processing time since the schedd was restarted a month ago.\n    In the worst case, that implies the schedd could do nothing else but\n    process shadow updates at somewhere between 20 and 100Hz.\n    Roughly estimating from strace, I see up to 50Hz sometimes.\n    This matches with the stats below.\n\nBrian\n</pre></div>\n\nExamination of this code shows that there is a lot of room for improvement here.\n\n<p>The proposed solution is twofold\n\n</p><p></p><ol>\n<li>optimize <code>preSetAttribute</code> by doing the check without allocating any memory\n\n<p></p></li><li>Skip calling <code>preSetAttribute</code> entirely for running jobs, and instead always invalidate the autocluster id whenever a job goes <strong>back</strong> into idle state. Perhaps we could keep a flag on the job object to indicate whether any attributes were changed while non-idle? Or maybe this is unnecessary, since jobs go back into idle so infrequently.\n</li></ol>\n\n<p>for reference: here are the stats\n</p><div class=\"verbatim\">\n<pre>DCfsyncRuntime = 16,639\n\nDCCreate_ProcessTotRuntime = 21,342\n\nDCSignalRuntime = 84,803\nDCSignal_HandleDC_SERVICEWAITPIDSRuntime = 65,934\nDCSignal_HandleDC_SIGCHLDRuntime = 18,569\n\nDCTimerRuntime = 271,085\nDCTimer_timeoutRuntime = 96,375\nDCTimer_start_jobRuntime = 78,289\nDCTimer_PeriodicExprRuntime = 26,308\nDCTimer_SelfDrainingQueuetimerHandlerjob_is_finished_queueRuntime = 17,083\nDCTimer_checkContactQueueRuntime = 13,555\nDCTimer_StartJobHandlerRuntime = 12,060\nDCTimer_sendAlivesRuntime = 9,388\nDCTimer_CleanJobQueueRuntime = 5,969\nDCTimer_StartJobsRuntime = 4,764\n\nDCCommand_QMGMT_WRITE_CMDRuntime = 622,739\nDCCommand_RECYCLE_SHADOWRuntime = 218,052\nDCCommand_CCB_REVERSE_CONNECTRuntime = 4,925\nDCCommand_DC_CHILDALIVERuntime = 24,496\n\nDCSocketRuntime = 1,664,394\nDCSocket_DCCommandHandlerRuntime = 607,209\nDCSocket_SharedPortEndpointHandleListenerAcceptRuntime = 334,271\nDCSocket_DCMessengerreceiveMsgCallbackNEGOTIATERuntime = 247,827\nDCSocket_NegotiatorCommandRuntime = 51,831\nDCSocket_DaemonCommandProtocolWaitForSocketDataRuntime = 17,096\n\nSCWalkJobQRuntime = 306,631\nSCWalkJobQ_get_job_prioRuntime = 182,453\nSCWalkJobQ_count_a_jobRuntime = 90,464\nSCWalkJobQ_PeriodicExprEvalRuntime = 26,305\nSCWalkJobQ_check_for_spool_zombiesRuntime = 7,404\nSCGetAutoClusterRuntime = 68,897\nSCGetAutoCluster_hitRuntime = 51,391\nSCGetAutoCluster_signatureRuntime = 17,505\nSCBuildPrioRecRuntime = 187,574\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Oct-23 11:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55609\">[55609]</a></span>: version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6581\" onclick=\"get_ticket_and_populate_wrapper('6581'); return false;\" title=\"condor_submit should not always read from stdin if no submit file\">#6581</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6752\" onclick=\"get_ticket_and_populate_wrapper('6752'); return false;\" title=\"ReadUserLog::readEvent() broken on Windows?\">#6752</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6784\" onclick=\"get_ticket_and_populate_wrapper('6784'); return false;\" title=\"there should be a knob to set the default for should_transfer_files\">#6784</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6698\" onclick=\"get_ticket_and_populate_wrapper('6698'); return false;\" title=\"Provide the ability to identify black hole slots\">#6698</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6737\" onclick=\"get_ticket_and_populate_wrapper('6737'); return false;\" title=\"Accounting and Defrag adtypes missing from python bindings\">#6737</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6723\" onclick=\"get_ticket_and_populate_wrapper('6723'); return false;\" title=\"Late Materialization jobs handle getenv=true incorrectly\">#6723</a></span>, and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6732\" onclick=\"get_ticket_and_populate_wrapper('6732'); return false;\" title=\"speed up the schedd check for a change in an autoclustered attribute\">#6732</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Oct-23 11:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55610\">[55610]</a></span>: version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6581\" onclick=\"get_ticket_and_populate_wrapper('6581'); return false;\" title=\"condor_submit should not always read from stdin if no submit file\">#6581</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6752\" onclick=\"get_ticket_and_populate_wrapper('6752'); return false;\" title=\"ReadUserLog::readEvent() broken on Windows?\">#6752</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6784\" onclick=\"get_ticket_and_populate_wrapper('6784'); return false;\" title=\"there should be a knob to set the default for should_transfer_files\">#6784</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6698\" onclick=\"get_ticket_and_populate_wrapper('6698'); return false;\" title=\"Provide the ability to identify black hole slots\">#6698</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6737\" onclick=\"get_ticket_and_populate_wrapper('6737'); return false;\" title=\"Accounting and Defrag adtypes missing from python bindings\">#6737</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6723\" onclick=\"get_ticket_and_populate_wrapper('6723'); return false;\" title=\"Late Materialization jobs handle getenv=true incorrectly\">#6723</a></span>, and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6732\" onclick=\"get_ticket_and_populate_wrapper('6732'); return false;\" title=\"speed up the schedd check for a change in an autoclustered attribute\">#6732</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Aug-17 10:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55306\">[55306]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6732\" onclick=\"get_ticket_and_populate_wrapper('6732'); return false;\" title=\"speed up the schedd check for a change in an autoclustered attribute\">#6732</a></span>) Remove unused variable  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Aug-17 09:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55304\">[55304]</a></span>: speed up check in the schedd if a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SetAttribute\" title=\"Set Attribute\">SetAttribute</a></span> call sets a significant attribute of the job. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6732\" onclick=\"get_ticket_and_populate_wrapper('6732'); return false;\" title=\"speed up the schedd check for a change in an autoclustered attribute\">#6732</a></span> This check in AutoCluster::preSetAttribute was costly enough to be noticable in the CMS pool. The new code is about 30x faster and does no memory allocation. ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2018-Oct-23 11:46", "status": "resolved", "created": "2018-Aug-08 11:48", "fixed_version": "2018-Aug-08 11:48", "broken_version": "", "priority": "4", "subsystem": "DaemonsSubmitNode", "assigned_to": "johnkn", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "bbockelm@cse.unl.edu, johnkn@cs.wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}