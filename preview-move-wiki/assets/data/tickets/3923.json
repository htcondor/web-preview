{"id": 3923, "title": "Ticket #3923: OpenNebula doesn't like long EC2 user data", "description": "<blockquote>\nHTCondor can't successfully submit jobs to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=OpenNebula\" title=\"Open Nebula\">OpenNebula</a></span> when the job supplies user data of more than ~2K.  Comparison with the functioning euca-tools revealed that HTCondor was embedding newlines in the base64 encoding of the user data in the URI.  It's not clear why this might be a size-dependent problem, but testing w/o the embedded newlines and 3.6KB of user data succeeded.</blockquote>", "remarks": "<blockquote>\n<em>2013-Sep-16 16:47:05 by tlmiller:</em> <br/>\n\nThe obvious approach -- asking OpenSSL to not emit newlines -- failed because it (somehow) broke signature generation.  Instead, the code removes newlines from the base64-encoded user data string (before URL-encoding).\n\n<p></p><hr/>\n<em>2013-Sep-16 17:03:29 by tlmiller:</em>\n\n<p></p><pre>  diff --git a/src/ec2_gahp/amazonCommands.cpp b/src/ec2_gahp/amazonCommands.cpp\n  index 74c1362..0d13970 100644\n  --- a/src/ec2_gahp/amazonCommands.cpp\n  +++ b/src/ec2_gahp/amazonCommands.cpp\n  @@ -714,6 +714,7 @@ bool AmazonVMStart::workerFunction(char **argv, int argc, std::string &amp;result_st\n</pre>\n\n<p></p><pre>     //\n     // Handle user data.\n+    // (FIXME: Will this code have problems with embedded NULs?)\n     //\n     std::string buffer;\n     if( strcasecmp( argv[7], NULLSTRING ) ) {\n  @@ -730,7 +731,21 @@ bool AmazonVMStart::workerFunction(char **argv, int argc, std::string &amp;result_st\n         buffer += udFileContents;\n     }\n     if( ! buffer.empty() ) {\n         char * base64Encoded = condor_base64_encode( (const unsigned char *)buffer.c_str(), buffer.length() );\n+\n+        // OpenNebula barfs on embedded newlines in this data.\n+        char * read = base64Encoded;\n+        char * write = base64Encoded;\n+        for( ; * read != '\\0'; ++read ) {\n+            char tmp = * read;\n+            if( tmp != '\\n' ) {\n+                * write = tmp;\n+                ++write;\n+            }\n+        }\n+        * write = '\\0';\n+\n         vmStartRequest.query_parameters[ \"UserData\" ] = base64Encoded;\n         free( base64Encoded );\n     }\n</pre>\n\n<p></p><hr/>\n<em>2013-Sep-17 13:32:55 by jfrey:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>This code change looks good. Embedded NULs shouldn't be a problem for this new code, as they should be encoded after condor_base64_encode(). However, readShortFile() does have an issue with embedded NULs. That should be fixed, but that's a separate ticket.</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3924\" onclick=\"get_ticket_and_populate_wrapper('3924'); return false;\" title=\"Binary EC2 user data not handled properly\">#3924</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nBinary EC2 user data not handled properly</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Oct-23 14:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37959\">[37959]</a></span>: Expand inadequate 8.0.4 version history item <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3923\" onclick=\"get_ticket_and_populate_wrapper('3923'); return false;\" title=\"OpenNebula doesn't like long EC2 user data\">#3923</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-30 11:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37729\">[37729]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3923\" onclick=\"get_ticket_and_populate_wrapper('3923'); return false;\" title=\"OpenNebula doesn't like long EC2 user data\">#3923</a></span>) Document change.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-17 16:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37634\">[37634]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=37633\">[37633]</a></span>, (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3923\" onclick=\"get_ticket_and_populate_wrapper('3923'); return false;\" title=\"OpenNebula doesn't like long EC2 user data\">#3923</a></span>) <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=OpenNebula\" title=\"Open Nebula\">OpenNebula</a></span> barfs on newlines embedded in base64 user data strings, so remove them.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Sep-17 15:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37633\">[37633]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3923\" onclick=\"get_ticket_and_populate_wrapper('3923'); return false;\" title=\"OpenNebula doesn't like long EC2 user data\">#3923</a></span>) <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=OpenNebula\" title=\"Open Nebula\">OpenNebula</a></span> barfs on newlines embedded in base64 user data strings, so remove them.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-Aug-04 13:19", "status": "resolved", "created": "2013-Sep-16 16:30", "fixed_version": "2013-Sep-16 16:30", "broken_version": "v080002", "priority": "2", "subsystem": "Grid", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "fermi", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}