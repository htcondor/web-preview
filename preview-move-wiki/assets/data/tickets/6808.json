{"id": 6808, "title": "Ticket #6808: Removed jobs remain in queue forever with leave_in_queue", "description": "<blockquote>\nWhen a job enters the REMOVED status, if <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LeaveJobInQueue\" title=\"Leave Job In Queue\">LeaveJobInQueue</a></span> evaluates to True, then the job remains in the queue. If <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LeaveJobInQueue\" title=\"Leave Job In Queue\">LeaveJobInQueue</a></span> later evaluates to False, the job is not retired from the queue, like it should be. It will remain there until the schedd is restarted or condor_rm -forcex is used on it.\n\n<p>This is a side effect of a bug fix to handle removal of problematic grid universe jobs. When a grid universe job was removed, if the gridmanager couldn't cancel the remote job, it would put the job in the HELD status. If the job was later released (back to REMOVED status), we wanted the gridmanager to have a chance to retry canceling the remote job before retiring the job from the queue.</p></blockquote>", "remarks": "<blockquote>\n<em>2018-Nov-07 17:22:00 by tannenba:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>Patch looks good, thanks.</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7095\" onclick=\"get_ticket_and_populate_wrapper('7095'); return false;\" title=\"Schedd crash when removing scheduler universe jobs\">#7095</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nSchedd crash when removing scheduler universe jobs</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Oct-29 10:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/40f0dbb9608ddf2581deeb63f91a1966e5c627d9\">[55637]</a></span>: Docs for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LeaveJobInQueue\" title=\"Leave Job In Queue\">LeaveJobInQueue</a></span> for removed jobs bug fix. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6808\" onclick=\"get_ticket_and_populate_wrapper('6808'); return false;\" title=\"Removed jobs remain in queue forever with leave_in_queue\">#6808</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Oct-29 10:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/33133e6a28250b41f3f3b2e2e5ed4df712f9429a\">[55636]</a></span>: Allow removed jobs to leave queue after <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LeaveJobInQueue\" title=\"Leave Job In Queue\">LeaveJobInQueue</a></span> changes to False <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6808\" onclick=\"get_ticket_and_populate_wrapper('6808'); return false;\" title=\"Removed jobs remain in queue forever with leave_in_queue\">#6808</a></span> The periodic evaluation of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LeaveJobInQueue\" title=\"Leave Job In Queue\">LeaveJobInQueue</a></span> now retires REMOVED jobs when the evaluation is False. It didn't do this before to allow grid universe jobs a chance to do cleanup of remote job state. That situation is now handled\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Jun-04 14:49", "status": "resolved", "created": "2018-Oct-25 16:43", "fixed_version": "2018-Oct-25 16:43", "broken_version": "", "priority": "3", "subsystem": "DaemonsSubmitNode", "assigned_to": "jfrey", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}