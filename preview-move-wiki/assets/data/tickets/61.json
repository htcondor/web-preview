{"id": 61, "title": "Ticket #61: Add default for *_LOG configurations", "description": "<blockquote>\nWhen a component, say the condor_transferer, that is going to log something goes to use dprintf, if a *_LOG configuration variable is not set, it will EXCEPT. This seems somewhat strange as using the SUBSYS would make for a very nice default.</blockquote>", "remarks": "<blockquote>\nThis is to go into the master.\n\n<p></p><hr/>\n<em>2010-Jul-16 11:03:31 by slauson:</em> <br/>\n\n<div class=\"verbatim\">\n<pre>diff --git a/src/condor_util_lib/dprintf_config.c b/src/condor_util_lib/dprintf_config.c\nindex df29a0a..1a33a17 100644\n--- a/src/condor_util_lib/dprintf_config.c\n+++ b/src/condor_util_lib/dprintf_config.c\n@@ -148,11 +148,35 @@ dprintf_config( const char *subsys )\n                        // *after* the param -- param can dprintf() in some cases\n                        {\n                                char    *tmp = DebugFile[debug_level];\n-                               // This is looking up configuration options that I can't\n-                               // find documentation for, so intead of coding in an incorrect\n-                               // default value, I'm gonna use param_without_default.\n-                               // tristan 5/29/09\n-                               DebugFile[debug_level] = param_without_default(pname);\n+                               if(debug_level == 0) {\n+                                       char    *tmp2 = param(pname);\n+\n+                                       // No default value found, so use $(LOG)/$(SUBSYSTEM)Log\n+                                       if(!tmp2 &amp;&amp; debug_level == 0) {\n+                                               char *log = param(\"LOG\");\n+                                               char *subsys = param(\"SUBSYSTEM\");\n+                                               if(!log || !subsys) {\n+                                                       EXCEPT(\"Unable to find LOG or SUBSYSTEM.\\n\");\n+                                               }\n+                                               char *str = malloc(strlen(log) + strlen(subsys) + 5);\n+                                               sprintf(str, \"%s/%sLog\", log, subsys);\n+                                               DebugFile[debug_level] = str;\n+\n+                                               free(log);\n+                                               free(subsys);\n+                                       }\n+                                       else {\n+                                               DebugFile[debug_level] = tmp2;\n+                                       }\n+                               }\n+                               else {\n+                                       // This is looking up configuration options that I can't\n+                                       // find documentation for, so intead of coding in an\n+                                       // incorrect default value, I'm gonna use\n+                                       // param_without_default.\n+                                       // tristan 5/29/09\n+                                       DebugFile[debug_level] = param_without_default(pname);\n+                               }\n                                if ( tmp ) {\n                                        free( tmp );\n                                }\n\n</pre></div>\n\n\n<p></p><hr/>\n<em>2010-Jul-16 11:21:04 by cweiss:</em> <br/>\n\nSome minor changes:\n\n<p>- remove second check for debug_level == 0\n\n</p><p>- cast the malloc to (char*) - look into whether malloc is a good idea here at all - might never be freed\n\n</p><p>- sprintf(str, \"%s/%sLog\", log, subsys); -&gt; use DIR_DELIM_CHAR instead of a fix-encoded directory delimiter (Windows!)</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/207/changes.diff\">changes.diff</a>\n1980 bytes added by slauson on 2010-Aug-02 21:59:15 UTC.\n<br/>\nFixed some stuff after Cathrin's review and made some changes so that the Negotiator Match Log is still used when it's not defined in a config file.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Nov-18 18:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=19463\">[19463]</a></span>: Removed special case NEGOTIATOR_MATCH_LOG code from dprintf_config and default in param_info.in, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=61\" onclick=\"get_ticket_and_populate_wrapper('61'); return false;\" title=\"Add default for *_LOG configurations\">#61</a></span> NEGOTIATOR_MATCH_LOG is a log of the form &lt;SUBSYS&gt;_&lt;LEVEL&gt;_LOG, a feature of dprintf to provide a sink for D_MATCH. The special case code is unnecessary because the intent of <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=61\" onclick=\"get_ticket_and_populate_wrapper('61'); return false;\" title=\"Add default for *_LOG configurations\">#61</a></span> is to avoid EXCEPT from\u00a0[...]\n (By Matthew Farrellee )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Aug-04 13:45</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18723\">[18723]</a></span>: Fixed issue for windows build after making changes for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=61\" onclick=\"get_ticket_and_populate_wrapper('61'); return false;\" title=\"Add default for *_LOG configurations\">#61</a></span>.  (By Josh Slauson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Aug-03 16:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=25599\">[25599]</a></span>: Added documentation for gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=61\" onclick=\"get_ticket_and_populate_wrapper('61'); return false;\" title=\"Add default for *_LOG configurations\">#61</a></span>.  (By Josh Slauson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Aug-03 14:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18710\">[18710]</a></span>: Added defaults for *_LOG configurations. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=61\" onclick=\"get_ticket_and_populate_wrapper('61'); return false;\" title=\"Add default for *_LOG configurations\">#61</a></span>)  (By Josh Slauson )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Aug-03 14:52", "status": "resolved", "created": "2009-Jan-21 17:41", "fixed_version": "2009-Jan-21 17:41", "broken_version": "", "priority": "5", "subsystem": "Daemons", "assigned_to": "slauson", "derived_from": "", "creator": "matt", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu slauson@cs.wisc.edu psilord@cs.wisc.edu", "due_date": ""}