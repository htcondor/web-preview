{"id": 3850, "title": "Ticket #3850: condor should publish live job i/o statistics", "description": "<blockquote>\nModern linux kernels accurately track the total io (read_bytes and write_bytes) of a process, as documented here: <a class=\"external\" href=\"http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/filesystems/proc.txt?id=HEAD#n1491\">http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/filesystems/proc.txt?id=HEAD#n1491</a>\n\n<p>It would be nice if Condor updated and published this data for each job periodically.\n\n</p><p>E.g., I want to know the i/o rate (e.g., KB/s over the last 60s) for each job, so I can identify i/o-heavy jobs in my pool -- or maybe for longer periods like 1h, stuck jobs.\n\n</p><p>I am simulating this now with a very very hacky startd cron script which scrapes the process table to identify all condor_starters, then scrapes their command-line arguments to associate each one with its slotid, then identifies each starter's children, and then runs pidstat (which just looks in /proc/pid/io) on each child, and then sums the info and stuff it into a slotid_ prefixed machine ad attribute.  But this is ugly and doesn't get saved into the job's history.</p></blockquote>", "remarks": "<blockquote>\n<em>2013-Aug-12 21:53:38 by bbockelm:</em> <br/>\n\nTo chime in -\n\n<p>This should be a fairly straightforward improvement.  We already have the attributes defined from the cgroups work; we just need to read in the statistics in a different way.\n\n</p><p>Would be about 6 hours of work for someone interested in learning the procd code.\n\n</p><p></p><hr/>\n<em>2013-Nov-04 16:53:37 by eje:</em> <br/>\n\nSomething that operates similar to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ImageSize\" title=\"Image Size\">ImageSize</a></span> today,\nbut that records <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> maybe something like:\n\n<p></p><div class=\"verbatim\">\n<pre>JobBytesRead\nJobBytesWritten\nJobReadSysCalls\nJobWriteSysCalls\n\n...and ideally also...\n\nJobReadOpsPerSecond\nJobWriteOpsPerSecond\n</pre></div>\n\n\n<p>Where you could develop throttling policies at a DAGMan management level\naround concurrency limiting or potentially evicting jobs based on stats\nlike number-of-jobs * writes-per-second.\n\n</p><p></p><hr/>\n<em>2014-Mar-07 12:50:25 by eje:</em> <br/>\n\nAn observation about tracking rate information: this information is compiled by the starter, which updates at a default frequency of 5 min, and then passes through the shadow, whose default update rate is 15 minutes.\n\n<p>This double-layered latency, combined with large-ish default update intervals, has a possible impact on semantics for rate info.   To wit: it doesn't mean much to compile rates over last 60 seconds, unless you (re)configure startd update interval to &lt;= 60s.   And all stat updates to the wider universe are subsequently rate limited by the shadow's update interval.\n\n</p><p>My current plan is to define rates as being \"change in reported cgroup i/o metrics since last update, divided by the seconds since last update.\"\n\n</p><p>A possible alternative is to <a class=\"external\" href=\"https://htcondor-wiki.cs.wisc.edu/index.cgi/wiki?p=AddingStatisticsValues\">use the stats lib</a>, however imo that seems somewhat heavy-weight for rate stats where sampling resolution is limited by typical update times in the &gt;= minute range.\n\n</p><p></p><hr/>\n<em>2014-Mar-07 18:22:00 by eje:</em> <br/>\n\ntopic branch on V8_1-gt3850-job-io-stats\n\n<p></p><hr/>\n<em>2014-Mar-09 10:41:14 by eje:</em> <br/>\n\nActually, some notion of 'recent' i/o activity is probably useful, which would warrant stats lib support.\n\n<p></p><hr/>\n<em>2014-Mar-17 11:49:02 by eje:</em> <br/>\n\n<div class=\"verbatim\">\n<pre>proposed attributes are:\n\nBlockReadKbytes   # these 1st two already exist\nBlockWriteKbytes\nBlockReads\nBlockWrites\n\nThe above are maintained via the generic_stats lib, and so analogous to the scheduler stats, you can also turn on:\n\nRecentBlockReadKbytes\nRecentBlockWriteKbytes\nRecentBlockReads\nRecentBlockWrites\n\nAlso like the schedd, the 'recent' windowing is controlled by:\nSTATISTICS_WINDOW_SECONDS_STARTER = 60\nSTATISTICS_WINDOW_QUANTUM_STARTER = 15\n\nI think this would also work:\nSTARTER.STATISTICS_WINDOW_SECONDS\nSTARTER.STATISTICS_WINDOW_QUANTUM\n\nThere will be no direct 'rate attributes'.  To get reads/sec or bytes/sec, the user can divide 'Recent*' by RecentWindowMaxStarter\n\nThe following may be advertised if configured:\nStatsLastUpdateTimeStarter\nStatsLifetimeStarter\nRecentStatsLifetimeStarter\nRecentWindowMaxStarter\nRecentStatsTickTimeStarter\n\nturning \"all of the above\" on happens by configuring:\n\nSTATISTICS_TO_PUBLISH = STARTER:2ALL\n</pre></div>\n\n\n<p></p><hr/>\n<em>2014-Mar-17 11:51:53 by eje:</em> <br/>\n\nSee also:  <span class=\"ticket\"><a class=\"review\" href=\"/tickets?ticket=4259\" onclick=\"get_ticket_and_populate_wrapper('4259'); return false;\" title='examine \".throttle.io_service_bytes\" instead of \".io_service_bytes\"'>#4259</a></span>\n\n<p></p><hr/>\n<em>2014-Mar-17 18:24:23 by eje:</em> <br/>\n\nI've been discussing file i/o with customer in the background.  They've got a definite interest in tracking NFS related i/o, which is also not covered by the blkio controller.\n\n<p>Traversing /proc/&lt;pid&gt;/io to obtain /proc's version of io stats and advertise those is a reasonable option.  That's a bit more work, and has the problem of being able to miss process sub-trees that fall between sampling intervals, but it can serve as a complementary source of i/o stats.  If we did that, it might be useful to make it optional.  Maybe 'verbose-only', or something like it.  Might also deserve its own separate ticket.\n\n</p><p></p><hr/>\n<em>2014-Mar-19 17:44:57 by johnkn:</em> <br/>\n\nCODE_REVIEW: partial. I'm still looking, but one thing I see is that I think m_previous_usage isn't needed in vanilla_proc.cpp. The stats_entry_recent&lt;&gt; template has a class override for += which you are currently using.  but it also has an override for = which I think you should be using.\n\n<p>have a look at generic_stats.h line 926.\n\n</p><p>the stats_entry_recent&lt;&gt; will let you just set the absolute value and it will calculate the recent change in value automatically.\n\n</p><p>Also, I think if you stored <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=BlockReadBytes\" title=\"Block Read Bytes\">BlockReadBytes</a></span> instead of KBytes, an int64_t would be plenty big enough and you would never need to worry about error accumulation.   This would be better than using double because doubles have their own form of error accumulation once the base value you are adding to gets large, a double will begin to accumulate error <em>sooner</em> than an int64_t would.\n\n</p><p></p><hr/>\n<em>2014-Mar-20 15:09:40 by eje:</em> <br/>\n\nI excised the m_previous_usage since it's redundant, just used '=' instead of '+='\n\n<p>Consensus to keep <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=BlockReadKbytes\" title=\"Block Read Kbytes\">BlockReadKbytes</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=BlockWriteKbytes\" title=\"Block Write Kbytes\">BlockWriteKbytes</a></span> as-is, on the grounds of preserving legacy behavior.\n\n</p><p></p><hr/>\n<em>2014-Mar-21 13:07:27 by johnkn:</em> <br/>\n\nI don't see a commit for this change?\n\n<p>It occurred to me that we could track bytes in the statistics using int64_t, but set the publication level of those longs to IF_VERBOSEPUB and the publish name <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=BlockReadBytes\" title=\"Block Read Bytes\">BlockReadBytes</a></span>.  Then add code to ..Stats::Publish class to generate the Kbytes values\n\n</p><p></p><pre>   ...\n   Pool.Publish(ad, flags);\n   if ((flags &amp; IF_PUBLEVEL) &gt; 0) {\n      ad.Assign(\"BlockReadKBytes\", this-&gt;BlockReadBytes.value / 1024);\n      ad.Assign(\"RecentBlockReadKBytes\", this-&gt;BlockReadBytes.recent / 1024);\n   }\n</pre>\n\n<p></p><hr/>\n<em>2014-Mar-21 16:28:02 by johnkn:</em> <br/>\n\nCODE_REVIEW: stats stuff looks good to me. I'm not qualified to judge the cgroups code, so I'm transferring this ticket to gthain.\n\n<p></p><hr/>\n<em>2014-Mar-25 15:10:37 by gthain:</em> <br/>\n\n<strong>CODE REVIEW</strong> cgroup block I/O looks good to me.\n\n<p></p><hr/>\n<em>2014-Mar-30 13:08:54 by eje:</em> <br/>\n\nIn my downstream testing, the publication of the new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=BlockReadBytes\" title=\"Block Read Bytes\">BlockReadBytes</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=BlockWriteBytes\" title=\"Block Write Bytes\">BlockWriteBytes</a></span> was getting corrupted by downcasting to 4-byte integer somewhere in the path from the Starter to the Job ads in the scheduler.   Downstream I changed the publication flags of those to IF_NEVER, as the \"KBytes\" versions stay small enough to work at larger i/o values.\n\n<p>I haven't yet tested whether this same problem happens on the newer 8.1 code.</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=4043\" onclick=\"get_ticket_and_populate_wrapper('4043'); return false;\" title=\"RFE: Monitor /proc/io via condor_procd\">#4043</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nRFE: Monitor /proc/io via condor_procd</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-27 17:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40230\">[40230]</a></span>: provide definitions of new job <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> attributes that went into 8.1.6, but where not documented. These definitions are in 8.2.0. <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3850\" onclick=\"get_ticket_and_populate_wrapper('3850'); return false;\" title=\"condor should publish live job i/o statistics\">#3850</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-22 11:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40213\">[40213]</a></span>: edit 8.1.6 version history item, fix unrelated LaTeX error that caused the manual not to build, and move this item to the 8.1.6 version history <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3850\" onclick=\"get_ticket_and_populate_wrapper('3850'); return false;\" title=\"condor should publish live job i/o statistics\">#3850</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-May-22 10:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40210\">[40210]</a></span>: Version history for <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3850\" onclick=\"get_ticket_and_populate_wrapper('3850'); return false;\" title=\"condor should publish live job i/o statistics\">#3850</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Apr-15 13:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39949\">[39949]</a></span>: Revert \"version history for <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3850\" onclick=\"get_ticket_and_populate_wrapper('3850'); return false;\" title=\"condor should publish live job i/o statistics\">#3850</a></span>\" This ticket has been revised to be in version 8.1.6. This reverts commit 06b167a17fb23d2fc53ac7e4be0016bfcdca274c.  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Apr-11 14:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39913\">[39913]</a></span>: version history for <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3850\" onclick=\"get_ticket_and_populate_wrapper('3850'); return false;\" title=\"condor should publish live job i/o statistics\">#3850</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Apr-11 12:36</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39910\">[39910]</a></span>: Change some 'long' integers to 'int64_t' so job io stats work on 32-bit systems <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3850\" onclick=\"get_ticket_and_populate_wrapper('3850'); return false;\" title=\"condor should publish live job i/o statistics\">#3850</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Apr-10 17:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39899\">[39899]</a></span>: Change some 'long' integers to 'int64_t' so job io stats work on 32-bit systems <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3850\" onclick=\"get_ticket_and_populate_wrapper('3850'); return false;\" title=\"condor should publish live job i/o statistics\">#3850</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-28 13:15</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39753\">[39753]</a></span>: Remove unused variable <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3850\" onclick=\"get_ticket_and_populate_wrapper('3850'); return false;\" title=\"condor should publish live job i/o statistics\">#3850</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-21 14:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39686\">[39686]</a></span>: refactor to avoid need for manipulating double stats and casting <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3850\" onclick=\"get_ticket_and_populate_wrapper('3850'); return false;\" title=\"condor should publish live job i/o statistics\">#3850</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-20 14:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39670\">[39670]</a></span>: Add stats for blkio reads and writes, and 'recent' stats for kbytes read/write plus read/write ops <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3850\" onclick=\"get_ticket_and_populate_wrapper('3850'); return false;\" title=\"condor should publish live job i/o statistics\">#3850</a></span>  (By Erik Erlandson )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2014-Jul-15 20:45", "status": "defer", "created": "2013-Aug-12 15:37", "fixed_version": "2013-Aug-12 15:37", "broken_version": "v080100", "priority": "5", "subsystem": "DaemonsExecNode", "assigned_to": "tim", "derived_from": "", "creator": "pfc", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "eje@cs.wisc.edu, matt@cs.wisc.edu, tstclair@redhat.com, gthain@cs.wisc.edu, tannenba@cs.wisc.edu, johnkn@cs.wisc.edu, jthomas@redhat.com,pcouvare@caltech.edu", "due_date": ""}