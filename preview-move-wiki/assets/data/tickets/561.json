{"id": 561, "title": "Ticket #561: Event log writer writing events into the .old file!", "description": "<blockquote>\nIgor says:\n\n<p>I have noticed that our schedd on glidein-2 is writing event logs \"randomly\" between Schedd_Event_Log and Schedd_Event_Log.old.\n\n</p><p>This is obviously very bad.\n\n</p><p>Some additional details plus instructions on how to fetch relevant log files are in the attached RUST ticket.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Jun-23 10:47:29 by nleroy:</em> <br/>\n\nUgh...  I think that I understand what's going on, and that this bug has been in the code since before the \"new\" rotations were added.  Here's what I think is going on:\n\n<p>1. writer process 1 writes event, looks at size of the file, not large enough to rotate, stores off that size (fd still open)\n\n</p><p>2. writer process 2 writes events, rotates file, writes more events\n\n</p><p>3. writer process 1 writes another event (using open fd, now points at .old) after a long delay, looks at the size of the file.  Not large enough to rotate, and, because of the delay, it's larger than when it last looked at it, but still not large enough.\n\n</p><p>This behavior is obvious from looking at the code.  I'll have to think a bit about how to best fix it.\n\n</p><p></p><hr/>\n<em>2009-Jun-24 09:22:44 by tannenba:</em> <br/>\n\nI do not think this bug existed before new rotations were added.  See <code>handleGlobalLogRotation()</code> in <a class=\"external\" href=\"http://condor-wiki.cs.wisc.edu/index.cgi/fileview?f=src/condor_c%2B%2B_util/user_log.C&amp;v=028d06369fa33b2c109f32cfc513af487148ed76\">the original version</a> as it existed two years ago.  Unfortunately, subsequent commits removed all traces of the original logic in order to, according to the commit messages, \"clean up\" rotations.  Throwing out existing, tested code to \"clean up\" (as opposed to fixing a specific known problem or adding a specific piece of missing functionality) is truly exasperating. Sigh...\n\n<p>So, in the original code:\n</p><div class=\"code\">\n<pre class=\"code\">\tint global_max_filesize = param_integer(\"MAX_EVENT_LOG\",1000000);\n\tif ( global_path &amp;&amp; current_filesize &gt; global_max_filesize ) {\n\t\tMyString old_name(global_path);\n\t\told_name += \".old\";\n\t\tif ( global_fp) {\n\t\t\tfclose(global_fp);\t// on win32, cannot rename an open file\n\t\t\tglobal_fp = NULL;\n\t\t}\n\t\tif ( rotate_file(global_path,old_name.Value()) == 0 ) {\n\t\t\trotated = true;\n\t\t\tdprintf(D_ALWAYS,\"Rotated event log %s at size %d bytes\\n\",\n\t\t\t\t\tglobal_path, current_filesize);\n\t\t}\n\t}\n\n\tif  ( rotated == true ||\t\t\t\t// we rotated the log\n\t\t  current_filesize &lt; previous_filesize )\t// someone else rotated it\n\t{\n\t\t\t// log was rotated, so we need to reopen/create it and also\n\t\t\t// recreate our lock.\n\t\tinitialize_global_log();\t// this will re-open and re-create locks\n\t\trotated = true;\n\t\tif ( global_lock ) {\n\t\t\tglobal_lock-&gt;obtain(WRITE_LOCK);\n\t\t\tfseek (global_fp, 0, SEEK_END);\n\t\t\tcurrent_filesize = ftell(global_fp);\n\t\t}\n\t}\n\n\tprevious_filesize = current_filesize;\n</pre></div>\n\n\n<p>Note in the above, rotations made by another process is detected by doing a file size comparison and handled by reopening/relocking to prevent events from going into the old file (as is happening now).  Also note this very same logic enables the above code to rotate the file successfully on both Unix and Win32.\n\n</p><p>Can we easily back-port this logic to the current code base ?\n\n</p><p></p><hr/>\n<em>2009-Jun-24 10:09:17 by nleroy:</em> <br/>\n\nThe current code still has this same logic.  The issue is that if the file has been rotated and has <strong>grown</strong> since the last check (aka the other process has rotated the file and then written enough events to make it larger than the size of the \".old\" file when the process in question last looked at it).\n\n<p>I've added logic to also check the file's st_ino (UNIX) / st_ctime (Win32), and am working on a test to verify that it works properly.\n\n</p><p></p><hr/>\n<em>2009-Jun-24 10:24:30 by tannenba:</em> <br/>\n\nExcellent, I am <em>very</em> glad to hear the logic was preserved!  Thanks for your comment/clarification.  Checking the inode/ctime seems reasonable, but it sucks than an extra (relatively expensive) system call needs to happen at every event...  Could we safely skip this check <em>if</em> current_size == previous_size?  So we are more efficient in the common case that the same process write a bunch of events in a row?\n\n<p></p><hr/>\n<em>2009-Jun-24 10:32:17 by nleroy:</em> <br/>\n\nThat's a good idea...  I'll look into that.\n\n<p></p><hr/>\n<em>2009-Jun-24 11:16:15 by nleroy:</em> <br/>\n\nUnfortunately, after thinking about it further, I believe that Todd's idea won't work.  By checking the file size via ftell() or fgetpos(), it'd be checking the size of the file that the file pointer points at, not that of the \"current\" file, which is what we really want.  I'm trying to think of a way around it, but I'm not coming up with one.\n\n<p></p><hr/>\n<em>2009-Aug-04 14:40:38 by nleroy:</em> <br/>\n\nJust pushed a fix for this bug, but I haven't completed a test for it.  I have a significantly modified test_log_writer to allow for testing of this fix, but haven't had time to finish it yet.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=711\" onclick=\"get_ticket_and_populate_wrapper('711'); return false;\" title=\"Updates to user log writer test program\">#711</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nUpdates to user log writer test program</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-04 12:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15234\">[15234]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=561\" onclick=\"get_ticket_and_populate_wrapper('561'); return false;\" title=\"Event log writer writing events into the .old file!\">#561</a></span>) Fixed a bug that was causing the event logging code to write events to the \".old\" file in rare cases.  (By Nick <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LeRoy\" title=\"Le Roy\">LeRoy</a></span> )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2010-Jan-31 08:23", "status": "resolved", "created": "2009-Jun-15 11:44", "fixed_version": "2009-Jun-15 11:44", "broken_version": "v070302", "priority": "2", "subsystem": "Daemons", "assigned_to": "nleroy", "derived_from": "", "creator": "tannenba", "rust": "a19387", "customer_group": "cms", "visibility": "public", "notify": "matt@cs.wisc.edu", "due_date": ""}