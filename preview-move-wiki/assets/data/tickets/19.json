{"id": 19, "title": "Ticket #19: Loop when killing process families", "description": "<blockquote>\nIn both the ProcD and the older process-tracking code (still used in the Master by default), when killing all processes that are part of a family, we use do the following:\n\n<p></p><ol>\n<li>Take a snapshot to get everything up to date\n</li><li>Send a SIGKILL to each process in the family (as determined in step 1)\n</li></ol>\n\n<p>This of course leads to a race condition where processes can be created in between these two steps which are then \"leaked\".\n\n</p><p>Instead of executing these two steps once, we should loop until step 1 determines that there are no longer any processes in the family.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Jan-15 10:40:30 by gquinn:</em> <br/>\n\nThis applies to suspending a family as well.\n\n<p></p><hr/>\n<em>2012-May-18 08:31:05 by bbockelm:</em> <br/>\n\nClosing this ticket, as <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1831\" onclick=\"get_ticket_and_populate_wrapper('1831'); return false;\" title=\"Take advantage of cgroups-based capabilities on new Linux platforms\">#1831</a></span> takes care of this in a generic, non-race-prone way.\n\n<p>If people want better killing semantics, they should enable cgroups.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2012-May-18 08:31", "status": "abandoned", "created": "2009-Jan-15 10:40", "fixed_version": "2009-Jan-15 10:40", "broken_version": "", "priority": "3", "subsystem": "Daemons", "assigned_to": "", "derived_from": "#1831", "creator": "gquinn", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}