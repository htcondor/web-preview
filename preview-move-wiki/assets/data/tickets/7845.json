{"id": 7845, "title": "Ticket #7845: schedd doesn't send available jobs to negotiator", "description": "<blockquote>\nWhen you release a job that was on hold, the schedd doesn't immediately update the priorec array; that's sensible, it's an expensive task and who knows how many other changes will happen before we need it again.\n\n<p>However, if you release a job that was on hold, at least in some cases, the schedd won't send it to the negotiator the next time the negotiator asks for jobs.  The particular scenario I encountered was easy to see because the released job was the only idle job in the queue.  The immediate cause was that the negotiator contacted the schedd before the schedd's update interval had expired, so count_jobs() hadn't been called since the job was released.\n\n</p><p>What made this particularly frustrating is that their appear to code to recompute the priorec array when the negotiator contacts the schedd, but it wasn't firing.  To quote the schedd log:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">Reusing prioritized runnable job list because nothing has changed.\n</pre></div>\n\n\n<p>Shouldn't we be marking the priorec array dirty when a held job is released?</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2020-Sep-05 02:44", "status": "new", "created": "2020-Sep-05 02:44", "fixed_version": "2020-Sep-05 02:44", "broken_version": "", "priority": "3", "subsystem": "DaemonsSubmitNode", "assigned_to": "", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, johnkn@cs.wisc.edu", "due_date": ""}