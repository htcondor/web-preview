{"id": 3532, "title": "Ticket #3532: Anonymously report software metrics", "description": "<blockquote>\n(This is from Karan Vahi at ISI.)\n\n<p>As part of the SI2 proposal, one of the requirements imposed on us by NSF is\nto track usage of the software.\n\n</p><p>For Pegasus 4.2, we implemented reporting of anonymous metrics to a server\nat ISI in the planner.\nAn overview of that is covered here\n\n</p><p><a class=\"external\" href=\"http://pegasus.isi.edu/wms/docs/latest/funding_citing_usage.php#usage_statistics\">http://pegasus.isi.edu/wms/docs/latest/funding_citing_usage.php#usage_statistics</a>\n\n</p><p>However, to close the loop we need to have metrics reporting in Condor\nDAGMan also.\n\n</p><p>Ewa and Miron talked about it last week.  He mentioned that it might be\npossible to implement this in DAGMan .\nBy default in the planner we have metrics reporting turned on. However, for\nDAGMan it was felt that it should be enabled initially only for Pegasus\nworkflows.\nThat should be possible for us to do , when we launch dagman for Pegasus\nworkflows.\n\n</p><p>The configuration is controlled by an environment variable that is set in\nthe environment. We could use that or pass a specific command line option to\ndagman.\n\n</p><p>We have covered some metrics that will be useful for DAGMan to report.\n<a class=\"external\" href=\"https://confluence.pegasus.isi.edu/display/pegasus/DAGMan+Metrics+Reporting\">https://confluence.pegasus.isi.edu/display/pegasus/DAGMan+Metrics+Reporting</a></p></blockquote>", "remarks": "<blockquote>\n<em>2013-Apr-09 15:25:10 by tannenba:</em> <br/>\n\nThe confluence ticket nicely states what to report and when to report (ie. when DAGMan exits), but we need to agree on a few details such as what happens if there is a failure to report, what happens if DAGMan exits prematurely, trust model (could any random person anywhere start updating these statistics?).\n\n<p></p><hr/>\n<em>2013-Apr-10 11:53:20 by wenger:</em> <br/>\n\nIf we're ever going to do this for workflows that aren't Pegasus workflows, we need some kind of non-Pegasus unique ID for a workflow.  I think the minimum would be something like schedd name and cluster ID, but we should think about whether that's good enough to be sure to be unique.\n\n<p></p><hr/>\n<em>2013-Apr-10 14:32:28 by wenger:</em> <br/>\n\nAs per previous emails with Karan, here are a couple of issues:\n\n<p></p><ul>\n<li>How often do we want to report the statistics?  We at least want to do the beginning and end of the DAG, I think.  We should figure out, though, whether we might ever want to set things up to periodically report the stats during the run, because that will affect the design.\n\n<p></p></li><li>We probably also want to add rescue DAG number to the things we report.\n</li></ul>\n\n<p></p><hr/>\n<em>2013-Apr-10 17:05:03 by wenger:</em> <br/>\n\nFrom ToddT:\n\n<p>Thanks Kent.  Added to my list of concerns above to be addressed in the\ndesign doc is impact on resource consumption and performance. For instance,\nif we must connect to the stats server at the start of dagman (instead of\njust the end), it should be a non-blocking connect &amp; write or ???.  Also\naddress in the design doc the impact to our Privacy Policy; see\n\n</p><p><a class=\"external\" href=\"http://research.cs.wisc.edu/htcondor/manual/v7.8/1_8Privacy_Notice.html#1525\">http://research.cs.wisc.edu/htcondor/manual/v7.8/1_8Privacy_Notice.html#1525</a>\nI'd like something to prevent making it complicated for a user to turn off\nreporting, e.g. if a user desires no reporting to happen from either DAGMan\nor other HTCondor components, they should be able to change just one knob.\n\n</p><p></p><hr/>\nPossible answer to the privacy issue:  DAGMan could look at the CONDOR_DEVELOPERS setting, and if it's undefined not send the reports, even if the pegasus-plan configures things to send them.\n\n<p></p><hr/>\n<em>2013-Jun-25 16:09:49 by tannenba:</em> <br/>\n\n<strong>Design Review</strong>\n\n<p>Review of design doc version attached Jun 21.\n\n</p><p>Please address the following:\n\n</p><p></p><ol>\n<li>There is important nuggets of wisdom scattered all over - in this document, in the ticket text, in the confluence ticket (which contains the list of metrics), in a requirements doc, in an 'example braindump' file, in another file that shows example dag output.  Put all this into ONE document and get rid of the other six attachments.\n\n<p></p></li><li>Restructure so it fits the <span class=\"wiki\"><a href=\"wiki?p=DesignDoc\" title=\"Design Doc\">design doc outline</a></span>.  Most important, first talk about what you are trying to do and why <em>before</em> going into classes and methods.\n\n<p></p></li><li>In second paragraph it says <em>variables and reads the braindump.txt file</em>... I have no idea what a <code>braindump.txt</code> file is about or the information it is communicating.\n\n<p></p></li><li>Are metrics kept/reported by default, or only if <code>-nometrics</code> is specified?  Doc is unclear.  I thought the originally idea was to only report metrics only originating from Pegasus workflows.  This implies to me that <code>-nometrics</code> should be the default, and Pegasus would opt-in via running dagman with <code>-wantmetrics</code>.  Why incur this overhead for non-Pegagus situations? Also why just a command-line flag?  If it was a config knob (perhaps in addition), then metrics could be enabled via environment variables or machine-wide via config file.\n\n<p></p></li><li>Unclear how nested dags are handled.  Are metrics only kept for the top dag?  Are metrics collapsed from child dags to the top dag?  Are metrics kept disjoint across parent/child nested dags?  The first paragraph says we need to have seperate numbers due to seperate dags, but makes no clear statement about what the intended operation will be.\n\n<p></p></li><li>Be sure to address questions in earlier remarks, e.g. what happens if DAGMan exits prematurely (and/or rescue dag -- are stats reported twice?), what is the trust model when reporting the statistics via curl.  Also nothing stated re previous questions like integration with <code>CONDOR_DEVELOPERS</code> so there is one knob to control privacy reporting.\n\n<p></p></li><li>Is there any utility or capability for keeping metrics w/o reporting over the network to curl?\n\n<p></p></li><li>Performance impact: how long are we willing to wait to report the metrics? If I have a workflow with a hundreds nested dags will i make 100 curl connections? How will performance impact be tested?\n\n<p></p></li><li>On regression tests explicitly testing the metrics functionality, I understand how metrics can be turned on and then the metrics file examined for correctness.  But how/will any integration regression testing happen?  Will some tests also update via libCurl to the Pegasus server?  Doing so probably does not make sense unless there is a way to read the data back from the server.\n\n<p></p></li><li>Exceptional cases: what happens when workflow is removed? held and released? held and then removed? I honestly cannot tell from reading the design doc in its current form.\n\n<p></p></li><li>Design doc should have the definitive plan.  Statements like <em>I think that the overall DAG should be</em> and <em>I think we should update</em> do not have a home in a design doc.  State the intended behavior that will be implemented (not necessarily all the details of how it will be implemented) and why.  If there are other things you are not sure about, add a <code>Possible Future Work</code> section to speculate about things that could be thought about more.\n</li></ol>\n\n<p>Hope the above helps.  Thanks!\n\n</p><p></p><hr/>\n<em>2013-Jun-25 16:54:01 by wenger:</em> <br/>\n\nI'll restructure things into a single doc (according to the format).  I think a lot of the issues you raised are actually dealt with if the requirements doc and design doc are read together, so it's not so much a matter of new material as of combining and formatting (although there are a few new issues).\n\n<p></p><hr/>\n<em>2013-Jun-27 17:54:10 by wenger:</em> <br/>\n\nArgh -- just realized that there's a problem with my plan for calculating the total_job_time -- we need to only use the first execute event for a given job proc.  I'll have to think about the best way to deal with that...\n\n<p></p><hr/>\n<em>2013-Jun-28 11:07:50 by tannenba:</em> <br/>\n\nDesign document states:\n\n<p></p><div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \nSo turning off the HTCondor reporting (unsetting the CONDOR_DEVELOPERS  configuration macro) will override the settings for the workflow metrics.\n</td></tr></tbody></table></div>\n\n\n<p>Note that unsetting the <code>CONDOR_DEVELOPERS</code> macro does not disable reporting; to disable reporting, the macro must be set to a value of <code>NONE</code>.  See <a class=\"external\" href=\"http://research.cs.wisc.edu/htcondor/manual/v8.0/3_3Configuration.html#param:CondorDevelopers\">the manual</a>.\n\n</p><p></p><hr/>\n<em>2013-Jun-28 11:15:00 by wenger:</em> <br/>\n\nOops, I missed that somehow.  Okay, so setting CONDOR_DEVELOPERS to \"NONE\" will prevent workflow metrics from being reported, as well.\n\n<p></p><hr/>\n<em>2013-Jun-29 14:45:18 by nwp:</em> <br/>\n\nI believe I have the dagman_metrics_reporter executable done, and I have DAGMan forking it to report to the server.  Kent, will you review it and let me know what needs to change?\n\n<p></p><hr/>\n<em>2013-Jun-30 06:01:04 by nwp:</em> <br/>\n\nNote that I added a new knob: <code>DAGMAN_PEGASUS_REPORT_METRICS</code>, which should default to <code>$(LIBEXEC)/condor_dagman_metrics_reporter_probe</code>.  This is not in the design document.\n\n<p>I also deviated from the design document by using the following command line interface:\n</p><div class=\"code\">\n<pre class=\"code\">condor_dagman_metrics_reporter_probe -f &lt;metrics file&gt; -s &lt;dagman status&gt; -d &lt;dag file&gt; -u &lt;url of a metrics server&gt;\n</pre></div>\n instead of a simple <code>&lt;metrics file&gt; &lt;dagman status&gt;</code> command line.  You need to specify the dag file to generate the name of the metrics.out, and I used the <code>-u</code> url in testing my code.  This command line should probably be normalized and be less ad hoc---on the other hand, there should never be a reason for a normal user to use this (hence it is in libexec).\n\n<p></p><hr/>\n<em>2013-Jul-01 07:43:49 by nwp:</em> <br/>\n\nIt turns out we do not use libcurl on Solaris platform in batlab, so building of the metrics reporter fails there.\n\n<p></p><hr/>\n<em>2013-Jul-01 08:07:21 by nwp:</em> <br/>\n\nWhat is the best way to sleep(3)?  On linux, you can include &lt;unistd.h&gt;, but that does not seem quite kosher for Windows...\n\n<p></p><hr/>\n<em>2013-Jul-01 08:48:56 by tannenba:</em> <br/>\n\nRe question above on how to <code>sleep()</code> : if you are doing this in HTCondor code (aka something that includes condor_common.h at the start), just go ahead and call <code>sleep(x)</code>, as condor_common.h already includes all the correct header files and macros for both windows and unix.\n\n<p></p><hr/>\n<em>2013-Jul-01 09:38:16 by nwp:</em> <br/>\n\nAll dagman tests fail in batlab on this branch with the following error:\n<div class=\"code\">\n<pre class=\"code\">07/01/13 09:15:29 Warning:  could not open Pegasus braindump file braindump.txt\n07/01/13 09:15:29 ERROR: Warning is fatal error because of DAGMAN_USE_STRICT setting\n</pre></div>\n\n\n<p></p><hr/>\n<em>2013-Jul-01 10:21:52 by wenger:</em> <br/>\n\nOops -- that's only supposed to be a fatal error if the metrics reporting is turned on.  I'll fix that!\n\n<p></p><hr/>\n<em>2013-Jul-03 17:09:30 by nwp:</em> <br/>\n\nBuilds fail--on windows--at the tip of this branch with the following errors:\n<div class=\"code\">\n<pre class=\"code\">33&gt;c:\\condor\\execute\\dir_7140\\userdir\\src\\condor_dagman\\condor_dagman_metrics_reporter.cpp(246) : error C2039: 'is_space' : is not a member of 'std'\n33&gt;c:\\condor\\execute\\dir_7140\\userdir\\src\\condor_dagman\\condor_dagman_metrics_reporter.cpp(253) : error C2039: 'is_space' : is not a member of 'std'\n</pre></div>\n\nand\n<div class=\"code\">\n<pre class=\"code\">32&gt;c:\\condor\\execute\\dir_7140\\userdir\\src\\condor_dagman\\dagman_metrics.cpp(21) : fatal error C1083: Cannot open include file: 'sys/time.h': No such file or directory\n</pre></div>\n\n\n<p></p><hr/>\n<em>2013-Jul-03 17:35:18 by wenger:</em> <br/>\n\nHmm -- I guess worst-case we could not built the metrics stuff on Windows for the first go-around.\n\n<p>At this point, the total_job_time accounting is the main thing left to implement, I think.\n\n</p><p></p><hr/>\n<em>2013-Jul-03 17:40:52 by wenger:</em> <br/>\n\nAh, for the time stuff it looks like maybe the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=UtcTime\" title=\"Utc Time\">UtcTime</a></span> class is what we want (see condor_utils/utc_time.h).\n\n<p></p><hr/>\n<em>2013-Jul-04 22:46:49 by nwp:</em> <br/>\n\n<div class=\"code\">\n<pre class=\"code\">33&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_easy_init referenced in function \"public: __thiscall Curl::Curl(void)\" (??0Curl@@QAE@XZ)\n33&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_easy_cleanup referenced in function \"public: __thiscall Curl::~Curl(void)\" (??1Curl@@QAE@XZ)\n33&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_slist_free_all referenced in function \"public: __thiscall Curl_slist::~Curl_slist(void)\" (??1Curl_slist@@QAE@XZ)\n33&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_slist_append referenced in function \"public: struct curl_slist * __thiscall Curl_slist::append(char const *)\" (?append@Curl_slist@@QAEPAUcurl_slist@@PBD@Z)\n33&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_easy_setopt referenced in function \"public: void __thiscall Curl::setopt&lt;int&gt;(enum CURLoption,int)\" (??$setopt@H@Curl@@QAEXW4CURLoption@@H@Z)\n33&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_easy_strerror referenced in function __catch$_main$2\n33&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_easy_perform referenced in function _main\n33&gt;C:\\condor\\execute\\dir_892\\userdir\\src\\condor_dagman\\RelWithDebInfo\\condor_dagman_metrics_reporter.exe : fatal error LNK1120: 7 unresolved externals\n33&gt;Build log was saved at \"file://c:\\condor\\execute\\dir_892\\userdir\\src\\condor_dagman\\condor_dagman_metrics_reporter.dir\\RelWithDebInfo\\BuildLog.htm\"\n33&gt;condor_dagman_metrics_reporter - 8 error(s), 1 warning(s)\n</pre></div>\n\nEvidently I cannot read the output of the Windows linker, because I cannot understand whether it tried to link libcurl and failed because of name mangling, or whether it did not get those functions in the link because libcurl was left out of the linker command.\n\n<p></p><hr/>\n<em>2013-Jul-05 15:45:00 by nwp:</em> <br/>\n\nI quit trying to build the metrics_reporter on windows for now.  TJ tells me that Zach is working on getting libcurl to be usable on windows.  When the linker runs, it is looking for symbols:\n<div class=\"code\">\n<pre class=\"code\">34&gt;Linking...\n34&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_easy_init referenced in function \"public: __thiscall Curl::Curl(void)\" (??0Curl@@QAE@XZ)\n34&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_easy_cleanup referenced in function \"public: __thiscall Curl::~Curl(void)\" (??1Curl@@QAE@XZ)\n34&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_slist_free_all referenced in function \"public: __thiscall Curl_slist::~Curl_slist(void)\" (??1Curl_slist@@QAE@XZ)\n34&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_slist_append referenced in function \"public: struct curl_slist * __thiscall Curl_slist::append(char const *)\" (?append@Curl_slist@@QAEPAUcurl_slist@@PBD@Z)\n34&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_easy_setopt referenced in function \"public: void __thiscall Curl::setopt&lt;int&gt;(enum CURLoption,int)\" (??$setopt@H@Curl@@QAEXW4CURLoption@@H@Z)\n34&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_easy_strerror referenced in function __catch$_main$2\n34&gt;condor_dagman_metrics_reporter.obj : error LNK2019: unresolved external symbol __imp__curl_easy_perform referenced in function _main\n34&gt;C:\\condor\\execute\\dir_27128\\userdir\\src\\condor_dagman\\RelWithDebInfo\\condor_dagman_metrics_reporter.exe : fatal error LNK1120: 7 unresolved externals\n</pre></div>\n\nbut in the libcurl library, we dump symbols and find (for example):\n<div class=\"code\">\n<pre class=\"code\">6&gt;04A 00000000 SECT13 notype ()    External     | _curl_easy_perform\n</pre></div>\n\nSo the names do not match, and the link fails.\n\n<p></p><hr/>\n<em>2013-Jul-05 15:47:22 by nwp:</em> <br/>\n\nAdded DAGMAN_PEGASUS_REPORT_TIMEOUT as a configuration knob to tell metrics_reporter how long to run before giving up.\n\n<p></p><hr/>\n<em>2013-Jul-05 15:51:38 by nwp:</em> <br/>\n\nThis branch should probably be squashed before merging to master.\n\n<p></p><hr/>\n<em>2013-Jul-05 16:01:39 by nwp:</em> <br/>\n\nAttached the source code for the server program I have been using to test the metrics_reporter.\n\n<p></p><hr/>\n<em>2013-Jul-10 13:32:33 by wenger:</em> <br/>\n\nThis is merged to V8_1_0-branch and master now.\n\n<p>I'm going to change the status to \"doc pending\" because I want to check whether the docs are as complete as they should be.\n\n</p><p></p><hr/>\n<em>2013-Aug-05 10:36:24 by smoler:</em> <br/>\n\nIn the metrics is an item called <code>parent_dagman_id</code>.  The definition within the manual page says:\n<div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \nDAG ID of parent of this DAG; empty if\nthis DAG is not a sub-DAG.\n</td></tr></tbody></table></div>\n\n\n<p>Can you provide a more specific definition of what this ID is?  Process ID?  Job node name? ClusterId.ProcId?\n\n</p><p></p><hr/>\n<em>2013-Aug-07 09:21:22 by smoler:</em> <br/>\n\nThe DAG ID is of the same form as given for the metric <code>dagman_id</code>.  That metric is well defined.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=3750\" onclick=\"get_ticket_and_populate_wrapper('3750'); return false;\" title=\"Improve DAGMan metrics reporting\">#3750</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nImprove DAGMan metrics reporting</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=3759\" onclick=\"get_ticket_and_populate_wrapper('3759'); return false;\" title=\"Fix total_job_time in DAGMan metrics\">#3759</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nFix total_job_time in DAGMan metrics</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/770/gt3532_design2.doc\">gt3532_design2.doc</a>\n59392 bytes added by wenger on 2013-Jun-28 14:27:01 UTC.\n<br/>\nOkay, another update to fix the issue with multiple execute events I noticed late yesterday.<br/>\n</li><li><a href=\"../files/774/metrics_test_server.cc\">metrics_test_server.cc</a>\n5330 bytes added by nwp on 2013-Jul-05 14:54:28 UTC.\n<br/>\nServer for testing the metrics reporter<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-07 09:24</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37112\">[37112]</a></span>: last detail added for documentation of new DAGMan metrics for Pegasus workflows ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-05 11:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37093\">[37093]</a></span>: Edit of new documentation of DAGMan metrics reporting for Pegasus workflows. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-04 16:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37090\">[37090]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Finished up the metrics information in the DAGMan section of the manual.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Aug-02 12:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=37079\">[37079]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Improved information in the manual about metrics reporting (I'm still working on stuff in the actual DAGMan section).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-23 12:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36972\">[36972]</a></span>: update man page, version history items, and new knob defns ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-09 19:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36843\">[36843]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=36842\">[36842]</a></span>, Merge branch 'V8_1_0-branch' Merging gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span> fix into master via 8.1.0 branch.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-09 19:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36842\">[36842]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=36825\">[36825]</a></span>, Merge branch 'V8_1-gittrac_3532-merge-branch' into V8_1_0-branch Fixes (at least mostly) gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span> for 8.1.1 release.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-09 15:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36823\">[36823]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Turned sending of total_job_time back on (always 0 for now).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-09 12:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36814\">[36814]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: We don't try to report metrics on Windows; various other cleanups of the code.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-09 10:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36811\">[36811]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Made the job_dagman_metrics-A test semi-functional.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-09 10:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36809\">[36809]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Disabled the total node time code, because it doesn't deal correctly with noop nodes.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-08 19:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36793\">[36793]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: We now correctly report just the \"main\" part of the HTCondor version; various other minor cleanups.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-08 17:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36791\">[36791]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Implemented total_job_time (turned off when we're not actually reporting metrics, because of mktime() DST weirdness).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-08 09:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36780\">[36780]</a></span>: Add documentation for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span> Includes the version history  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-05 14:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36771\">[36771]</a></span>: Sleep a bit if we failed to contact a server <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span> Network admins might get angry if we issue 30 connect requests per second, over and over for 100 seconds.  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-05 14:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36770\">[36770]</a></span>: Simplify error handling by using exceptions <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span> Write out log of what we are doing, for debugging. Print the environment too.  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-05 11:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36769\">[36769]</a></span>: Set duration of condor_dagman_metrics_reporter from configuration <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span> Now condor_dagman sets the duration of condor_dagman_metrics_reporter using the value of the DAGMAN_PEGASUS_REPORT_TIMEOUT configuration variable.  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-05 11:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36768\">[36768]</a></span>: Try and fail to get condor_dagman_metrics_reporter to build on windows <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span> isspace redefined to is_space in <span class=\"chng\"><a href=\"chngview?cn=30534\">[30534]</a></span> b963f58. This seems like a bad idea. \u00a0[...]\n (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-03 19:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36766\">[36766]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Checking close() and fclose() return values.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-03 18:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36765\">[36765]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Now using the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=UtcTime\" title=\"Utc Time\">UtcTime</a></span> class to avoid problems building on Windows.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-03 17:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36764\">[36764]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Instead of having condor_dagman_metrics_reporter open the output file, we open the output file in DAGMan itself and pass it as stdout and stderr to Create_Process() -- that way, errors from libcurl, for example, show up in the output file.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-02 14:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36750\">[36750]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: client and version in the metrics now refer to DAGMan; planner and planner_version are from the braindump.txt file.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-02 13:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36749\">[36749]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: DAGMan now tells condor_dagman_metrics_reporter whether to sleep, rather than passing the DAG status value and having the reporter figure that out; we now param for LIBEXEC to get the path to condor_dagman_metrics_reporter.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-02 12:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36748\">[36748]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Fixed syntax error in metrics output (trailing comma on last item); temporary fixes to get condor_dagman_metrics_reporter to run for testing; DAGMan now passes the output file name instead of the DAG file name to condor_dagman_metrics_reporter (so we can put the reporter's output file\u00a0[...]\n (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-01 21:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36742\">[36742]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: We now report metrics if the DAG fails; added first metrics test (checking not yet fully in place, but okay for manual testing).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-01 12:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36729\">[36729]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: We now only try to read the braindump.txt file if metrics reporting is enabled; failure to read braindump.txt is now strictness level 2, not 1; a few other cleanups.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jul-01 09:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36727\">[36727]</a></span>: Want to include header for sleep <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span> Do not build the metrics reporter unless we have libcurl  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-30 18:36</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36726\">[36726]</a></span>: Report all errors from libcurl <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-30 05:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36725\">[36725]</a></span>: Put the metrics reporter in libexec, not bin <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-30 05:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36724\">[36724]</a></span>: Fix up formatting and move code out of inner loop <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-29 15:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36723\">[36723]</a></span>: Indicate which server succeeded or failed <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-29 14:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36722\">[36722]</a></span>: Actually fork the dagman_metrics_reporter <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-29 13:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36721\">[36721]</a></span>: Handle environment variables and make sure we die after 100 seconds <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-29 12:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36720\">[36720]</a></span>: Using the wrong curl options so fix it <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-29 11:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36718\">[36718]</a></span>: Add the dagman_metrics_reporter <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span> This franks, but I need to find out from Kent and the design document which environment variables will be used and also what is supposed to happen with the DAGMan status  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-28 16:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36713\">[36713]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Cleaned up the metrics file output as per feedback from nwp.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-28 16:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36712\">[36712]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Added dagman_id and parent_dagman_id values to the metrics file.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-28 11:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36709\">[36709]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: Parsing of braindump.txt file now works, and the values from that file are reported in the metrics; a little bit of cleanup of other stuff.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jun-27 17:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=36705\">[36705]</a></span>: Gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3532\" onclick=\"get_ticket_and_populate_wrapper('3532'); return false;\" title=\"Anonymously report software metrics\">#3532</a></span>: A fair amount (but not all) of values are correctly written to the metrics file; no provision to actually report to the server yet, though.  (By Kent Wenger )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2013-Aug-07 09:27", "status": "resolved", "created": "2013-Mar-11 10:27", "fixed_version": "2013-Mar-11 10:27", "broken_version": "v070904", "priority": "2", "subsystem": "Dag", "assigned_to": "smoler", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu, vahi@isi.edu, tannenba@cs.wisc.edu", "due_date": "20130703"}