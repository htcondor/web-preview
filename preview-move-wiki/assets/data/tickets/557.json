{"id": 557, "title": "Ticket #557: Unexpected copy_to_spool setting", "description": "<blockquote>\nIt is observed that copy_to_spool set in the .sub file to false ends up being true in the actual job ad.\n\n<p>See rust ticket for details.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Jul-07 16:27:43 by mccardel:</em> <br/>\n\nHere's an explanation why this is happening.\n\n<p>In the submit file, everything is a command unless it has a + in front of it. When something has a + in front of it, it becomes an attribute, and it is inserted into the classad.\n\n</p><p>A <strong>command</strong> is simply something that tells condor_submit what to do and <strong>may</strong> also insert attributes into the job ad based upon the command's action and feature it controls.\nAn <strong>attribute</strong> (made with the + sign) has no effect on what condor_submit does.\n\n</p><p>As an example, let's say there was a  (non-existent) command called <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ProduceFreeEnergy\" title=\"Produce Free Energy\">ProduceFreeEnergy</a></span> which interacts with the (non-existent) condor_energy_module.\n\n</p><p>If in your submit file you had:\n\n</p><p></p><pre>  ...\n  ProduceFreeEnergy = TRUE\n  ...\n</pre>\n\n<p>then this would tell condor_submit to have the condor_energy_module start creating some nice free energy. This would not show up in the classad though.\n\n</p><p>But if you had:\n\n</p><p></p><pre>  ...\n  +ProduceFreeEnergy = TRUE\n  ...\n</pre>\n\n<p>then \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ProduceFreeEnergy\" title=\"Produce Free Energy\">ProduceFreeEnergy</a></span> = TRUE\" would show up in the classad, but condor_energy_module wouldn't start producing free energy.\n\n</p><p>Now lets say you wanted to produce free energy AND have the classad report this. You would need the following in your submit file:\n\n</p><p></p><pre>  ...\n  +ProduceFreeEnergy = TRUE\n  ProduceFreeEnergy = TRUE\n  ...\n</pre>\n\n<p>The first line would add that to the classad, the second line would actually start making free energy.\n\n</p><p>Now in the RUST ticket, the following was said to be in the condor_config file:\n\n</p><p></p><pre>  WantRemoteIO = False\n  WantBadgers = True\n  Notification = Error\n  JOB_LEASE_DURATION = 3600\n  copy_to_spool = True\n  SUBMIT_EXPRS = WantRemoteIO, Notification, WantBadgers,\n  JOB_LEASE_DURATION, copy_to_spool\n</pre>\n\n<p>So it would appear that they are setting copy_to_spool to a default value of true. However, this isn't what's happening. SUBMIT_EXPRS adds attributes to the classad. Putting \"copy_to_spool\" in SUBMIT_EXPRS is semantically equivalent to putting \"+copy_to_spool = TRUE\" into the submit file. So what this means is that all classads created will have <strong>attributes</strong> called \"copy_to_spool\" with the value TRUE. This does NOT insert the <strong>command</strong> \"copy_to_spool = TRUE\" into the submit file, which is what the submitter intended to do.\n\n</p><p>Now in the submit file, the person who submitted the RUST ticket said that they had the following line:\n\n</p><p></p><pre>  copy_to_spool = false\n</pre>\n\n<p>So this is what was happening: the condor_config file inserts an <strong>attribute</strong> called \"copy_to_spool\" with the value \"TRUE\" into the classad that condor_submit is creating based on the submit file. But condor_submit reads the \"copy_to_spool = false\" line, and then doesn't copy the executable to the spool. However, when the submitter types in `condor_q -l XXXXX`, \"copy_to_spool = TRUE\" is printed out, since that is what is in the classad.\n\n</p><p>The solution to this is the following:\n</p><ul>\n<li>Take \"copy_to_spool = TRUE\" out of the condor_config file.\n</li><li>In the submit file, have copy_to_spool be either TRUE or FALSE.\n</li><li>Also in the submit file, have the same exact line as above, but with a + in front of it.\n</li></ul>\n\n<p>Example:\n\n</p><p></p><pre>  ...\n  copy_to_spool = TRUE\n  +copy_to_spool = TRUE\n  ...\n</pre>\n\n<p>This will both tell condor_submit to copy to spool, and also add an attribute into the classad that tells whether copy_to_spool is true or false. This will allow the user to type in `condor_q -l XXXXX` and see whether copy_to_spool was true or false for XXXXX.\n\n</p><p></p><hr/>\n<em>2009-Jul-09 10:26:43 by smoler:</em> <br/>\n\nThe manual's definition of the configuration variable SUBMIT_EXPRS has been modified to more clearly state that it cannot be used to cause an action on behalf of a submitted job (like trying to insert a submit description file command forgotten in the file).\n\n<p></p><hr/>\n<em>2009-Aug-28 13:36:43 by psilord:</em> <br/>\n\nNew comments added to rust ticket, should we act on it?</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Jul-09 10:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=24883\">[24883]</a></span>: modified SUBMIT_EXPRS definition, to better document against the error as stated in ticket <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=557\" onclick=\"get_ticket_and_populate_wrapper('557'); return false;\" title=\"Unexpected copy_to_spool setting\">#557</a></span>  (By Karen Miller )</td></tr>\n</tbody></table>", "type": "doc", "last_change": "2012-May-11 14:25", "status": "defer", "created": "2009-Jun-11 15:09", "fixed_version": "2009-Jun-11 15:09", "broken_version": "", "priority": "5", "subsystem": "Tools", "assigned_to": "smoler", "derived_from": "", "creator": "psilord", "rust": "a19162", "customer_group": "ligo", "visibility": "public", "notify": "psilord@cs.wisc.edu,pcouvare@caltech.edu", "due_date": ""}