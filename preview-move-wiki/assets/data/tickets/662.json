{"id": 662, "title": "Ticket #662: Create a SOAP-based command-line tool execution service", "description": "<blockquote>\nPrimarily to help out the <a class=\"external\" href=\"http://nmi.cs.wisc.edu/\">BatLab</a> w/ some collaborative work w/ <a class=\"external\" href=\"http://etics.web.cern.ch/etics/\">ETICS</a>, we need to create a daemonCore service that accepts a SOAP request, executes a command-line tool (in the specific case of ETICs, it will be nmi_submit), and then returns the results.\n\n<p>We are calling this service the <strong>condor_soapshell</strong>.\n\n</p><p>Some pithy documentation on the initial pass at this service exists <span class=\"wiki\"><a href=\"wiki?p=SoapShell\" title=\"Soap Shell\">here</a></span>.\n\n</p><p>Some known deficiencies of this initial pass as of 8/12/09:\n</p><ul>\n<li>No user priv switching yet (!).  Ideally it should switch UIDs based upon SSL authentication.\n</li><li>Doesn't take advantage of the procd for privledge separation support.\n</li><li>Doesn't take advantage of procfamily to clean up the entire process tree when a command complete.\n</li><li>It can only handle one request at a time.  In other words, when a command is launched, the service will block until it completes.  The difficulty arises because gsoap assumes a threaded model, not a daemoncore-style callback model.\n</li><li>No Win32 support --- currently just Unix/Linux only.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2009-Aug-19 13:11:29 by bgietzel:</em> <br/>\n\nThe condor_soapshell daemon exited abnormally yesterday after I submitted a request.  There is no core file.  Here's the stack dump.\n\n<p></p><div class=\"code\">\n<pre class=\"code\">08/19 02:23:01 About to serve HTTP request...\n08/19 02:23:01 HTTP Request: http://198.51.254.20:8080/manager/html\nStack dump for process 17095 at timestamp 1250666582 (18 frames)\n/home/bgietzel/soapshell/condor_soapshell(dprintf_dump_stack+0xda)[0x8116fd5]\n/home/bgietzel/soapshell/condor_soapshell[0x811719a]\n[0xffffe500]\n/home/bgietzel/soapshell/condor_soapshell(_Z10serve_fileP4soapPKcS2_+0x72)[0x8111676]\n/home/bgietzel/soapshell/condor_soapshell(_Z11get_handlerP4soap+0x8f)[0x811194b]\n/home/bgietzel/soapshell/condor_soapshell[0x81d1ff5]\n/home/bgietzel/soapshell/condor_soapshell(soap_begin_recv+0x362)[0x81d1782]\n/home/bgietzel/soapshell/condor_soapshell(_Z10soap_serveP4soap+0x4e)[0x80edafe]\n/home/bgietzel/soapshell/condor_soapshell(_ZN10DaemonCore9HandleReqEP6StreamS1_+0xdc7)[0x80fae73]\n/home/bgietzel/soapshell/condor_soapshell(_ZN10DaemonCore9HandleReqEiP6Stream+0x30)[0x80fa0a6]\n/home/bgietzel/soapshell/condor_soapshell(_ZN10DaemonCore24CallSocketHandler_workerEibP6Stream+0x25e)[0x80f9614]\n/home/bgietzel/soapshell/condor_soapshell(_ZN10DaemonCore35CallSocketHandler_worker_demarshallEPv+0x2e)[0x80f93a2]\n/home/bgietzel/soapshell/condor_soapshell(_ZN13CondorThreads8pool_addEPFvPvES0_PiPKc+0x29)[0x8157bff]\n/home/bgietzel/soapshell/condor_soapshell(_ZN10DaemonCore17CallSocketHandlerERib+0x18c)[0x80f936c]\n/home/bgietzel/soapshell/condor_soapshell(_ZN10DaemonCore6DriverEv+0x1418)[0x80f90d2]\n/home/bgietzel/soapshell/condor_soapshell(main+0x1831)[0x810d44b]\n/lib/libc.so.6(__libc_start_main+0xdc)[0xb1fe8c]\n/home/bgietzel/soapshell/condor_soapshell(dlopen+0x45)[0x80e04c1]\n</pre></div>\n\n\n<p></p><hr/>\n<em>2009-Aug-26 14:32:54 by bgietzel:</em> <br/>\n\nthe condor_soapshell daemon crashes regularly when submitting a job with the following config file options:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">\nSOAPSHELL_AUTHORIZED_COMMANDS = nmi_submit,/nmi/bin/nmi_submit,cmdfile,\n#SOAPSHELL_AUTHORIZED_COMMANDS = nmi_runid2condor,/nmi/bin/nmi_runid2condor,,\nSOAPSHELL_AUTHORIZED_COMMANDS = $(SOAPSHELL_AUTHORIZED_COMMANDS) nmi_runid2condor,/nmi/bin/nmi_runid2condor,1,\nSOAPSHELL_LOG = /tmp/soapshell.log\nSOAPSHELL_DEBUG = D_FULLDEBUG\nSOAPSHELL_DEBUG_MODE = True\n\n</pre></div>\n\n\n<p></p><hr/>\n<em>2009-Dec-11 14:03:56 by tannenba:</em> <br/>\n\nResolving this ticket, as the initial version is done and working for what we currently need.  The deficiencies listed at the top of the ticket may warrant further work down the road, however.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1048\" onclick=\"get_ticket_and_populate_wrapper('1048'); return false;\" title=\"The condor_soapshell should be built nightly\">#1048</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nThe condor_soapshell should be built nightly</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-28 08:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15560\">[15560]</a></span>: Fix double free bug in the soapshell. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=662\" onclick=\"get_ticket_and_populate_wrapper('662'); return false;\" title=\"Create a SOAP-based command-line tool execution service\">#662</a></span>) This bug could cause the soapshell to core dump if the default environment specified in the config file was not properly specified. Lesson: don't free memory returned from StringList::next().  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-28 08:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15559\">[15559]</a></span>: Changed soapshell so default args / env in thje config files overides what the user provides. Previously, config args / env were appended to what the user provided in the request ad. If the config value of args or env is an asterisk, that means use the values provided in the request ad. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=662\" onclick=\"get_ticket_and_populate_wrapper('662'); return false;\" title=\"Create a SOAP-based command-line tool execution service\">#662</a></span>)  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-28 08:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15558\">[15558]</a></span>: In soapshell, perform sanity checking on SOAPSHELL_AUTHORIZED_COMMANDS knob. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=662\" onclick=\"get_ticket_and_populate_wrapper('662'); return false;\" title=\"Create a SOAP-based command-line tool execution service\">#662</a></span>)  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-28 08:36</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15557\">[15557]</a></span>: In soapshell, fix leaked file descriptors and improve handling of zero-length stdout/err. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=662\" onclick=\"get_ticket_and_populate_wrapper('662'); return false;\" title=\"Create a SOAP-based command-line tool execution service\">#662</a></span>)  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-28 08:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15556\">[15556]</a></span>: Put in base64 routines into soapshell that actually work. Unfortunately, these routines leverage gSoap, and thus cannot replace the ones in the util lib since some tools also need base64 coding and gsoap is not currently linked w/ the tools. This commit should be reverted when the c++ util lib base64\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-27 16:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15549\">[15549]</a></span>: Renamed condor_soapshell source code files appropriately. Previously they still were named dcskel and friends; not what we wanted for the long term. :). (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=662\" onclick=\"get_ticket_and_populate_wrapper('662'); return false;\" title=\"Create a SOAP-based command-line tool execution service\">#662</a></span>)  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-13 15:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15322\">[15322]</a></span>: Initial version of the condor_soapshell daemon. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=662\" onclick=\"get_ticket_and_populate_wrapper('662'); return false;\" title=\"Create a SOAP-based command-line tool execution service\">#662</a></span>)  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-13 15:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15320\">[15320]</a></span>: A reaper id of 0 to DaemonCore::Create_Process() means no reaper wanted. Previously there was no way to do this, and a reaper id of 0 was invalid. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=662\" onclick=\"get_ticket_and_populate_wrapper('662'); return false;\" title=\"Create a SOAP-based command-line tool execution service\">#662</a></span>)  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-13 15:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15319\">[15319]</a></span>: Added a C++ util routine to create a temporary subdirectory. We've long had create_temp_file() in directory.cpp; now it takes an optional flag to ask for a subdirectory instead of just a file. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=662\" onclick=\"get_ticket_and_populate_wrapper('662'); return false;\" title=\"Create a SOAP-based command-line tool execution service\">#662</a></span>)  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Aug-13 14:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15318\">[15318]</a></span>: Fixed bugs w/ Condor's base64 coding routines in the util library. Our original base64 coding routines were implemented on top of OpenSSL. However, OpenSSL makes a bunch of assumptions we don't like such as base64 input must be line deliminted at 73 characters. This new implementation is written on top\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2009-Dec-11 14:05", "status": "resolved", "created": "2009-Aug-11 14:01", "fixed_version": "2009-Aug-11 14:01", "broken_version": "", "priority": "1", "subsystem": "Unknown", "assigned_to": "tannenba", "derived_from": "", "creator": "tannenba", "rust": "", "customer_group": "batlab", "visibility": "public", "notify": "bgietzel@cs.wisc.edu,roy@cs.wisc.edu", "due_date": ""}