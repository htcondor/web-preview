{"id": 875, "title": "Ticket #875: DAGMan should support 'heredocs' for job submit files", "description": "<blockquote>\nDagman should support a 'heredoc' syntax to make certain types of autogeneration of dagfiles easier to do. The heredoc would be the contents of the submit file.\n\n<p></p><div class=\"verbatim\">\n<pre>JOB JobName SubmitDescriptionFileName [DIR directory] [DONE]&lt;&lt;END\n# The lines of the submit file.\nuniverse = scheduler\nexecutable = /bin/true\nnotification = Never\noutput = $NAME.out\nerror = $NAME.err\n# no log file means use the default log\nEND\n\n# later in the dag file:\nVARS JobName \"$NAME=$JOB\"\n</pre></div>\n\n\n<p>When dagman encounters this job, it will write a temporary submit file, then submit it. This will preserve the ability of VARS interpolants to work.\n\n</p><p>The <code>SubmitDescriptionFileName</code> would either have to be a known keyword, or left out and the parser figures out that DIR wasn't the job name, but the directory directive if the &lt;&lt; was found. There probably needs to be more thought on the syntax of the JOB directive to make it parser friendly.\n\n</p><p>If we decided to add whole dag variables, then we'd have to reason about the name spaces of the dag variables versus the VARS variables in terms of the submit file. I believe we'd have to do this any way even in the case of a non-heredoc job, but I mention it here so it isn't forgotten.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2010-Jan-31 13:22", "status": "new", "created": "2009-Oct-21 11:02", "fixed_version": "2009-Oct-21 11:02", "broken_version": "", "priority": "4", "subsystem": "Dag", "assigned_to": "", "derived_from": "", "creator": "psilord", "rust": "", "customer_group": "other", "visibility": "public", "notify": "psilord@cs.wisc.edu,wenger@cs.wisc.edu", "due_date": ""}