{"id": 2015, "title": "Ticket #2015: Take advantage of filesystem namespaces", "description": "<blockquote>\nThis is another child of the namespaces work started in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1959\" onclick=\"get_ticket_and_populate_wrapper('1959'); return false;\" title=\"Implement per-job PID namespaces.\">#1959</a></span>: filesystem namespaces.  Per request from Todd, this is being separated out into a new ticket.\n\n<p>This patch:\n</p><ul>\n<li>Adds USE_FS_NAMESPACES; if set to true, it will mask /tmp and /var/tmp with $_CONDOR_SCRATCH_DIR. Hence, \"condor_run ls /tmp\" will return blank. This works with any Linux 2.6 kernel.\n</li><li>Adds SQUASH_DIRS: set this to a list of directories to \"squash\" them to point at $_CONDOR_SCRATCH_DIR. Useful for sites that have other world-writeable directories. SQUASH_DIRS should work on any 2.6 kernel.\n</li></ul>\n\n<p>Due to overlap with the PID namespaces code, the patch is based off PID namespaces rather than master.\n\n</p><p>We again return to the question of privsep: we'll probably need to teach the switchboard how to do this.  Because this is the second patch today that has new code for privsep and non-privsep, I'm starting to dig Todd's idea of making switchboard used by default, even if privsep is not used.  I don't have the evening/weekend time to tackle this, but would be willing to be more patient on integrating this patch if someone wants to make that change.  Unlike the PID namespace patch, the majority of this patch will have to be rewritten (with approximately equivalent functionality) to implement with the switchboard.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Oct-10 10:36:20 by psilord:</em> <br/>\n\nIn separate discussions with Todd and Brian B., I found out that the patch containing the file system name spaces patch also contained the functionality of the PID name spaces patch. We at Condor are a little leery of the PID name space patch since there is some ancient code and decisions in the functionality of Condor that affect how it interacts with low pid numbers.\n\n<p>It turns out the the two patches can be separated. The file system name space patch still requires PID name space plumbing, but the expression of the PID name space behavior can be in a separate patch. I mentioned to bbockelm that if he separates the patch in this manner we'd accept the file system patch.\n\n</p><p></p><hr/>\n<em>2011-Oct-26 16:29:21 by eje:</em> <br/>\n\nIt might be useful to support the ability for users to submit additional directories to be \"squashed\" onto the working dir, via the job ad, for example\"\n\n<p></p><div class=\"verbatim\">\n<pre>universe = vanilla\n...\n+SquashDirs = /a/dir /another/dir /yet/another/dir\n</pre></div>\n\n\n<p>Brian pointed out that this might open up security holes if a user squashed something like \"/etc\" and wrote configurations that allowed some kind of priv elevation.\"\n\n</p><p>A way to avoid such a hole would be some kind of directory black-list, either hard coded or admin-supplied, that prevents sensitive directories like \"/etc\" from being squashed.\n\n</p><p></p><hr/>\n<em>2011-Oct-27 12:31:56 by eje:</em> <br/>\n\nRecommendations so far:\n\n<p></p><ol>\n<li>Rename SQUASH_DIRS to MOUNT_UNDER_SCRATCH\n</li><li>Remove hard-coded mounting of \"/tmp\" and \"/var/tmp\", such that all requested mounts live on \"MOUNT_UNDER_SCRATCH\" and are under admin control\n</li><li>Remove use of \"USE_FS_NAMESPACES\", so that mountings are enabled iff MOUNT_UNDER_SCRATCH is non-empty\n</li><li>Enhance mounting logic a bit so that if \"/a/requested/dir\" appears on MOUNT_UNDER_SCRATCH, then (a) create \"$(EXECUTE)/dir_xxxx/a/requested/dir\" and then (b) mount \"/a/requested/dir\" --&gt; \"$(EXECUTE)/dir_xxxx/a/requested/dir\"\n</li><li>'/' --&gt; DIR_DELIM_CHAR, and/or \"s[0]=='/'\" --&gt; \"!is_relative_to_cwd(s)\"\n</li><li>cmake support for something like HAVE_BIND_MOUNT or HAVE_FS_NAMESPACES (like what was done for HAVE_EXT_LIBCGROUP)\n</li><li>If feasible, a run-time check for bind-mount\n</li></ol>\n\n<p>PS, Greg suggested possibility of SCRATCH_FSTAB instead of MOUNT_UNDER_SCRATCH.\n\n</p><p></p><hr/>\n<em>2011-Oct-27 12:38:28 by eje:</em> <br/>\n\nMore thoughts about supporting \"+MountUnderScratch\" in a submit file:\n\n<p>If a directory like \"/etc\" is on the mounting black list, then would need to consider how to handle accidental/malicious requests for non-canonical dirs such as \"/etc/\" or \"/etc/../etc\" or \"/./etc/\" ...\n\n</p><p>There are algorithms for canonizing directories, or could simply ignore any requested dir containing \".\" or \"..\", or which is otherwise noncanonical in some way.\n\n</p><p></p><hr/>\n<em>2011-Nov-02 08:14:38 by bbockelm:</em> <br/>\n\neje -\n\n<p>For items (6) and (7), all versions of kernel 2.6 in use have fs namespaces.  You'd have to go back to RHEL3 to find one that doesn't support this flag.\n\n</p><p>How far back do we need support for?\n\n</p><p></p><hr/>\n<em>2011-Nov-28 16:41:13 by gthain:</em> <br/>\n\nCan we look at using unshare(2), instead of clone(NEWFS_NS).  That way we can have one code path that works with both fork(2) and clone(2).  Also, we would need to be root when we clone, which gives me hives.\n\n<p>Also, are you sure we need to elevate privs when we stat the mount points?\n\n</p><p></p><hr/>\n<em>2011-Nov-29 14:32:11 by eje:</em> <br/>\n\nA question relating to fs namespace use cases:   One use case that was specifically mentioned was installing a legacy OS (e.g. SL5) in /path/to/SL5/install and then mapping \"/\" to \"/path/to/SL5/install\" for jobs that want to run under SL5 packages.\n\n<p>The current candidate patch does not seem to support the above use case, since it only maps various directories to /path/to/job/scratch/dir\n\n</p><p></p><hr/>\n<em>2011-Nov-30 13:30:40 by eje:</em> <br/>\n\nI wonder if we shouldn't just go ahead and support something like:\n\n<p>+MountAs &lt;namespaced-path&gt; &lt;real-path&gt;\n\n</p><p>on the job submission side.\n\n</p><p>So, if a job wants to run under /path/to/SL5/install, you include this in the submission:\n\n</p><p>+MountAs \"/\" \"/path/to/SL5/install\"\n\n</p><p>An admin-controlled blacklist would supply directories that are considered security risks for &lt;real-path&gt; values.   So, you could prevent something like\n\n</p><p>+MountAs \"/tmp\" \"/etc\"\n\n</p><p>My thinking so far is that only restrictions on &lt;real-path&gt; are needed to maintain security - I'd be interested in whether others agree.\n\n</p><p></p><hr/>\n<em>2011-Nov-30 14:12:27 by eje:</em> <br/>\n\nThis seems a little creepy:\n\n<p></p><div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \nQ:\nI wrote a small C program that simply does an unshare(CLONE_NEWNS) followed by system(\"bash\").\n</td></tr></tbody></table></div>\n\n<div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \n\nThe man page says that the process should have its own namespace. So, in the shell I tried unmount /cgroup (cgroup is mounted on the original machine).\n\n</td></tr></tbody></table></div>\n\n<div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \nWhen I do a mount in a shell on the machine, /cgroup is unmounted there too. Am I missing something here? I thought that CLONE_NEWNS was to let me unmount a file system from the process without affecting the main system.\n\n</td></tr></tbody></table></div>\n\n<div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \nA:\n(As an aside, you didn't need to write a program - you could just use the unshare(1) utility).\n\n</td></tr></tbody></table></div>\n\n<div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \nIt is unmounting the filesystem only in the new namespace, and leaving it mounted in the original - the problem is that mount uses /etc/mtab to produce the list of currently-mounted filesystems, and that's just an ordinary file that can be updated by the mount command in the new namespace. This means that /etc/mtab gets out of synch with what's really going on (since there's only one /etc/mtab, but two mount namespaces).\n\n</td></tr></tbody></table></div>\n\n<div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n  \nCheck /proc/mounts instead, to see what's actually mounted in the current namespace.\n</td></tr></tbody></table></div>\n\n\n<p><a class=\"external\" href=\"http://stackoverflow.com/questions/6258696/understanding-the-behavior-of-unshare-clone-newns\">http://stackoverflow.com/questions/6258696/understanding-the-behavior-of-unshare-clone-newns</a>\n\n</p><p></p><hr/>\n<em>2011-Nov-30 14:21:31 by gthain:</em> <br/>\n\nWRT to the mounting a complete SL6 hierarchy, I believe Brian has a chroot patch coming that takes care of that.\n\n<p>WRT having the job describe the mountings, it seems like that mixes in too much knowledge of the execute-side into the job.\n\n</p><p></p><hr/>\n<em>2011-Nov-30 14:27:30 by gthain:</em> <br/>\n\nAnd in the, \"you learn something new every day\" category, /etc/mtab isn't even guaranteed to be up to date even when not using CLONE_NEWNS -- from the mount man page:\n\n<p></p><pre>       -n     Mount without writing in /etc/mtab.  This is necessary for example when /etc is on a read-only file system.</pre>\n</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3393\" onclick=\"get_ticket_and_populate_wrapper('3393'); return false;\" title=\"default for MOUNT_UNDER_SCRATCH\">#3393</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\ndefault for MOUNT_UNDER_SCRATCH</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/425/fs_namespace_v1.patch\">fs_namespace_v1.patch</a>\n16805 bytes added by bbockelm on 2011-Aug-01 20:16:15 UTC.\n<br/>\nHere is the patch referenced in the ticket; as mentioned above, it's still based on the PID namespace patch.  Todd and I will determine whether it's worth the effort to rebase it to master instead.<br/>\n</li><li><a href=\"../files/487/fs_namespaces_v2.patch\">fs_namespaces_v2.patch</a>\n12483 bytes added by bbockelm on 2011-Oct-25 17:57:35 UTC.\n<br/>\nAlright, I was actually able to untangle the PID namespaces stuff from FS namespaces completely.  This greatly simplifies this patch.\n\n<p>NOTE NOTE NOTE: Where I call set_priv changes compared to the previous patch.  I'm pretty sure I have the sequence correct, but would like someone to review this with their security mind engaged.<br/>\n</p></li><li><a href=\"../files/488/fs_namespaces_v3.patch\">fs_namespaces_v3.patch</a>\n19489 bytes added by bbockelm on 2011-Oct-26 22:30:20 UTC.\n<br/>\neje pointed out that I forgot to include filesystem_remap.*\n\n<p>This is my first attempt at using format-patch.  Sorry if I bombed it out.<br/>\n</p></li><li><a href=\"../files/493/fs_namespaces_v4.patch\">fs_namespaces_v4.patch</a>\n29618 bytes added by bbockelm on 2011-Nov-02 16:44:31 UTC.\n<br/>\nThis switches to the MOUNT_UNDER_SCRATCH and mounting behavior eje suggested in his review.<br/>\n</li><li><a href=\"../files/500/fs_namespaces_v6.patch\">fs_namespaces_v6.patch</a>\n25657 bytes added by bbockelm on 2011-Dec-05 02:01:32 UTC.\n<br/>\nRevised patch - \n   *: Greg switched from clone flags to unshare; this means the patch functions when using fork.\n   *: I added logic to detect when the MOUNT_UNDER_SCRATCH directories is under a shared mount.  In such a case, the activity inside the inner namespace is visible in the outer one.  Now, we re-bind the destination, mark it as private, then proceed as usual.<br/>\n</li><li><a href=\"../files/501/fs_namespaces_v7.patch\">fs_namespaces_v7.patch</a>\n11197 bytes added by bbockelm on 2011-Dec-05 22:59:18 UTC.\n<br/>\nNew version of the v6 patch, rebased against trunk.  Note there is some noise (commented out) related to a work-in-progress version of chroot.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Feb-04 12:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=43235\">[43235]</a></span>: Fix minor memory leak in starter with mount_under_scratch. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2015\" onclick=\"get_ticket_and_populate_wrapper('2015'); return false;\" title=\"Take advantage of filesystem namespaces\">#2015</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Mar-01 10:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=30750\">[30750]</a></span>: Improved definition of MOUNT_UNDER_SCRATCH, and moved the defn to a more appropriate place within the huge list ('cuz it isn't a statistics-gathering knob). ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2015\" onclick=\"get_ticket_and_populate_wrapper('2015'); return false;\" title=\"Take advantage of filesystem namespaces\">#2015</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-27 10:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28921\">[28921]</a></span>: Spelling and LaTeX corrections for MOUNT_UNDER_SCRATCH documentation ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2015\" onclick=\"get_ticket_and_populate_wrapper('2015'); return false;\" title=\"Take advantage of filesystem namespaces\">#2015</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-08 10:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28666\">[28666]</a></span>: Document MOUNT_UNDER_SCRATCH <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2015\" onclick=\"get_ticket_and_populate_wrapper('2015'); return false;\" title=\"Take advantage of filesystem namespaces\">#2015</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-07 16:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28652\">[28652]</a></span>: Add version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2015\" onclick=\"get_ticket_and_populate_wrapper('2015'); return false;\" title=\"Take advantage of filesystem namespaces\">#2015</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-07 15:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28651\">[28651]</a></span>: Next round of fs mapping, working around f16 surprises <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2015\" onclick=\"get_ticket_and_populate_wrapper('2015'); return false;\" title=\"Take advantage of filesystem namespaces\">#2015</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-07 15:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28649\">[28649]</a></span>: Detect MS_PRIVATE mount option for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2015\" onclick=\"get_ticket_and_populate_wrapper('2015'); return false;\" title=\"Take advantage of filesystem namespaces\">#2015</a></span>  (By Greg Thain )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-05 11:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28570\">[28570]</a></span>: Initial commit of <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2015\" onclick=\"get_ticket_and_populate_wrapper('2015'); return false;\" title=\"Take advantage of filesystem namespaces\">#2015</a></span>, filesystem namespaces  (By Greg Thain )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2012-May-30 12:31", "status": "resolved", "created": "2011-Mar-30 20:44", "fixed_version": "2011-Mar-30 20:44", "broken_version": "", "priority": "2", "subsystem": "Daemons", "assigned_to": "gthain", "derived_from": "#1959", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tstclair@redhat.com matt@cs.wisc.edu tannenba@cs.wisc.edu zmiller@cs.wisc.edu eje@cs.wisc.edu gthain@cs.wisc.edu bbockelm@cse.unl.edu", "due_date": "20110816"}