{"id": 6105, "title": "Ticket #6105: Make use of classad cache be more explicit and cheaper", "description": "<blockquote>\nWhen the classad cache is passed an expr-tree, it will unparse it. This is a fairly expensive operation and something that we never actually want to do in our code. so to insure that it isn't happening that capability will be removed from the classad cache.\n\n<p>Since this will involve an ABI change to the Classad code, some other changes will be rolled into the same commit.  In particular.\n\n</p><p></p><ul>\n<li>The classad library version will be bumped\n</li><li>Classad cache insertion will be via explicit call <code>InsertViaCache</code>\n</li><li>Creation of common Literals will have optimized methods\n</li><li>Splitting of a single line of -long (old form) classad will be moved out of the classad library and into the compat layer\n</li><li>Trivial constructors and destructors for <code>ExprTree</code>, <code>Literal</code> and <code>Value</code> classes will be moved into the header files to insure that they are inlined.\n</li><li>The number factor will be moved from the <code>Literal</code> into the <code>Value</code>, where it packs better, but it will still be exposed through the <code>Literal</code> methods and not the <code>Value</code> methods (they are already friends...)\n</li><li>The parentScope will be moved from <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprTree\" title=\"Expr Tree\">ExprTree</a></span> into child classes other than Literal</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2017-Feb-02 14:36:59 by jfrey:</em> <br/>\n\nRemoving the parentScope pointer from Literal nodes resulted in a 2% reduction in memory usage on a collector with 10,000 machine ads.\n\n<p></p><hr/>\n<em>2017-Feb-10 12:14:34 by johnkn:</em> <br/>\n\nI'm not sure that this ticket needs version history - should discuss with group.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Feb-28 09:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0fb7e39fb64af7ce78e927ecaa540a398433b625\">[50214]</a></span>: Version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6105\" onclick=\"get_ticket_and_populate_wrapper('6105'); return false;\" title=\"Make use of classad cache be more explicit and cheaper\">#6105</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6030\" onclick=\"get_ticket_and_populate_wrapper('6030'); return false;\" title=\"DEFAULT_JOB_MAX_RETRIES is not in param table\">#6030</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6123\" onclick=\"get_ticket_and_populate_wrapper('6123'); return false;\" title=\"add collector stats to show query and fork time\">#6123</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Feb-02 14:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/23852f34b257af9778ebbdcbdf607661b1c59974\">[50102]</a></span>: Move parentScope from <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprTree\" title=\"Expr Tree\">ExprTree</a></span> to child classes other than Literal. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6105\" onclick=\"get_ticket_and_populate_wrapper('6105'); return false;\" title=\"Make use of classad cache be more explicit and cheaper\">#6105</a></span> This saves space while leaving the APIs effectively identical. A parent scope isn't required to evaluate a Literal node.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jan-31 13:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/a351465c60c18b5486c74057e9aa15cc2c5c5986\">[50084]</a></span>: getClassAdNoTypes() should parse in old <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> syntax. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6105\" onclick=\"get_ticket_and_populate_wrapper('6105'); return false;\" title=\"Make use of classad cache be more explicit and cheaper\">#6105</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jan-31 11:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/9f487f68ecfaca74b4d3be6d5734fe0942c03150\">[50082]</a></span>: Remove some uses of ConvertEscapingOldToNew(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6105\" onclick=\"get_ticket_and_populate_wrapper('6105'); return false;\" title=\"Make use of classad cache be more explicit and cheaper\">#6105</a></span> Instead, use ClassAdParser's new ability to understand old <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> escaping rules.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jan-31 11:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/b6dbc5d2333fad8e2fc1b460f207256514a6dde3\">[50083]</a></span>: Add ParseExpression() variants for const char * source. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6105\" onclick=\"get_ticket_and_populate_wrapper('6105'); return false;\" title=\"Make use of classad cache be more explicit and cheaper\">#6105</a></span> This avoids copying the source value into a std::string without having to mess with a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LexerSource\" title=\"Lexer Source\">LexerSource</a></span> object.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jan-31 11:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e92a87921fa256b99aa2f8dd3b416993118251b5\">[50081]</a></span>: Teach new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> parser to understand old string escaping rules. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6105\" onclick=\"get_ticket_and_populate_wrapper('6105'); return false;\" title=\"Make use of classad cache be more explicit and cheaper\">#6105</a></span> The Lexer class can now be told to parse strings using the escaping rules of old <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>. This mode can be enabled via a method in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAdParser\" title=\"Class Ad Parser\">ClassAdParser</a></span>. This allows ClassAdParser::ParseExpression() to parse an expression in old <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span>\u00a0[...]\n (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jan-23 15:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/579a64f9d1acc28a1b28e409d36b6fe0345a8dd9\">[50045]</a></span>: for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6105\" onclick=\"get_ticket_and_populate_wrapper('6105'); return false;\" title=\"Make use of classad cache be more explicit and cheaper\">#6105</a></span>, bump version of classad library and make several changes to the interface * classadCache insertion will happen ONLY when <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=InsertViaCache\" title=\"Insert Via Cache\">InsertViaCache</a></span> is called * New optimized methods for creation of common Literals (i.e. bool, number and string) * move trival constructors and destructors into the header\u00a0[...]\n (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2017-Feb-28 20:15", "status": "resolved", "created": "2017-Jan-23 11:46", "fixed_version": "2017-Jan-23 11:46", "broken_version": "", "priority": "4", "subsystem": "Libs", "assigned_to": "johnkn", "derived_from": "#6093", "creator": "johnkn", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}