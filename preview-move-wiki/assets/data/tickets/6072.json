{"id": 6072, "title": "Ticket #6072: condor_status fails inside Docker container", "description": "<blockquote>\nWhen running a personal HTCondor inside a Docker container using default networking, the following fails:\n\n<p></p><div class=\"verbatim\">\n<pre>condor_status -schedd `hostname`\n</pre></div>\n\n\n<p>It appears this is because get_daemon_name fails to behave reasonably for hosts without a FQDN.  Docker sets the hostname to a randomly generated string, such as <code>eb4f00c8f1ca</code>.  Docker correctly sets up forward and reverse host&lt;-&gt;IP resolution using <code>/etc/hosts</code>.  However, both <code>hostname</code> and <code>hostname -f</code> (which returns the FQDN) returns <code>eb4f00c8f1ca</code>.  Unfortunately, <code>get_fqdn_from_hostname</code> considers any FQDN without a period (<code>.</code> character) invalid and returns the empty string.  Then, <code>get_daemon_name</code> will happily return the empty string to the caller.  Finally, <code>condor_status</code> errors out when the daemon name to query is the empty string.\n\n</p><p>I believe <code>get_daemon_name</code> or <code>get_fqdn_from_hostname</code> should be updated to simply pass through hostnames where there is no registered DNS name.\n\n</p><p>I only see two uses of <code>get_fqdn_from_hostname</code> in the code base, meaning it might not be so bad to change semantics.  The other user is <code>build_valid_daemon_name</code> (which has some really unfortunate semantics - allocates memory via <code>new[]</code>, meaning it must be disposed of via <code>delete[]</code>.  Over half the call sites I examined for <code>build_valid_daemon_name</code> do this incorrectly).</p></blockquote>", "remarks": "<blockquote>\n<em>2016-Dec-30 15:29:04 by gthain:</em> <br/>\n\nNote that you can specify the hostname of the docker container in the all-singing docker run command line.\n\n<p></p><hr/>\n<em>2016-Dec-30 15:33:40 by tlmiller:</em> <br/>\n\nI'll take a look at purging the new[], since that's evil.  I'll have to think about the right thing to do for <code>get_fqdn_from_hostname</code>; since we claim to work without DNS, if we don't have an FQDN, we should probably just see if the hostname roundtrips in the resolver.  It's also probably the case that <code>get_daemon_name</code>  should never return an empty string; that doesn't seem likely to be useful, but I'll have to check what's going on.\n\n<p></p><hr/>\n<em>2017-Jan-03 16:50:37 by tlmiller:</em> <br/>\n\nI'm looking at a fix for this, but until then, it seems to work to set the name of the Docker container to something including a '.'.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jan-10 11:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49963\">[49963]</a></span>: (<span class=\"ticket\"><a class=\"active\" href=\"/tickets?ticket=6072\" onclick=\"get_ticket_and_populate_wrapper('6072'); return false;\" title=\"condor_status fails inside Docker container\">#6072</a></span>) Fix dprintf typo.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jan-03 15:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49902\">[49902]</a></span>: (<span class=\"ticket\"><a class=\"active\" href=\"/tickets?ticket=6072\" onclick=\"get_ticket_and_populate_wrapper('6072'); return false;\" title=\"condor_status fails inside Docker container\">#6072</a></span>) Make get_daemon_name() return the putative hostname if it doesn't have an FQDN, instead of hostname@hostname; this at least gives the Machine look-up a chance to work.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-30 17:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49899\">[49899]</a></span>: (<span class=\"ticket\"><a class=\"active\" href=\"/tickets?ticket=6072\" onclick=\"get_ticket_and_populate_wrapper('6072'); return false;\" title=\"condor_status fails inside Docker container\">#6072</a></span>) Make get_daemon_name() behave like build_valid_daemon_name() when an FQDN isn't available.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-30 17:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49898\">[49898]</a></span>: (<span class=\"ticket\"><a class=\"active\" href=\"/tickets?ticket=6072\" onclick=\"get_ticket_and_populate_wrapper('6072'); return false;\" title=\"condor_status fails inside Docker container\">#6072</a></span>) Remove superflous string copy.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-30 17:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49897\">[49897]</a></span>: (<span class=\"ticket\"><a class=\"active\" href=\"/tickets?ticket=6072\" onclick=\"get_ticket_and_populate_wrapper('6072'); return false;\" title=\"condor_status fails inside Docker container\">#6072</a></span>) get_daemon_name() and company don't need to be 'extern C'.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2017-Jan-04 14:13", "status": "active", "created": "2016-Dec-26 21:16", "fixed_version": "2016-Dec-26 21:16", "broken_version": "", "priority": "3", "subsystem": "Tools", "assigned_to": "tlmiller", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "bbockelm@cse.unl.edu", "due_date": ""}