{"id": 2090, "title": "Ticket #2090: Warn if VARS values are overwritten", "description": "<blockquote>\nDimitri at BMRB just ran into a problem where his DAG was failing because he accidentally did this:\n\n<p></p><pre>  job job1 ...\n  vars job1 ...\n  job job2 ...\n  vars job1 ...\n</pre>\n\n<p>(note job1 instead of job2 in the second vars line).\n\n</p><p>Anyhow, I'm thinking that we should print a warning if this happens; and then when the -strict option is implemented, it could become a fatal error if the strictness level is high enough.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-May-18 12:49:13 by nwp:</em> <br/>\n\nNote here that -strict flag is <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1755\" onclick=\"get_ticket_and_populate_wrapper('1755'); return false;\" title=\"Have a -strict flag that turns some warnings into fatal errors\">#1755</a></span>\n\n<p></p><hr/>\n<em>2011-Jun-03 12:24:39 by wenger:</em> <br/>\n\nV7_7-warn_if_vars_values_are_overwritten-branch (from Nathan)\n\n<p></p><hr/>\n<em>2011-Jun-07 14:58:39 by wenger:</em> <br/>\n\nLooks good -- go ahead and merge this to the trunk.  (Just make sure to also add a note to the version history.)\n\n<p></p><hr/>\n<em>2011-Jun-07 21:16:03 by nwp:</em> <br/>\n\nVersion history added.  I noticed some remarks above about using the -strict flag here, but this merge ignores the existence of the -strict flag.  Merged to trunk and ticket resolved.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2255\" onclick=\"get_ticket_and_populate_wrapper('2255'); return false;\" title=\"The DAGMan strict flag should apply to multiple vars definitions\">#2255</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nThe DAGMan strict flag should apply to multiple vars definitions</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2256\" onclick=\"get_ticket_and_populate_wrapper('2256'); return false;\" title=\"Multiple vars definitions go into the vars list\">#2256</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nMultiple vars definitions go into the vars list</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/351/2090-test.tgz\">2090-test.tgz</a>\n361 bytes added by nwp on 2011-May-19 19:57:26 UTC.\n<br/>\nHere is a test case for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2090\" onclick=\"get_ticket_and_populate_wrapper('2090'); return false;\" title=\"Warn if VARS values are overwritten\">#2090</a></span>.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-20 14:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22233\">[22233]</a></span>: Overwrite variables if there are multiple definitions ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2256\" onclick=\"get_ticket_and_populate_wrapper('2256'); return false;\" title=\"Multiple vars definitions go into the vars list\">#2256</a></span> ===VersionHistory=== In <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2090\" onclick=\"get_ticket_and_populate_wrapper('2090'); return false;\" title=\"Warn if VARS values are overwritten\">#2090</a></span>, we alerted the user if there were multiple definitions of a variable in a DAGman file. Here, we explicitly overwrite the old value.  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-20 12:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22232\">[22232]</a></span>: Strict flag applies to multiple VAR definitions ===GT:Fixed=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2255\" onclick=\"get_ticket_and_populate_wrapper('2255'); return false;\" title=\"The DAGMan strict flag should apply to multiple vars definitions\">#2255</a></span> ===VersionHistory=== When <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2090\" onclick=\"get_ticket_and_populate_wrapper('2090'); return false;\" title=\"Warn if VARS values are overwritten\">#2090</a></span> was written, there was no strict flag. Now the strict flag is used to terminate DAGman if a variable is defined multiple times.  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-20 11:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26133\">[26133]</a></span>: completing documentation for gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2090\" onclick=\"get_ticket_and_populate_wrapper('2090'); return false;\" title=\"Warn if VARS values are overwritten\">#2090</a></span>, warning issued if multiple VARS macronamed definitions exist for same node  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-May-23 08:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21954\">[21954]</a></span>: Give more information in warning If the DAG is overwriting variables, we should tell the user where the problem is. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2090\" onclick=\"get_ticket_and_populate_wrapper('2090'); return false;\" title=\"Warn if VARS values are overwritten\">#2090</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-May-19 15:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26105\">[26105]</a></span>: Add version history about overwriting VARS in DAGman This is gittrac <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2090\" onclick=\"get_ticket_and_populate_wrapper('2090'); return false;\" title=\"Warn if VARS values are overwritten\">#2090</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-May-19 15:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21917\">[21917]</a></span>: Take out a printf It does not get written to the terminal ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2090\" onclick=\"get_ticket_and_populate_wrapper('2090'); return false;\" title=\"Warn if VARS values are overwritten\">#2090</a></span> ===VersionHistory=== If you overwrite the VARS value in a DAG submit file, DAGman will write a warning to the log.  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-May-19 14:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=21915\">[21915]</a></span>: Warn if vars are overwritten ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2090\" onclick=\"get_ticket_and_populate_wrapper('2090'); return false;\" title=\"Warn if VARS values are overwritten\">#2090</a></span> In parsing, we can see if variables are overwritten. We could make this an error in a -strict case, but there is only so much hand-holding that we should do  (By Nathan W. Panike )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2011-Sep-08 16:03", "status": "resolved", "created": "2011-Apr-26 09:29", "fixed_version": "2011-Apr-26 09:29", "broken_version": "v070600", "priority": "3", "subsystem": "Dag", "assigned_to": "nwp", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu", "due_date": ""}