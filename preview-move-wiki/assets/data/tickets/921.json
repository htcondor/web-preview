{"id": 921, "title": "Ticket #921: Expose Schedd's NFS cache flushing feature as controllable by job ad", "description": "<blockquote>\nThe Schedd has a feature to mkstemp&amp;unlink a file in a completing job's Iwd, if that Iwd is in NFS. This clears the NFS cache to assist programs on the submit node that read the job's Iwd after it completes. Original Issue: programs reading the Iwd on the submit machine could read cached data and not the job's actual output.\n\n<p>In 7.4.0, this cache flushing happens for any job with an Iwd in NFS.\n\n</p><p></p><div class=\"verbatim\">\n<pre>   if ( job_ad-&gt;LookupString( ATTR_OWNER, owner ) &amp;&amp;\n        job_ad-&gt;LookupString( ATTR_JOB_IWD, iwd ) &amp;&amp;\n        fs_detect_nfs( iwd.Value(), &amp;is_nfs ) == 0 &amp;&amp; is_nfs ) {\n      FLUSH_CACHE (using condor_mkstemp and unlink)\n   }\n</pre></div>\n\n\n<p>It is assumed that the mkstemp and unlink is expensive.\n\n</p><p>The FLUSH_CACHE should be a feature exposed to jobs. This would mean other processes could also implement it, i.e. the shadow.\n\n</p><p>I'm going to introduce job attribute IwdFlushNFSCache, an expression, that will guard the fs_detect_nfs() check. The benefit here is to avoid the FLUSH_CACHE and avoid the fs_detect_nfs(). For 7.4, this attribute, undocumented, will default to TRUE, but should be considered for documentation and a default of FALSE for 7.5.\n\n</p><p>Additionally, the FLUSH_CACHE may be better implemented as closedir(opendir(Iwd)), to be lighter weight.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=999\" onclick=\"get_ticket_and_populate_wrapper('999'); return false;\" title=\"Document IwdFlushNFSCache Job Ad attribute\">#999</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nDocument IwdFlushNFSCache Job Ad attribute</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1056\" onclick=\"get_ticket_and_populate_wrapper('1056'); return false;\" title=\"Make IwdFlushNFSCache default to FALSE\">#1056</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nMake IwdFlushNFSCache default to FALSE</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Nov-09 12:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=16268\">[16268]</a></span>: Added IwdFlushNFSCache attribute, expression, to control if Condor tries to flush the NFS cache for a job's iwd on job completion. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=921\" onclick=\"get_ticket_and_populate_wrapper('921'); return false;\" title=\"Expose Schedd's NFS cache flushing feature as controllable by job ad\">#921</a></span>)  (By Matthew Farrellee )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2009-Dec-12 09:01", "status": "resolved", "created": "2009-Nov-09 12:12", "fixed_version": "2009-Nov-09 12:12", "broken_version": "", "priority": "3", "subsystem": "Daemons", "assigned_to": "matt", "derived_from": "", "creator": "matt", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu", "due_date": ""}