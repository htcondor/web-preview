{"id": 841, "title": "Ticket #841: New test: Does process X exceed allowable memory usage Y?", "description": "<blockquote>\nNew test: Check actual memory usage of various Condor daemons.  If the usage is more than X (which would be determined by OS/Arch combination, and would have to be identified by examination of existing usage), that is a failure.  As new libraries are added, the test value would likely need to increase, but this test would let us catch quickly if we accidentally grew our in memory usage.\n\n<p>This might work by simply starting up the daemons, waiting 30 seconds, and measuring usage, but that may not exercise leaky or bloated parts.  Ideally the daemons would be run through some basic paces.\n\n</p><p>It would also be good to set a minimum memory usage, below which results are implausible.  This will potentially detect bugs in the test itself, or cases where a daemon is wildly malfunctioning but tests that test it are erroneously passing.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Oct-12 20:45:51 by matt:</em> <br/>\n\nThis could be integrated into the test framework itself and applied to all tests.\n<hr/>\n<em>2010-Oct-20 15:59:08 by jfrey:</em> <br/>\n\nBulk change of target version from v070504 to v070505 using ./ticket-target-mover.\n<hr/>\n<em>2011-Jan-27 14:46:04 by danb:</em> <br/>\n\nBulk change of target version from v070505 to v070506 using ./ticket-target-mover.\n<hr/>\n<em>2011-Feb-01 14:49:30 by tannenba:</em> <br/>\n\nBulk change of target version from v070506 to NULL using ./ticket-target-mover.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2011-Feb-01 14:52", "status": "new", "created": "2009-Oct-12 15:31", "fixed_version": "2009-Oct-12 15:31", "broken_version": "", "priority": "4", "subsystem": "Tests", "assigned_to": "", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}