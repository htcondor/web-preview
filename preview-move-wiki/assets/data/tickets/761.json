{"id": 761, "title": "Ticket #761: matchmaker diagnostics not visible to JobRouter or Quill", "description": "<blockquote>\nIn the schedd, <code>LastRejMatchTime</code>, <code>LastRejMatchReason</code> and a few similar things are inserted into the job <code>ClassAd</code> in memory only.  This means these attributes are not persistent and they are not visible to <code>JobRouter</code> and Quill.\n\n<p>There is no comment in the code excusing this way of doing things, so I am planning to make it update the ad the normal way, which logs to job_queue.log.  I think I would make this a \"non-durable\" transaction, so we would not fsync after updating these attributes.  I would like to do this as a bug fix for 7.4.0, because the documented use-case for <code>JobRouter</code> depends on these attributes.\n\n</p><p>Todd suggested getting some rough performance numbers for the different methods of updating <code>ClassAds</code> in the schedd.  Here's what I got:\n\n</p><p>Time in seconds to perform 10,000 <code>SetAttributeInt</code> operations, to memory\nonly, NONDURABLE (no fsync), and DURABLE (fsync).\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">NO-DISK    NONDURABLE   DURABLE  SYSTEM\n0.04       0.2            4      My MacBook\n0.04       0.2           50      My MacBook with busy disk\n0.03       0.3          300      tonic\n0.03       0.3          500      tonic with busy disk\n</pre></div>\n\n\n<p>I think the NONDURABLE option demonstrates reasonable performance for\nsomething called as frequently as the matchmaker diagnostic updates in\nthe negotiation handler.  It's 8-10 times slower than a pure memory\nupdate, but it can handle over 10,000 updates per second on the systems\nI tested.  Fortunately, we don't need a DURABLE update, because the\nperformance of that looks a bit more iffy.\n\n</p><p>I made the disk busy by doing cp -r of CONDOR_SRC.\n\n</p><p>I confirmed by reading the code that the NONDURABLE option skips both\nthe fsync and the fflush.\n\n</p><p>The patch I used to test is pasted below.\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">diff --git a/src/condor_schedd.V6/schedd.cpp\nb/src/condor_schedd.V6/schedd.cpp\nindex e8f5afa..56cf7d9 100644\n--- a/src/condor_schedd.V6/schedd.cpp\n+++ b/src/condor_schedd.V6/schedd.cpp\n@@ -5069,6 +5069,29 @@ Scheduler::negotiate(int command, Stream* s)\n                     host_cnt = max_hosts + 1;\n                     JobsRejected++;\n                     cad-&gt;Assign(ATTR_LAST_REJ_MATCH_TIME,(int)time(0));\n+                    {\n+                        time_t tt = time(0);\n+                        UtcTime start1(true);\n+                        for(int cc=0;cc&lt;10000;cc++) {\n+                            cad-&gt;Assign(ATTR_LAST_REJ_MATCH_TIME,(int)tt);\n+                        }\n+                        UtcTime stop1(true);\n+                        dprintf(D_ALWAYS,\"DAN TESTING: time to update\nin memory 10000 times: %f\\n\",stop1.difference(start1));\n+\n+                        UtcTime start2(true);\n+                        for(int cc=0;cc&lt;10000;cc++) {\n+\n SetAttributeInt(id.cluster,id.proc,ATTR_LAST_REJ_MATCH_TIME,(int)tt,NONDURABLE);\n+                        }\n+                        UtcTime stop2(true);\n+                        dprintf(D_ALWAYS,\"DAN TESTING: time to update\nnon-durable 10000 times: %f\\n\",stop2.difference(start2));\n+\n+                        UtcTime start3(true);\n+                        for(int cc=0;cc&lt;10000;cc++) {\n+\n SetAttributeInt(id.cluster,id.proc,ATTR_LAST_REJ_MATCH_TIME,(int)tt);\n+                        }\n+                        UtcTime stop3(true);\n+                        dprintf(D_ALWAYS,\"DAN TESTING: time to update\ndurable 10000 times: %f\\n\",stop3.difference(start3));\n+                    }\n                     break;\n                 case SEND_JOB_INFO: {\n                         // The Negotiator wants us to send it a job.\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\nI made a patch for 7.4 that changes the in-memory updates to mathcmaking diagnostics into NONDURABLE (to disk with no fsync) updates.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Oct-06 14:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=25016\">[25016]</a></span>: Documented fix for matchmaking diagnostic attributes in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobRouter\" title=\"Job Router\">JobRouter</a></span> and Quill. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=761\" onclick=\"get_ticket_and_populate_wrapper('761'); return false;\" title=\"matchmaker diagnostics not visible to JobRouter or Quill\">#761</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Sep-22 18:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=15728\">[15728]</a></span>: Log matchmaker diagnostics to disk so they are visible to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobRouter\" title=\"Job Router\">JobRouter</a></span> and Quill. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=761\" onclick=\"get_ticket_and_populate_wrapper('761'); return false;\" title=\"matchmaker diagnostics not visible to JobRouter or Quill\">#761</a></span>  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Jan-31 08:04", "status": "resolved", "created": "2009-Sep-22 18:12", "fixed_version": "2009-Sep-22 18:12", "broken_version": "v070200", "priority": "4", "subsystem": "Daemons", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}