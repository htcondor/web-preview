{"id": 1568, "title": "Ticket #1568: Shadow doesn't notice dead connection until remote machine rebooted", "description": "<blockquote>\nThis is a report from Rob Lahaye on condor-users. During input file transfer, the startd's SUSPEND expression evaluates to True. It tries to send a DC_SIGSUSPEND to the starter. The OS is Windows, so this is a CEDAR message. The startd times out after 20 seconds because the starter doesn't return to daemon-core during file transfer. The startd immediately hard-kills the starter. It then tries to send a DC_SIGCONTINUE and a SIGTERM to the dead starter.\n\n<p>The shadow notices the file transfer connection close when the starter is killed. But it doesn't notice the claim connection close, so it continues to hang around. The startd now considers the job and claim dead, but the schedd and shadow think they're still going. The schedd sends periodic keep-alives on the claim, which the startd ignores. This continues for three days until the execute machine is rebooted, at which time the shadow notices the claim connection close, so it exits, returning the job to idle status. The job is subsequently rematched and run successfully.\n\n</p><p>The submit machine is linux and the execute machine is Windows. Both are running Condor 7.4.2.\n\n</p><p>We don't know why the shadow wasn't informed of the closed claim connection for 3 days. The fact that the shadow saw the connection close when the execute machine was rebooted implies the OS on the execute machine was retaining state for the connection. We don't know how a process on the execute machine could be keeping the connection open, or how the OS would hold the connection open without a process having a handle to it.\n\n</p><p>An immediate solution (more of a band-aid) for this problem is to set STARTD_SENDS_ALIVES to True. The startd would stop sending keep-alives, and the schedd would kill the shadow. We should consider making this the default in Condor 7.6.x. See <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=671\" onclick=\"get_ticket_and_populate_wrapper('671'); return false;\" title=\"RFE: reverse direction of alive messages, go with startd-&gt;schedd\">#671</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1420\" onclick=\"get_ticket_and_populate_wrapper('1420'); return false;\" title=\"Change default for STARTD_SENDS_ALIVES\">#1420</a></span>.\n\n</p><p>This problem is similar to <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=1272\" onclick=\"get_ticket_and_populate_wrapper('1272'); return false;\" title=\"Dead connection not noticed by shadow for two hours\">#1272</a></span>, where the shadow didn't notice its connection with the starter dying for 2 hours. The solution suggested there of having the starter send regular job update messages and shadow going into disconnected mode when several messages are missed could be used here as well.\n\n</p><p>The initial cause of this problem is that the starter cannot receive messages from the startd while in file transfer. The same is true of the shadow. In this case, it's Windows-specific as DC_SIGSUSPEND is delivered as an OS signal on unix. We should consider how to make both daemons able to respond to CEDAR commands during file transfer.</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Jan-27 11:33:37 by tannenba:</em> <br/>\n\nResolving this ticket because 1) the suggested work-around, aka to enable startd sends alives, is now the default operation, and 2) likely <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4122\" onclick=\"get_ticket_and_populate_wrapper('4122'); return false;\" title=\"Detect broken TCP connections faster than 2 hours\">#4122</a></span> will result in the shadow noticing the dead connection within 6 minutes (by default)</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/209/pm37.zip\">pm37.zip</a>\n70725 bytes added by jfrey on 2010-Aug-09 19:59:16 UTC.\n<br/>\nUser and daemon logs, taken before shadow notices closed claim connection.<br/>\n</li><li><a href=\"../files/210/MasterShadowLog.zip\">MasterShadowLog.zip</a>\n64583 bytes added by jfrey on 2010-Aug-09 20:01:21 UTC.\n<br/>\nShadow log, taken after shadow notices closed claim connection and job is rerun elsewhere.<br/>\n</li><li><a href=\"../files/211/log.zip\">log.zip</a>\n2604 bytes added by jfrey on 2010-Aug-09 20:01:35 UTC.\n<br/>\nUser log, taken after shadow notices closed claim connection and job is rerun elsewhere.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "", "type": "incident", "last_change": "2014-Jan-27 11:34", "status": "resolved", "created": "2010-Aug-09 14:52", "fixed_version": "2010-Aug-09 14:52", "broken_version": "v070402", "priority": "4", "subsystem": "Unknown", "assigned_to": "tannenba", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "users", "visibility": "public", "notify": "", "due_date": ""}