{"id": 7339, "title": "Ticket #7339: It should be simpler to test ClassAd(s and) expressions", "description": "<blockquote>\nMat and I both griped about the clumsiness of using <strong>condor_status</strong> to test/demonstrate <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> and expressions while we were reviewing <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7206\" onclick=\"get_ticket_and_populate_wrapper('7206'); return false;\" title=\"Write a man page for ClassAds\">#7206</a></span>, and Mat observed that it should be a very short Python script to implement a tool with a much simpler interface.\n\n<p></p><div class=\"code\">\n<pre class=\"code\">classad_eval &lt;ad&gt; &lt;expr&gt;[ &lt;expr&gt;]+\n\nor\n\nclassad_eval &lt;ad&gt; &lt;expr&gt;[ &lt;expr&gt;]+\n</pre></div>\n\n\n<p>We've decided on <strong>classad_eval</strong> rather than <strong>condor_eval</strong> -- even though the tool will evaluate using HTCondor <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> semantics -- because <strong>classad_eval</strong> is less obscure/confusing to the people who don't know the difference, and the people who do won't care.\n\n</p><p>We want <strong>classad_eval</strong> packaged as a command-line tool, but in the Python bindings.  At least initially, it doesn't have to much behave like a \"normal\" HTCondor command-line tool, particularly in terms of error-handling.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Oct-24 14:13:30 by tlmiller:</em> <br/>\n\nThinking about it a little, I think we can do the following without much more code, and it would make certain expression testing easier:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">classad_eval &lt;expr&gt;\n</pre></div>\n\n\n<p>Where having exactly one argument implies that no ad is necessary to evaluate <em>expr</em>.\n\n</p><p></p><hr/>\n<em>2019-Oct-24 14:23:30 by matyas:</em> <br/>\n\nNot a big fan of changing the meaning of the first parameter based on whether the second parameter is present (aside: Unix cal(1) has a place of honor on my hate list for that exact reason). How about\n\n<p></p><div class=\"code\">\n<pre class=\"code\">classad_eval &lt;expr&gt; [&lt;expr&gt;...]\nclassad_eval -a &lt;inline ad&gt; &lt;expr&gt; [&lt;expr&gt;...]\nclassad_eval -f &lt;ad from file&gt; &lt;expr&gt; [&lt;expr&gt;...]\n</pre></div>\n\n\n<p></p><hr/>\n<em>2019-Oct-24 15:58:57 by tlmiller:</em> <br/>\n\nAfter discussion, see child tickets.\n\n<p></p><hr/>\n<em>2019-Oct-25 08:28:24 by karpel:</em> <br/>\n\nCould we use <code>entry_points</code> instead of <code>scripts</code> for packaging? It makes it much easier to test and makes editable installs work.\n\n<p>See <a class=\"external\" href=\"https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html\">https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html</a>\n\n</p><p></p><hr/>\n<em>2019-Oct-25 10:50:04 by tlmiller:</em> <br/>\n\n\"Editable installs\"?\n\n<p>But yes, we can do that.\n\n</p><p></p><hr/>\n<em>2019-Oct-25 10:52:22 by karpel:</em> <br/>\n\n<code>pip install -e &lt;path/to/pkg/dir&gt;</code> symlinks local package source into your Python package directory instead of copying it, so you can pretend like it's installed without having to re-install it every time you make changes (for dev purposes only, really).\n\n<p></p><hr/>\n<em>2019-Oct-25 18:44:13 by tlmiller:</em> <br/>\n\n<span class=\"chng\"><a href=\"chngview?cn=58275\">[58275]</a></span> implements <strong>simplify()</strong>, but the lifetime of <strong>ExprTree</strong> 's return from <strong>simplify()</strong> is probably tied to the lifetime of the scope argument.  I find this moderately absurd even in C++; it's probably flat-out wrong in Python.  If a scope argument is not supplied, and the <strong>ExprTree</strong> has a parent scope, the lifetime of the return is probably the same as the lifetime of the original <strong>ExprTree</strong> -- which is the lifetime of the parent scope.  This is also a model which I imagine will cause infinite confusion.  Finally, if the scope argument is not supplied, the lifetime of the return really should be the natural lifetime of the Python object in question.\n\n<p>It may even be more problematic that the answer varies than that it isn't always the natural lifetime of the Python object.\n\n</p><p>We will have to have to have words with BrianB.\n\n</p><p></p><hr/>\n<em>2019-Oct-29 14:58:47 by tlmiller:</em> <br/>\n\nWe need to document:\n\n<p></p><ul>\n<li>the new tool\n</li><li>that Python's ExprTree.eval() no longer accepts raw dictionaries (wrap them in classad.ClassAd() first)\n</li><li>the existence of simplify(), and if we do, that attempts to use a temporary <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span>, or the resulting <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprTree\" title=\"Expr Tree\">ExprTree</a></span> past the lifetime of the non-temporary context argument, is a terrrible, terrible plan.\n</li></ul>\n\n<p></p><hr/>\n<em>2019-Oct-31 12:32:40 by tlmiller:</em> <br/>\n\nAlso, we need to make sure the new tool:\n\n<p></p><ul>\n<li>is packaged in the tarballs\n</li><li>is packaged by RPM and Deb\n</li><li>is packaged by anaconda/pip\n</li></ul>\n\n<p>... and that it ends up in a sane place, and runnable, in all three cases.\n\n</p><p></p><hr/>\n<em>2019-Oct-31 16:35:02 by tlmiller:</em> <br/>\n\nDocumentation is done.\n\n<p></p><hr/>\n<em>2019-Nov-12 11:22:25 by tlmiller:</em> <br/>\n\nWe discussed the packaging problems at Flightworthy; HTCondor will now just require the Python bindings, and we'll \"just\" install this script into the usual binary directory, not using <code>setup.py</code> at all.  (We'll thus have to duplicate or leverage its shebang-line rewriting powers until we can actually drop Python 2 support.)\n\n<p></p><hr/>\n<em>2019-Dec-20 10:59:44 by tlmiller:</em> <br/>\n\nFor the 8.9.5 release, we'll just package classad_eval like we do condor_top (in the python bindings RPM/deb, but not in the PyPI/pip/conda package(s)), and not make the Python bindings a hard dependency.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=7340\" onclick=\"get_ticket_and_populate_wrapper('7340'); return false;\" title=\"Allow classad_eval to test matching\">#7340</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nAllow classad_eval to test matching</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7341\" onclick=\"get_ticket_and_populate_wrapper('7341'); return false;\" title=\"Make multi-attributes easier to classad_eval\">#7341</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nMake multi-attributes easier to classad_eval</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=7342\" onclick=\"get_ticket_and_populate_wrapper('7342'); return false;\" title=\"Add interactive (console) mode to classad_eval\">#7342</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nAdd interactive (console) mode to classad_eval</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Feb-19 19:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58981\">[58981]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7495\" onclick=\"get_ticket_and_populate_wrapper('7495'); return false;\" title=\"Python bindings broken on Debian/Ubuntu\">#7495</a></span>) Revert portion of commits for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Dec-30 10:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58771\">[58771]</a></span>: Version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Dec-20 10:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58716\">[58716]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) Package classad_eval like we do condor_top.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-31 16:24</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58310\">[58310]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) Fix merge conflict in bindings/python/CMakeLists.txt; fix bug in htcondor/__init__.py that was causing sphinx grief; document classad_eval and classad.ExprTree.simplify(); update classad.ExprTree.eval() to match new requirements.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-31 12:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58308\">[58308]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) Josh wanted us to switch to \"editable installs\", so we did.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-29 16:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58289\">[58289]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) Would be lovely if CTest actually worked on my system.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-29 15:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58288\">[58288]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) Turns out I misdiagnosed the problem, and the scope() call was just in the wrong place. <strong>sigh</strong> Removing the obsolete _*.cpp files to prevent future confusion.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-29 14:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58286\">[58286]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) There's no sane way to implement a temporary <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> from a Python dict in C++. (Anything sane-ish would require splitting the implementations of eval() and simplify().)  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-28 13:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58279\">[58279]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) boost::python::extract effectively considers a Python None to be a type of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAdWrapper\" title=\"Class Ad Wrapper\">ClassAdWrapper</a></span>.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-25 18:32</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58275\">[58275]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) Add classad.ExprTree.simplify(), which is like eval(), but returns an <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprTree\" title=\"Expr Tree\">ExprTree</a></span>, instead.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-25 11:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58274\">[58274]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) Both directory copy commands here should DEPEND on their source directories.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-25 10:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58267\">[58267]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) Fix unreported Windows python packaging error.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-24 14:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58262\">[58262]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) First pass at RPM fix-ups.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Oct-24 14:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=58258\">[58258]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7339\" onclick=\"get_ticket_and_populate_wrapper('7339'); return false;\" title=\"It should be simpler to test ClassAd(s and) expressions\">#7339</a></span>) Implement (most of) classad_eval. Add to bindings packaging; because we expect to drop Python 2 support shortly, ignore issue where the Python 3 version of the script overwrites the Python 2 version (both autogenerated) when both versions of the bindings are built.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-Dec-30 10:22", "status": "resolved", "created": "2019-Oct-24 14:12", "fixed_version": "2019-Oct-24 14:12", "broken_version": "", "priority": "2", "subsystem": "Tools", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, matyas@cs.wisc.edu, karpel@wisc.edu", "due_date": ""}