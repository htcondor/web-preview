{"id": 3389, "title": "Ticket #3389: DAGMan should honor prio changes", "description": "<blockquote>\nThere is currently no easy way to change the relative priority of a DAG compared to another DAG. condor_prio on a dagman ID does not do anything.\n\n<p>One can set the priorities at submit time. But what if a user decides after the fact that he wants to change the priority of a DAG (relative to other DAGs)?\n\n</p><p>Sure, one can change the prios of nodes already in the Condor Queue. And for the others hold the DAG, rewrite the DAGMAN file and release the DAG. But this is hardly user friendly.\n\n</p><p>Instead, DAGMan should honor any change in its own priority setting, and adjust the relative priority of all the nodes accordingly. As a corollary, DAGMan should adjust the priorities also if it itself was submitted with a non-zero prio value.\n\n</p><p>Now, implementation wise, DAGMan should have no problems finding out that his own prio changed. condor_prio adds a dedicated event (033) to the DAGMan's event log.\n\n</p><p>For backwards compatibility, we may want to make this an optional feature.</p></blockquote>", "remarks": "<blockquote>\n<em>2012-Dec-18 18:39:27 by nwp:</em> <br/>\n\nFirst problem: DAGMan does not read its own event log.\n\n<p></p><hr/>\n<em>2012-Dec-18 18:40:46 by sfiligoi:</em> <br/>\n\nBut it could, right? Does not seem to be a major problem; the parsing code is essentially the same as for the nodes it is handling.\n\n<p></p><hr/>\n<em>2012-Dec-18 18:50:22 by nwp:</em> <br/>\n\nThe log file is set up by condor_submit_dag, not condor_dagman.  It also seems like a bad idea for DAGMan to change state on its <em>own</em> events; it seems like a recipe for infinite loops or weird feedback loops if one is not careful.\n\n<p></p><hr/>\n<em>2012-Dec-18 18:52:52 by nwp:</em> <br/>\n\nWhen the user edits the priority, it gets propogated to all the child nodes.  So the user only needs to edit the top parent level.\n\n<p></p><hr/>\n<em>2012-Dec-18 19:01:38 by sfiligoi:</em> <br/>\n\nDAGMan represents the DAG; so changing its prio would seem logical to expect that this propagates to the DAG nodes as well.\n\n<p>Yes, as said above, I can potentially edit the file on disk, but this is like asking a user to change the Schedd's state file to alter a user job prio.\n(I understand that DAGMan is technically not part of HTCondor, but you do seem to make it look like it is)\n\n</p><p>As for finding out where its own event log is, condor_submit_dag could easily pass it as one of the arguments.\n\n</p><p></p><hr/>\n<em>2012-Dec-18 19:05:41 by nwp:</em> <br/>\n\nI don't understand the simile.  The user writes the DAG file and submits the DAG.  To fix something, she puts the DAGman on hold, edits the DAG file, and releases the DAG.  There is nothing ex machina here.\n\n<p></p><hr/>\n<em>2012-Dec-18 19:08:14 by sfiligoi:</em> <br/>\n\nThink how the job submission for regular HTCOndor jobs goes.\n\n<p>I crate a submit file (i.e. JDL) and pass it to condor_submit.\n\n</p><p>From now on, anything I do to that job happens through communication with the Schedd.\n\n</p><p>The user is never expected to \"pause the job, edit the submit file and release the job\" to alter its behavior.\n\n</p><p>I am trying to get away from the double standards here.\n\n</p><p></p><hr/>\n<em>2012-Dec-18 20:20:33 by nwp:</em> <br/>\n\nThere is no double standard here. You are communicating with condor_dagman, not the schedd.\n\n<p></p><hr/>\n<em>2012-Dec-18 20:24:55 by sfiligoi:</em> <br/>\n\nSo... essentially you are saying:\n<div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n   DAGMan is not vanilla HTCondor, get over it </td></tr></tbody></table></div>\n\n\n<p></p><hr/>\n<em>2012-Dec-19 08:20:18 by nwp:</em> <br/>\n\nBasically, yes. That is what I am saying.\n\n<p>I neglected to mention the DAGMan halt file.  See Section 2.10.6 at <a class=\"external\" href=\"http://research.cs.wisc.edu/htcondor/manual/v7.8/2_10DAGMan_Applications.html\">DAGMan manual</a>.\n\n</p><p></p><hr/>\n<em>2013-Apr-08 14:54:27 by nwp:</em> <br/>\n\nIgor, I implemented stuff for <span class=\"ticket\"><a class=\"reviewdesign\" href=\"/tickets?ticket=3389\" onclick=\"get_ticket_and_populate_wrapper('3389'); return false;\" title=\"DAGMan should honor prio changes\">#3389</a></span>.  Would you like to try it and see if it is useful?  I have my doubts whether it is useful, so I would like some measurement before pursuing it further. It is in the htcondor repository on <code>V7_9-gittrac_3389-branch</code>.\n\n<p></p><hr/>\n<em>2013-Apr-09 12:08:58 by nwp:</em> <br/>\n\nI found a case where I just do not see a way out. Consider the following.  A.dag has contents\n<div class=\"code\">\n<pre class=\"code\">Subdag External B B.dag\n</pre></div>\n\n\n<p>Contents of B.dag is\n</p><div class=\"code\">\n<pre class=\"code\">Job A A.cmd\nJob B B.cmd\nParent A Child B\n</pre></div>\n\n\n<p>Now, the condor_dagman running the subdag B.dag will be monitoring its own log (the dagman.log file).  It will see an event like:\n</p><div class=\"code\">\n<pre class=\"code\">000 (024.000.000) 04/09 11:36:28 Job submitted from host: &lt;128.105.14.28:47863&gt;\n    DAG Node: B\n</pre></div>\n\nin the dagman.log and then barf because has not run A yet.\n\n<p>I tried to add logic such as \"if the cluster is the same as our cluster id, ignore the submit event,\" but this will fail in a rescue DAG scenario.\n\n</p><p></p><hr/>\n<em>2013-Apr-09 12:26:01 by sfiligoi:</em> <br/>\n\nI thought dagman was renaming its nodes:\n<div class=\"blockquote\">\n<table width=\"95%\"><tbody><tr><td>\u00a0</td><td>\n    The HTCondor submit description file, used by condor_dagman, corresponding to inner.dag will be named inner.dag.condor.sub. The DAGMan submit description file is always named &lt;DAG file name&gt;.condor.sub. Each DAG or SUBDAG results in the submission of condor_dagman as an HTCondor job, and condor_submit_dag creates this submit description file.</td></tr></tbody></table></div>\n\n\n<p></p><hr/>\n<em>2013-Apr-09 12:46:58 by nwp:</em> <br/>\n\ndagman does not change the contents of inner.dag and the comment above is about the names of the nodes in the dag file.\n\n<p></p><hr/>\n<em>2013-Apr-09 12:47:57 by nwp:</em> <br/>\n\nAugmenting the logevent structure with the name of the log file where the event came from seems to have worked in limited testing...\n\n<p></p><hr/>\n<em>2013-Apr-09 18:10:20 by nwp:</em> <br/>\n\nOK, latest version (2e0ddb3) passes the test suite\n\n<p></p><hr/>\n<em>2013-Apr-17 18:17:40 by sfiligoi:</em> <br/>\n\nDAGMan does not do what I requested in the intitial descript;<br/>\n\ni.e. adjust the <strong>relative priority</strong> of all the nodes.\n\n<p>Looks like it just sets the priority of the nodes to its own priority,\nignoring the PRIORTY element in the DAG.\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">JOB A a.condor\nPRIORITY A 1\nJOB B a.condor\nPRIORITY B 1\nJOB C b.condor\nPRIORITY C 3\nJOB R b.condor\nPRIORITY R 3\nPARENT A B C CHILD R\n</pre></div>\n\n\n<p></p><div class=\"code\">\n<pre class=\"code\">$ condor_q\n\n-- Submitter: uaf-3.t2.ucsd.edu : &lt;169.228.130.50:51822&gt; : uaf-3.t2.ucsd.edu\n ID      OWNER            SUBMITTED     RUN_TIME ST PRI SIZE CMD\n   8.0   sfiligoi        4/17 16:09   0+00:00:15 R  0   2.2  condor_dagman\n   9.0   sfiligoi        4/17 16:10   0+00:00:00 I  3   0.0  a.sh 9.0\n  10.0   sfiligoi        4/17 16:10   0+00:00:00 I  1   0.0  a.sh 10.0\n  11.0   sfiligoi        4/17 16:10   0+00:00:00 I  1   0.0  a.sh 11.0\n\n4 jobs; 0 completed, 0 removed, 3 idle, 1 running, 0 held, 0 suspended\n$ condor_prio -p 10 8\n$ condor_q\n\n-- Submitter: uaf-3.t2.ucsd.edu : &lt;169.228.130.50:51822&gt; : uaf-3.t2.ucsd.edu\n ID      OWNER            SUBMITTED     RUN_TIME ST PRI SIZE CMD\n   8.0   sfiligoi        4/17 16:09   0+00:00:29 R  10  2.2  condor_dagman\n   9.0   sfiligoi        4/17 16:10   0+00:00:08 R  10  0.0  a.sh 9.0\n  10.0   sfiligoi        4/17 16:10   0+00:00:08 R  10  0.0  a.sh 10.0\n  11.0   sfiligoi        4/17 16:10   0+00:00:08 R  10  0.0  a.sh 11.0\n\n4 jobs; 0 completed, 0 removed, 0 idle, 4 running, 0 held, 0 suspended\n[1615] sfiligoi@uaf-3 /data/tmp/igor/condor_2/install/submit/d2$ condor_q\n\n\n-- Submitter: uaf-3.t2.ucsd.edu : &lt;169.228.130.50:51822&gt; : uaf-3.t2.ucsd.edu\n ID      OWNER            SUBMITTED     RUN_TIME ST PRI SIZE CMD\n   8.0   sfiligoi        4/17 16:09   0+00:06:31 R  10  2.2  condor_dagman\n  12.0   sfiligoi        4/17 16:15   0+00:01:02 R  10  0.0  a.sh 12.0\n\n2 jobs; 0 completed, 0 removed, 0 idle, 2 running, 0 held, 0 suspended\n</pre></div>\n\n\n<p>Is this expected???\n\n</p><p></p><hr/>\n<em>2013-Apr-18 08:40:23 by nwp:</em> <br/>\n\nYes, this is expected.  This was my understanding.\n\n<p></p><hr/>\n<em>2013-Apr-18 08:40:57 by nwp:</em> <br/>\n\nTo do relative priority adjustments is going to take a lot more work.\n\n<p></p><hr/>\n<em>2013-Apr-18 09:07:17 by nwp:</em> <br/>\n\nDid this change help you improve the usage of your pool?\n\n<p></p><hr/>\n<em>2013-Apr-18 11:12:26 by sfiligoi:</em> <br/>\n\nI don't think that as-is I would be willing to use it.\n\n<p>We do need to preserve the relative priorities within a DAG.\n\n</p><p></p><hr/>\n<em>2013-Apr-20 00:46:26 by sfiligoi:</em> <br/>\n\nRelative priority change is a problem because the\n<div class=\"code\">\n<pre class=\"code\">condor_prio</pre></div>\n\ncommand does not allow for setting a relative priority, right?\n\n<p>Should be push for that?\n\n</p><p>The schedd could easily handle a request for a relative change...\nall we need is the ability to express it.\n\n</p><p></p><hr/>\n<em>2013-Apr-20 08:04:48 by nwp:</em> <br/>\n\nThat is my plan--to add some kind of incremental priority change.\n\n<p></p><hr/>\n<em>2013-Apr-20 13:07:40 by sfiligoi:</em> <br/>\n\nJust to be clear:<br/>\n\nI am talking changes to the schedd and the condor_prio tool.\n\n<p>I think it would be useful in general; your use case is just the trigger.\n\n</p><p></p><hr/>\n<em>2013-Apr-20 15:21:40 by nwp:</em> <br/>\n\nThen I have to write up a design document, convince Todd that this is useful, and Todd will assign a priority to it.\n\n<p></p><hr/>\n<em>2013-May-01 22:50:31 by nwp:</em> <br/>\n\nPushed a patch for this that does relative priority changes, as requested.  Unfortunately, this involved adding code to the shadow, the schedd, and the negotiator.  For what it's worth, all <a class=\"external\" href=\"http://submit-2.batlab.org/results/run-details.php?runid=123386\">tests</a> pass\n\n<p></p><hr/>\n<em>2013-May-06 08:26:40 by nwp:</em> <br/>\n\nAssigning to gthain for review.  Greg will probably assign it to someone else.\n\n<p></p><hr/>\n<em>2013-Jun-13 10:57:26 by nwp:</em> <br/>\n\nAs I am leaving the HTCondor team, Kent will probably be the victim for this going forward.\n\n<p></p><hr/>\n<em>2013-Oct-01 14:51:01 by sfiligoi:</em> <br/>\n\nWhat are the plans for this?\n\n<p>Is the target version of 8.1.2 just a placeholder, or the real target?\n\n</p><p>Thanks,\n  Igor\n\n</p><p></p><hr/>\n<em>2013-Oct-01 15:19:56 by wenger:</em> <br/>\n\n8.1.2 is probably not realistic at this point...\n\n<p></p><hr/>\n<em>2013-Oct-31 15:17:34 by wenger:</em> <br/>\n\n<strong class=\"two\">DESIGN REVIEW</strong>\n\n<p></p><ul>\n<li>I think we probably need to deal with <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4024\" onclick=\"get_ticket_and_populate_wrapper('4024'); return false;\" title=\"Problems with DAG node priority implementation\">#4024</a></span> before we finish fixing\nthis up.  In particular, making\n</li></ul>\n\n<p></p><pre>  node prio = max(explicit node prio, all parent node prios) + DAG prio\n</pre>\n\n<p>instead of\n\n</p><p></p><pre>  node prio = max(explicit node prio, all parent node prios, DAG prio)\n</pre>\n\n<p>would, I think, make it easier to keep things consistent.\n\n</p><p></p><ul>\n<li>In general, GregT and I think the current implementation is more\ncomplex than necessary.  We'd really like to avoid changes to the negotiator, and we don't understand why Nathan did things the way he did.\n\n<p></p></li><li>We need to make the desired behavior explicit.  The assumption seems\nto be that a change in DAGMan's priority will cause the same <strong>relative</strong>\nchange in the priorities of all node jobs, but this isn't explicit in\nthe design doc.  Also, I assume we want the same priority change to\naffect not-yet-submitted node jobs, but that's not discussed.\nWe need to specify the behavior in recovery mode and when running\na rescue DAG -- will the previous priority changes be re-effected in\nthose cases?\n\n<p></p></li><li>What about how this interacts with the existing priority scheme?\nIt looks like, in the current implementation of the code, doing a\ncondor_prio on DAGMan will only affect the priorities of not-yet-submitted\nnode jobs if the new DAGMan priority is higher than the job's existing\npriority.  But for already-submitted jobs, it looks like the relative\npriority change will happen to <strong>all</strong> jobs.\n\n<p></p></li><li>What if you <strong>decrease</strong> DAGMan's priority?  What effect should that\nhave?\n\n<p></p></li><li>What about how this interacts with sub-DAG and sub-DAG node priorities?\n\n<p></p></li><li>I don't understand the reason for doing\n</li></ul>\n\n<p></p><pre>  condor_qedit &lt;Job Id&gt; JobPrioIncrement &lt;integer&gt;\n</pre>\n\n<p>instead of just\n\n</p><p></p><pre>  condor_prio -p priority | +value | -value &lt;job id&gt;\n</pre>\n\n<p>It seems more natural for the user to change the DAG's priority with\ncondor_prio, just like any other job.  And if we just used condor_prio\nwe'd avoid the race condition described in the design document.\n\n</p><p></p><ul>\n<li>Why does the shadow need to be involved?\n\n<p></p></li><li>Assuming DAGMan finds out about priority changes to itself by reading\nits own log, I think that the events from the DAGMan log should be kept\nseparate from the events from the node job log(s).  In other words,\nthe DAGMan log should be read by a separate <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ReadMultipleUserLogs\" title=\"Read Multiple User Logs\">ReadMultipleUserLogs</a></span>\nobject.  That would avoid any ambiguity about whether a priority change\nevent belonged to DAGMan itself or to a child job.\n\n<p></p></li><li>DAGMan <strong>should</strong> truncate its own log if not running in recovery mode\n(maybe it should also avoid truncating its log if it's running a rescue\nDAG).  (So we don't re-do old priority changes that are probably not\nrelevant to the current run.)\n\n<p></p></li><li>Instead of running condor_qedit (or condor_prio) on the node jobs,\nwe should just directly make a connection to the schedd like we already\ndo to put the workflow status info into DAGMan's classad.  Note:  the\n\"Changing job attribute\" event is written by the schedd, so bypassing the\ncondor_prio command shouldn't cause any problems.\n\n<p></p></li><li>This code:\n</li></ul>\n\n<p></p><pre>  if(node-&gt;_hasNodePriority &amp;&amp; node-&gt;hasNodePriority &gt; _defaultPriority){\n</pre>\n\n<p>looks wrong to me.  I think it should be:\n\n</p><p></p><pre>  if(node-&gt;_hasNodePriority &amp;&amp; (node-&gt;_nodePriority &gt; _defaultPriority)){\n</pre>\n\n<p></p><ul>\n<li>In Dag::StartNode() it looks like you can get the priority set twice\nfor a given node (in other words, two -priority arguments).\n</li></ul>\n\n<p></p><hr/>\n<em>2013-Nov-01 14:17:15 by wenger:</em> <br/>\n\nSome high-level properties I think we should maintain for this:\n\n<p></p><ul>\n<li>Submitting a DAG at a given priority, and submitting it at priority 0 and immediately changing it to the given priority should have the same effect.\n\n<p></p></li><li>Increasing a DAG's priority and then decreasing it back to the previous value should result in all nodes having their original priorities.\n\n<p></p></li><li>Changing the DAG's priority should have the same effect on submitted and not-yet-submitted nodes.\n</li></ul>\n\n<p></p><hr/>\n<em>2013-Nov-04 12:33:13 by wenger:</em> <br/>\n\n<strong class=\"two\">DESIGN REVIEW</strong>\n\n<p>My overall recommendation at this point is to first deal with <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4024\" onclick=\"get_ticket_and_populate_wrapper('4024'); return false;\" title=\"Problems with DAG node priority implementation\">#4024</a></span> and then re-implement this from scratch (or at least mostly from scratch).\n\n</p><p></p><hr/>\n<em>2013-Nov-06 11:17:43 by wenger:</em> <br/>\n\nOkay, part of implementing this might be to add -constraint to condor_prio (we already have a ticket for that: <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=803\" onclick=\"get_ticket_and_populate_wrapper('803'); return false;\" title=\"condor_prio doesn't support -constraint\">#803</a></span>).\n\n<p></p><hr/>\n<em>2013-Nov-06 11:22:03 by wenger:</em> <br/>\n\nHmm -- need to check whether priority changes get written to the log at all.  (See <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=3827\" onclick=\"get_ticket_and_populate_wrapper('3827'); return false;\" title=\"Scalability problems when condor_qedit'ing many jobs\">#3827</a></span>).\n\n<p></p><hr/>\n<em>2014-Jan-15 17:44:23 by wenger:</em> <br/>\n\nHmm -- I think Igor told me at one point that he doesn't like having a max() function embedded in the priority scheme.  And the more I delve into it, the more I agree (I'm working on <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=4102\" onclick=\"get_ticket_and_populate_wrapper('4102'); return false;\" title=\"Complete rescue DAGs have incorrect node priorities\">#4102</a></span> right now).  Having a max() function introduces difficult behaviors (e.g., sometimes the priority you set matters and sometimes it doesn't), and also a lot of special-case code that does different things according to whether a priority has been explicitly set or not.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4024\" onclick=\"get_ticket_and_populate_wrapper('4024'); return false;\" title=\"Problems with DAG node priority implementation\">#4024</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nProblems with DAG node priority implementation</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/723/Priority+Changes+through+DAGMan.docx\">Priority Changes through DAGMan.docx</a>\n21309 bytes added by nwp on 2013-May-02 18:46:18 UTC.\n<br/>\nDesign document for changing priorities through dagman<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-May-02 14:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35587\">[35587]</a></span>: Add comments and fixups <span class=\"ticket\"><a class=\"reviewdesign\" href=\"/tickets?ticket=3389\" onclick=\"get_ticket_and_populate_wrapper('3389'); return false;\" title=\"DAGMan should honor prio changes\">#3389</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-May-01 22:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35581\">[35581]</a></span>: Create a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobPrioIncrement\" title=\"Job Prio Increment\">JobPrioIncrement</a></span> <span class=\"ticket\"><a class=\"reviewdesign\" href=\"/tickets?ticket=3389\" onclick=\"get_ticket_and_populate_wrapper('3389'); return false;\" title=\"DAGMan should honor prio changes\">#3389</a></span> Use <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobPrioIncrement\" title=\"Job Prio Increment\">JobPrioIncrement</a></span> in the negotiator Use <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobPrioIncrement\" title=\"Job Prio Increment\">JobPrioIncrement</a></span> in DAGMan Write an affirmative message Add a debug schedd message Look for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobPrio\" title=\"Job Prio\">JobPrio</a></span> event Increment the priority Try to fix use of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobPrioIncrement\" title=\"Job Prio Increment\">JobPrioIncrement</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Apr-09 15:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35366\">[35366]</a></span>: Never truncate the log for the dagman job <span class=\"ticket\"><a class=\"reviewdesign\" href=\"/tickets?ticket=3389\" onclick=\"get_ticket_and_populate_wrapper('3389'); return false;\" title=\"DAGMan should honor prio changes\">#3389</a></span> Add eventSource to ULogEvent structure We don't care about clusterId of job. Should not check cluster, just check event source  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Apr-09 08:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35353\">[35353]</a></span>: Release log for self <span class=\"ticket\"><a class=\"reviewdesign\" href=\"/tickets?ticket=3389\" onclick=\"get_ticket_and_populate_wrapper('3389'); return false;\" title=\"DAGMan should honor prio changes\">#3389</a></span> Use the destructor intelligently Do not execute priority change all the time. Make sure it is a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobPrio\" title=\"Job Prio\">JobPrio</a></span> event. Eliminate extra variable  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Apr-08 14:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=35347\">[35347]</a></span>: Priority changes to DAGMan reflected in jobs submitted by DAGMan <span class=\"ticket\"><a class=\"reviewdesign\" href=\"/tickets?ticket=3389\" onclick=\"get_ticket_and_populate_wrapper('3389'); return false;\" title=\"DAGMan should honor prio changes\">#3389</a></span>  (By Nathan W. Panike )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2014-May-19 16:43", "status": "reviewdesign", "created": "2012-Dec-18 17:32", "fixed_version": "2012-Dec-18 17:32", "broken_version": "v070900", "priority": "3", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "#4198", "creator": "sfiligoi", "rust": "s8242", "customer_group": "cms", "visibility": "public", "notify": "isfiligoi@ucsd.edu wenger@cs.wisc.edu tstclair@redhat.com gthain@cs.wisc.edu", "due_date": "20130301"}