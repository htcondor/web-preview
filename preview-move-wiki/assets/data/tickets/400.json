{"id": 400, "title": "Ticket #400: Feature: Set NUM_CPUS and MEMORY based on default value", "description": "<blockquote>\nIt would be nice if one could specify NUM_CPUS and MEMORY as an expression relative to the default value.  Why?  To take a real example based on CS architecture group needs, maybe you want to add a \"whole-machine\" slot that can hog all of the CPUs and the RAM.  You use a clever combination of START, SUSPEND, PREEMPT, and KILL to ensure that the whole-machine slot and the remaining slots are mutually exclusive.  Now you could say (assuming a 2 CPU machine with 2 GB of ram)\n\n<p></p><div class=\"code\">\n<pre class=\"code\">NUM_SLOTS=3\nRAM=4*1024\nNUM_CPUS=4\nSLOT_TYPE_1 = cpus=50%, ram=50%\nNUM_SLOTS_TYPE_1 = 1\n</pre></div>\n\n\n<p>However, this fails if you add memory to the machine, or try to use this policy for a pool with mixed numbers of CPUs per machine.  A policy would be:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">NUM_SLOTS=3\nRAM=$(ACTUAL_RAM)*2\nNUM_CPUS=$(ACTUAL_CPUS)*2\nSLOT_TYPE_1 = cpus=50%, ram=50%\nNUM_SLOTS_TYPE_1 = 1\n</pre></div>\n\n\n<p>Assuming ACTUAL_RAM and ACTUAL_CPUS existed and worked, this would Just Work even on a mixed pool.  Policy expressions based on Memory would work correctly.\n\n</p><p>It may be worth considering <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=246\" onclick=\"get_ticket_and_populate_wrapper('246'); return false;\" title=\"New MachineAd attribute: DetectedCPUs\">#246</a></span>, which calls for DetectedCPUs to be added to Machine <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span></p></blockquote>", "remarks": "<blockquote>\n<em>2009-Apr-21 16:37:11 by adesmet:</em> <br/>\n\nAnother option would be to allow the following:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">SLOT_TYPE_1 = cpus=100%, ram=100%\nSLOT_TYPE_2 = cpus=100%/($(NUM_SLOTS)-1), ram=100%/($(NUM_SLOTS)-1)\nNUM_SLOTS_TYPE_1 = 1\nNUM_SLOTS_TYPE_2 = $(NUM_SLOTS)-1\n</pre></div>\n\n\n<p>You'd need to teach the SLOT_TYPE code to accept expressions in SLOT_TYPE_* and NUM_SLOTS_TYPE_*.\n\n</p><p>You would also need to allow overcommiting resources.  Currently it doesn't, and this is a useful error for debugging bad configurations.  We can issue a warning of overcommision on startup, but in reality no one will ever notice.  Currently Condor does EXCEPT.\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\"># Currently Condor detects this mistake with a fatal error.\nNUM_CPUS=2\nSLOT_TYPE_1 = cpus=2\nSLOT_TYPE_2 = cpus=2\n</pre></div>\n\n\n<p></p><hr/>\n<em>2009-Dec-17 17:10:30 by matt:</em> <br/>\n\nAs of 7.4.0, DETECTED_CORES/MEMORY is available, and many config param values are evaluated <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> expressions. This gets you RAM=$(DETECTED_MEMORY)*2, but not SLOT_TYPE1=cpus=$(DETECTED_CORES).\n\n<p>I'd consider this resolved. If you agree, please resolve it.\n\n</p><p></p><hr/>\n<em>2009-Dec-17 17:37:10 by adesmet:</em> <br/>\n\nWorks for me!</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2010-Feb-01 11:38", "status": "resolved", "created": "2009-Apr-21 16:22", "fixed_version": "2009-Apr-21 16:22", "broken_version": "", "priority": "4", "subsystem": "Daemons", "assigned_to": "adesmet", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu", "due_date": ""}