{"id": 5724, "title": "Ticket #5724: Avoid DAGMan confusion caused by node jobs going on hold", "description": "<blockquote>\nMiron feels that node jobs going on hold doesn't really fit the model of DAGMan controlling a workflow (and this is also causing problems for Pegasus).\n\n<p>Several ideas:\n</p><ol>\n<li>DAGMan passes a flag to the schedd that says, \"Never put this job on hold\".\n</li><li>If a job goes on hold DAGMan considers this a failure and removes the job (which is then considered a failure).\n</li><li>Each hold event counts as a retry towards the node's allowed retry count.\n</li><li>If DAGMan gets to a point where all queued node jobs are on hold, it should generate a DAG abort.\n</li><li>If DAGMan gets to a point where all queued node jobs are on hold, it should put itself on hold.\n</li></ol>\n\n<p>Note that, in the default case of having no retries, option 3 would be the same as option 2.\n\n</p><p>Also, option 3 could be combined with option 4 or 5.\n\n</p><p>There seems to be agreement that whatever behavior we decide on should be optional; but not sure whether it should be opt-in or opt-out.\n\n</p><p>Also note that we already have the config knob DAGMAN_MAX_JOB_HOLDS, which defaults to 100.  Setting that to 1 would be the same thing as option 2.\n\n</p><p>(DAGMan already logs the hold reason to the dagman.out file, although maybe it should also log the reason code and reason sub-code.)</p></blockquote>", "remarks": "<blockquote>\n<em>2016-Jun-14 15:13:15 by wenger:</em> <br/>\n\nJust talked to Miron about this, and (to start with, at least) he wants to implement option number 4 (once the DAG gets to a point where it can't make any progress unless jobs are released, the DAG will abort).\n\n<p>I need to think a little more about this, but initially I think that if all jobs in the queue are on hold, and there are no ready jobs we are in that state.  (Hmm -- what about throttles?  I need to think about whether there's some way throttles could goof up the calculation of whether we're \"stuck\".)\n\n</p><p>Also, multi-proc node jobs may make this a little tricky.\n\n</p><p>Probably have a new config knob to opt out of this behavior.\n\n</p><p></p><hr/>\n<em>2016-Jun-20 10:43:31 by wenger:</em> <br/>\n\nI asked for responses to the \"abort DAG if stuck\" idea on htcondor-users, and the response was mixed.  Some people really liked it, but some people thought it would be too \"hair-trigger\".  So I proposed that we have a timeout: abort the DAG if it's been stuck for more than N seconds, where N is configurable.  Still waiting for responses on that...\n\n<p></p><hr/>\n<em>2016-Jun-28 13:24:53 by wenger:</em> <br/>\n\nThe really important thing with this is that we avoid \"false alarms\".  The part of that that's going to be the trickiest is making sure we have a correct count of the total number of job procs (belonging to the DAG) in the queue.  (We don't count that now.)\n\n<p>Anyhow, I'm thinking that we should have some tests that try to hit the trickiest boundary conditions for this, like having a multi-proc cluster where some procs are running, some go on hold, and then one fails and the cluster gets removed.  (I'm thinking that we could pass the CondorID to the actual test executable, and have it behave differently depending on the proc ID.)\n\n</p><p>I guess we should also have a test to make sure that throttled and deferred scripts don't trigger a \"stuck\" alarm.\n\n</p><p></p><hr/>\n<em>2016-Jul-21 09:13:42 by wenger:</em> <br/>\n\nJust did a build/test of what I have so far, and a bunch of tests have failed.\n\n<p>These failed across all platforms:\n</p><ul>\n<li>jobstate_log\n</li><li>noop_node\n</li><li>rescue_recov\n</li></ul>\n\n<p>This failed on some platforms:\n</p><ul>\n<li>job_held\n</li></ul>\n\n<p></p><hr/>\n<em>2016-Jul-24 14:54:35 by wenger:</em> <br/>\n\nFor test, have both single- and multiple-proc clusters.  Have some jobs put themselves on hold (pass $(JOB) as an argument), check that non-held jobs finish before DAG is aborted.  (For multi-proc clusters, one proc should be held, others should be expected to finish.)\n\n<p></p><hr/>\n<em>2017-Apr-12 14:30:55 by wenger:</em> <br/>\n\nA note from an old email from Miron:  he wants the timeout to be specified in minutes, not seconds...\n\n<p></p><hr/>\n<em>2017-Jun-01 13:22:10 by wenger:</em> <br/>\n\nMy recollection is that this pretty much works, except if you have a final node.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=5790\" onclick=\"get_ticket_and_populate_wrapper('5790'); return false;\" title=\"Node jobs submitted on hold goof up DAGMan's held job count\">#5790</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nNode jobs submitted on hold goof up DAGMan's held job count</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Jan-19 18:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50020\">[50020]</a></span>: Gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=5724\" onclick=\"get_ticket_and_populate_wrapper('5724'); return false;\" title=\"Avoid DAGMan confusion caused by node jobs going on hold\">#5724</a></span>: In the process of adding new tests for the \"DAG is stuck\" functionality; both the tests and the implementation still need some work...  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-21 11:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49855\">[49855]</a></span>: Gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=5724\" onclick=\"get_ticket_and_populate_wrapper('5724'); return false;\" title=\"Avoid DAGMan confusion caused by node jobs going on hold\">#5724</a></span>: Various temporary mods relating to checking the DAG status under different conditions.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Dec-20 16:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=49851\">[49851]</a></span>: Gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=5724\" onclick=\"get_ticket_and_populate_wrapper('5724'); return false;\" title=\"Avoid DAGMan confusion caused by node jobs going on hold\">#5724</a></span>: Added \"DAG_STATUS_STUCK\" to _dag_status_names, which fixes core dump in job_dagman_stuck test; fixed that test so that it succeeds (final node now fails).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Aug-02 18:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48929\">[48929]</a></span>: Gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=5724\" onclick=\"get_ticket_and_populate_wrapper('5724'); return false;\" title=\"Avoid DAGMan confusion caused by node jobs going on hold\">#5724</a></span>: Made some improvements to this, but things are goofed up if the DAG has a final node.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-25 16:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48845\">[48845]</a></span>: Gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=5724\" onclick=\"get_ticket_and_populate_wrapper('5724'); return false;\" title=\"Avoid DAGMan confusion caused by node jobs going on hold\">#5724</a></span>: Jeez -- forgot to git add the run file for the job_dagman_stuck test before the previous commit...  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-25 16:45</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48844\">[48844]</a></span>: Gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=5724\" onclick=\"get_ticket_and_populate_wrapper('5724'); return false;\" title=\"Avoid DAGMan confusion caused by node jobs going on hold\">#5724</a></span>: Changed DAGMAN_MAX_STUCK_TIME default to 60 minutes to be more conservative; added run file for job_dagman_stuck test and added that to the test lists. (Unrelated) Fixed typo in job_dagman_rm run file.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-24 16:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48836\">[48836]</a></span>: Gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=5724\" onclick=\"get_ticket_and_populate_wrapper('5724'); return false;\" title=\"Avoid DAGMan confusion caused by node jobs going on hold\">#5724</a></span>: Added DAGMAN_MAX_STUCK_TIME config knob; added DAG to test this functionality (we don't have the run file for the test yet).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-22 18:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48835\">[48835]</a></span>: Gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=5724\" onclick=\"get_ticket_and_populate_wrapper('5724'); return false;\" title=\"Avoid DAGMan confusion caused by node jobs going on hold\">#5724</a></span>: Added a timeout (currently fixed) for the stuck test; pending nodes message now lists number of procs queued and held.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jul-19 12:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48800\">[48800]</a></span>: Gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=5724\" onclick=\"get_ticket_and_populate_wrapper('5724'); return false;\" title=\"Avoid DAGMan confusion caused by node jobs going on hold\">#5724</a></span>: Added a DAG for manually testing the \"stuck\" state; added count of total number of <strong>procs</strong> submitted, so multi-proc clusters don't goof up the \"stuck\" check.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-28 10:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48676\">[48676]</a></span>: Gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=5724\" onclick=\"get_ticket_and_populate_wrapper('5724'); return false;\" title=\"Avoid DAGMan confusion caused by node jobs going on hold\">#5724</a></span>: Initial \"stuck\" test -- doesn't work right for multi- proc clusters; needs timeout.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Jun-15 12:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48661\">[48661]</a></span>: Gittrac <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=5724\" onclick=\"get_ticket_and_populate_wrapper('5724'); return false;\" title=\"Avoid DAGMan confusion caused by node jobs going on hold\">#5724</a></span>: Cleaned up job_dagman_job_held test.  (By Kent Wenger )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-May-14 06:31", "status": "stalled", "created": "2016-Jun-10 16:22", "fixed_version": "2016-Jun-10 16:22", "broken_version": "v080505", "priority": "2", "subsystem": "Dag", "assigned_to": "coatsworth", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu, tannenba@cs.wisc.edu, miron@cs.wisc.edu, vahi@isi.edu, coatsworth@cs.wisc.edu", "due_date": ""}