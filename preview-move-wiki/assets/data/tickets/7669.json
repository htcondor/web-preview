{"id": 7669, "title": "Ticket #7669: Add configuration template to generate a secure personal condor", "description": "<blockquote>\nIt seems like the existing <code>use ROLE: PERSONAL</code> doesn't quite generate the right security configuration for an out-of-the-box-secure personal condor.\n\n<p>In particular, it does things like set <code>ALLOW_ADMINISTRATOR</code> to <code>$(authuser)@$(CONDOR_HOST)</code>, but doesn't set <code>CONDOR_HOST</code>, so it's very easy for someone who doesn't know anything (like me) to set <code>CONDOR_HOST</code> to a bad value (or just not set it at all) and be confused.\n\n</p><p>There is probably some right combination of existing roles to make this work correctly, but it should be easier than it is: a single macro that just does the right thing. At the very least, we should settle on a correct, uniform group of settings that should work on most systems and document them in the manual.\n\n</p><p>An extra layer of complexity here is that I'd like to use this macro to set up a personal condor with a new config file on a system that has a bare HTCondor install on it, with a default existing system <code>condor_config</code> file that I need to inherit from (by running <code>condor_config_val -write:up</code> or <code>condor_config_val -summary</code>). So this macro should be able to \"overlay\" on an existing config using the default <code>use SECURITY: HOST_BASED</code>.\n\n</p><p>If someone is feeling brave: the reason I need to inherit the system config like this is because there are platform-specific config macros I need, namely the kind of things in this block:\n</p><div class=\"code\">\n<pre class=\"code\">RELEASE_DIR = /usr\nLIB = $(RELEASE_DIR)/lib/condor\nINCLUDE = $(RELEASE_DIR)/include/condor\nLIBEXEC = $(RELEASE_DIR)/lib/condor/libexec\nSHARE = $(RELEASE_DIR)/share/condor\nMAIL = /usr/bin/mail\nAUTH_SSL_SERVER_CAFILE = /etc/ssl/certs/ca-certificates.crt\nAUTH_SSL_CLIENT_CAFILE = /etc/ssl/certs/ca-certificates.crt\nAUTH_SSL_SERVER_CERTFILE = /etc/ssl/certs/localhost.crt\nAUTH_SSL_SERVER_KEYFILE = /etc/ssl/private/localhost.key\n</pre></div>\n\n... so if I didn't need to do that, we wouldn't need the overlay behavior.</blockquote>", "remarks": "<blockquote>\n<em>2020-May-29 11:22:27 by tlmiller:</em> <br/>\n\nMetronome, IIRC, solves this exact problem by knowing where all of the example configuration files are and using those as the base, instead.\n\n<p></p><hr/>\n<em>2020-May-29 11:23:26 by tlmiller:</em> <br/>\n\nTo elaborate: the example configs may still set things you don't want, but you know what they are and can compensate for those exact and specific things.\n\n<p></p><hr/>\n<em>2020-Jun-01 11:16:43 by bbockelm:</em> <br/>\n\nA number of things here are platform specific -- it seems the better approach would be that, for native packages, all config knobs should be \"correct\" (with respect to the native build) and baked into the code, not the condor_config.\n\n<p>That is, if you install from the RPM on RHEL-like platforms, the file <code>/etc/condor/condor_config</code> should be empty.  Similarly, for installing from a tarball, RELEASE_DIR could be autodetected (minimally by the master, which could override the config of subprocesses via environment variables).\n\n</p><p></p><hr/>\n<em>2020-Jun-05 14:52:35 by karpel:</em> <br/>\n\nIdea from a brief discussion in team meeting: the platform-specific config options are the paths to binaries. (JTK: I think also the paths to cert files?). HTCondor could know the names of those knobs and provide <code>condor_config_val -write:platform</code>, which filters out only the known platform-dependent knobs.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=7684\" onclick=\"get_ticket_and_populate_wrapper('7684'); return false;\" title=\"Easy way to get platform-specific config via client tool\">#7684</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nEasy way to get platform-specific config via client tool</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2020-Nov-09 12:18", "status": "new", "created": "2020-May-29 10:46", "fixed_version": "2020-May-29 10:46", "broken_version": "", "priority": "3", "subsystem": "Security", "assigned_to": "zmiller", "derived_from": "#6973", "creator": "karpel", "rust": "", "customer_group": "other", "visibility": "public", "notify": "karpel@wisc.edu, zmiller@cs.wisc.edu", "due_date": ""}