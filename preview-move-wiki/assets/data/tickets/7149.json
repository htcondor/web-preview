{"id": 7149, "title": "Ticket #7149: UDP packet starvation", "description": "<blockquote>\nOn each pass through the main event loop in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span>, the daemon will read one packet from the UDP command port. If that packet completes a CEDAR message, then the appropriate command handler will be called. In a busy daemon receiving many UDP messages, those messages can easily get starved. We should allow <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> to consume many UDP packets per event loop pass.\n\n<p>We believe this contributed to a recent partial meltdown of the CMS global pool. On busy schedds with a lot of running jobs, the schedd started killing many of the shadows and starters on the belief they were hung. The logs indicated those daemons were healthy. It appears the schedd fell behind in receiving DC_CHILDALIVE messages from its children (sent via UDP).</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Jul-12 12:01:02 by jfrey:</em> <br/>\n\nUDP starvation is even worse than I thought. On my test machine, the DC_CHILDALIVE message is being fragmented by CEDAR into two packets. Each pass through DaemonCore's event pump reads a single packet, so it takes two passes to process each DC_CHILDALIVE message.\n\n<p></p><hr/>\n<em>2019-Aug-21 14:36:46 by jfrey:</em> <br/>\n\nToddT wondered if we could change this code to only read the UDP packets that were available when we started reading from the socket. That is, leave packets that arrive while we're looping unread (until the next pass through the main event loop). Otherwise, setting MAX_UDP_MSGS_PER_CYCLE=0 (i.e. read until there's no data available) can starve the rest of the event loop (imagine the top-level collector in CMS's global pool).\n\n<p>It appears there's no way to query the number of UDP packets in the kernel's receive buffers. The best you can get is the amount of kernel memory being used for queued packets. To implement Todd's idea, we'd have to have the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SafeSock\" title=\"Safe Sock\">SafeSock</a></span> count the number of bytes read from the socket across all CEDAR messages. Then the UDP dispatch loop in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> could monitor changes in that total.\n\n</p><p></p><hr/>\n<em>2019-Sep-05 12:22:10 by tannenba:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>The purpose of the patch was to dispatch X udp messages per pass through the event loop.\n\n</p><p>Two problems:\n\n</p><p></p><ol>\n<li>The patch <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/5f407822a2b16dff987b640f9bdceedd74840892\">[57403]</a></span> will not even attempt to read X messages until the main DaemonCore::Driver loop iterates enough to reassemble one message.  Suggest the code block that calls <code>handle_incoming_packet</code> in Driver() be removed and instead directly invokes the patched CallSocketHandler() method.  The CallSocketHandler() method will also need to be modified to not invoke <code>HandleReq()</code> before the while loop.\n\n<p></p></li><li>The patch <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/5f407822a2b16dff987b640f9bdceedd74840892\">[57403]</a></span> could loop potentially forever reading UDP fragments, since <code>msg_cnt</code> is not decremented until after a complete message is reassembled.  Suggest we introduce a \"fragment_count = msg_cnt * 20\" (years of careful research!) and the loop stops when either msg_cnt or fragment_count hits zero.\n</li></ol>\n\n<p></p><hr/>\n<em>2019-Sep-05 12:47:33 by jfrey:</em> <br/>\n\nSince 8.8.5 is being released today, and the problems identified in the code review are not regression bugs, the changes recommended in the code review will go into 8.8.6. See ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7244\" onclick=\"get_ticket_and_populate_wrapper('7244'); return false;\" title=\"Fix issues with UDP packet starvation from last release\">#7244</a></span></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7244\" onclick=\"get_ticket_and_populate_wrapper('7244'); return false;\" title=\"Fix issues with UDP packet starvation from last release\">#7244</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nFix issues with UDP packet starvation from last release</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-15 17:38</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/bcc5fa35e716334f949ccc5d5a1bbd954a49047e\">[57684]</a></span>: change default for MAX_UDP_MSGS_PER_CYCLE to 100. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7149\" onclick=\"get_ticket_and_populate_wrapper('7149'); return false;\" title=\"UDP packet starvation\">#7149</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-05 16:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/28843e27907fe937b1687fe6c6f34f8240d8b76b\">[57593]</a></span>: Added docs for config param MAX_UDP_MSGS_PER_CYCLE. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7149\" onclick=\"get_ticket_and_populate_wrapper('7149'); return false;\" title=\"UDP packet starvation\">#7149</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-05 16:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c5dfd1a4a600fad5b10beab2004d94d3c167c7ab\">[57592]</a></span>: Add several daemoncore knobs to the param table. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7149\" onclick=\"get_ticket_and_populate_wrapper('7149'); return false;\" title=\"UDP packet starvation\">#7149</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jul-11 15:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/5f407822a2b16dff987b640f9bdceedd74840892\">[57403]</a></span>: Read multiple UDP packets per <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> event loop pass. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7149\" onclick=\"get_ticket_and_populate_wrapper('7149'); return false;\" title=\"UDP packet starvation\">#7149</a></span> Add ability to read multiple UDP packets in the main Driver() loop. Keep receiving while there's data and at most MAX_UDP_MSGS_PER_CYCLE messages have been processed. The default is 1, the old behavior. The command handlers are dispatched\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Sep-05 13:46", "status": "resolved", "created": "2019-Jul-11 15:48", "fixed_version": "2019-Jul-11 15:48", "broken_version": "", "priority": "2", "subsystem": "Libs", "assigned_to": "jfrey", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "tannenba@cs.wisc.edu", "due_date": ""}