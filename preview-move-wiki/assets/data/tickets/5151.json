{"id": 5151, "title": "Ticket #5151: Exceptions are not recorded after hung shadow processes are killed", "description": "<blockquote>\nIf the schedd kills a shadow because it was hung, you see the following error messages:\n\n<p></p><div class=\"verbatim\">\n<pre>07/15/15 15:12:22 (pid:1363748) Shadow pid 1890816 successfully killed because it was hung.\n07/15/15 15:12:22 (pid:1363748) Shadow pid 1890816 died with signal 4 (Illegal instruction)\n</pre></div>\n\n\n<p>After this, the job stays in 'R' (I haven't figured out how long though).  No shadow is restarted - I suppose the lease eventually times out?\n\n</p><p>According to the code, the intent is to record a shadow exception and have the job exit.  However, here's the relevant code:\n\n</p><p></p><div class=\"verbatim\">\n<pre>                if ( daemonCore-&gt;Was_Not_Responding(pid) ) {\n&lt;snip/&gt;\n                        dprintf( D_ALWAYS,\n                                         \"%s pid %d successfully killed because it was hung.\\n\",\n                                         name, pid );\n                        status = JOB_EXCEPTION;\n                }\n\n&lt;snip/&gt;\n\n                if ( WIFEXITED(status) ) {\n&lt;snip/&gt;\n</pre></div>\n\n\n<p>For POSIX, WIFEXITED looks at the upper 8 bits.  Hence, WIFEXITED returns false and HTCondor interprets this a signal.  jobExitCode is not invoked and the job stays running.\n\n</p><p>I think we want to set:\n\n</p><p></p><div class=\"verbatim\">\n<pre>                        status = JOB_EXCEPTION &lt;&lt; 8;\n</pre></div>\n\n\n<p>This causes the job to exit and a shadow exception recorded.\n\n</p><p>Further, I don't understand the intent of the WIFSIGNALED branch of the conditional.  It seems to not update the job state.  Don't have the time to poke at it right now.\n\n</p><p>(I noticed this when a CMS schedd reported 7k jobs running but only 1k shadows.  According to git blame, this bug was introduced by tannenba in 1999.)</p></blockquote>", "remarks": "<blockquote>\n<em>2015-Jul-15 14:42:00 by jfrey:</em> <br/>\n\nI agree with the proposed change, but I can't replicate the behavior reported.\n\n<p>If the schedd isn't in the middle of a shutdown, then the shadow exiting via a signal should result in the job going to idle status. When I tried replicating this situation by sending a SIGKILL to the shadow, the schedd marked the job idle and attempted to reuse the claim to start a new job. That failed because the slot was still Claimed/Busy, so the schedd killed the claim.\n\n</p><p></p><hr/>\n<em>2015-Jul-16 22:22:13 by bbockelm:</em> <br/>\n\nI think you're right about jobs going back to running.  Even after we disabled timeouts for shadows, we still see massive issues with the wrong number of running jobs.  I think <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5158\" onclick=\"get_ticket_and_populate_wrapper('5158'); return false;\" title=\"Shadow launch queue woes.\">#5158</a></span> is to blame.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-22 16:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=45388\">[45388]</a></span>: Version history for hung shadow exit status bug. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5151\" onclick=\"get_ticket_and_populate_wrapper('5151'); return false;\" title=\"Exceptions are not recorded after hung shadow processes are killed\">#5151</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jul-21 11:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=45367\">[45367]</a></span>: Fix rewriting of hung shadow's exit status. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5151\" onclick=\"get_ticket_and_populate_wrapper('5151'); return false;\" title=\"Exceptions are not recorded after hung shadow processes are killed\">#5151</a></span> To treat a hung shadow like it exited with the JOB_EXCEPTION exit code, we need to left-shift the value 8 in the raw status value. Otherwise, it looks like the shadow exited via a signal.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Jul-22 16:24", "status": "resolved", "created": "2015-Jul-15 08:30", "fixed_version": "2015-Jul-15 08:30", "broken_version": "v080200", "priority": "4", "subsystem": "DaemonsSubmitNode", "assigned_to": "jfrey", "derived_from": "#5162", "creator": "bbockelm", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "", "due_date": ""}