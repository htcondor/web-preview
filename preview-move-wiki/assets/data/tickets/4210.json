{"id": 4210, "title": "Ticket #4210: Fear the reaper a bit. Don't reap while selecting", "description": "<blockquote>\nIn ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3992\" onclick=\"get_ticket_and_populate_wrapper('3992'); return false;\" title=\"Don't fear the reaper! Reaper events are being starved\">#3992</a></span>, we changed the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> event loop to invoke reaper handlers for all reaped child processes each time through the loop. We also moved where the reaper handlers are invoked, to between calling select() and examining the FDs that come up as ready (and calling handlers for them). The second change fouled up work fetch, and can probably cause other problems.\n\n<p>The problem with work fetch is that its reaper closes an FD that select indicated is ready and opens a new FD that gets the same FD number and registers it for selection. Then the main driver calls the handler for the new FD, which isn't ready. The startd ends up doing a blocking read on an FD with no data.\n\n</p><p>Here is a more detailed sequence of events:\n</p><ul>\n<li>Child process created for work fetch, pipes for stdout/err registered for read in select\n</li><li>Child exits and full data read from stdout/err pipes\n</li><li>select() called, indicates that stdout/err pipes are ready for read (because write ends are closed)\n</li><li>Reaper handling for child process occurs\n<ul>\n<li>Stdout/err pipes are closed\n</li><li>Create connected socket for starter to send updates to startd\n</li><li>Starter process created, inherits one end of socket\n</li><li>Other end of socket is registered for select (this has the same FD number as the stdout pipe closed above)\n</li></ul>\n</li><li>Handlers for FDs select indicated as ready are looked up\n</li><li>Read handler for socket to starter is called\n<ul>\n<li>handler does blocking read on socket, but no data is available\n</li></ul>\n</li></ul>\n\n<p>Before the starter will send any data on the update socket, it tries to connect to the startd's command port to send a DC_CHILDALIVE message. This results in a deadlock. But it's only temporary, as the starter will timeout on its connection to the startd and eventually exit because it can't send the message. That that point, the startd's blocking read returns failure due to the other end of the socket closing. But this takes many minutes.\n\n</p><p>In ticket <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=4008\" onclick=\"get_ticket_and_populate_wrapper('4008'); return false;\" title=\"fetch work difficult to configure with partitionable slots\">#4008</a></span>, we added a timeout to the blocking read in the startd. This treated the symptom of this problem, but not the cause. The fix is to undo the change of when reaper handlers are invoked.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-13 10:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39609\">[39609]</a></span>: minor version history item edit <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4210\" onclick=\"get_ticket_and_populate_wrapper('4210'); return false;\" title=\"Fear the reaper a bit. Don't reap while selecting\">#4210</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-12 13:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39404\">[39404]</a></span>: Docs for startd blocking when launching a Work Fetch job. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4210\" onclick=\"get_ticket_and_populate_wrapper('4210'); return false;\" title=\"Fear the reaper a bit. Don't reap while selecting\">#4210</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Feb-12 13:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=39403\">[39403]</a></span>: Don't call reapers immediately after select() in the main event loop. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4210\" onclick=\"get_ticket_and_populate_wrapper('4210'); return false;\" title=\"Fear the reaper a bit. Don't reap while selecting\">#4210</a></span> It's a bad idea to call reaper handlers after select() but before looking up handlers for any FDs that are ready. Reapers can close FDs and open new FDs that get the same numbers. We can then end up calling a handler for an FD\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-Feb-12 13:55", "status": "resolved", "created": "2014-Feb-12 13:38", "fixed_version": "2014-Feb-12 13:38", "broken_version": "v080102", "priority": "3", "subsystem": "Daemons", "assigned_to": "jfrey", "derived_from": "#3992", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}