{"id": 2795, "title": "Ticket #2795: spawn glexec less by keeping a helper process around", "description": "<blockquote>\nAs you well know, Condor calls glexec way too many times;\nif I remember correctly, it is 3 times at startup and 3 times at job\ntermination.\n\n<p>The job termination invocations are actually quite problematic, since glexec\nmay deny the request (for multiple reasons),\nthus preventing Condor from controlling the job it started.\n\n</p><p>If I understand correctly the reasoning behind this, it is due to the need\nfor Condor\nto do operations on behalf of the user, while making (reasonably) sure the\nuser does not interfere with this.\n\n</p><p>However, I and the NIKHEF guys may have found the solution;\nit is quite easy to make a process protected from other processes of the\nsame user, modulo getting signals from them.\n(see below)\nSo a malicious user would not be able to attack anything Condor was to run\nalongside the job processes (with the job UID);\nat best, it could hard kill it.\nIn which case, you either restart the companion process and continue as if\nnothing happened, or kill the job, as you are doing today.\nThe only edge case is when you cannot call glexec anymore... but this should\nbe rare and it is not under the attacker control.\n\n</p><p>Said that, what I envision is for you to start this companion process as\nfirst thing after you get the user proxy to the WN,\nkeep an open connection with it, and do everything you currently do when\ninvoking glexec,\nwith the exception of actually starting the user job (you need to create the\nenv, want to know when it finishes, etc.)\n\n</p><p>This would reduce the typical number of calls to glexec to exactly 2 per\nuser job;\nthis could rise a little bit in case the user attacks this companion\nprocess, but should not be worse than what we have today.\n\n</p><p>Moreover, you are guaranteed to always be able to control the job you\nstarted.\n(modulo the edge case described above)\n\n</p><p>when starting a unreadable executable, by default you cannot attach\nptrace and /proc/&lt;pid&gt;/* is root-owned.\nsee man 2 prctl, in particular PR_SET_DUMPABLE\nIt claims to be there since 2.3.20...</p></blockquote>", "remarks": "<blockquote>\n<em>2012-Jan-30 15:16:55 by bbockelm:</em> <br/>\n\nHi Zach,\n\n<p>How would this compare with, say, using linger mode?  In glexec 0.9, linger mode allows you to pass files between pilot/payload as well as signals.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2012-Jan-30 15:43:46 by zmiller:</em> <br/>\n\nlinger mode may well solve the problem, as long as it can do everything to the payload that condor needs.  at the moment, i believe condor does not play well with linger mode, but of course that should be addressed.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2012-Jan-30 15:43", "status": "new", "created": "2012-Jan-30 14:52", "fixed_version": "2012-Jan-30 14:52", "broken_version": "", "priority": "4", "subsystem": "Security", "assigned_to": "zmiller", "derived_from": "#2753", "creator": "zmiller", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "", "due_date": ""}