{"id": 6919, "title": "Ticket #6919: On recycle, shadow can log new job's events under old job's id", "description": "<blockquote>\nIN2P3 reported an issue where the DAGMan event log occasionally shows a certain job ID executing twice, although the shadow and schedd logs clearly show the same job ID only running once.\n\n<p>This happens when the shadow is recycled. The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=BaseShadow\" title=\"Base Shadow\">BaseShadow</a></span> object is deleted and a new one created. But the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WriteUserLog\" title=\"Write User Log\">WriteUserLog</a></span> data member (named uLog) is static, so it's left in place. If the new job doesn't require any event logging, then the initialization code for the new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=BaseShadow\" title=\"Base Shadow\">BaseShadow</a></span> object also leaves <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WriteUserLog\" title=\"Write User Log\">WriteUserLog</a></span> object alone. This results in events for the new job being written to the old job's event logs under the old job's id.\n\n</p><p>A comment says that the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WriteUserLog\" title=\"Write User Log\">WriteUserLog</a></span> object is static so that the exception handler can use it to write a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ShadowException\" title=\"Shadow Exception\">ShadowException</a></span> event. We can make the object non-static and have the exception logging code use the existing pointer myshadow_ptr to find the object. If myshadow_ptr is NULL, then it could write an error to the daemon log instead (there would be no current job to log an event for).</p></blockquote>", "remarks": "<blockquote>\n<strong>CODE_REVIEW</strong> : change looks good. version history needed.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Apr-01 14:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56479\">[56479]</a></span>: Docs for wrong job id in event log bug fix. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6919\" onclick=\"get_ticket_and_populate_wrapper('6919'); return false;\" title=\"On recycle, shadow can log new job's events under old job's id\">#6919</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-19 16:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56219\">[56219]</a></span>: On recycle, shadow can log new job's events under old job's id. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6919\" onclick=\"get_ticket_and_populate_wrapper('6919'); return false;\" title=\"On recycle, shadow can log new job's events under old job's id\">#6919</a></span> When the shadow is recycled, it deletes all of the data structures for the previous job and creates new ones for the next job. The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WriteUserLog\" title=\"Write User Log\">WriteUserLog</a></span> object doesn't get recreated, since it's a static member of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=BaseShadow\" title=\"Base Shadow\">BaseShadow</a></span>. If the next job\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Apr-01 14:41", "status": "resolved", "created": "2019-Feb-19 14:33", "fixed_version": "2019-Feb-19 14:33", "broken_version": "", "priority": "2", "subsystem": "DaemonsSubmitNode", "assigned_to": "jfrey", "derived_from": "", "creator": "coatsworth", "rust": "", "customer_group": "other", "visibility": "public", "notify": "coatsworth@cs.wisc.edu, jfrey@cs.wisc.edu", "due_date": ""}