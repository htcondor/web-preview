{"id": 2216, "title": "Ticket #2216: IPv6: IP/hostname lookup problems when hostname maps to localhost", "description": "<blockquote>\nObserved behavior in daemons that are a child of the master. This is with D_ALL:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">06/06/11 17:42:01 (fd:6) (pid:23161) Setting up command socket\n06/06/11 17:42:01 (fd:6) (pid:23161) CONDOR_INHERIT: \"23114  0 9*6*0*0*0*0***1**0*0* 10*2*0*0*0*0***0** 0\"\n06/06/11 17:42:01 (fd:6) (pid:23161) Parent PID = 23114\n06/06/11 17:42:01 (fd:6) (pid:23161) Parent Command Sock = 0\n06/06/11 17:42:01 (fd:6) (pid:23161) ERROR \"Daemoncore: Can only inherit SafeSock or ReliSocks, not 9 (57)\" at line 8890 in file /home/pmackinn/repos/uw/condor/CONDOR_SRC/src/condor_daemon_core.V6/daemon_core.cpp\n</pre></div>\n\n\n<p>There is a sinful string (IP address) missing in the environment variable CONDOR_INHERIT; it should be between 23114 (the pid) and 0 (a list length, usually 0)\n\n</p><p>This seemed related to <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2205\" onclick=\"get_ticket_and_populate_wrapper('2205'); return false;\" title=\"PERMISSION DENIED to unauthenticated@unmapped from host &lt;garbage&gt;\">#2205</a></span>, and the fix for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2205\" onclick=\"get_ticket_and_populate_wrapper('2205'); return false;\" title=\"PERMISSION DENIED to unauthenticated@unmapped from host &lt;garbage&gt;\">#2205</a></span> appeared to fix this.  However pmackinn is observing on Fedora Core 14, 32-bit.  Reviewing the code, this seems still possible and I'm no longer convinced that <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2205\" onclick=\"get_ticket_and_populate_wrapper('2205'); return false;\" title=\"PERMISSION DENIED to unauthenticated@unmapped from host &lt;garbage&gt;\">#2205</a></span> would have fixed it.\n\n</p><p>Code paths to investigate:\n</p><ul>\n<li>DaemonCore::CreateProcess <a class=\"file\" href=\"rlog?f=src/condor_daemon_core.V6/daemon_core.cpp\">/src/condor_daemon_core.V6/daemon_core.cpp</a> line 7171 reading \"inheritbuf += InfoCommandSinfulStringMyself(true);\" - Trace in and confirm that <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=InfoCommandSinfulStringMyself\" title=\"Info Command Sinful String Myself\">InfoCommandSinfulStringMyself</a></span> is returning something valid.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2011-Jun-08 08:06:12 by pmackinn:</em> <br/>\n\nFailure occurs when local hostname also maps to loopback address.\n\n<p>ipv6_hostname.cpp:init_local_hostname()\n\n</p><p>&lt;snip&gt;\nwhile (addrinfo* info = ai.next()) {\n\t\tconst char* name = info-&gt;ai_canonname;\n\t\tif (!name)\n\t\t\tcontinue;\n\t\tconst char* dotpos = strchr(name, '.');\n\t\tcondor_sockaddr addr(info-&gt;ai_addr);\n\n</p><p></p><pre>\t\tif (addr.is_loopback() || addr.is_private_network())\n\t\t\tcontinue;\n</pre>\n\n<p></p><pre>\t\tif (dotpos) {\n\t\t\t\t// consider it as a FQDN\n\t\t\tlocal_fqdn = name;\n\t\t\tlocal_hostname = local_fqdn.Substr(0, dotpos-name-1);\n\t\t\tif (!ipaddr_inited)\n\t\t\t\tlocal_ipaddr = addr;\n\t\t\tgot_fqdn = true;\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tlocal_hostname = name;\n\t\t\tif (!ipaddr_inited)\n\t\t\t\tlocal_ipaddr = addr;\n\t\t}\n\t}\n</pre>\n\n<p>local_hostname never gets assigned if there is only one addr in the iterator and it is also detected as a loopback addr.\n\n</p><p></p><hr/>\n<em>2011-Jun-08 11:08:06 by adesmet:</em> <br/>\n\nProblem identified:\n\n<p>If the output of gethostname() (also the output from hostname command line tool) is X, and attempts to look up X's IP address only return loopback addresses, then the master will never learn its own IP address.  Check the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MasterLog\" title=\"Master Log\">MasterLog</a></span> to see something like \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span>: command socket at \" where is should say something like \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span>: command socket at &lt;128.105.185.14:41183&gt;\".\n\n</p><p>The code in question is <a class=\"file\" href=\"rlog?f=src/condor_utils/ipv6_hostname.cpp\">/src/condor_utils/ipv6_hostname.cpp</a> line 21 function void init_local_hostname() .  This is an entirely new code path; pre-IPv6 the code was scattered around.\n\n</p><p></p><hr/>\n<em>2011-Jun-08 17:57:38 by jfrey:</em> <br/>\n\nThe code in <code>src/condor_utils/ipv6_hostname.cpp</code> for determining the local machine's IP address and hostname appears to replace the equivalent code in <code>src/condor_utils/my_hostname.cpp</code>. Both codepaths are still used; some callsites use one, some use the other. The existence of the two codepaths is bad. Worse, the functionality is different between the two.\n\n<p>Here are problems and changes in behavior in new codepath (<code>init_local_hostname()</code> in <code>src/condor_utils/ipv6_hostname.cpp</code>), as compared with the old codepath (<code>init_ipaddr()</code> in <code>src/condor_utils/my_hostname.cpp</code>):\n</p><ul>\n<li>If the machine's hostname resolves to the loopback address or a private address, the hostname and IP address query functions return empty strings.\n</li><li>When determining the preferred local IP address, only addresses that the local hostname resolves to are considered, and loopback and private addresses are ignored. Loopback and private addresses should be considered, but public addresses preferred.\n</li><li><code>NETWORK_INTERFACE</code> can't be set to an IP address using a wildcard or set to a network device name.\n</li></ul>\n\n<p></p><hr/>\n<em>2011-Jun-09 11:31:41 by jfrey:</em> <br/>\n\nI've pushed a temporary fix to master that makes the new codepath a pass-through to the old codepath.\n\n<p></p><hr/>\n<em>2011-Jun-09 13:58:41 by adesmet:</em> <br/>\n\nFuture work:\n\n<p></p><ol>\n<li>Restore the new code.\n</li><li>Eliminate the old code (why are some call sites still using it&amp;#8253;)</li></ol>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-17 12:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27857\">[27857]</a></span>: Add ASSERT to check for bug that has now manifested twice. (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2538\" onclick=\"get_ticket_and_populate_wrapper('2538'); return false;\" title=\"IPv6 \tx86_64_deb_6.0-updated master can't start collector\">#2538</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2216\" onclick=\"get_ticket_and_populate_wrapper('2216'); return false;\" title=\"IPv6: IP/hostname lookup problems when hostname maps to localhost\">#2216</a></span>)  (By Alan De Smet )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jul-13 17:33</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22497\">[22497]</a></span>: Condor can again handle hostnames where gethostname()'s name maps to localhost. Buggy code never shipped, no docs. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2216\" onclick=\"get_ticket_and_populate_wrapper('2216'); return false;\" title=\"IPv6: IP/hostname lookup problems when hostname maps to localhost\">#2216</a></span> ===GT:Fixed=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2216\" onclick=\"get_ticket_and_populate_wrapper('2216'); return false;\" title=\"IPv6: IP/hostname lookup problems when hostname maps to localhost\">#2216</a></span> ===VersionHistory=== None  (By Alan De Smet )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jul-13 17:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22493\">[22493]</a></span>: Condor can again handle hostnames where gethostname()'s name maps to localhost. Buggy code never shipped, no docs. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2216\" onclick=\"get_ticket_and_populate_wrapper('2216'); return false;\" title=\"IPv6: IP/hostname lookup problems when hostname maps to localhost\">#2216</a></span> ===GT:Fixed=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2216\" onclick=\"get_ticket_and_populate_wrapper('2216'); return false;\" title=\"IPv6: IP/hostname lookup problems when hostname maps to localhost\">#2216</a></span> ===VersionHistory=== None  (By Alan De Smet )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-08 18:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22136\">[22136]</a></span>: Temporarily disable new functions for determining local hostname/IP. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2216\" onclick=\"get_ticket_and_populate_wrapper('2216'); return false;\" title=\"IPv6: IP/hostname lookup problems when hostname maps to localhost\">#2216</a></span> The new IPv6-friendly functions for determining the local hostname and IP address have several defects that need to be resolved. Until then, use the old functions in my_hostname.cpp.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Jul-13 17:34", "status": "resolved", "created": "2011-Jun-07 11:40", "fixed_version": "2011-Jun-07 11:40", "broken_version": "v070700", "priority": "2", "subsystem": "Libs", "assigned_to": "adesmet", "derived_from": "#9", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tstclair@redhat.com, pmackinn@redhat.com", "due_date": ""}