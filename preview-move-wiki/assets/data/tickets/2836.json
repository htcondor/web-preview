{"id": 2836, "title": "Ticket #2836: RFE: Gracefully handle MAX_..._LOG configuration errors", "description": "<blockquote>\nIf a user provides a bad value for MAX_&lt;SUBSYS&gt;_LOG, the &lt;SUBSYS&gt; may exit and\nnot be able to log the fact that its log configuration is invalid. Currently,\nthe only means of detection is exit status 4 from the negotiator in the\n<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MasterLog\" title=\"Master Log\">MasterLog</a></span>.\n\n<p>Some options -\n\n</p><p> GOOD The condor_master already attempts to check to see &lt;SUBSYS&gt;_LOG is\ndefined as a precaution. The condor_master could also attempt to detect the\nvalidity of MAX_&lt;SUBSYS&gt;_LOG.\n BETTER The &lt;SUBSYS&gt; itself could provide a reasonable default when given an\ninvalid configuration, at least enough to log the error and exit. In the atoi\ndays invalid meant infinite (MAX_..._LOG=0).\n BEST The &lt;SUBSYS&gt; could log the error to dprintf_failure.&lt;SUBSYS&gt;</p></blockquote>", "remarks": "<blockquote>\n<em>2012-Feb-24 14:45:03 by eje:</em> <br/>\n\nTEST:\n\n<p>configure a daemon with max-log using an expression, e.g.:\n</p><div class=\"code\">\n<pre class=\"code\">MAX_COLLECTOR_LOG = 1024*1024\n</pre></div>\n\n\n<p>Now, start up a pool:\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_master\n</pre></div>\n\n\n<p>Prior to the fix, you will see a silent failure of the daemon (in this case the collector) to start, with a return code in the master log.\n\n</p><p>After the fix, when the daemon fails, you should see an informative error in\n$(LOG)/dprintf_failure.&lt;SUBSYS&gt;:\n</p><div class=\"code\">\n<pre class=\"code\">$ ls\nCollectorLog  dprintf_failure.COLLECTOR  InstanceLock  MasterLog\n$ cat dprintf_failure.COLLECTOR\ndprintf() had a fatal error in pid 11418\nInvalid config MAX_COLLECTOR_LOG = 1024*1024: MAX_COLLECTOR_LOG must be an integer literal &gt;= 0\nerrno: 22 (Invalid argument)\neuid: 501, ruid: 0\n</pre></div>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Apr-02 10:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31056\">[31056]</a></span>: Added undocumented detail: If daemon cannot write to its log file, it tries to log this in $(LOG)/dprintf_failure.&lt;SUBSYS&gt; and then dies. Revelation of this detail is due to <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2836\" onclick=\"get_ticket_and_populate_wrapper('2836'); return false;\" title=\"RFE: Gracefully handle MAX_..._LOG configuration errors\">#2836</a></span>.  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Feb-24 14:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=30702\">[30702]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=30699\">[30699]</a></span>, merge V7_6-branch to master ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2836\" onclick=\"get_ticket_and_populate_wrapper('2836'); return false;\" title=\"RFE: Gracefully handle MAX_..._LOG configuration errors\">#2836</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Feb-24 14:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=30699\">[30699]</a></span>: Replaced EXCEPT() with _condor_dprintf_exit() to prevent silent failure on MAX_&lt;SUBSYS&gt;_LOG configuration error ===GT:Fixed== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2836\" onclick=\"get_ticket_and_populate_wrapper('2836'); return false;\" title=\"RFE: Gracefully handle MAX_..._LOG configuration errors\">#2836</a></span>  (By Erik Erlandson )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2012-Mar-05 21:36", "status": "resolved", "created": "2012-Feb-20 17:54", "fixed_version": "2012-Feb-20 17:54", "broken_version": "", "priority": "3", "subsystem": "Libs", "assigned_to": "eje", "derived_from": "#2471", "creator": "eje", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tstclair@redhat.com, eje@cs.wisc.edu", "due_date": ""}