{"id": 1252, "title": "Ticket #1252: rate limit wakeups in condor_rooster", "description": "<blockquote>\nCurrently, the condor_rooster cycle consists of two phases: 1) query the collector for all machines for which ROOSTER_UNHIBERNATE is true 2) iterate through that list and wake up those machines.\n\n<p>Ian Smith found that when users submitted a large number of short-running jobs, rooster would wake up a lot of machines in a short amount of time, which overloaded a power management service and which was more than necessary anyway, since the jobs were so short.\n\n</p><p>It was suggested that the rate of wakeups could be limited along these lines:\n\n</p><p></p><div class=\"verbatim\">\n<pre>ROOSTER_WAKEUP_CMD = \"/path/to/sleep_exec 30 $(BIN)/condor_power -d -i\"\n</pre></div>\n\n\n<p>And then create sleep_exec:\n\n</p><p></p><div class=\"verbatim\">\n<pre>#!/bin/sh\nsleep $1\nshift\nexec \"$@\"\n</pre></div>\n\n\n<p>However, the problem with this is that if there is significant time delay while iterating through the machines to wake up, they may no longer be in demand by the time we get to them.  For example, if the user's jobs are quite short, they may all have finished on the machines which were already woken up.\n\n</p><p>One idea would be to make the UNHIBERNATE expression expire so that the delay introduced by the rate limiting will not result in an indefinitely long wake-up loop.  However, this doesn't quite work, because we only evaluate UNHIBERNATE once before iterating over the machines to wake up.  If we did double-check this expression immediately before waking up a machine, then the following sort of expression could be used in combination with the sleep_exec strategy:\n\n</p><p></p><div class=\"verbatim\">\n<pre>UNHIBERNATE = MachineLastMatchTime &gt; CurrentTime - 600\n</pre></div>\n\n\n<p>In addition, it would be nice to have a simple configuration setting to limit the number of machines woken up per cycle.</p></blockquote>", "remarks": "<blockquote>\n<em>2010-Mar-24 09:50:41 by danb:</em> <br/>\n\nIf we add the ability to limit the number of machines woken per cycle, we should also add the ability to rank the machines to be woken up.\n\n<p><em>2010-Apr-05 15:29:00 by danb:</em> <br/>\n\nI added the following config knobs:\n\n</p><p></p><div class=\"verbatim\">\n<pre>ROOSTER_MAX_UNHIBERNATE\nROOSTER_UNHIBERNATE_RANK\n</pre></div>\n\n\n<p>I also have it re-evaluate ROOSTER_UNHIBERNATE before each attempt to wake up a machine to make sure the expression is still true.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Apr-13 14:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=25428\">[25428]</a></span>: Documented fix for offline machine matchmaking problem. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1252\" onclick=\"get_ticket_and_populate_wrapper('1252'); return false;\" title=\"rate limit wakeups in condor_rooster\">#1252</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Apr-09 14:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=25415\">[25415]</a></span>: Documented ROOSTER_MAX_UNHIBERNATE and ROOSTER_UNHIBERNATE_RANK. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1252\" onclick=\"get_ticket_and_populate_wrapper('1252'); return false;\" title=\"rate limit wakeups in condor_rooster\">#1252</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Apr-05 15:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=17784\">[17784]</a></span>: Add a limit on number of wakeups per cycle in condor_rooster. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1252\" onclick=\"get_ticket_and_populate_wrapper('1252'); return false;\" title=\"rate limit wakeups in condor_rooster\">#1252</a></span>  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Apr-05 15:32", "status": "resolved", "created": "2010-Mar-02 11:45", "fixed_version": "2010-Mar-02 11:45", "broken_version": "v070302", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "users", "visibility": "public", "notify": "dan@hep.wisc.edu,I.C.Smith@liverpool.ac.uk", "due_date": ""}