{"id": 3278, "title": "Ticket #3278: Condor_rm of recovered DAG sometimes leaves node jobs running", "description": "<blockquote>\nI just noticed this in testing with 7.8.4, but it goes back a long way before that.  I know what's going on -- at some point we changed from having DAGMan explicitly condor_rm each child job to having it do a big condor_rm with a constraint of the parent DAGMan's CondorID.  But you can sometimes end up with a parent DAGMan that has a different CondorID, and then a condor_rm of the DAGMan job doesn't affect the node jobs...\n\n<p>Here's how to reproduce this (when running a personal Condor):\n</p><ol>\n<li>submit a DAG\n</li><li>do a condor_restart\n</li><li>clear out the lock file\n</li><li>re-submit the .condor.sub file\n</li><li>condor_rm the resulting DAGMan job</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2013-Apr-10 16:47:35 by wenger:</em> <br/>\n\nI was just thinking about this (and <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=463\" onclick=\"get_ticket_and_populate_wrapper('463'); return false;\" title=\"dagman doesn't do anything when condor_rm fails\">#463</a></span>), and I was thinking that one solution would be to have DAGMan not actually exit until it sees the removed events for all of its jobs (we'd have to create a new \"remove mode\" or something where it would watch for events but not submit any new jobs or start any scripts -- I guess that would be kind of like halt mode, although halt mode will run POST scripts, which we wouldn't want in remove mode).\n\n<p>Anyhow, after some (configurable) amount of time, if DAGMan hadn't seen all the right remove events, it could fall back on removing the jobs individually, as it used to do.  (And maybe it could do that immediately if the first condor_rm fails.)  If the \"individual job\" condor_rms fail, it might make sense to re-try them.\n\n</p><p>And, obviously, at some point DAGMan should just exit, but it should log some error message if it doesn't think all of the jobs have been removed successfully.\n\n</p><p></p><hr/>\n<em>2013-Jun-03 16:41:29 by wenger:</em> <br/>\n\nA note as per discussion in today's flightworthy meeting:  TJ says that it looks like condor_rm returns 0 if it removes <strong>any</strong> jobs (even if some removes fail).  So DAGMan can't really assume that condor_rm returning 0 means that all of the jobs were removed...</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=3995\" onclick=\"get_ticket_and_populate_wrapper('3995'); return false;\" title=\"Condor_rm'ed DAGMan waits for node jobs to exit\">#3995</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCondor_rm'ed DAGMan waits for node jobs to exit</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2014-May-11 21:09", "status": "new", "created": "2012-Oct-18 14:18", "fixed_version": "2012-Oct-18 14:18", "broken_version": "v070804", "priority": "3", "subsystem": "Dag", "assigned_to": "", "derived_from": "#3250", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu", "due_date": ""}