{"id": 374, "title": "Ticket #374: dlopen Kerberos", "description": "<blockquote>\nKerberos causes us problems.  We can't rely on every platform we support having it, but we want to support it whenever possible.  We currently solve this by statically linking Kerberos into Condor.  1. This means we're stuck with an old version since newer version don't support static linking, 2. This means every Condor binary is carrying around Kerberos, bloating things.\n\n<p>One possibility is to carry around the dynamic library with it, then use shell script wrappers on our binaries to set LD_LIBRARY_PATH.  Lots of other packages do this.  It's also messy.\n\n</p><p>It is believed that our use of Kerberos is limited to a small number of functions.  So the proposal is to use dlopen and dlsym to lead the Kerberos library and required functions at runtime.  If dlopen doesn't work, we'll just disable the Kerberos code paths.  Systems with the library will get Kerberos support, others won't.  Condor will be smaller.  We'll be able to use more more recent versions of Kerberos.  If an admin upgrade Kerberos for a security fix, Condor will automatically get the benefit.\n\n</p><p>Depending on how widely Kerberos is supported by Condor, we might want to look to the libtool dl library (ltdl) which provides portable wrappers for dlopen and dlsym, or at least to making our own wrapper.  (Perhaps we have one already for our plugin work?)\n\n</p><p>Note that <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1135\" onclick=\"get_ticket_and_populate_wrapper('1135'); return false;\" title='\"Real\" dynamic binary releases'>#1135</a></span> (\"Real\" dynamic binary releases) offers another way to solve this.  However, many users don't care about Kerberos at all, so this ticket remains an interesting option for all of the reasons given above.  Or put another way: if you have the Kerberos libraries, it would Just Work, and if you didn't you wouldn't need to install one to make Condor happy, all while ensuring that Condor isn't shipping out of date and dangerous versions.</p></blockquote>", "remarks": "<blockquote>\n<hr/>\n<em>2010-Oct-20 15:59:08 by jfrey:</em> <br/>\n\nBulk change of target version from v070504 to v070505 using ./ticket-target-mover.\n<hr/>\n<em>2011-Jan-27 14:21:33 by danb:</em> <br/>\n\nBulk change of target version from v070505 to v070506 using ./ticket-target-mover.\n<hr/>\n<em>2011-Feb-01 14:49:30 by tannenba:</em> <br/>\n\nBulk change of target version from v070506 to NULL using ./ticket-target-mover.\n\n<p></p><hr/>\n<em>2011-Aug-12 14:04:14 by jfrey:</em> <br/>\n\nTicket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1874\" onclick=\"get_ticket_and_populate_wrapper('1874'); return false;\" title=\"Use OS-provided security libraries\">#1874</a></span> solves this problem for us. The only platforms we need kerberos on are linux, windows, and mac. All flavors of linux and mac that we've seen have kerberos libraries installed, and we now dynamically link with them. On windows, we'll continue to build our own kerberos and link to it as we do today.\n\n<p></p><hr/>\n<em>2014-Nov-18 15:32:37 by jfrey:</em> <br/>\n\nEven with dynamic linking, the Kerberos libraries contribute significant overhead to the shadow's memory footprint. Shadow memory usage is critical on linux, so we want to dlopen() the Kerberos libraries on demand, similarly to how we dlopen() the GSI libraries (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4483\" onclick=\"get_ticket_and_populate_wrapper('4483'); return false;\" title=\"Remove GSI libraries from the shadow\">#4483</a></span>). We'll need to do the same with libssl, which depends on the Kerberos libraries.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-22 18:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/de84a4ee7e201e92b5a7d98322945d9d6e37754e\">[42020]</a></span>: Edit existing 8.3.2 version history items for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4603\" onclick=\"get_ticket_and_populate_wrapper('4603'); return false;\" title=\"DAEMON_SOCKET_DIR=auto breaks partial use of shared port\">#4603</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4657\" onclick=\"get_ticket_and_populate_wrapper('4657'); return false;\" title=\"Support EC2 block-device mapping.\">#4657</a></span>, and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4660\" onclick=\"get_ticket_and_populate_wrapper('4660'); return false;\" title=\"Add sub-second accurate timestamps to dprintf logs\">#4660</a></span>. Add new version history items for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=374\" onclick=\"get_ticket_and_populate_wrapper('374'); return false;\" title=\"dlopen Kerberos\">#374</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4735\" onclick=\"get_ticket_and_populate_wrapper('4735'); return false;\" title=\"Speed up V3 query protocol\">#4735</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4594\" onclick=\"get_ticket_and_populate_wrapper('4594'); return false;\" title=\"Fix time-slicing for ClassAd iterator\">#4594</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4491\" onclick=\"get_ticket_and_populate_wrapper('4491'); return false;\" title=\"Scalable claim keepalive protocol\">#4491</a></span>, and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4585\" onclick=\"get_ticket_and_populate_wrapper('4585'); return false;\" title=\"Detect SO version of libraries we dlopen() at compile time\">#4585</a></span>.  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-19 13:56</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/99fb2358dff941719691010534261ada41fedd48\">[41686]</a></span>: Remove unused external krb5-1.10. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=374\" onclick=\"get_ticket_and_populate_wrapper('374'); return false;\" title=\"dlopen Kerberos\">#374</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-19 10:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e97729475de38c08f66c831ef1e33b214731916c\">[41684]</a></span>: Add CMake macro find_so_name(). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=374\" onclick=\"get_ticket_and_populate_wrapper('374'); return false;\" title=\"dlopen Kerberos\">#374</a></span> Given the full path to a shared library file, return the SO name of that library. For example, the SO name of \"/usr/lib64/libssl.so\" is \"libssl.so.10\" in the current release of Red Hat 6. The result is indicated to be used with dlopen(). Only supported on Linux.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-19 10:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/4333bd4291cd9513dd59d11ace1a6d47fa62e49b\">[41685]</a></span>: dlopen() libssl and kerberos when needed by CEDAR on linux. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=374\" onclick=\"get_ticket_and_populate_wrapper('374'); return false;\" title=\"dlopen Kerberos\">#374</a></span> This reduces memory usage when these authentication methods aren't used, which is especially noticeable in the shadow. If dlopen()/dlsym() fail, then we ignore that authentication method.\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2014-Dec-23 16:32", "status": "resolved", "created": "2009-Apr-10 15:10", "fixed_version": "2009-Apr-10 15:10", "broken_version": "v080000", "priority": "3", "subsystem": "", "assigned_to": "tim", "derived_from": "#1135", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu", "due_date": ""}