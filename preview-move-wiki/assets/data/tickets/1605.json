{"id": 1605, "title": "Ticket #1605: support host certificate DNS name validation", "description": "<blockquote>\nThe GSI and SSL authentication methods do not currently do any check that the hostname in the server's certificate matches the DNS name of the server.  This makes it awkward to use Condor-C as a replacement for GRAM.\n\n<p><span class=\"subsection\"></span></p><h3>Proposal </h3>\n\n<p>Add knobs to enable/disable hostname checks in the client-side of GSI and SSL authentication methods:\n\n</p><p></p><ul>\n<li>GSI_SKIP_HOST_CHECK\n</li><li>SSL_SKIP_HOST_CHECK\n</li></ul>\n\n<p>These settings are analogous to the existing SOAP_SSL_SKIP_HOST_CHECK used by the amazon gahp.\n\n</p><p>The default for the above knobs is false, do <em>not</em> skip host checking.\n\n</p><p>When the global toggle is false (do <em>not</em> skip host checking), exceptions may be made:\n\n</p><p></p><ul>\n<li>GSI_SKIP_HOST_CHECK_CERT_REGEX\n</li><li>SSL_SKIP_HOST_CHECK_CERT_REGEX\n</li></ul>\n\n<p>Any DNs matching the above regular expressions are not required to pass the DNS check.  For backward compatibility, any DNs listed in GSI_DAEMON_NAME are also not required to pass the DNS check.\n\n</p><p>At some point, we may also want to apply DNS checks on the server side to clients doing DAEMON-level commands.  I am proposing that we ignore this for now and just focus on the client side, since that is all that is relevant to Condor-C.\n\n</p><p><span class=\"subsection\"></span></p><h3>Alternative Proposal</h3>\n\n<p>After discussion with Igor, we agreed that the above proposal is good for many cases, but it would be nice to additionally provide some features that would allow something similar to be achieved via the map file.\n\n</p><p>The idea is to have a list of flags that specify what pieces of information are desired for mapping.  For example, there could be a flag that extracts the authenticated host name.  Let's call it AUTHENTICATED_HOST.  This could trigger a DNS check if one hasn't happened already.  If the check fails, then the mapping entry requesting AUTHENTICATED_HOST is skipped.  If the check succeeds, then the authenticated host name will be matched against the corresponding matching field in the map file.  Example:\n\n</p><p></p><div class=\"verbatim\">\n<pre>GSI AUTHENTICATED_HOST \".*\" gsiserver\n</pre></div>\n\n\n<p>If you want to look at the DN and the host name, you would specify both:\n\n</p><p></p><div class=\"verbatim\">\n<pre>GSI AUTHENTICATED_HOST,DN \".*\" \"/DC=org/DC=doegrids/OU=Services/CN=.*\" \\1@cs.wisc.edu\n</pre></div>\n\n\n<p>More generically,\n\n</p><p></p><div class=\"verbatim\">\n<pre>GSI FLAG1,FLAG2,FLAG3,... \"REGEX1\" \"REGEX2\" \"REGEX3\" ... NAME </pre></div>\n\n\n<p>Ideally, it should be possible to refer to extracted bits of previous REGEXes in ones that follow it.  For example, REGEX2 might want to say that the authenticated host name matched in REGEX1 should appear in the DN.\n\n</p><p>Ideas for flags that we could support, IP, AUTHENTICATED_HOST, DN, VOMS stuff, condor authorization level.\n\n</p><p>I haven't thought about exactly how the regexp substitution references would work across the multiple regexes, but presumably we can just index across them.\n\n</p><p>There is ambiguity in what we should yield for the authenticated host name.  It could be the name we get when we do a reverse lookup of the IP address of our peer, or it could be the name in our peer's certificate.  The two are not necessarily identical even when gsi_compare_names() is successful.  I'm not sure if there is an advantage of one over the other.  I'd be tempted to use the name from the certificate.\n\n</p><p><span class=\"subsection\"></span></p><h3>Implementation Notes</h3>\n\n<p>Some code to perform the hostname check already exists in Condor_Auth_SSL::post_connection_check().  It is commented out and so likely needs some work.\n\n</p><p>For GSI, we can just change the \"GSI-NO-TARGET\" argument to globus_gss_assist_init_sec_context() in order to enable hostname checking.  However, that doesn't allow us to make exceptions.  Instead, we can use gss_compare_names() to do the check as a separate step.</p></blockquote>", "remarks": "<blockquote>\n<hr/>\n<em>2010-Oct-20 16:03:30 by jfrey:</em> <br/>\n\nBulk change of target version from v070504 to v070505 using ./ticket-target-mover.\n<hr/>\n<em>2011-Jan-27 14:46:04 by danb:</em> <br/>\n\nBulk change of target version from v070505 to v070506 using ./ticket-target-mover.\n<hr/>\n<em>2011-Feb-01 16:19:13 by tannenba:</em> <br/>\n\nBulk change of target version from v070506 to NULL using ./ticket-target-mover.\n\n<p></p><hr/>\n<em>2012-Jul-03 15:44:02 by tannenba:</em> <br/>\n\nLooks like the patch needs a bit more work.... it should iterate through DNS CNAME records as well as just the A record.\n\n<p></p><hr/>\n<em>2012-Jul-03 17:24:45 by danb:</em> <br/>\n\nHi Todd,\n\n<p>Currently, we are using the standard globus function gss_compare_name().  It is fine if a client uses a CNAME.  It is not fine if the server presents a certificate which does not match an A record for the server.  I think this is the behavior admins of GSI software are accustomed to.\n\n</p><p>I'd be in favor of providing the standard GSI behavior rather than tweaking it.  What do you think?\n\n</p><p></p><hr/>\n<em>2012-Jul-07 13:15:06 by bbockelm:</em> <br/>\n\nHi Dan,\n\n<p>So, the certificate should match the A record?  That seems a bit ... strange.  The person I always ask about deep GSI voodoo is Oscar Koeroo (as he's re-implemented a lot of this stuff to remove the Globus dependency from glexec).  Maybe we could pass the question off to him?\n\n</p><p>Derek ran into this problem when working with the gWMS factory at glidein.grid.iu.edu.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2012-Jul-07 13:29:57 by bbockelm:</em> <br/>\n\nAh, I see the issue.  Try this:\n\n<p></p><div class=\"verbatim\">\n<pre>_condor_SEC_CLIENT_INTEGRITY=REQUIRED _condor_TOOL_DEBUG=D_FULLDEBUG condor_status -pool glidein.grid.iu.edu -debug\n</pre></div>\n\n\n<p>The resulting failure is:\n\n</p><p></p><div class=\"verbatim\">\n<pre>GSI:5008:We are trying to connect to a daemon with certificate DN (/DC=org/DC=doegrids/OU=Services/CN=glidein.grid.iu.edu), but the host name in the certificate does not match any DNS name associated with the host to which we are connecting (host name is 'wuncler.uits.indiana.edu', IP is '129.79.53.27', Condor connection address is 'collector at &lt;129.79.53.27:9618&gt;').  Check that DNS is correctly configured.  If you wish to use a daemon certificate that does not match the daemon's host name, either add the DN to GSI_DAEMON_NAME or GSI_SKIP_HOST_CHECK_CERT_REGEX to make an exception, or disable all host name checks by setting GSI_SKIP_HOST_CHECK=true.\n</pre></div>\n\n\n<p>So, the problem is a <strong>Condor</strong> problem.  I specifically ask it to connect to glidein.grid.iu.edu, but Condor_Auth_X509::authenticate_client_gss will take the connected socket and, based on the IP address, gets the first name using get_full_hostname, which returns the A name instead of the CNAME I originally asked for.\n\n</p><p>This is definitely different behavior from \"normal GSI\".\n\n</p><p></p><hr/>\n<em>2012-Jul-07 21:42:04 by bbockelm:</em> <br/>\n\nUgh.\n\n<p>I was hoping that we could do a half-assed solution and just iterate through the aliases.  However, given an IP address, it's perfectly acceptable to have a CNAME that doesn't resolve backwards.\n\n</p><p>That is,\n</p><div class=\"verbatim\">\n<pre>;; QUESTION SECTION:\n;glidein.grid.iu.edu.\t\tIN\tA\n\n;; ANSWER SECTION:\nglidein.grid.iu.edu.\t3600\tIN\tCNAME\twuncler.uits.indiana.edu.\nwuncler.uits.indiana.edu. 3600\tIN\tA\t129.79.53.27\n</pre></div>\n\n\n<p>While:\n</p><div class=\"verbatim\">\n<pre>;; QUESTION SECTION:\n;27.53.79.129.in-addr.arpa.\tIN\tPTR\n\n;; ANSWER SECTION:\n27.53.79.129.in-addr.arpa. 3600\tIN\tPTR\twuncler.uits.indiana.edu.\n</pre></div>\n\n\n<p>There's no way to have condor map from the socket back to the original hostname we requested :(\n\n</p><p>So, actually  \"condor_status glidein.grid.iu.edu\" will fail, despite being presented with a valid certificate from \"glidein.grid.iu.edu\".\n\n</p><p>Patch incoming.\n\n</p><p></p><hr/>\n<em>2012-Jul-10 13:02:47 by danb:</em> <br/>\n\nHi Brian,\n\n<p>Your patch should solve the \"server cert contains a CNAME problem\" for hostnames specified on the command-line and for COLLECTOR_HOST.  I think we could still have similar problems for daemons whose connection info is looked up via information published in the collector.  Do you agree, or have I misunderstood?\n\n</p><p></p><hr/>\n<em>2012-Jul-10 14:46:49 by bbockelm:</em> <br/>\n\nHi Dan,\n\n<p>This fix should also take care of that case - one of the things I tested was \"condor_q\".  Can you think of another good thing for me to test?\n\n</p><p>This worked correctly for condor_q as the schedd advertised itself with the same CNAME that the certificate was registered with.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2012-Jul-10 15:34:11 by danb:</em> <br/>\n\nI was thinking of the case where the daemon advertises the A record but its certificate is for a CNAME.  I suppose we could chalk that case up to misconfiguration.\n\n<p></p><hr/>\n<em>2012-Jul-11 12:03:31 by bbockelm:</em> <br/>\n\nYes - if the machine records itself in the collector as \"foo\", and presents a certificate for \"bar\", we should probably call it incorrectly configured - from a GSI point of view.\n\n<p>In terms of this patch, if Condor could determine that \"bar\" is an alias for \"foo\", then it would accept it.\n\n</p><p></p><hr/>\n<em>2012-Jul-13 17:47:48 by danb:</em> <br/>\n\nCODE REVIEW of condor-1605-v2.patch:\n\n<p>There are still some cases in Condor where addresses are passed around without the hostname.  Therefore the CNAME use-case will still be broken.  Some cases that come to mind:\n\n</p><p></p><ul>\n<li>startd address passed when a match is made\n</li><li>address of shadow passed to starter for file transfer\n</li><li>address of starter used for reconnect\n</li><li>CCB address\n</li></ul>\n\n<p>Basically, all daemon connection info is expected to be serialized in the sinful string.  We've broken that assumption in the past (GCB, public/private addresses) and suffered a long trail of bugs.  We solved that by upgrading the sinful string to be able to hold extra info (settable and gettable via the Sinful class).  This patch introduces a new bit of extra info that is expected to be passed around in parallel to the daemon address.  Perhaps it would be better to pack it into the daemon address so that it is transmitted in all existing protocols and interfaces that pass around daemon addresses.  Having said that, I do like the general trend in your patch to use Daemon objects in interfaces.\n\n</p><p>I fixed a minor memory leak in condor_q.\n\n</p><p>In get_fqdn_and_ip_from_hostname(), there is a semantic change: if the input name contains a \".\" then it is used as the fqdn, otherwise, the canonical name is used.  So if I ask for host \"foo\" and there is a CNAME \"foo.hep.wisc.edu\" for a host with canonical name \"bar.hep.wisc.edu\", I think I will get \"bar.hep.wisc.edu\", not \"foo.hep.wisc.edu\".  If this is the intended behavior, we should document that.\n\n</p><p>In qmgr_job_updater.cpp, the schedd daemon object is constructed without a hostname.  I believe this means the CNAME case will still break for daemons using this.  Do you agree?\n\n</p><p>In status.cpp, in the direct case, it looks like we use the address rather than the daemon object.  Any reason?  That code makes my head hurt.  (Not your fault!)\n\n</p><p></p><hr/>\n<em>2012-Jul-16 08:43:54 by bbockelm:</em> <br/>\n\nHi Dan,\n\n<p>I'd be fine with packing this information into the sinful string instead; the basic idea is that we need to keep track of the requested service name, as the IP address is not sufficient information.  This suggestion drastically changes the implementation, but not the basic idea of the patch - would you agree?\n\n</p><p>I agree that the number of code paths is a bit daunting.  However, I'm really nervous about trying to hit all of these in one patch.\n\n</p><p>Maybe we split things into four parts:\n</p><ol>\n<li>Re-using the daemon objects instead of passing around addresses.\n</li><li>Adding the requested service name to the sinful string.\n</li><li>Allowing x509 object to iterate through the aliases and requested service name.\n</li><li>Fixing all the various code paths to properly record the requested service name.\n</li></ol>\n\n<p>(1) and (3) are done.  (2) needs to be rewritten.  (4) is only done for condor_q and condor_status.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2012-Aug-06 14:55:41 by bbockelm:</em> <br/>\n\nPer an off-list discussion between Dan and I:  (2) above isn't viable.  The sinful string is not kept around.  Things are just reconstructed from the socket as necessary.\n\n<p>So, I think the existing patch is the best way forward.\n\n</p><p></p><hr/>\n<em>2012-Sep-18 18:23:37 by danb:</em> <br/>\n\nI attached a patch that inserts the host alias (CNAME) into the sinful string.  It works with CCB, shared_port, and all the condor protocols that I tested (full chain from submission to execution of a job).\n\n<p>When the client obtains the daemon address from the command-line (e.g. -pool &lt;addr&gt;), no further configuration is necessary.  When the client obtains the daemon address from the collector, the daemon must be configured with a new configuration setting HOST_ALIAS to specify the desired alias to be inserted into the daemon's published address.  I did not change any of the other published information, so, for better or worse, the canonical machine name that is published remains as it always has been.\n\n</p><p></p><hr/>\n<em>2012-Oct-12 11:26:22 by tannenba:</em> <br/>\n\nZach, please code review Dan's CNAME support patch. Note that this patch is still not in the code cuz we want you to review it (security) first.  If you like what you see, please push it, else assign back to Dan.  In either case, leave your code review comments as a remark of course.  thanks.\n\n<p></p><hr/>\n<em>2013-Jan-09 14:50:00 by zmiller:</em> <br/>\n\n<strong>drum roll</strong>.....   DONE!  the patch looks good and is clear to merge into master.\n\n<p>minor nit-pick:  there are two lines you added with trailing whitespace.  run \"git diff --check\" to identify them.\n\n</p><p></p><hr/>\n<em>2013-Jan-10 17:39:48 by bbockelm:</em> <br/>\n\nHi Dan,\n\n<p>Does this work against the GOC glideinWMS factory?  That's the host which kicked off this work.\n\n</p><p>Can the client automatically calculate the host alias from the hostname requested via command line?\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2013-Jan-11 12:38:54 by danb:</em> <br/>\n\nSummary of this ticket:\n\n<p></p><ul>\n<li>In 7.9.0, we added checking of the GSI certificate hostname, configurable with GSI_SKIP_HOST_CHECK and GSI_SKIP_HOST_CHECK_CERT_REGEX.\n\n<p></p></li><li>No similar functionality for SSL has been implemented.  This is being left for a time when there is demand for it.\n\n<p></p></li><li>In 7.9.4, we added support for validating GSI certificates that match a CNAME for the host rather than a DNS A record.  This is configurable with HOST_ALIAS.</li></ul>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/576/gsi_DNS_check.patch\">gsi_DNS_check.patch</a>\n11472 bytes added by danb on 2012-Jun-14 16:19:00 UTC.\n<br/>\nImplementation of GSI_SKIP_HOST_CHECK and GSI_SKIP_HOST_CHECK_CERTS.  Note that the list of certs to skip is not a regex.  For better or worse, it is in the same format as GSI_DAEMON_NAME, which I believe is somewhat flawed.<br/>\n</li><li><a href=\"../files/580/gsi_DNS_check2.patch\">gsi_DNS_check2.patch</a>\n10906 bytes added by danb on 2012-Jun-15 16:47:36 UTC.\n<br/>\nRebased the patch to the current master.  Changed the patch to implement GSI_SKIP_HOST_CHECK_CERT_REGEX, as we had planned.<br/>\n</li><li><a href=\"../files/591/condor-1605-v1.patch\">condor-1605-v1.patch</a>\n67049 bytes added by bbockelm on 2012-Jul-08 02:47:16 UTC.\n<br/>\nThis patch keeps track of the original hostname requested by the user and utilizes it for the authentication object.<br/>\n</li><li><a href=\"../files/601/condor-1605-v2.patch\">condor-1605-v2.patch</a>\n65748 bytes added by bbockelm on 2012-Jul-13 20:00:02 UTC.\n<br/>\nFix a segfault in the previous patch.  Fix a compilation issue in credd.<br/>\n</li><li><a href=\"../files/602/condor-1605-v2-fix1.patch\">condor-1605-v2-fix1.patch</a>\n1209 bytes added by danb on 2012-Jul-13 22:14:27 UTC.\n<br/>\nFix a memory leak in condor-1605-v2.patch.<br/>\n</li><li><a href=\"../files/635/condor_host_alias_patch.txt\">condor_host_alias_patch.txt</a>\n13681 bytes added by danb on 2012-Sep-18 23:15:38 UTC.\n<br/>\nThis patch puts the hostname alias (CNAME) in the sinful string.  It works with CCB, shared_port, and all condor protocols I know of.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Feb-04 09:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=34833\">[34833]</a></span>: hostname -&gt; fully qualified host name ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1605\" onclick=\"get_ticket_and_populate_wrapper('1605'); return false;\" title=\"support host certificate DNS name validation\">#1605</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jan-10 17:24</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=34611\">[34611]</a></span>: Allow GSI hostname check to work when client is connecting to a CNAME. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1605\" onclick=\"get_ticket_and_populate_wrapper('1605'); return false;\" title=\"support host certificate DNS name validation\">#1605</a></span> The CNAME (alias) is stored in the connection address (sinful string) so that it can be used when verifying that the server's DN matches.  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jul-03 12:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32578\">[32578]</a></span>: edit of new knob definitions and version history item ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1605\" onclick=\"get_ticket_and_populate_wrapper('1605'); return false;\" title=\"support host certificate DNS name validation\">#1605</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-19 22:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32423\">[32423]</a></span>: Adjusted documentation of GSI_DAEMON_NAME. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1605\" onclick=\"get_ticket_and_populate_wrapper('1605'); return false;\" title=\"support host certificate DNS name validation\">#1605</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-19 21:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32422\">[32422]</a></span>: Made semantics of GSI_DAEMON_NAME more backward compatible. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1605\" onclick=\"get_ticket_and_populate_wrapper('1605'); return false;\" title=\"support host certificate DNS name validation\">#1605</a></span> When GSI_DAEMON_NAME is defined, only certs that match it are accepted. This changes the behavior introduced in my previous patch, which accepted certs matching GSI_DAEMON_NAME <em>or</em> certs passing the hostname check. Now the addition of\u00a0[...]\n (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-19 18:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32419\">[32419]</a></span>: Document GSI hostname checks. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1605\" onclick=\"get_ticket_and_populate_wrapper('1605'); return false;\" title=\"support host certificate DNS name validation\">#1605</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-19 18:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32418\">[32418]</a></span>: Check that the daemon's GSI credential matches its hostname. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1605\" onclick=\"get_ticket_and_populate_wrapper('1605'); return false;\" title=\"support host certificate DNS name validation\">#1605</a></span> For backward compatibility, certificates matched by GSI_DAEMON_NAME are automatically exempted from this check. In some environments, it may now be desirable to unset GSI_DAEMON_NAME so that daemon certificates are authenticated if-and-only-if\u00a0[...]\n (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2013-Jan-11 12:38", "status": "resolved", "created": "2010-Aug-24 13:38", "fixed_version": "2010-Aug-24 13:38", "broken_version": "v070504", "priority": "2", "subsystem": "Security", "assigned_to": "danb", "derived_from": "#1376", "creator": "danb", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "dan@hep.wisc.edu zmiller@cs.wisc.edu tannenba@cs.wisc.edu bbockelm@cse.unl.edu", "due_date": ""}