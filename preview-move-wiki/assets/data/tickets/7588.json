{"id": 7588, "title": "Ticket #7588: cross-slot posting of p-slot Child attrs needs work to be reliable", "description": "<blockquote>\nCHTC was attempting to use a bologna-backfill style configuration to allow GPUs to be assigned to both a primary p-slot and a set of backfill static slots, with the backfill slots getting out of the way when the p-slot was using the GPUs.\n\n<p>This did not work because the configuration to do this requires that the static backfill slots be able to see the assigned gpus of the d-slots. This can be configured by\n\n</p><p></p><div class=\"snip\">\n<pre class=\"sniplabel\">config fragment</pre>\n<pre class=\"snip\">STARTD_PARTITIONABLE_SLOT_ATTRS = AssignedGPUs\nSTARTD_SLOT_ATTRS =  Cpus Memory ChildAssignedGPUs\n</pre></div>\n\nThis should result in the following attributes being advertised in all slots which allows them to be used in the backfill slot <code>START</code> and <code>PREEMPT</code> expressions\n<div class=\"snip\">\n<pre class=\"sniplabel\">slot attributes</pre>\n<pre class=\"snip\">slot1_ChildAssignedGPUs = {&lt;list of GPU devices in use by d-slots&gt;}\nslot1_Memory = &lt;unused p-slot memory&gt;\nslot1_Cpus = &lt;unused p-slot gpus&gt;\n</pre></div>\n\nThis problem is that the order of operations inside the startd makes the value of <code>slot1_ChildAssignedGPUs</code> very likely to be out of sync with the actual value.  When a d-slot is destroyed, it tends to be wrong for quite a long time.\n\n<p>Even worse, in the general case, where <code>STARTD_CRON</code> or custom expressions are in use, and also cross-slot posted, the <code>slot&lt;x&gt;_*</code> values can end up being out of sync all or most of the time, and the behavior is not even stable, since the evaluation order of slots within the Startd changes over time (the state of the slot affects the order)\n\n</p><p>The solution to this is many fold.\n\n</p><p></p><ol>\n<li>Surgery on the Startd to make the evaluation/update order stable and ordered to support the most common case, which is to always to Child* rollup before SLOT_ATTRS.\n</li><li>Introduce a new cross-slot reference mechanism that is not (as) dependent on update order and is more point-to point than broadcast. This will take the form of a custom classad function specific to the Startd. Expressions in <code>STARTD_ATTRS</code> can use this function\n<div class=\"snip\">\n<pre class=\"sniplabel\">config fragment</pre>\n<pre class=\"snip\">STARTD_ATTRS = PslotGpusInUse\nPslotGpusInUse = SlotEval(\"slot1\",join(\",\", ChildAssignedGpus))\nSLOT_TYPE_2_START = !StringListIMember(AssignedGpus, PslotGpusInUse)\n</pre></div>\n\nThe <code>SlotEval</code> classad function will exist only in the Startd, when it is evaluated, the result of the expression will be the same in all slots, it will only reference attributes in the named slot. (slot1 in this case).\n</li><li>Possible future work to change the Startd so that all slot ads are built <strong>before</strong> any cross-slot posting is done.  This is quite a large change to the way the startd operates, but may desirable for other reasons as well.\n</li></ol>\n\n<p><span class=\"subsubsection\"></span></p><h4>more on SlotEval</h4>\nWhen an expression containing <code>SlotEval</code> is sent anywhere outside the Startd, it will be replaced with the current evaluated value as part of the process of unparsing the ad to put it on the wire (or write it to a file, etc).  So the negotiator will see this\n\n<p></p><div class=\"snip\">\n<pre class=\"sniplabel\">slot ad fragment</pre>\n<pre class=\"snip\">ChildAssignedGpus = {\"CUDA0\", \"CUDA1\"}\nPslotGpusInUse = \"CUDA0, CUDA1\"\n</pre></div>\n\n\n<p><code>SlotEval</code> is a direct cross-slot lookup at evaluation time, so it is immune the relative order in which <code>STARTD_SLOT_ATTRS</code> and <code>STARTD_PARTITIONABLE_SLOT_ATTRS</code> are processed.   It also does not result in a large number of undesireable attrributes being cross posted to all slots.  Contrast this with each slot slot getting 40 attributes from one <code>STARTD_SLOT_ATTRS</code> value when there are 40 slots on the machine.\n\n</p><p></p><div class=\"snip\">\n<pre class=\"sniplabel\">config fragment</pre>\n<pre class=\"snip\"># this results in slot1_Foo through slotN_Foo in all slots\nSTARTD_SLOT_ATTRS = Foo\n# this results in slot1_Foo (and ONLY that) in all slots and all slots get the same result from evaluating Foo\nSTARTD_ATTRS = slot1_Foo\nslot1_Foo = SlotEval(\"slot1\",&lt;epression&gt;)\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2020-Jul-28 13:30:08 by johnkn:</em> <br/>\n\ndocumenting of <code>SlotEval()</code>, including the final decision whether we <strong>will</strong> document it or rip it out has been moved into a child ticket.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=7761\" onclick=\"get_ticket_and_populate_wrapper('7761'); return false;\" title=\"Document SlotEval function in the startd\">#7761</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nDocument <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SlotEval\" title=\"Slot Eval\">SlotEval</a></span> function in the startd</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-04 10:38</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60338\">[60338]</a></span>: make sure that <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=TotalSlotDisk\" title=\"Total Slot Disk\">TotalSlotDisk</a></span> is refreshed at d-slot creation, for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7588\" onclick=\"get_ticket_and_populate_wrapper('7588'); return false;\" title=\"cross-slot posting of p-slot Child attrs needs work to be reliable\">#7588</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-04 10:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60337\">[60337]</a></span>: make sure that <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=TotalSlotDisk\" title=\"Total Slot Disk\">TotalSlotDisk</a></span> is refreshed at d-slot creation, for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7588\" onclick=\"get_ticket_and_populate_wrapper('7588'); return false;\" title=\"cross-slot posting of p-slot Child attrs needs work to be reliable\">#7588</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-01 16:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60051\">[60051]</a></span>: version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7667\" onclick=\"get_ticket_and_populate_wrapper('7667'); return false;\" title=\"master should not fork/return until log file is useful\">#7667</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7588\" onclick=\"get_ticket_and_populate_wrapper('7588'); return false;\" title=\"cross-slot posting of p-slot Child attrs needs work to be reliable\">#7588</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7654\" onclick=\"get_ticket_and_populate_wrapper('7654'); return false;\" title=\"ExprTree should be able to take an ExprTree as an argument\">#7654</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Apr-09 17:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59294\">[59294]</a></span>: fix fedora warning for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7588\" onclick=\"get_ticket_and_populate_wrapper('7588'); return false;\" title=\"cross-slot posting of p-slot Child attrs needs work to be reliable\">#7588</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Apr-09 16:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59292\">[59292]</a></span>: For <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7588\" onclick=\"get_ticket_and_populate_wrapper('7588'); return false;\" title=\"cross-slot posting of p-slot Child attrs needs work to be reliable\">#7588</a></span>, more stable and relable ordering of child-rollup and cross-slot attributes in the Startd. These changes are intended to allow for GPUs to assigned to both a primary slot and backfill slot with STARTD and PREEMPT policy expressions insuring that only one slot will use the GPU at any one time.\u00a0[...]\n (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2020-Jul-28 13:30", "status": "resolved", "created": "2020-Apr-09 16:22", "fixed_version": "2020-Apr-09 16:22", "broken_version": "", "priority": "3", "subsystem": "", "assigned_to": "johnkn", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "", "due_date": ""}