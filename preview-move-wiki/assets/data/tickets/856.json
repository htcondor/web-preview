{"id": 856, "title": "Ticket #856: RFE: ClassAd expression evaluator tool", "description": "<blockquote>\nWe have <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> expressions in many places in configuration today. Expressions can get very complex. There is no user-friendly way to debug the expressions. Some options include starting daemons and using debug() or passing an expression through a tool with -format. Both of these mechanisms are tricks. Something as simple as adding -format to condor_config_val would be a good step forward, or a \"-v -v\" option to condor_config_val might even help.\n\n<p></p><div class=\"verbatim\">\n<pre>diff --git a/src/condor_tools/config_val.cpp b/src/condor_tools/config_val.cpp\nindex 4fe4c8d..8a08478 100644\n--- a/src/condor_tools/config_val.cpp\n+++ b/src/condor_tools/config_val.cpp\n@@ -137,6 +137,7 @@ main( int argc, char* argv[] )\n   int      i;\n   bool  ask_a_daemon = false;\n   bool    verbose = false;\n+  int      verbose_count = 0;\n   bool    dump_all_variables = false;\n   bool    print_config_sources = false;\n   bool  write_config = false;\n@@ -218,6 +219,7 @@ main( int argc, char* argv[] )\n         print_config_sources = true;\n      } else if( match_prefix( argv[i], \"-verbose\" ) ) {\n         verbose = true;\n+        verbose_count++;\n      } else if( match_prefix( argv[i], \"-dump\" ) ) {\n         dump_all_variables = true;\n      } else if( match_prefix( argv[i], \"-writeconfig\" ) ) {\n@@ -414,6 +416,11 @@ main( int argc, char* argv[] )\n         } else {\n            if (verbose) {\n               printf(\"%s: %s\\n\", tmp, value);\n+              if (verbose_count &gt; 1) {\n+                 printf(\"boolean (default: 1): %d\\n\", param_boolean(tmp, true));\n+                 printf(\"double (default: -1.0): %f\\n\", param_double(tmp, -1.0));\n+                 printf(\"integer (default: -1): %d\\n\", param_integer(tmp, -1));\n+              }\n            } else {\n               printf(\"%s\\n\", value);\n            }\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<hr/>\n<em>2010-Oct-20 15:59:08 by jfrey:</em> <br/>\n\nBulk change of target version from v070504 to v070505 using ./ticket-target-mover.\n<hr/>\n<em>2011-Jan-27 14:46:04 by danb:</em> <br/>\n\nBulk change of target version from v070505 to v070506 using ./ticket-target-mover.\n<hr/>\n<em>2011-Feb-01 14:49:30 by tannenba:</em> <br/>\n\nBulk change of target version from v070506 to NULL using ./ticket-target-mover.\n\n<p></p><hr/>\n<em>2012-Apr-20 18:37:30 by eje:</em> <br/>\n\nI've attached a patch that allows condor_config_val to evaluate a parameter against the daemon's classad, for example:\n\n<p></p><div class=\"code\">\n<pre class=\"code\"># trivial example:\n$ condor_config_val -schedd -evaluate UPDATE_INTERVAL\n30\n</pre></div>\n\n\n<p>Note, there are some use-cases of interest that would not be covered by this new feature. For example, params with common \"complicated\" expressions that come to mind would be things like:\n</p><ul>\n<li>START\n</li><li>PREEMPTION_REQUIREMENTS\n</li><li>GROUP_SORT_EXPR\n</li></ul>\n\n<p>The 'startd' daemon classad returns as null, and what you'd more likely want is evaluation with respect to some particular slot ad. PREEMPTION_REQUIREMENTS is with respect to a submitter and remote ad, at negotiation time.  GROUP_SORT_EXPR is evaluated with respect to special classads associated internally with each accounting group, etc.\n\n</p><p></p><hr/>\n<em>2012-Apr-23 13:43:30 by eje:</em> <br/>\n\nTESTING:\n\n<p>Use the following configuration to exercise feature cases:\n</p><div class=\"code\">\n<pre class=\"code\">SCHEDD.TEST_PARAM_1 = 5 * 1\nNEGOTIATOR.TEST_PARAM_1 = 5 * 2\nSTARTD.TEST_PARAM_1 = 5 * 3\n\nSCHEDD.TEST_PARAM_2 = time()\nNEGOTIATOR.TEST_PARAM_2 = time() / 2\n</pre></div>\n\n\n<p>Now spin up a pool, and query daemons for their config values to demonstrate behavior with and without the new -evaluate option:\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_config_val -schedd TEST_PARAM_1\n5 * 1\n$ condor_config_val -schedd TEST_PARAM_1 -eval\n5\n$ condor_config_val -neg TEST_PARAM_1\n5 * 2\n$ condor_config_val -neg TEST_PARAM_1 -eval\n10\n$ condor_config_val -startd TEST_PARAM_1\n5 * 3\n$ condor_config_val -startd TEST_PARAM_1 -eval\nWarning: Classad for startd daemon 'rorschach' is null, will evaluate expressions against empty classad\n15\n$ condor_config_val -schedd TEST_PARAM_2\ntime()\n$ condor_config_val -schedd TEST_PARAM_2 -eval\n1335205018\n$ condor_config_val -neg TEST_PARAM_2\ntime() / 2\n$ condor_config_val -neg TEST_PARAM_2 -eval\n667602514\n</pre></div>\n\n\n<p></p><hr/>\n<em>2012-Dec-17 12:49:36 by zmiller:</em> <br/>\n\nnot sure how this ended up for me to review, but i just did and it seems fine.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/555/gt856-evaluated-params.patch\">gt856-evaluated-params.patch</a>\n3130 bytes added by eje on 2012-Apr-20 23:29:36 UTC.\n<br/>\nPatch against master (7.9) that evaluates a parameter with respect to the daemon's classad (when available)<br/>\n</li><li><a href=\"../files/556/gt856-evaluated-params.patch2\">gt856-evaluated-params.patch2</a>\n5013 bytes added by eje on 2012-Apr-23 18:51:02 UTC.\n<br/>\nCleaned up original patch a bit and added doc<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-30 11:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/9c78395e1e44c349aec6cb7a633892640d8e148b\">[32146]</a></span>: Incorrectly documented new option -evaluate is now more correctly documented. It had nothing to do with the -dump argument. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=856\" onclick=\"get_ticket_and_populate_wrapper('856'); return false;\" title=\"RFE: ClassAd expression evaluator tool\">#856</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Apr-23 13:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/643950f85646ba6567815c4a5a8481e073b9c4ef\">[31797]</a></span>: Added -evaluate option to evaluate a config param's value with respect to a given daemon's classad ===GT:Fixed=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=856\" onclick=\"get_ticket_and_populate_wrapper('856'); return false;\" title=\"RFE: ClassAd expression evaluator tool\">#856</a></span>  (By Erik Erlandson )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2013-Jul-16 09:27", "status": "resolved", "created": "2009-Oct-15 08:40", "fixed_version": "2009-Oct-15 08:40", "broken_version": "", "priority": "4", "subsystem": "Tools", "assigned_to": "eje", "derived_from": "", "creator": "matt", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tstclair@redhat.com, eje@redhat.com", "due_date": ""}