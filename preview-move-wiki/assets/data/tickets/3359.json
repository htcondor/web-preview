{"id": 3359, "title": "Ticket #3359: Fix dagman_fullremove test on FreeBSD", "description": "<blockquote>\nTJ asked me to look at job_dagman_fullremove test, as it seems to fail consistently on FreeBSD7.</blockquote>", "remarks": "<blockquote>\n<em>2012-Dec-17 15:41:18 by nwp:</em> <br/>\n\nRumor says we don't care about FreeBSD anymore.  FW meeting 17 December 2012 says rumor is true.  Abandoning.\n\n<p></p><hr/>\n<em>2012-Dec-26 12:16:10 by nwp:</em> <br/>\n\nTJ says rumor is now false.  Restoring ticket status to active.\n\n<p></p><hr/>\n<em>2012-Dec-31 09:35:49 by nwp:</em> <br/>\n\nFinally got a failure in my NMI tests with augmenting debug information.  Looks like a race condition:\n\n<p>From the job_dagman_fullremove.run script output:\n</p><div class=\"code\">\n<pre class=\"code\">2012/12/28 18:23:35: &lt;CondorTest&gt; Abort event expected\n2012/12/28 18:23:35: &lt;CondorTest&gt; $joblog = job_dagman_fullremove.log\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 2\nJob Submited.........\nrunning_jobs = 1\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 3\nJob Submited.........\nrunning_jobs = 2\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 4\nJob Submited.........\nrunning_jobs = 3\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 5\nJob Submited.........\nrunning_jobs = 4\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 6\nJob Submited.........\nrunning_jobs = 5\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 2\nrunning_jobs = 5\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 6\nJob ABORTED by user.........\nrunning_jobs = 4\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 5\nrunning_jobs = 4\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 3\nrunning_jobs = 4\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 4\nrunning_jobs = 4\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 2\nJob ABORTED by user.........\nrunning_jobs = 3\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 5\nJob ABORTED by user.........\nrunning_jobs = 2\nOutcome from rul-&gt;readEvent(e) is 0\nULOG OK cluster 3\nJob ABORTED by user.........\nrunning_jobs = 1\nOutcome from rul-&gt;readEvent(e) is 1\nrunning_jobs = 1.\nrunning_jobs = 1.\nFAILED\nNot all dag nodes removed!\n2012/12/28 18:23:35: &lt;CondorTest&gt; Child status was &lt;&lt;2304&gt;&gt;\n</pre></div>\n\nThe important thing here is that x_read_joblog completes its run at 18:23:35.\n\n<p>Now look at the Userlog from the run:\n</p><div class=\"code\">\n<pre class=\"code\">009 (002.000.000) 12/28 18:23:23 Job was aborted by the user.\n        removed because &lt;OtherJobRemoveRequirements = DAGManJobId == 1&gt; fired when job (1.0) was removed\n...\n009 (005.000.000) 12/28 18:23:30 Job was aborted by the user.\n        removed because &lt;OtherJobRemoveRequirements = DAGManJobId == 1&gt; fired when job (1.0) was removed\n...\n009 (003.000.000) 12/28 18:23:34 Job was aborted by the user.\n        removed because &lt;OtherJobRemoveRequirements = DAGManJobId == 1&gt; fired when job (1.0) was removed\n...\n009 (004.000.000) 12/28 18:23:36 Job was aborted by the user.\n        removed because &lt;OtherJobRemoveRequirements = DAGManJobId == 1&gt; fired when job (1.0) was removed\n...\n</pre></div>\n\n\n<p>Note that the shadow writes the abort event for cluster 4 at 18:23:36, <em>after</em> the x_read_joblog has completed its work.  So the x_read_joblog never sees the abort event causing the test to report as FAIL, even though the test actually succeeds.  Going to insert a sleep before running x_read_joblog to see if that helps.\n\n</p><p></p><hr/>\n<em>2012-Dec-31 21:38:42 by nwp:</em> <br/>\n\nPushed my fix onto master.  I will monitor it to see if it fixes the problem consistently.\n\n<p></p><hr/>\n<em>2013-Jan-07 15:49:23 by nwp:</em> <br/>\n\nMonitoring Batlab shows that this seems to fix the problem.  Resolving.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jan-01 08:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=34508\">[34508]</a></span>: Partial revert of \"Fix dagman tests that have race conditions <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3359\" onclick=\"get_ticket_and_populate_wrapper('3359'); return false;\" title=\"Fix dagman_fullremove test on FreeBSD\">#3359</a></span>\" Revert the part where a sleep was added to job_dagman_halt-A. It had no effect.  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Dec-31 18:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=34507\">[34507]</a></span>: Fix dagman tests that have race conditions <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3359\" onclick=\"get_ticket_and_populate_wrapper('3359'); return false;\" title=\"Fix dagman_fullremove test on FreeBSD\">#3359</a></span> For some reason, the shadows on FreeBSD7 machine in Batlab are very slow in updating the Userlog. This causes spurious failures to be reported in the test suite. To solve these problems, I did the following:\u00a0[...]\n (By Nathan W. Panike )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2013-Jan-29 14:19", "status": "resolved", "created": "2012-Dec-05 09:59", "fixed_version": "2012-Dec-05 09:59", "broken_version": "v070901", "priority": "3", "subsystem": "Tests", "assigned_to": "nwp", "derived_from": "#3090", "creator": "nwp", "rust": "", "customer_group": "other", "visibility": "public", "notify": "wenger@cs.wisc.edu johnkn@cs.wisc.edu", "due_date": "20121210"}