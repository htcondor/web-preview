{"id": 4510, "title": "Ticket #4510: Separate query handler for schedd", "description": "<blockquote>\nThere's interest for an external query handler for the schedd.  Envisioned use cases:\n<ul>\n<li>Isolate query activity from other schedd activity.  Don't allow the launching of shadows impede queries (and vice versa).\n<ul>\n<li>For example, if we know a certain user tends to flood the schedd with tons of condor_qs, we may want to handle this gracefully without slowing down the main process.\n</li></ul>\n</li><li>Provide a quick response time for a subset of queries.\n<ul>\n<li>For example, in CMS, we have busy schedds (20k running, 40k pending) that get queried by the web interface to get the status of specific DAG tasks (so there's only one classad in the response).  We often see the response take &gt;5s.  We would like to have the query handler follow <strong>only</strong> DAGMan jobs.\n</li></ul>\n</li></ul>\n\n<p>The idea is we have a separately-launched daemon that tails the schedd's job_queue.log and responds to client requests.  The schedd should pass the client queries to the query handler process which then responds with the normal protocol.  Further, the query handler should be able to filter and project the classads it tails.\n\n</p><p>Design doc to follow.\n\n</p><p>A few items to think about:\n</p><ul>\n<li>How does the query handler get the client query?  Does it become part of the schedd ad (client talks to query_handler, getting the coordinates from the collector)?  Does the schedd handle the request, handing it off to the appropriate query handler?  Does a third-party-daemon (shared_port or something new?) handle the request and route it appropriately?\n</li><li>If the query handler can filter out jobs, what are the semantics?  What if I change a job didn't pass the filter at submit time but passes it later (and vice versa)?  For projections, how do we determine an attribute should be kept (what if an attribute A whitelisted in the projection refers to attribute B but we see B before A in the submit)?\n</li><li>What are the semantics of the response?  Is it simply a mirror of the schedd job_queue.log, delayed by up to N seconds?  Or is the response guaranteed to be up-to-date with the latest commit (meaning we need to check the job_queue.log for each query handled)?</li></ul>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Aug-04 15:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=40837\">[40837]</a></span>: First prototype of the query handler worth sharing. <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=4510\" onclick=\"get_ticket_and_populate_wrapper('4510'); return false;\" title=\"Separate query handler for schedd\">#4510</a></span>  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "experimental", "last_change": "2014-Aug-04 14:41", "status": "new", "created": "2014-Aug-04 14:41", "fixed_version": "2014-Aug-04 14:41", "broken_version": "", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "bbockelm@cse.unl.edu", "due_date": ""}