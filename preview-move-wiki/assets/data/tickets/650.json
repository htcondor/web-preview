{"id": 650, "title": "Ticket #650: Send our Stork patches upstream to LSU", "description": "<blockquote>\nI talked w/ Tevfik, and LSU will take over the care and feeding of Stork from UW. So UW needs to send some important patches back to LSU, and then LSU will take over the care and feeding of stork.  These patches are essentially changes that we've made to stork that are (a) important moving forward, and (b) have happened since Tevfik forked Stork development.\n\n<p>Once the above is resolved, we can either continue to redistribute new versions of Stork with Condor (i.e. treat it as an external), or simply direct folks to grab it directly from LSU if they wish.</p></blockquote>", "remarks": "<blockquote>\nFrom email sent to Mehmet (balman@cct.lsu.edu) 04/23/09 03:15 pm:\n\n<p></p><ol>\n<li>\"Current\" stork at LSU is based on Condor 6.9.4\n\n<p></p></li><li>I'll send you a 'diff -c' of 6.9.4 -&gt; trunk of the stork subdirectory\n\n<p></p></li><li>You'll then attempt to patch LSU Stork against this diff, we'll probably\nneed to work together somewhat to get the patch to apply cleanly (I suspect).\n\n<p></p></li><li>The Condor team will then \"remove\" our stork from our repository and build.\n\n<p></p><ol>\n<li>We'll make stork an external that you'll \"push\" to us (probably as a\ntarball).\n\n<p></p></li><li>We'll build that snapshot of LSU Stork as a Condor external, and will\nship the LSU Stork binaries (as built by us) with Condor.\n</li></ol>\n\n<p></p></li><li>Should LSU Stork be updated to work use the updates to \"core\" Condor\nlibraries (Daemon Core, New <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>, etc)? I would suggest that the answer\nshould be \"yes\". Benefits would include bug fixes, security fixes,\nperformance updates, etc.  LSU Stork almost certainly relies on Condor\nlibrary APIs that have changed since 6.9.4, and some level of effort will\nmost certainly be required to re-synchronize these.\n\n<p></p><ol>\n<li>We need to do a (hopefully quick) analysis to determine what subset of the\nCondor libraries LSU Stork requires.  Mehmet believes that this has already\nbeen done. Should we try to try to remove as many of the dependencies as\npossible?\n\n<p></p></li><li>Should LSU keep LSU Stork up to date with the above libraries (again, I\nwould assert \"yes\"). If so, how would we coordinate this?\n\n<p></p></li><li>LSU currently does <em>not</em> distribute source code to LSU Stork...\nObviously, however, for 4b, that would have to change, at least to the level\nthat it's distributed to us.\n\n<p></p></li><li>Building the external could be difficult because it'll require parts of\nCondor to be built first and/or building parts the parts of the Condor\nlibraries that LSU Stork requires.\n\n<p></p></li><li>The Condor team currently has in our repository a limited number of\nautomated Stork tests, but I understand that these have been disabled for\nsome time, and I have no idea of their current status -- they may need\nupdating.\n\n<p></p></li><li>Perhaps LSU should consider building Stork with Metronome?\n\n<p></p></li><li>Mehmet probably will need an account on the Condor developer's Wiki for\nbug tickets. etc.\n</li></ol>\n\n<p></p></li><li>Integration with Condor, mostly DAGMan. DAGMan still supports this, but it's certainly not well tested, and, automated tests would be very helpful.\n\n<p></p></li><li>Are there other Condor integration points that we'd need to look at?  Not that I know of....\n\n<p></p></li><li>Licenses.... We'll need to make sure that our Licenses are compatible.\n\n<p></p></li><li>Perhaps we (the Condor team) should consider building a 'DaemonCore'\ndistribution of Condor libraries similar to New <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> or libcondorapi --\nthe smallest subset of Condor libraries that would be required to build a\n<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> based daemon based on <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span>.  This would require a\nnon-trivial amount of effort, and I don't know if it'd be worth the effort\nconsidering that Condor's source code is already available.\n\n<p></p></li><li>The Lease Manager will be used by LSU Stork, which Yet Another Dependency.\nShould the Lease Manager become a \"standard\" part of LSU Stork?\n\n<p></p></li><li>LSU Stork relies on the credd....  Again, how should this be handled?\nWill Condor use the credd in the future, or will we incorporate features of\nthe \"Stork Credd\" into the other (Windows credd) and make a single unified\ncredd?  If so, should LSU Stork switch using this new unified credd.  The\nother option is that Condor drops the current \"Stork credd\" from our sources\nand transfer it to LSU (with the rest of Stork).</li></ol>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "todo", "last_change": "2012-Oct-17 06:03", "status": "defer", "created": "2009-Aug-03 13:50", "fixed_version": "2009-Aug-03 13:50", "broken_version": "", "priority": "3", "subsystem": "", "assigned_to": "nleroy", "derived_from": "", "creator": "tannenba", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tannenba@cs.wisc.edu", "due_date": ""}