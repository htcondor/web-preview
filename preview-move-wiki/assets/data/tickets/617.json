{"id": 617, "title": "Ticket #617: Parse Condor tool command-line options  consistently", "description": "<blockquote>\nWe want to use gnu-style command line parsing for all Condor command-line tools.  For now, we will only be concerned with the Condor tools - the daemons will stay as they are.\n\n<p>The plan:\n</p><ol>\n<li>For some backwards compatibility, have a config knob that says <code>USE_GNU_STYLE_COMMAND_LINE_ARGS</code> (or some such) that is True or False.  In the dev series the default could be true, and in the stable series false.  Eventually we would purge the false case.\n</li><li>For the True case, tools should make use of <a class=\"file\" href=\"rlog?f=src/condor_util_lib/my_getopt.c\">/src/condor_util_lib/my_getopt.c</a></li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2009-Jul-09 13:58:11 by cory:</em> <br/>\n\nCompleted so far:<br/>\n\n-Preliminary exploration of getopt complete!<br/>\n\n-condor_tools/advertise.cpp copied into a working directory for experimentation.<br/>\n\n-commandline arguements re-written to use getopt!<br/>\n\n--new arguement code tested in test file (not actual advertise.cpp, just copied it over to blank file to see if it'd work as written), appears to be working\n\n<p>POSSIBLE ISSUE: getopt will take valid options in any order, so the following code is valid:<br/>\n    \"adversise.out --tcp COMMAND FILENAME --debug\"<br/>\n\nthe code still enforces COMMAND and FILENAME to be in that order, but other options can be inserted between them and after them, get opt will just grab those first and move COMMAND and FILENAME to the end of argv. I dont see this as being a huge issue, but I just want to make sure this functionality is acceptable\n\n</p><p>TODO:<br/>\n\n-switch from using GNU getopt.h to condors apache compatible my_getopt.c<br/>\n\n-build advertise.cpp with the new code and test (may need help with this)<br/>\n\n-add the config knob (currently just using a hardcoded boolean. I wanted to attack the getopt code first)\n\n</p><p>-rewrite the rest of the tools\n\n</p><p></p><hr/>\n<em>2009-Jul-30 12:24:44 by tannenba:</em> <br/>\n\nHi Cory, how is this effort going?  Could you please update this ticket with where you are?  Thanks.\n\n<p></p><hr/>\n<em>2009-Jul-31 11:16:09 by cory:</em> <br/>\n\nCompleted my pass through the condor_tools folder. There are currently 5 files I have yet to complete. A number of files I don't think need any changes (they dont have any options).\n\n<p>Ran into two big bugs:\n1) Getopt does not allow for multiple args on an option\n2) Getopt, while it does let you create custom error messages, doesnt let you specify specific behavior on an error.\n\n</p><p>Both of these I resolved!\n\n</p><p>1) I experimented some with getopt's internals, and discovered that if i told getopt the option didnt have any args, I could then use the optind variable to test the elements in argv after that option. So, I wrote some code that checks the next entry after an option, and then behave like getopt if the next argument doesnt exist or else starts with '-' (-h or --help for instance), indicating it's an option, not an option arg. That nice thing here is that i can incriment optind and test again, so I can test for as many args on an option as i like. Lastly, the code the moves non-option elements to the end only does this during the getopt() call, and it does it based on optind's position. So if I incriment optind beyond the args, it will leave them where they are. Thus, I have a hack that allows for multiple args now.\n\n</p><p>By fun extension, this fix also allows custom functionality during an argument error (IE arg not found)(2),and it will allow me to fix even another one that saves pointers to the args instead of actually assigning their values (user_prio.cpp).\n\n</p><p>So, I'm left with 5 files that havent been converted. One is the aforementioned user_prio, which I know how to fix, I just havent finished fixing, and 4 were extra-tricky and are taking me a little bit longer.\n\n</p><p>The files I didnt change are: invalidate_host.cpp, kill.cpp, return-n.c, test_calc.cpp, and view_collection.cpp\n\n</p><p>The arg parsing for all of these don't involve any options, so I dont think they need getopt functionality, though I yeild to your call.\n\n</p><p>Otherwise, I need just need to finish those last few files, get the config_knob added, and then test. I've done some preliminary testing of arg parsing in a test file, and that was working nice and pretty.\n\n</p><p></p><hr/>\n<em>2009-Aug-03 14:51:54 by tannenba:</em> <br/>\n\nCool.  When you are ready to test, please make a branch and push your changes into git (follow the conventions in <span class=\"wiki\"><a href=\"wiki?p=GitPushChecklist\" title=\"Git Push Checklist\">GitPushChecklist</a></span> please, and feel free to ask for help if u have any questions about this).  This way, someone else can be doing a code review while you are testing.\n\n<p>Once you are done w/ the tools in src/condor_tools, and we confirmed everything is good via code review and your testing, you can  move on to the rest of the tools in Condor.\n\n</p><p>Thanks!\n\n</p><p></p><hr/>\n<em>2009-Aug-04 16:38:49 by cory:</em> <br/>\n\n2 files to go.\n\n<p>cod_tool, which is a little confusing, but I'm making headway.\n\n</p><p>q_edit. This file claims that options must be entered in a specific order (namely debug must be first, followed by name, if they're used) is this true?\n\n</p><p>Spoke with Alan <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DeSmet\" title=\"De Smet\">DeSmet</a></span> about how to set up a Config_Knob, learned this is done through params. Let Pete know about my param (USE_GNU_ARGS, default: false) so he can include it in his code. Have begun trying to get this working. Some of the tools will need to have intialization calls add so they can access the params.\n\n</p><p></p><hr/>\n<em>2009-Aug-26 13:50:29 by cory:</em> <br/>\n\nIs code complete. Did some manual testing, have moved on to the large scale testing.\n\n<p>Got some help from Pete Keller about testing.\n\n</p><p>My Workspace ran the testsuite successfully with the new code turned off (testing to make sure nothing broke)\n\n</p><p>Running on NMI, so far the build has only failed on windows, the tests failed 16/16, but i think that's cause I ran them too early (oops...)\n\n</p><p>Currently working on valgrinding some of the new code while I wait for NMI results on the old code.\n\n</p><p></p><hr/>\n<em>2009-Sep-18 11:16:04 by psilord:</em> <br/>\n\nHow is this effort going?\n\n<p></p><hr/>\n<em>2009-Sep-18 12:06:26 by cory:</em> <br/>\n\nOriginally fixed lots of the errors with NMI. The system built 16/16, but failed on windows. I found the error with the windows test, corrected it. The freebsd build then failed... and several other tests failed because of it.\n\n<p>The issue is the file probe_process, which builds into condor_ckpt_probe, keeps rejecting arguments (namely -constraint).\n\n</p><p>No idea what the issue with the freeBSD build was. The output from the build log didnt specify any errors.\n\n</p><p>I've also been a little bit bogged down with start of the semester duties which have been taking time away. These will hopefully be going down now.\n\n</p><p></p><hr/>\n<em>2009-Sep-29 11:14:58 by adesmet:</em> <br/>\n\nPossible STUDENTTASK.\n\n<p></p><hr/>\n<em>2009-Sep-30 14:55:17 by cory:</em> <br/>\n\nRun errors on Rhas 3 fixed. Build is currently failing on MacOS, but it built and ran before and the failure appears to be the external issues arising from hadoop so I believe it's unrelated.\n\n<p>Still waiting for it to try to build on FreeBSD... has been pending for almost a week now.\n\n</p><p></p><hr/>\n<em>2010-Jan-20 15:11:25 by psilord:</em> <br/>\n\nOk, I'm performing the review.\n\n<p></p><hr/>\n<em>2010-Jan-20 16:05:07 by psilord:</em> <br/>\n\nHrm, this feature is around a 7600 line diff. :( Sadness. I don't know if I'll make my deadline.\n\n<p></p><hr/>\n<em>2010-Jan-20 16:27:26 by psilord:</em> <br/>\n\nIn my initial review, this code might be very hard to maintain. For example, a choice is made whether or not we are using gnu getopt or doing our hand parsing. Once this choice is made, the blocks of code associated with each parameter are <strong>duplicated</strong>. This is for many parameters. Obviously, altering one code path could lead to a different stale codepath.\n\n<p></p><hr/>\n<em>2010-Jan-21 10:19:56 by tannenba:</em> <br/>\n\nRe the comment above - admittedly it is not ideal, but it is also for just <em>one</em> stable series release.  The idea is for one stable series we will have both the new-style options and the old-style options available.  The stable series after that will do away w/ the old.  So doing any engineering for long-term maintenance has to be considered within the context that long-term here doesn't mean forever, just about a year.\n\n<p>Also, part of the initial requirements was to make the old-style and new-style whenever possible, i.e. the \"-l\" option to <code>condor_status</code> should work w/ either old or new.\n\n</p><p></p><hr/>\n<em>2010-Jan-21 10:25:58 by psilord:</em> <br/>\n\ntannenba, ok. I do know, though, that for the command line options which are not backwards compatible, we'll probably have to alter a ton of stuff in our test suite codes to use the newer style command line arguments.\n\n<p></p><hr/>\n<em>2010-Jan-21 11:33:28 by psilord:</em> <br/>\n\nI'm merging master into V7_3-getopt-branch in order to get better externals. However, the merge is very dirty and is taking at least a day to sort out.\n\n<p></p><hr/>\n<em>2010-Jan-21 11:38:28 by psilord:</em> <br/>\n\nThe merge exploded, apparently, due to the exact reason I was fretting about. The master and the V7_3-getopt-branch have diverged in the duplicate blocks of code which implement the command line semantics. This merge is going to take a while to reconcile.\n\n<p></p><hr/>\n<em>2010-Jan-21 13:39:24 by psilord:</em> <br/>\n\nOk, for now, I've been switched to another project which should get done faster than this one. Therefore, this one is stalled until I get the other one done.\n<hr/>\n<em>2010-Oct-20 15:59:08 by jfrey:</em> <br/>\n\nBulk change of target version from v070504 to v070505 using ./ticket-target-mover.\n<hr/>\n<em>2011-Jan-27 14:21:33 by danb:</em> <br/>\n\nBulk change of target version from v070505 to v070506 using ./ticket-target-mover.\n<hr/>\n<em>2011-Feb-01 14:49:30 by tannenba:</em> <br/>\n\nBulk change of target version from v070506 to NULL using ./ticket-target-mover.\n\n<p></p><hr/>\n<em>2011-Mar-30 10:54:04 by psilord:</em> <br/>\n\nThis work, unfortunately, is likely going to be abandoned. The reason is that\nthere is so much difference between the branch in which the work was done\nversus the branch to where it should be merged, that untangling it is a pretty non-trivial amount of time.\n\n<p></p><hr/>\n<em>2015-Jul-02 09:00:58 by bbockelm:</em> <br/>\n\nFound this old ticket which looks thoroughly abandoned.  Closing.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2015-Jul-02 09:01", "status": "abandoned", "created": "2009-Jul-07 16:44", "fixed_version": "2009-Jul-07 16:44", "broken_version": "v070300", "priority": "4", "subsystem": "Tools", "assigned_to": "", "derived_from": "", "creator": "tannenba", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tannenba@cs.wisc.edu", "due_date": ""}