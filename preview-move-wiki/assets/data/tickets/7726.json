{"id": 7726, "title": "Ticket #7726: Add int-to-string map of JobStatus attribute to Python bindings", "description": "<blockquote>\nSeriously, this is absurd.  Let's just do this.\n\n<p></p><hr/>\nI propose a new rule for the bindings: API changes should be reviewed, since changing them is such a pain.\n\n<p>I propose a new rule for the bindings: API changes should have a justification, particularly discussing alternatives, extensions, and why the change is the smallest useful one.\n\n</p><p></p><hr/>\nI actually don't have much of a justification, other than to say that an enumeration is clearly the correct thing to do for an enumerated set of values.\n\n<p>This change does <em>not</em> provid an implementation of <code>__str__</code>, so str(JobStatus(1)) will be \"JobStatus.IDLE\", not \"IDLE\".  I feel like we should be able to change this later; should we explicitly reserve that right in that documentation?  (JobStatus(1).name is already \"IDLE\".)\n\n</p><p>This change does <em>not</em> provide a look-up table or function.  It's arguably a smaller change to provide such a table or function, but an enum seems like a natural approach that lends itself to use elsewhere.</p></blockquote>", "remarks": "<blockquote>\n<em>2020-Jul-06 16:58:25 by karpel:</em> <br/>\n\nA quick-and-dirty pure-Python solution:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">import enum\n\nclass JobStatus(enum.IntEnum):\n    IDLE = 1\n    ...\n\nprint(JobStatus.IDLE)\nprint(repr(JobStatus.IDLE))\nprint(JobStatus(1))\nprint(JobStatus.IDLE.name)   # the string \"IDLE\"\nprint(JobStatus.IDLE.value)  # the integer 1\n\n# JobStatus.IDLE\n# &lt;JobStatus.IDLE: 1&gt;\n# JobStatus.IDLE\n# IDLE\n# 1\n</pre></div>\n\n\n<p></p><hr/>\n<em>2020-Jul-14 13:21:06 by karpel:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>Given that I suggested the implementation, I am fine with it :)\n\n</p><p>re: implementing <code>__str__</code>, I think we can skip it. We can point to the Python <code>enum</code> docs and say \"it behaves like that; do whatever you want\". From one perspective, the job status really is 1; we just happen to give it the <code>name</code> (see what I did there?) IDLE. This API reflects that.\n\n</p><p>re: lookup table, the enum is actually its own lookup table in both directions! (Though I neglected to mention the other direction in my initial comment...)\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">import enum\n\nclass JobStatus(enum.IntEnum):\n    IDLE = 1\n    ...\n\n\nassert JobStatus(1) is JobStatus[\"IDLE\"]\n</pre></div>\n\n\n<p>I think the more interesting question is: do we think we'll ever want to return one of these from a C++ method? If so, I think this definition (unfortunately) needs to live inside the C++ layer.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Sep-29 13:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=61367\">[61367]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7789\" onclick=\"get_ticket_and_populate_wrapper('7789'); return false;\" title=\"HTCondor should unique-ify PROCD_ADDRESS for us on Windows\">#7789</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7726\" onclick=\"get_ticket_and_populate_wrapper('7726'); return false;\" title=\"Add int-to-string map of JobStatus attribute to Python bindings\">#7726</a></span>) Release notes.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-24 08:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60207\">[60207]</a></span>: pep8 and black for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7726\" onclick=\"get_ticket_and_populate_wrapper('7726'); return false;\" title=\"Add int-to-string map of JobStatus attribute to Python bindings\">#7726</a></span>  (By Josh Karpel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-16 17:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60145\">[60145]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7726\" onclick=\"get_ticket_and_populate_wrapper('7726'); return false;\" title=\"Add int-to-string map of JobStatus attribute to Python bindings\">#7726</a></span>) Python 2 compatibility.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-07 16:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60093\">[60093]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7726\" onclick=\"get_ticket_and_populate_wrapper('7726'); return false;\" title=\"Add int-to-string map of JobStatus attribute to Python bindings\">#7726</a></span>) Add the obvious <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobStatus\" title=\"Job Status\">JobStatus</a></span> enum to the Python bindings.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2020-Sep-29 13:23", "status": "resolved", "created": "2020-Jul-06 16:49", "fixed_version": "2020-Jul-06 16:49", "broken_version": "", "priority": "2", "subsystem": "PythonBinding", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, karpel@wisc.edu, tannenba@cs.wisc.edu", "due_date": ""}