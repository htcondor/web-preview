{"id": 7274, "title": "Ticket #7274: Python RemoteParam object lists keys it doesn't contain", "description": "<blockquote>\nThe htcondor.RemoteParam() object lists keys for items that aren't actually in the object, causing <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=KeyErrors\" title=\"Key Errors\">KeyErrors</a></span> when trying to dereference them.  Example code:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">daemon_ad = htcondor.Collector().locate(htcondor.DaemonTypes.Master)\nparam = htcondor.RemoteParam(daemon_ad)\nfor k in param:\n  print(k, param[k])\n</pre></div>\n\nThis will eventually hit a key that's not defined and raise <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=KeyError\" title=\"Key Error\">KeyError</a></span>.\n\n<p>Another reproducer (create \"param\" as above):\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">&gt;&gt;&gt; \"STARTER_JOB_ENVIRONMENT\" in param\nFalse\n&gt;&gt;&gt; \"STARTER_JOB_ENVIRONMENT\" in param.keys()\nTrue\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2019-Sep-19 16:56", "status": "new", "created": "2019-Sep-19 16:56", "fixed_version": "2019-Sep-19 16:56", "broken_version": "v080804", "priority": "3", "subsystem": "PythonBinding", "assigned_to": "", "derived_from": "", "creator": "matyas", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matyas@cs.wisc.edu", "due_date": ""}