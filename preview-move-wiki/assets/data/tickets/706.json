{"id": 706, "title": "Ticket #706: RELEASE_CLAIM & daemoncore reaper race condition", "description": "<blockquote>\nIn KillFamily::currentfamily() if the family size is zero, we emit an ERROR into the log file about that fact and continue. This disrupts the test suite.\n\n<p>In the scenario of:\n</p><ol>\n<li>starter finishes\n</li><li>waitpid() reaps the pid\n</li><li>schedd sends RELEASE_CLAIM\n</li><li>startd goes from Claimed/Busy to Preempting/Vacating\n</li><li>startd sends SIGTERM to process, which is non existent, an \"ERROR: ...\" gets emitted to the logs.\n</li><li>startd sends SIGKILL to process, which is non existant and a different error gets emitted with ambiguious output.\n</li><li>startd calls the daemoncore reaper for the originally finished starter.\n</li></ol>\n\n<p>The race is that apparently a lot of things can happen while a pid was reaped by waitpid() and not yet by daemoncore.\n\n</p><p>So, I've change the ERROR message to a WARNING since I can't tell if this is situation normal or what. Ultimately it seems the startd ends up doing the right thing. so this needs review.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Sep-02 14:31:42 by psilord:</em> <br/>\n\nThere is a danger here, that if the startd manages to use an out of band method to signal the starter, say the Starter.cpp interface, instead of the daemon core signal interface, then it may be possible to send a signal as root to a process which isn't part of the condor family tree. This needs investigation.\n\n<p></p><hr/>\n<em>2009-Oct-05 15:33:48 by psilord:</em> <br/>\n\nOk, I investigated this problem but not entirely to the depth that I would prefer. I had a patch which passed review on multiple people, but in the end I didn't put it in because it dawned upon me some extra twisty passages in the code and I didn't like how the patch interacted with it.\n\n<p>I have a new patch which should be reviewed by dab on wed which should be closer to what we need.\n\n</p><p></p><hr/>\n<em>2009-Oct-06 16:30:36 by psilord:</em> <br/>\n\nOk, I made a fix and it was reviewed by danb.\n\n<p>I found some other problems in the code related to the codepath in Starter::reallykill() that will arise in another ticket.\n\n</p><p>This ticket is resovled.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Oct-29 18:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/b32bcdeeb682bfff580cfad58df9d6625676829c\">[25083]</a></span>: DOcumented fix for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=706\" onclick=\"get_ticket_and_populate_wrapper('706'); return false;\" title=\"RELEASE_CLAIM &amp; daemoncore reaper race condition\">#706</a></span>.  (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Oct-06 16:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/ecbbd01545d99189fa89a1ac692647981099c364\">[15925]</a></span>: Don't send a signal to a Starter process if it has already been reaped by daemoncore but the real reaper not called yet. This works toward fixing the race condition described in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=706\" onclick=\"get_ticket_and_populate_wrapper('706'); return false;\" title=\"RELEASE_CLAIM &amp; daemoncore reaper race condition\">#706</a></span>. It was reviewed by danb.  (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Sep-01 18:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/d98e18d7b861db5b5a720dd5f4669c45ee2c12c7\">[15595]</a></span>: Changed an ERROR to a WARNING so it doesn't trip our test suite codes. This may seem terrible, but in analyzing the ERROR log entry and context (gthain, danb, and I) can't figure out why it is an error at all since it seems to be situation normal. See ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=706\" onclick=\"get_ticket_and_populate_wrapper('706'); return false;\" title=\"RELEASE_CLAIM &amp; daemoncore reaper race condition\">#706</a></span>, which describes the conditions under\u00a0[...]\n (By Peter Keller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2010-Jan-31 13:40", "status": "resolved", "created": "2009-Sep-01 18:25", "fixed_version": "2009-Sep-01 18:25", "broken_version": "v070302", "priority": "2", "subsystem": "Daemons", "assigned_to": "psilord", "derived_from": "", "creator": "psilord", "rust": "", "customer_group": "other", "visibility": "public", "notify": "psilord@cs.wisc.edu,gthain@cs.wisc.edu,danb@cs.wisc.edu,matt@cs.wisc.edu", "due_date": ""}