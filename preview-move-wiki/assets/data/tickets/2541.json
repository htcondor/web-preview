{"id": 2541, "title": "Ticket #2541: Memory utilization of classads (revised)", "description": "<blockquote>\n<span class=\"section\"><h2>Problem Description</h2></span>\nWhen running heap profiles experiments on the schedd, we've found that doubling the queue count == doubling of the classad count in the schedd even though most of the data is the same across ads.\n\n<p>Also when doing performance calculations on the collector it was determined that most of the time inside of the collector was spent churning on redundant data.\n\n</p><p><span class=\"section\"></span></p><h2>Proposed solution</h2>\nKeep a cache of the current in memory classads.\n\n<p><span class=\"section\"></span></p><h2>Design </h2>\n<span class=\"subsection\"><h3>Approach key [str_name] =  key[str_value] = weak_ptr&lt;~ExprTree&gt; </h3></span>\nAfter several iterations on possible implementations I've settled on this implementation because it has optimal speed performance without sacrificing any space savings.\n\n<p>One thing that becomes apart when analyzing the data is that there is a large % or redundant data and a small % of data which churns.  We could easily save more memory by having meta information in classads (possibly through nested ads).\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">m_Cache[name][value] = weak_ptr&lt;Cache_Element&gt;\n</pre></div>\n\n\n<p>All caching code backs against the Insert function(s) in classads.  It was optimized so the main path by which messages come across the wire will do a look-up using a single string based function in the classads layer:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">bool Insert(const std::string&amp; serialized_nvp);\n</pre></div>\n\n\n<p><span class=\"subsection\"></span></p><h3>Initial Results</h3>\nSpace savings depends on a couple of variables:\n\n<p></p><ul>\n<li>Very simple tests yield space savings ~10-15% with iLoc savings ~ 10%.  This is very difficult to quantify until it's tested at scale what the actual difference will yield.\n</li><li>The complexity of the ExprTree's in the Cache, more complex &gt;&gt; savings in both speed and perf.  So it is \"fluid\"\n</li></ul>\n\n<p><span class=\"section\"></span></p><h2>Debugging </h2>\nThere are a couple of internal features which have been added to aid in the diagnostics of the behavior of caching.  There is an <strong>internal only</strong> knob which is hooked through DAEMON_CORE which enables a daemon to dump it's cache to a &lt;subsystem&gt;_classad_cache file under LOG when <strong>DEBUG_CLASSAD_CACHE=TRUE</strong> .  The file dumping is hooked through SIGUSR2\n\n<p></p><div class=\"code\">\n<pre class=\"code\">kill -s 12 &lt;collector_pid&gt; -&gt; drops $LOG/COLLECTOR_classad_cache\n</pre></div>\n\n\n<p><strong>NOTES</strong>\n</p><ul>\n<li>This works for all DAEMON_CORE based daemons.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2012-May-15 16:24:04 by tstclair:</em> <br/>\n\nAfter taking it off the shelf, dusting off, and giving this ticket much needed love things are looking good.  Initial tests yield hit rates ~80% on average with a fair amount of variance depending on the workload.\n\n<p>I will update this ticket to include the design.  Once my tests come back green I will push a final squash commit for review.\n\n</p><p></p><hr/>\n<em>2012-May-16 15:11:39 by tstclair:</em> <br/>\n\n<ul>\n<li>pushed to tracking branch: master-classad-cache\n</li><li>local tests all passed, will run through NMI (previously built cleanly through NMI)\n</li></ul>\n\n<p></p><hr/>\n<em>2012-May-16 15:14:03 by tstclair:</em> <br/>\n\nAny extra lexer optimization would still be handy, because as entries get flushed from the cache they still need to be lex'd prior to re-entry.\n\n<p></p><hr/>\n<em>2012-May-22 16:25:15 by tstclair:</em> <br/>\n\nremoving lexer mods and cleaning up + running through local tests post mods to revised approach.  Will then commit and create new tickets which outline further potential gains.\n\n<p></p><hr/>\n<em>2012-May-30 15:34:11 by jfrey:</em> <br/>\n\n<strong>CODE REVIEW</strong> of first iteration (<span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/10ae0cd40ca79cf2b39873ffbb2173940a1606a8\">[32102]</a></span>, git hash 10ae0cd4):\n\n<p></p><ul>\n<li>The new functions nvp() and split_nvp() are unused. I'm assuming they're meant to be part of further optimizations.\n</li></ul>\n\n<p><em>These have been removed and cleaned</em>\n\n</p><p></p><ul>\n<li><span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAdCache\" title=\"Class Ad Cache\">ClassAdCache</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CachedExprEnvelope\" title=\"Cached Expr Envelope\">CachedExprEnvelope</a></span> make frequent use of shared_ptr::use_count() and weak_ptr::use_count(). The Boost docs and the STL spec say that this method isn't necessarily efficient and shouldn't be used for production code.\n</li></ul>\n\n<p><em>Non starter, does not affect perf</em>\n\n</p><p></p><ul>\n<li>For ClassAdCache::dump_keys() and CachedExprEnvelope::_debug_dump_keys(), I'd prefer if they took a FILE* to any already-opened file.\n</li></ul>\n\n<p><em>I actually don't like this recommendation</em>\n\n</p><p></p><ul>\n<li>In MatchClassAd::ReplaceLeftAd(), passing in a NULL changes <code>ladParent</code> but not <code>lad</code>, which is different behavior than before. ReplaceRightAd() has the same problem.\n</li></ul>\n\n<p><em>I've verified behavior and went through that code many times so I think I will need to see exactly what you are talking about</em>\n\n</p><p></p><ul>\n<li>In compat_classad::ClassAd::Insert(), the modified ExprTree* isn't propagated to the caller. If the expression is cached, then the caller's ExprTree* is no longer valid, which will cause problems if they try to use it.\n</li></ul>\n\n<p><em>Fixed</em>\n\n</p><p></p><ul>\n<li>A caller to ClassAd::Insert() may have their ExprTree* modified to point to a cached equivalent ExprTree*. If they kept another copy of the old pointer and try to use it, they can crash. If they Evaluate() on the modified ExprTree*, they will be in the wrong scope. These will hopefully be unusual patterns, but could be lurking surprises.\n</li></ul>\n\n<p><em>Fixed</em>\n\n</p><p></p><ul>\n<li>A caller to ClassAd::Lookup() or ClassAd::LookupInScope() will get back the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CachedExprEnvelope\" title=\"Cached Expr Envelope\">CachedExprEnvelope</a></span> for the ExprTree* if caching was enabled on insertion (the default). If they want to inspect the ExprTree*, they will have to know to call ExprTree::self().\n</li></ul>\n\n<p><em>All virtual function go through self so it should be clean, which is why the Env-&gt;Letter idiom was chosen</em>\n\n</p><p></p><ul>\n<li>If caching goes badly, every attribute/value pair gets an additional overhead of 48 bytes for the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CachedExprEnvelope\" title=\"Cached Expr Envelope\">CachedExprEnvelope</a></span>, plus the size of the attribute name (in CachedExprEnvelope::m_szKey).\n</li></ul>\n\n<p><em>Non-starter with redesign, and has been tested at length</em>\n\n</p><p></p><ul>\n<li>Caching values that are integer, real, or boolean literals doesn't save much space and can use a lot of extra space if there are more than a few unique values for a given attribute. Consider not caching these Literals.\n</li></ul>\n\n<p><em>Will let other test justify</em>\n\n</p><p></p><ul>\n<li>It doesn't look like nested <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> are handled. If an attribute in a cached nested ad is part of an evaluation and it references anything that's not local, the wrong parent ad(s) will be searched.\n</li></ul>\n\n<p><em>Will need example, as all tests pass</em>\n\n</p><p></p><ul>\n<li>Possible alternative: Move parentScope from <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprTree\" title=\"Expr Tree\">ExprTree</a></span> to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span>. In most places where scoping information is required, it's stored in an <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=EvalState\" title=\"Eval State\">EvalState</a></span> or is queried from a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span>. Some details on this proposal:\n<ul>\n<li><span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprTree\" title=\"Expr Tree\">ExprTree</a></span> would be smaller, saving memory.\n</li><li>ExprListIterator::Initialize() would have to be modified to take a scope parameter.\n</li><li>ExprTree::Evaluate() and ExprTree::Flatten() variants that don't have an <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=EvalState\" title=\"Eval State\">EvalState</a></span> parameter would have to be modified to take a scope parameter or be removed.\n</li><li>ClassAd::AttrList would be a map of std::string to shared_ptr&lt;ExprTree&gt;.\n</li><li><span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CachedExprEnvelope\" title=\"Cached Expr Envelope\">CachedExprEnvelope</a></span> would not be necessary, but the rest of the caching code (using shared_ptr and weak_ptr) would be largely the same.\n</li><li>This idea has the same problem with nested ads. The best solution I have is to not cache them.\n</li></ul>\n</li></ul>\n\n<p><em>Outside of scope of this ticket</em>\n</p><hr/>\n<em>2012-May-30 15:36:53 by jfrey:</em> <br/>\n\nWhile reviewing this code, I had a few ideas for additional memory optimizations. The sizes mentioned are on x86_64 linux:\n\n<p></p><ul>\n<li>In <code>Literal</code>, change <code>absTimeValueSecs</code> and <code>strValue</code> into pointers and\n  move <code>strValue</code> into the enum. This would save 16 bytes for all literals\n  that aren't strings or absolute times. String literals would save 8\n  bytes.\n</li><li>In <code>AttributeReference</code>, turn <code>absolute</code> into a special value of <code>expr</code>.\n  This would save 8 bytes per attribute reference.\n</li></ul>\n\n<p></p><hr/>\n<em>2012-Jun-26 21:54:26 by jfrey:</em> <br/>\n\nFollowup on code review:\n\n<p></p><ul>\n<li>Why don't you like the recommendation of ClassAdCache::dump_keys() and CachedExprEnvelope::_debug_dump_keys() taking a <span class=\"quote\">FILE*</span> instead of a filename? It matches how the parsing behaves and gives the caller more control over how files are opened. In Condor, it allows the use of the safefile functions.\n</li></ul>\n\n<p><em>Because I want to ensure open semantics and it's intended to be a debug only utility to be used only by developers so safefile semantics do not matter</em>\n\n</p><p></p><ul>\n<li>Caching and nested ads are even more broken than I thought. I will attach a example. In the example, attribute C doesn't evaluate properly when caching is enabled. When caching is disabled (done by giving an argument of '0'), it evaluates properly.\n</li></ul>\n\n<p><em>Fixed</em>\n\n</p><p></p><hr/>\n<em>2012-Jun-27 13:46:40 by jfrey:</em> <br/>\n\nI found some additional problems with nested ads. Your most recent fix addresses when a nested ad is the value of an attribute in the parent ad. But it doesn't address when the nested ad is a subexpression. I'll attach a demonstration program similar to the previous one.\n\n<p><em>Fixed</em>\n\n</p><p></p><hr/>\n<em>2012-Jun-29 14:12:37 by johnkn:</em> <br/>\n\nWranger sez - This item needs version history.  please compose a couple of sentences and send to me and or Karen.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2899\" onclick=\"get_ticket_and_populate_wrapper('2899'); return false;\" title=\"classad lex/parse uses up to 50% of the compute time for daemons\">#2899</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nclassad lex/parse uses up to 50% of the compute time for daemons</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3075\" onclick=\"get_ticket_and_populate_wrapper('3075'); return false;\" title=\"Proper build fails on Centos 5\">#3075</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nProper build fails on Centos 5</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3089\" onclick=\"get_ticket_and_populate_wrapper('3089'); return false;\" title=\"Reduce size of classad::Value\">#3089</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nReduce size of classad::Value</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3092\" onclick=\"get_ticket_and_populate_wrapper('3092'); return false;\" title=\"MatchClassAd::ReplaceLeftAd() and ReplaceRightAd() need fixing\">#3092</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nMatchClassAd::ReplaceLeftAd() and ReplaceRightAd() need fixing</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3099\" onclick=\"get_ticket_and_populate_wrapper('3099'); return false;\" title=\"Bug in unparsing quoted ClassAd attribute names\">#3099</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nBug in unparsing quoted <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> attribute names</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3100\" onclick=\"get_ticket_and_populate_wrapper('3100'); return false;\" title=\"New ClassAd::Insert() doesn't handle attribute names properly\">#3100</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nNew ClassAd::Insert() doesn't handle attribute names properly</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3127\" onclick=\"get_ticket_and_populate_wrapper('3127'); return false;\" title=\"Caching code makes ClassAds much less thread-safe\">#3127</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCaching code makes <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> much less thread-safe</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3175\" onclick=\"get_ticket_and_populate_wrapper('3175'); return false;\" title=\"ClassAd caching leaks memory in Condor\">#3175</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\n<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> caching leaks memory in Condor</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"review\" href=\"/tickets?ticket=3441\" onclick=\"get_ticket_and_populate_wrapper('3441'); return false;\" title=\"Fixes for classad caching.\">#3441</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nFixes for classad caching.</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3448\" onclick=\"get_ticket_and_populate_wrapper('3448'); return false;\" title=\"Improving classads hash function\">#3448</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nImproving classads hash function</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3457\" onclick=\"get_ticket_and_populate_wrapper('3457'); return false;\" title=\"reduce the size of classad exprtree nodes\">#3457</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nreduce the size of classad exprtree nodes</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/584/nested_ad.cpp\">nested_ad.cpp</a>\n1010 bytes added by jfrey on 2012-Jun-27 02:55:47 UTC.\n<br/>\nExample showing caching broken for nested ads. Attr C doesn't evaluate properly with caching enabled, but does when caching is disabled. Pass a '0' on the command line to disable caching.<br/>\n</li><li><a href=\"../files/585/nested_ad2.cpp\">nested_ad2.cpp</a>\n1017 bytes added by jfrey on 2012-Jun-27 18:47:36 UTC.\n<br/>\nProgram demonstrating that caching doesn't handle nest ads that are a subexpression in an attribute value. In this case, it's part of a list.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-22 09:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/7ba36b1ca3635ee2d0b3cee087ba9a5e3d737643\">[35262]</a></span>: Remove data members from classad Operation class, and create subclasses by arity <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3457\" onclick=\"get_ticket_and_populate_wrapper('3457'); return false;\" title=\"reduce the size of classad exprtree nodes\">#3457</a></span> parent ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> each subclass of Operation class will have only the necessary data members, so we don't waste space for 2nd &amp; 3rd <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprTree\" title=\"Expr Tree\">ExprTree</a></span> pointers in nodes that have no need of them. ===VersionHistory:Pending===\u00a0[...]\n (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Mar-22 09:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/92e696c90d116a81099a1ffd12b041bcca607560\">[35261]</a></span>: Remove nodeKind member from <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprTree\" title=\"Expr Tree\">ExprTree</a></span>, and replace it with a pure virtual method <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3457\" onclick=\"get_ticket_and_populate_wrapper('3457'); return false;\" title=\"reduce the size of classad exprtree nodes\">#3457</a></span> that all of the derived classes must implement. parent ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Dec-04 14:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/4e06329df233d5b690ce0be7c7fd22a97154bcb7\">[34268]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> Fix Cache - Unparsing issue in xml, and cleanup <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SameAs\" title=\"Same As\">SameAs</a></span> f(n)'s.  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jul-17 14:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/8e6d706a066ae60a91e43c2193b1280c9c57a8fb\">[32823]</a></span>: edit of version history item and knob defn related to new caching of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3127\" onclick=\"get_ticket_and_populate_wrapper('3127'); return false;\" title=\"Caching code makes ClassAds much less thread-safe\">#3127</a></span> ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jul-11 10:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/dea860723cafb255cb8a25e7f6f8137e8b8a2248\">[32702]</a></span>: improve wording of version history item about caching <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-29 14:38</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/1959f94e70e7eb339b96c2c065bbd1a6ee7729a2\">[32548]</a></span>: ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> ===VersionHistory:Complete===  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-29 12:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/2827758def8ea5371664a7a67dd895683df5ef1d\">[32541]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> Update string::npos check for invalid input strings  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-27 14:36</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c0e71b21a6a9a2150ae3bd8cda8e5b4d779a3a9e\">[32496]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> Update for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprList\" title=\"Expr List\">ExprList</a></span>  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-27 12:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/88582eb208e1bcdb7130f0f2c0218b9475afd9b5\">[32490]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> Update caching for nested classads use case.  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-26 18:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/483c5cdb8e7188aa390c5c31849150215283ebd3\">[32484]</a></span>: Fix building of cream and blahp externals. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> classad_stl.h wasn't being installed into the externals directory. The blahp configure line was getting two include directories for boost.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-25 13:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/48e0a2f61a9338501fef6b6436f3b5561245fe7e\">[32464]</a></span>: Fix building of cream_gahp for RHEL 6 <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> (watched by tstclair)  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-22 16:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/00a8b752b264edf04907d6dee4157e89e9acc3f7\">[32460]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> Windows requires explicit inclusion of weak_ptr.hpp  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-22 15:28</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/fd27ffac4dd79efb5273de439ba56a1ceed7eff0\">[32459]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3075\" onclick=\"get_ticket_and_populate_wrapper('3075'); return false;\" title=\"Proper build fails on Centos 5\">#3075</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> remove namespace collision with prefix classad_  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-22 15:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0b4ef89c040a11894a4e0d81d3cd1870af3a6c54\">[32458]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3075\" onclick=\"get_ticket_and_populate_wrapper('3075'); return false;\" title=\"Proper build fails on Centos 5\">#3075</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> Add in order checks for standard features C++11 -&gt; tr1 -&gt; boost. Sadly our code base needs tender love for C++11 support. Also hides boost from classads exposure where possible.  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-22 11:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/2a56ad2e92358d09fe490f17cb45da19a9974900\">[32457]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3075\" onclick=\"get_ticket_and_populate_wrapper('3075'); return false;\" title=\"Proper build fails on Centos 5\">#3075</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> Update build chain to prefer local system boost when possible even when non-proper. This ensures distributed libraries match system where possible.  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-21 17:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/2311e806f58f9c7ed38797c1a9b66e46f5bece81\">[32456]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> &amp; Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3075\" onclick=\"get_ticket_and_populate_wrapper('3075'); return false;\" title=\"Proper build fails on Centos 5\">#3075</a></span> Update cream to use prefixed boost with prefixed classads  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-21 15:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e769fa04043ac0ee9943f516cc7acd02b6e29cee\">[32450]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3075\" onclick=\"get_ticket_and_populate_wrapper('3075'); return false;\" title=\"Proper build fails on Centos 5\">#3075</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> Where boost doesn't exist prefer tr1.  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-21 12:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/f82cf464ce6cbdffe663c5d795eced0ddd0700f1\">[32448]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> NMI build and test updates Fixes Fedora 16 -Werror build Fixes lib_job_router_local failure  (By Timothy St. Clair )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-21 08:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/963254fc999560ec63c8c86ce8e1d81711e43a4d\">[32443]</a></span>: Ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2541\" onclick=\"get_ticket_and_populate_wrapper('2541'); return false;\" title=\"Memory utilization of classads (revised)\">#2541</a></span> - Squashed feature commit for classad caching.  (By Timothy St. Clair )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2013-Jan-14 14:18", "status": "resolved", "created": "2011-Oct-11 15:39", "fixed_version": "2011-Oct-11 15:39", "broken_version": "v070600", "priority": "3", "subsystem": "Daemons", "assigned_to": "tstclair", "derived_from": "#2961", "creator": "tstclair", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu tstclair@redhat.com, jfrey@cs.wisc.edu tannenba@cs.wisc.edu eje@cs.wisc.edu", "due_date": ""}