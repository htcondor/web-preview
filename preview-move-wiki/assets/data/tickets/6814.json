{"id": 6814, "title": "Ticket #6814: Improve JobEventLog (python) API", "description": "<blockquote>\nJosh has found a number of infelicities while working with the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEventLog\" title=\"Job Event Log\">JobEventLog</a></span> in a non-testing capacity.\n\n<p></p><hr/>\n<ul>\n<li>The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEventLog\" title=\"Job Event Log\">JobEventLog</a></span> doesn't close its FDs until it's been garbage-collected.  This causes problems on Windows, where the open FDs prevent directory removal.  Proposed solution: add a close() method which closes any open FDs and prevents the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEventLog\" title=\"Job Event Log\">JobEventLog</a></span> iterator from returning any events.\n\n<p></p></li><li>The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEventLog\" title=\"Job Event Log\">JobEventLog</a></span> should also be an iterable context manager.  (Implement __enter__ (sets timeout to 0) and __exit__ (calls close).\n\n<p></p></li><li>The <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEvent\" title=\"Job Event\">JobEvent</a></span> doesn't provide access to its underlying <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span>.  The goal here is to make attributes discoverable, so maybe the right thing to do is to add the various dictionary methods (maybe not including writes); see how to emulate container types for <a class=\"external\" href=\"https://docs.python.org/2.7/reference/datamodel.html#emulating-container-types\">Python 2.7</a> and <a class=\"external\" href=\"https://docs.python.org/3.7/reference/datamodel.html#emulating-container-types\">Python 3.7</a>.  The advantage of doing this over just exposing the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> would be (a) no copies or no worries about exposing a mutable internal data structure and (b) the job event \"<span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>\" really are dictionaries -- they should never contain an <code>ExprTree</code>.  See <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6820\" onclick=\"get_ticket_and_populate_wrapper('6820'); return false;\" title=\"Improve Python bindings' JobEvent interface\">#6820</a></span> for the Python 2.7 implementation.  Python 3.7 drops the iter*() methods, but changes keys(), values(), and items() to return 'view objects'.  Not sure what the idiomatic solution here is.\n\n<p></p></li><li>We should implement <code>__str__</code> and <code>__repr__</code>.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2018-Nov-01 14:21:44 by tlmiller:</em> <br/>\n\nI think this list is up-to-date.  Let me know, or if I've misrepresented something.\n\n<p></p><hr/>\n<em>2018-Nov-01 14:32:56 by karpel:</em> <br/>\n\nLooks right to me.\n\n<p>A rationale for exposing the entire classad (maybe through a <code>.classad()</code> method?) is that it could help a lot when developing. You grab the classad and can then print it out to look at all the attributes. When you know what you want, you go back to <code>.</code> syntax to extract them efficiently. A significant part of my frustration with figuring out how to use the events is figuring out which names have what information behind them.\n\n</p><p></p><hr/>\n<em>2018-Nov-01 15:23:23 by tlmiller:</em> <br/>\n\nThanks.  Body text updated.\n\n<p></p><hr/>\n<em>2018-Nov-02 14:27:54 by karpel:</em> <br/>\n\nTJ asked me to give some thoughts on possible <code>__str__</code> and <code>__repr__</code> methods.\n\n<p><code>__str__</code> should probably return the message that shows up in the actual event log on disk. If not, there should probably be a <code>event_msg()</code> method that does do that. This would make it easy to use the bindings to stream the event log as-written to somewhere else (stdout is obvious, but maybe over a network to somewhere else).\n\n</p><p><code>__repr__</code> is murkier, but a somewhat-common convention is to return something that looks sort of like a constructor call with keyword arguments. So maybe it would look something like\n\n</p><p><code>&lt;SubmitEvent(cluster=1, proc=2, timestamp=1234)&gt;</code>\n\n</p><p>Different event types could then include different parameters.\n\n</p><p>Alternatively, all events could just look like\n\n</p><p><code>&lt;JobEvent(type=Submit, cluster=1, proc=2, timestamp=1234)&gt;</code>\n\n</p><p>The main purpose of the <code>__repr__</code> is for programmers to look at, so I don't think there needs to be a lot of information there - just a little more than the default, which is to show the memory location :)\n\n</p><p></p><hr/>\n<em>2018-Nov-07 11:06:52 by tlmiller:</em> <br/>\n\nWe should also think about dictionary- vs attribute- based accessors.  Arguably, the properties we guarantee should be attributes and the ones we don't in the dictionary (and maybe decline to do anything in __setAttr__() for the constants?).\n\n<p></p><hr/>\n<em>2018-Nov-07 13:13:00 by karpel:</em> <br/>\n\nThat divide between attributes and other items makes sense to me.\n\n<p>This:\n\n</p><p></p><div class=\"verbatim\">\n<pre>&gt;&gt;&gt; x = (0, 1, 2)\n&gt;&gt;&gt; x[0] = 5\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'tuple' object does not support item assignment\n</pre></div>\n\n\n<p>indicates that the correct thing to do for <code>__setattr__</code> and <code>__setitem__</code> is to raise a <code>TypeError</code>, which seems like an odd choice to me, but I guess it's what's done...\n\n</p><p>I don't see any reason to have any mutable attributes or items visible from Python. People can build a mutable object of their own by getting data from the event if they want, but the event itself should always represent exactly what came out of the log.\n\n</p><p></p><hr/>\n<em>2018-Nov-08 14:45:46 by tlmiller:</em> <br/>\n\nAfter talking with TJ and Mat, our plan is to basically deprecate / actually remove the <code>__getattr__</code> method, make type, cluster, and proc immutable attributes, and implement <code>__getkey__</code> but not <code>__setkey__</code>, where <code>__getkey__</code> will throw if asked for a key that doesn't exit, rather than return <code>None</code>.\n\n<p>The <code>TypeError</code> thing seems a little weird to me, but I'll investigate that a little further; I expect that if we just don't define __setkey__, the right thing(s) will happen.\n\n</p><p></p><hr/>\n<em>2018-Dec-11 14:18:22 by tlmiller:</em> <br/>\n\nAt this point (with everything else implemented), I'd like to make Python 3 container type stuff a different ticket.\n\n<p>Docs still required.\n\n</p><p></p><hr/>\n<em>2018-Dec-12 17:53:31 by tlmiller:</em> <br/>\n\nTickets made, docs still required; we should also get a friendly user to play with the new stuff before releasing it.\n\n<p></p><hr/>\n<em>2018-Dec-29 19:20:02 by tlmiller:</em> <br/>\n\n... needs to be merged.\n\n<p></p><hr/>\n<em>2018-Dec-31 14:28:46 by tlmiller:</em> <br/>\n\n... merge complete.  Needs documentation.  (Should be readthedocs'.)\n\n<p></p><hr/>\n<em>2019-Feb-26 14:49:53 by tim:</em> <br/>\n\nEven though documentation is in read the docs. We should have a version history entry (perhaps with a link to readthedocs).</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6820\" onclick=\"get_ticket_and_populate_wrapper('6820'); return false;\" title=\"Improve Python bindings' JobEvent interface\">#6820</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nImprove Python bindings' <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEvent\" title=\"Job Event\">JobEvent</a></span> interface</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=6838\" onclick=\"get_ticket_and_populate_wrapper('6838'); return false;\" title=\"Improve JobEvent (Python) API - Python 3 idioms\">#6838</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nImprove <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEvent\" title=\"Job Event\">JobEvent</a></span> (Python) API - Python 3 idioms</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6839\" onclick=\"get_ticket_and_populate_wrapper('6839'); return false;\" title=\"Add regression tests for new JobEvent(Log) APIs\">#6839</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nAdd regression tests for new JobEvent(Log) APIs</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-26 17:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56251\">[56251]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6814\" onclick=\"get_ticket_and_populate_wrapper('6814'); return false;\" title=\"Improve JobEventLog (python) API\">#6814</a></span>) Release note.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Dec-29 19:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55932\">[55932]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6814\" onclick=\"get_ticket_and_populate_wrapper('6814'); return false;\" title=\"Improve JobEventLog (python) API\">#6814</a></span>) Fix build problems.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Dec-11 14:15</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55893\">[55893]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6814\" onclick=\"get_ticket_and_populate_wrapper('6814'); return false;\" title=\"Improve JobEventLog (python) API\">#6814</a></span>) Add __str__ and __repr__ to (Python) <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEventLog\" title=\"Job Event Log\">JobEventLog</a></span>.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Dec-09 18:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55892\">[55892]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6814\" onclick=\"get_ticket_and_populate_wrapper('6814'); return false;\" title=\"Improve JobEventLog (python) API\">#6814</a></span>) Add __enter__ and __exit__ to (Python) <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEventLog\" title=\"Job Event Log\">JobEventLog</a></span>.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Dec-08 19:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55872\">[55872]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6814\" onclick=\"get_ticket_and_populate_wrapper('6814'); return false;\" title=\"Improve JobEventLog (python) API\">#6814</a></span>) Add close() method to [Python] <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobEventLog\" title=\"Job Event Log\">JobEventLog</a></span>.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2019-Feb-26 17:04", "status": "resolved", "created": "2018-Nov-01 14:18", "fixed_version": "2018-Nov-01 14:18", "broken_version": "v080711", "priority": "2", "subsystem": "PythonBinding", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, johnkn@cs.wisc.edu, karpel@wisc.edu", "due_date": ""}