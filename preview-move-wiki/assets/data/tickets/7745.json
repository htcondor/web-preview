{"id": 7745, "title": "Ticket #7745: Provide implementation of a Personal Pool object in Python", "description": "<blockquote>\nIn the Personal HTCondor Pool design doc (<a class=\"external\" href=\"https://docs.google.com/document/d/1XiMIMvd_RF2oM5veL2c1wfgHDcdSulorIqjIKeNa5eg/edit?usp=sharing\">https://docs.google.com/document/d/1XiMIMvd_RF2oM5veL2c1wfgHDcdSulorIqjIKeNa5eg/edit?usp=sharing</a>), we've been working on describing what a personal pool really is, beyond just a set of configuration options that we vaguely understand.\n\n<p>Part of that work is to define a model for a personal pool as an object. This ticket is about implementing that object model in the Python bindings as a public API for people to use.\n\n</p><p>Related: <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=7669\" onclick=\"get_ticket_and_populate_wrapper('7669'); return false;\" title=\"Add configuration template to generate a secure personal condor\">#7669</a></span>, <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=7684\" onclick=\"get_ticket_and_populate_wrapper('7684'); return false;\" title=\"Easy way to get platform-specific config via client tool\">#7684</a></span></p></blockquote>", "remarks": "<blockquote>\n<em>2020-Aug-10 15:06:18 by karpel:</em> <br/>\n\nAssigning to tlmiller for initial round of review. No real docs or walkthrough yet... please ping me if you want a quick demo of what it looks like in action.\n\n<p></p><hr/>\n<em>2020-Aug-11 14:50:23 by tlmiller:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>Looks good; I like the daemon-name convenience methods for getting <code>htcondor.*</code> objects directly from the personal condor object (although the current implementation makes me a little nervous).\n\n</p><p>In particular, by fiddling with the value of CONDOR_CONFIG at runtime, the =_write_config_ method as-written could INHERIT variables from something other than the \"system\" (e.g., the CONDOR_CONFIG in the environment when the Python process started).  This is not the intended behavior, but it should be fixable by storing the CONDOR_CONFIG as set at import time.  (If the user desires to INHERIT from another personal condor object, that functionality can be added later.)  This fix should be made even if the above implementation is fixed, because the context manager(s) for the personal condor(s) <em>must</em> set the CONDOR_CONFIG environment variable.\n\n</p><p>In <code>_wait_for_ready</code>, it's probably worth dumping the stderr from condor_who if the stdout is unexpectedly empty.\n\n</p><p></p><hr/>\n<em>2020-Aug-14 09:26:46 by karpel:</em> <br/>\n\nSecond two points resolved (condor_who stderr in debug message when stdout is unexpectedly empty; inherit params during startup instead of when writing config).\n\n<p>I too am now very unsure of the environment-based daemon selection. I think I need to rewrite it based on <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7670\" onclick=\"get_ticket_and_populate_wrapper('7670'); return false;\" title=\"Python bindings daemon objects should know their own address\">#7670</a></span>, or at least using explicit locates.\n\n</p><p></p><hr/>\n<em>2020-Aug-21 14:29:07 by karpel:</em> <br/>\n\nMerged into master; docs are done on this side, but we should add a tutorial for this, so still docpending (GH issue: <a class=\"external\" href=\"https://github.com/htcondor/htcondor-python-bindings-tutorials/issues/22\">https://github.com/htcondor/htcondor-python-bindings-tutorials/issues/22</a>)\n\n<p></p><hr/>\n<em>2020-Sep-02 15:29:40 by karpel:</em> <br/>\n\nTutorial added: <a class=\"external\" href=\"https://github.com/htcondor/htcondor-python-bindings-tutorials/pull/23\">https://github.com/htcondor/htcondor-python-bindings-tutorials/pull/23</a> ; going to resolved</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Sep-02 15:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=61199\">[61199]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7745\" onclick=\"get_ticket_and_populate_wrapper('7745'); return false;\" title=\"Provide implementation of a Personal Pool object in Python\">#7745</a></span>) add a test for actually managing to submit jobs  (By Josh Karpel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-21 14:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60500\">[60500]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7745\" onclick=\"get_ticket_and_populate_wrapper('7745'); return false;\" title=\"Provide implementation of a Personal Pool object in Python\">#7745</a></span>) add version history  (By Josh Karpel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-21 13:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60496\">[60496]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7745\" onclick=\"get_ticket_and_populate_wrapper('7745'); return false;\" title=\"Provide implementation of a Personal Pool object in Python\">#7745</a></span>) use NTSSPI instead of FS auth for personal pools on Windows; general turned-out-to-be-unrelated cleanup while figuring that out  (By Josh Karpel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-17 13:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60494\">[60494]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7745\" onclick=\"get_ticket_and_populate_wrapper('7745'); return false;\" title=\"Provide implementation of a Personal Pool object in Python\">#7745</a></span>) make sure that daemon objects talk to the right daemons, even without extra context manager layers  (By Josh Karpel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-14 09:23</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60456\">[60456]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7745\" onclick=\"get_ticket_and_populate_wrapper('7745'); return false;\" title=\"Provide implementation of a Personal Pool object in Python\">#7745</a></span>) inherit params at startup, not when we write config, to make sure we don't leak inherited params between personal pools  (By Josh Karpel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-11 22:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60455\">[60455]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7745\" onclick=\"get_ticket_and_populate_wrapper('7745'); return false;\" title=\"Provide implementation of a Personal Pool object in Python\">#7745</a></span>) include condor_who stderr in the debug log when stdout is unexpectedly blank  (By Josh Karpel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-11 14:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60454\">[60454]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7745\" onclick=\"get_ticket_and_populate_wrapper('7745'); return false;\" title=\"Provide implementation of a Personal Pool object in Python\">#7745</a></span>) purge f-strings  (By Josh Karpel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-10 08:51</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60415\">[60415]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7745\" onclick=\"get_ticket_and_populate_wrapper('7745'); return false;\" title=\"Provide implementation of a Personal Pool object in Python\">#7745</a></span>) copy-paste ToddM's Windows ProcD fix from <span class=\"chng\"><a href=\"chngview?cn=60399\">[60399]</a></span>  (By Josh Karpel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-03 11:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60320\">[60320]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7745\" onclick=\"get_ticket_and_populate_wrapper('7745'); return false;\" title=\"Provide implementation of a Personal Pool object in Python\">#7745</a></span>) differentiate SEC_TOKEN_DIRECTORY and SEC_TOKEN_SYSTEM_DIRECTORY  (By Josh Karpel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-31 09:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60288\">[60288]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7745\" onclick=\"get_ticket_and_populate_wrapper('7745'); return false;\" title=\"Provide implementation of a Personal Pool object in Python\">#7745</a></span>) set correct permissions on password and token dirs  (By Josh Karpel )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Jul-29 14:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60269\">[60269]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7745\" onclick=\"get_ticket_and_populate_wrapper('7745'); return false;\" title=\"Provide implementation of a Personal Pool object in Python\">#7745</a></span>) add htcondor.personal, with lifecycle management tests and api docs  (By Josh Karpel )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2020-Sep-02 15:29", "status": "resolved", "created": "2020-Jul-21 08:23", "fixed_version": "2020-Jul-21 08:23", "broken_version": "", "priority": "3", "subsystem": "PythonBinding", "assigned_to": "karpel", "derived_from": "", "creator": "karpel", "rust": "", "customer_group": "other", "visibility": "public", "notify": "karpel@wisc.edu", "due_date": ""}