{"id": 5540, "title": "Ticket #5540: Expose a compat_classad::Insert method taking a std::string &", "description": "<blockquote>\nIn compat_classad, there's an Insert method that takes a const char *, which turns around, and calls new classad Insert method which takes a const std::string &amp;, which requires an allocation.  Many times in user code, we have a std::string in hand, and call Insert(s.c_str()), causing unneeded allocations.  We should just expose a std::string overload of Insert and be done with it.</blockquote>", "remarks": "<blockquote>\nJust a performance enhancement, so no version history needed.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Mar-02 16:15</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=47671\">[47671]</a></span>: Expose compat_classad::Insert(std::string) <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=5540\" onclick=\"get_ticket_and_populate_wrapper('5540'); return false;\" title=\"Expose a compat_classad::Insert method taking a std::string &amp;\">#5540</a></span>  (By Greg Thain )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2016-Mar-08 10:47", "status": "resolved", "created": "2016-Mar-02 16:14", "fixed_version": "2016-Mar-02 16:14", "broken_version": "v080500", "priority": "3", "subsystem": "", "assigned_to": "gthain", "derived_from": "#5509", "creator": "gthain", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": "20160303"}