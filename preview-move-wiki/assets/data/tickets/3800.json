{"id": 3800, "title": "Ticket #3800: Notice system shutdown and react appropriately.", "description": "<blockquote>\nIn the context of an HTCondor startd running in a spot instance on Amazon, we have a (relatively) limited amount of time to shut down when outbid.  Although proper configuration of the system shutdown scripts can extend this time to 120 seconds, we should start simple, and just make sure that the startd invalidates its ad as quickly as possible after we notice that the machine is shutting down.\n\n<p>This is part of a larger effort to sort startd shut-down activities by priority, to that we make the best use of the time we have before the system shuts down.\n\n</p><p>We could potentially detect shutdowns by polling /sbin/runlevel (or doing whatever it does) from the master.  However, without configuring the system to stall during shutdown, this will have to be a relatively high-frequency poll (on the order of once a second).  It's probably better just to check the runlevel once, when shutting down, and react appropriately.  (This check may be performed in the initscript, as well.)\n\n</p><p>It may be possible for the master to delay shutdown for some time by declining to die (catch SIGTERM); however, the system will probably SIGKILL the master 5 seconds after SIGTERMing it (if the HTCondor initscript does not).  It may be possible to delay system shutdown in the initscript; I don't know if those usually have time-outs.  (If they do, the highest-level script can be modified to block instead, which is what was done to empirically demonstrate the two-minute grace period.)\n\n</p><p>It would also be nifty for the startd to invalidate its active claims on the way out the door.</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Feb-18 15:07:45 by bbockelm:</em> <br/>\n\nIt'd be <strong>extremely</strong> useful if the startd could invalidate claims on its way out.\n\n<p>I don't know about EC2, but \"service condor restart\" results in an unusable personal condor instance for about 20 minutes until reconnect timeouts pass.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2015-Aug-14 13:35", "status": "new", "created": "2013-Jul-23 16:32", "fixed_version": "2013-Jul-23 16:32", "broken_version": "", "priority": "4", "subsystem": "Daemons", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}