{"id": 3881, "title": "Ticket #3881: HTCondor should remove its cgroups on restart", "description": "<blockquote>\nMichael writes:\n\n<p></p><pre>  I had a situation, since corrected, in which the $(TILDE) ran out of disk\n  space and everything came to a very unceremonious halt. As a result, all\n  of the cgroups for all of the jobs that were running at the time are still\n  present.\n</pre>\n\n<p></p><pre>  I'd suggest that an enhancement to the cgroups functionality - which I\n  really like, by the way - would be to have the software remove cgroups for\n  jobs which it knows are no longer present.\n</pre>\n\n<p></p><pre>  As it stands, I'll need to whip up a script to clean them up on all of my\n  exec nodes. Fortunately there's only 15 of them so far, but the migration\n  is proceeding well.</pre>\n</blockquote>", "remarks": "<blockquote>\nScript from Michael that removes cgroups older than a day which have no tasks assigned.\n\n<p></p><pre>  find /cgroup/*/htcondor/job_*/tasks -mtime +1 -print | xargs wc -l | perl\n  -ne 's{^0 /cgroup/([^/]+)/(.*)/tasks}{$1:/$2} &amp;&amp; print' | xargs cgdelete\n</pre>\n\n<p></p><hr/>\n<em>2013-Aug-30 09:57:23 by tlmiller:</em> <br/>\n\nMichael had an evil idea:\n\n<p></p><pre>  One example of how a cgroup can be orphaned even without any unusual\n  events is if someone or something has their cwd set to the job's cgroup\n  directory, which prevents the cgroup from being deleted.</pre>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2013-Aug-30 09:57", "status": "new", "created": "2013-Aug-28 16:56", "fixed_version": "2013-Aug-28 16:56", "broken_version": "", "priority": "4", "subsystem": "DaemonsExecNode", "assigned_to": "", "derived_from": "", "creator": "tlmiller", "rust": "s8333", "customer_group": "other", "visibility": "public", "notify": "Michael.V.Pelletier@raytheon.com tlmiller@cs.wisc.edu jfrey@cs.wisc.edu", "due_date": ""}