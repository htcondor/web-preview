{"id": 4745, "title": "Ticket #4745: CEDAR pollutes CondorError object on success", "description": "<blockquote>\nWhen a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CondorError\" title=\"Condor Error\">CondorError</a></span> object is passed into CEDAR, the object can end up with entries when CEDAR returns success. For example, when one authentication method fails but another succeeds, an error stack entry about the failed method is left in the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CondorError\" title=\"Condor Error\">CondorError</a></span> object. Most callers aren't expecting this, so the error ends up in the failure message of any subsequent error.\n\n<p>It would be better if CEDAR cleared the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CondorError\" title=\"Condor Error\">CondorError</a></span> object when it returns success. If we want to get fancy, CEDAR would leave the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CondorError\" title=\"Condor Error\">CondorError</a></span> object in the same state it received it when returning success.\n\n</p><p>See the attachment in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3379\" onclick=\"get_ticket_and_populate_wrapper('3379'); return false;\" title=\"Race condition in file stageout\">#3379</a></span> for an example.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2014-Dec-01 16:16", "status": "new", "created": "2014-Dec-01 16:16", "fixed_version": "2014-Dec-01 16:16", "broken_version": "v080000", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}