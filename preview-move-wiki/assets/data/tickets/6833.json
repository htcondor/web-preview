{"id": 6833, "title": "Ticket #6833: Stale autocluster data", "description": "<blockquote>\nThe autocluster data structures in the schedd often contain stale data. While some of this data is updated frequently on a busy schedd, some of it is never updated. Most of this staleness is harmless to the schedd's proper operation, but it makes the autocluster query results given to clients confusing and much less useful. Some small changes in the schedd could greatly reduce the staleness with minimal performance effects.\n\n<p></p><ul>\n<li>When one of a job's significant attributes changes, the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AutoClusterId\" title=\"Auto Cluster Id\">AutoClusterId</a></span> attribute is deleted from the job ad, but the job isn't removed from the membership list in the object of that autocluster. When the job is assigned to a new autocluster on a rebuild, its membership in the old autocluster still isn't cleared. Thus, a job can appear to be in multiple autoclusters at the same time. This will persist until the old autocluster has no more jobs and is deleted. Autocluster membership isn't updated when a job leaves the queue, either.\n\n<p></p></li><li>When one of a job's significant attributes changes, the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PrioRec\" title=\"Prio Rec\">PrioRec</a></span> array isn't marked as dirty. Thus, it will be treated as being in the old autocluster until the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PrioRec\" title=\"Prio Rec\">PrioRec</a></span> array is marked as dirty by another trigger and then rebuilt. This includes for matchmaking with the negotiator.\n\n<p></p></li><li>Autoclusters are updated (including deletion) when the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PrioRec\" title=\"Prio Rec\">PrioRec</a></span> array is marked as dirty (usually by a job entering IDLE status or FindRunnableJob() seeing a non-runnable job in the array) and then rebuilt (when a negotiation session begins or FindRunnableJob() is called). When the schedd has no new jobs entering the queue, this won't happen. A quiet schedd can have autoclusters that persist forever that have no jobs in them.\n</li></ul>\n\n<p>Here are changes that would greatly reduce this stale data:\n\n</p><p></p><ul>\n<li>When a job's <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=AutoClusterId\" title=\"Auto Cluster Id\">AutoClusterId</a></span> attribute is cleared (due to a significant attribute being modified) or a job is removed from the queue, do the following:\n<ul>\n<li>Remove the job from the autocluster object's membership list.\n</li><li>Mark the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PrioRec\" title=\"Prio Rec\">PrioRec</a></span> array as dirty.\n</li></ul>\n</li><li>Force a rebuild of the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PrioRec\" title=\"Prio Rec\">PrioRec</a></span> array periodically. (this was done for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6834\" onclick=\"get_ticket_and_populate_wrapper('6834'); return false;\" title=\"FindRunnableJob() causes aggressive rebuilding of PrioRec array\">#6834</a></span>)</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<strong>CODE_REVIEW</strong> : changes look good.  we should keep an eye on whether these changes increase the frequency at which the prio-rec array is rebuilt.  There's too many moving parts to know just from looking at the code if this will happen.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-06 14:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/3b3d08881a33b31ed4ba3afb0996b2c0db625ed1\">[56133]</a></span>: Docs for stale autocluster data improvements. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6833\" onclick=\"get_ticket_and_populate_wrapper('6833'); return false;\" title=\"Stale autocluster data\">#6833</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Dec-05 14:56</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/bbf8a5c5e0c5677edcd714ffe2f41def75c161c9\">[55838]</a></span>: Keep better track of membership in the autocluster data struct. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6833\" onclick=\"get_ticket_and_populate_wrapper('6833'); return false;\" title=\"Stale autocluster data\">#6833</a></span> When we remove a job from an autocluster, update the autocluster's membership set and dirty the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PrioRec\" title=\"Prio Rec\">PrioRec</a></span> array.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Dec-05 14:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/3638afe16b033527cc8029f6bad1e4a0305c6659\">[55837]</a></span>: Remove a useless insert when recomputing autoclusters. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6833\" onclick=\"get_ticket_and_populate_wrapper('6833'); return false;\" title=\"Stale autocluster data\">#6833</a></span> The return value from find_job_id_set() tells us that the job is already in the old autocluster's set. There's no need to insert it.  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Feb-06 14:55", "status": "resolved", "created": "2018-Nov-29 15:02", "fixed_version": "2018-Nov-29 15:02", "broken_version": "", "priority": "4", "subsystem": "DaemonsSubmitNode", "assigned_to": "jfrey", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}