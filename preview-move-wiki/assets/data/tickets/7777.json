{"id": 7777, "title": "Ticket #7777: Monitor SPOOL space", "description": "<blockquote>\nThe schedd currently only notices that it's running low on SPOOL space when it runs out.  This isn't so bad for spooling new jobs -- if the job queue log and history file aren't on the same partition -- but can result in a lot of wasted computation and i/o as jobs hit their checkpoints, take them, and fail to transfer them back.  If the job queue log and history file aren't on a different partition, keeping SPOOL space available becomes a more-serious issue.\n\n<p>The first task is to monitor SPOOL space available.\n\n</p><p>The second task is to take an action when available SPOOL space drops below a threshold (whose value may be partially computed from the knbos HISTORY, ENABLE_HISTORY_ROTATION, MAX_HISTORY_LOG, MAX_HISTORY_ROTATIONS, ROTATE_HISTORY_DAILY, and ROTATE_HISTORY_MONTHLY; SPOOL and ALTERNATE_JOB_SPOOL; and JOB_QUEUE_LOG, SCHEDD_BACKUP_SPOOL, and MAX_JOB_QUEUE_ROTATIONS, as well as the size of the queue).\n\n</p><p>At Miron's request, the initial action will be for the schedd to gracefully shut down.  (This will certainly prevent idle jobs from starting.  It may not prevent new jobs from arriving, but we probably want to preemptively reject spooled job submissions, so we may need additional code here.)\n\n</p><p>It seems clear that we should implement the mechanisms to allow other, less-drastic and better-focused policies.  One goal would be to prevent problems with SPOOL from affecting jobs and/or users who aren't using SPOOL; the other would be to throttle SPOOL-using jobs as necessary to prevent SPOOL from filling up.</p></blockquote>", "remarks": "<blockquote>\n<em>2020-Aug-04 21:41:14 by tlmiller:</em> <br/>\n\nWe'll start with a timer.  We start by recording the schedd's usage of SPOOL, but (a) the shadows also use SPOOL and (b) on many systems, SPOOL's partition isn't used exclusively by HTCondor, so we'd need a polling-based backup in any event.\n\n<p>Because partition sizes and (schedd) usage vary so widely, the minimum spool space will not be a fraction, but an absolute number.\n\n</p><p>Next up:\n\n</p><p></p><ul>\n<li>[done] Add knob to configure the timer interval.  Hopefully unnecessary, maybe don't document initially.\n</li><li>do something less extreme than EXCEPT()ing when the timer trips.\n</li></ul>\n\n<p></p><hr/>\n<em>2020-Aug-05 03:16:48 by tlmiller:</em> <br/>\n\nSetting MAX_JOBS_SUBMITTED to 0 and re-configuring is how the manual recommends disabling job submission.  What we probably want instead is to\n\n<p></p><ul>\n<li>disable submitting jobs to SPOOL\n</li><li>enable a configurable submit requirement (which by default rejects new jobs which use vanilla-universe checkpointing)\n</li></ul>\n\n<p>We also want to stop starting new jobs, at least those jobs which use SPOOL.  This is arguably more important than not accepting new jobs (barring the possibility that the new jobs use SPOOL space just by existing).  However, it's not clear how to report to anyone (submitter or admin) that jobs aren't being started because of low SPOOL (especially if only a subset of jobs are like that).  Naturally, jobs which aren't going to be started shouldn't be advertised to the negotiator.\n\n</p><p>In the short term, we simply start shutting the schedd down after the 're-configure' step in the first paragraph.  I don't know if that's reversible, however.  It may be ideal for the schedd to switch in and out of not starting/accepting SPOOL-using jobs as often as every timer tick; it may be better to have job-starting throttles related to SPOOL space available.\n\n</p><p>These throttles may be best realized as one or more attributes in the schedd ad as supplied to the existing &lt;UNIVERSE&gt;_START knobs.  If the schedd ad is also made available at SUBMIT_REQUIREMENTS time, or could be made available at that time, that might work well.  This may be overly-clever.\n\n</p><p></p><hr/>\n<em>2020-Aug-10 13:18:40 by tlmiller:</em> <br/>\n\n<a class=\"external\" href=\"https://docs.google.com/document/d/1FS9DsPVDHzASdtrRQC17IRPNp1RL1cNTtvKzgsDNbNY/\">Draft design document</a>.\n\n<p></p><hr/>\n<em>2020-Oct-13 10:53:49 by pfc:</em> <br/>\n\nThe ball is in Stuart's court to read &amp; respond to this document.\n\n<p></p><hr/>\n<em>2021-Apr-13 10:44:55 by pfc:</em> <br/>\n\nStuart thinks this is hard to figure out how to do right, and we're going to provide more spool for now, so closing.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-05 03:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60373\">[60373]</a></span>: (<span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=7777\" onclick=\"get_ticket_and_populate_wrapper('7777'); return false;\" title=\"Monitor SPOOL space\">#7777</a></span>) Add SPOOL_MIN_FREE_INTERVAL, on the off chance that it ever matters.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Aug-04 21:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=60372\">[60372]</a></span>: (<span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=7777\" onclick=\"get_ticket_and_populate_wrapper('7777'); return false;\" title=\"Monitor SPOOL space\">#7777</a></span>) Add SPOOL_MIN_FREE; check once a minute and EXCEPT() if there's not enough space in SPOOL.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2021-Apr-13 10:49", "status": "abandoned", "created": "2020-Aug-03 15:44", "fixed_version": "2020-Aug-03 15:44", "broken_version": "", "priority": "2", "subsystem": "DaemonsSubmitNode", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, moate@wisc.edu", "due_date": ""}