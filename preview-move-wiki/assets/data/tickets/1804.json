{"id": 1804, "title": "Ticket #1804: ClassAdList assumes ownership of ads", "description": "<blockquote>\nIn old classads, there was a convoluted system for reference counting to manage memory when a classad belonged to multiple <code>ClassAdLists</code>.  When the compatibility implementation of <code>ClassAdList</code> was made for new <code>ClassAds</code>, this appears to have inadvertently been dropped.  The result is that when an ad belongs to multiple lists and the destructors of those lists are invoked, the ad will be deleted multiple times, likely causing the program to crash.\n\n<p>Brian Bockelman has observed crashes of the negotiator due to a bad free in <code>ClassAdList::~ClassAdList</code>.  This could be a result of the bug described above.\n\n</p><p>I have been able to produce a crash of the negotiator caused by this problem by using the following configuration:\n\n</p><p></p><div class=\"verbatim\">\n<pre>GROUP_NAMES = physics\nGROUP_QUOTA_DYNAMIC_physics = 0.5\n</pre></div>\n\n\n<p>The problem also appears if I do not define a quota at all.  It does not appear if I define GROUP_QUOTA_physics to something &gt; 0.  The reason is that when there is a static quota defined, the negotiator appears to manage the submitter ads in a way that avoids the ads remaining in two <code>ClassAdList</code> objects when those objects are destroyed.\n\n</p><p>The job that I submit to cause the problem doesn't have to even be a member of any group.  Example:\n\n</p><p></p><div class=\"verbatim\">\n<pre>executable = /bin/sleep\narguments = 3600\nnotification = never\nqueue\n</pre></div>\n\n\n<p>Valgrind reports the following error in the negotiator:\n\n</p><p></p><div class=\"verbatim\">\n<pre>==29756== Invalid read of size 4\n==29756==    at 0x81EC5BE: compat_classad::ClassAdList::~ClassAdList() (compat_classad_list.cpp:51)\n==29756==    by 0x811BD06: Matchmaker::negotiationTime() (matchmaker.cpp:1373)\n==29756==    by 0x8145A29: TimerManager::Timeout() (timer_manager.cpp:413)\n==29756==    by 0x812EF1C: DaemonCore::Driver() (daemon_core.cpp:3092)\n==29756==    by 0x81268E7: main (daemon_core_main.cpp:2356)\n==29756==  Address 0x44b5330 is 0 bytes inside a block of size 100 free'd\n==29756==    at 0x4005234: operator delete(void*) (vg_replace_malloc.c:346)\n==29756==    by 0x8220CD8: compat_classad::ClassAd::~ClassAd() (compat_classad.cpp:684)\n==29756==    by 0x81EC5D1: compat_classad::ClassAdList::~ClassAdList() (compat_classad_list.cpp:51)\n==29756==    by 0x81142A1: Matchmaker::SimpleGroupEntry::~SimpleGroupEntry() (matchmaker.cpp:1389)\n==29756==    by 0x811BA9E: Matchmaker::negotiationTime() (matchmaker.cpp:1342)\n==29756==    by 0x8145A29: TimerManager::Timeout() (timer_manager.cpp:413)\n==29756==    by 0x812EF1C: DaemonCore::Driver() (daemon_core.cpp:3092)\n==29756==    by 0x81268E7: main (daemon_core_main.cpp:2356)\n</pre></div>\n\n\n<p><span class=\"section\"></span></p><h2>How to Fix</h2>\n\n<p>One option would be to add reference counting.  To do this right, we would need to consistently use it in all places where pointers to <code>ClassAds</code> are passed around.  We could cheat and only apply it in the case of <code>ClassAdList</code>, but I think this is unexpected.\n\n</p><p>For now, I am just adding a second version of the class called <code>ClassAdListDoesNotDeleteAds</code>.  One should only ever put a classad in a single <code>ClassAdList</code>.  It can exist in multiple instances of <code>ClassAdListDoesNotDeleteAds</code>.\n\n</p><p>The only place I have found where this new class needs to be used is in the negotiator for the startd and schedd ads.</p></blockquote>", "remarks": "<blockquote>\n<em>2010-Dec-12 16:05:41 by danb:</em> <br/>\n\nIt is likely that Brian's problem was not due to the bug described in this ticket.  Instead, it is likely that it was caused by my changes in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1773\" onclick=\"get_ticket_and_populate_wrapper('1773'); return false;\" title=\"condor_q is significantly slower due to new classads\">#1773</a></span> that made <code>ClassAdList</code> incompatible with shallow copying as done by qsort of arrays in the negotiator containing <code>ClassAdList</code>.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Dec-13 10:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/abb52633dd60f25f68cdd95661de86421d173160\">[25810]</a></span>: Documented fix for ads in multiple instances of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAdList\" title=\"Class Ad List\">ClassAdList</a></span>. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1804\" onclick=\"get_ticket_and_populate_wrapper('1804'); return false;\" title=\"ClassAdList assumes ownership of ads\">#1804</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Dec-11 00:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0e07b36bceaee3b1aa7dbc7e6879530d8e7ecd59\">[19634]</a></span>: Fix for ads in multiple <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAdLists\" title=\"Class Ad Lists\">ClassAdLists</a></span> getting deleted multiple times. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1804\" onclick=\"get_ticket_and_populate_wrapper('1804'); return false;\" title=\"ClassAdList assumes ownership of ads\">#1804</a></span> <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAdList\" title=\"Class Ad List\">ClassAdList</a></span> has wonky semantics. It should really just go away and be replaced by STL. In the mean time, I added <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAdListDoesNotDeleteAds\" title=\"Class Ad List Does Not Delete Ads\">ClassAdListDoesNotDeleteAds</a></span>, which is just like <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAdList\" title=\"Class Ad List\">ClassAdList</a></span>, but it doesn't delete the ads in the list.  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2010-Dec-12 16:08", "status": "resolved", "created": "2010-Dec-10 23:01", "fixed_version": "2010-Dec-10 23:01", "broken_version": "v070502", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "other", "visibility": "public", "notify": "dan@hep.wisc.edu, bbockelm@cse.unl.edu, matt@cs.wisc.edu, eje@redhat.com", "due_date": ""}