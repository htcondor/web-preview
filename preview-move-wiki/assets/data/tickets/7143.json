{"id": 7143, "title": "Ticket #7143: Daemons slow to respond to commands on Windows", "description": "<blockquote>\nA support customer reports that after a period of time running, their Schedd will become slow to respond to commands even when it is not otherwise very busy.\n\n<p>Much investigation lead to the fact that the Daemon command pump was getting into a state where an attempt to hand off a socket from shared port was not waking up the pump.  The socket handoff would complete only once <code>select</code> timed out in the pump.  Once the Schedd got into this state, socket handoff in the pump would <strong>always</strong> happen only when <code>select</code> woke up for some other reason.  The <code>Wake_up_select</code> mechanism had simply stopped working.\n\n</p><p>This is exemplified by the following log snippits\n\n</p><p></p><div class=\"snip\">\n<pre class=\"sniplabel\">tool debug output</pre>\n<pre class=\"snip\">...\n06/26/19 09:50:20.858 (fd:3) (pid:9624) (D_NETWORK) CONNECT bound to &lt;172.22.17.47:51647&gt; fd=672 peer=&lt;172.22.17.47:9618&gt;\n06/26/19 09:50:20.863 (fd:3) (pid:9624) (D_NETWORK) condor_write(fd=672 schedd at &lt;172.22.17.47:9618&gt;,,size=47,timeout=20,flags=0,non_blocking=0)\n06/26/19 09:50:20.870 (fd:3) (pid:9624) (D_SECURITY) SECMAN: command 516 QUERY_JOB_ADS to schedd at &lt;172.22.17.47:9618&gt; from TCP port 51647 (blocking).\n06/26/19 09:50:20.876 (fd:3) (pid:9624) (D_NETWORK) condor_write(fd=672 schedd at &lt;172.22.17.47:9618&gt;,,size=409,timeout=20,flags=0,non_blocking=0)\n06/26/19 09:50:20.882 (fd:3) (pid:9624) (D_NETWORK) condor_read(fd=672 schedd at &lt;172.22.17.47:9618&gt;,,size=5,timeout=20,flags=0,non_blocking=0)\n&lt;&lt;---- 7 second delay here ----&gt;&gt;\n06/26/19 09:50:27.061 (fd:3) (pid:9624) (D_NETWORK) condor_read(fd=672 schedd at &lt;172.22.17.47:9618&gt;,,size=317,timeout=20,flags=0,non_blocking=0)\n06/26/19 09:50:27.067 (fd:3) (pid:9624) (D_NETWORK) condor_read(fd=672 schedd at &lt;172.22.17.47:9618&gt;,,size=5,timeout=20,flags=0,non_blocking=0)\n06/26/19 09:50:27.073 (fd:3) (pid:9624) (D_NETWORK) condor_read(fd=672 schedd at &lt;172.22.17.47:9618&gt;,,size=204,timeout=20,flags=0,non_blocking=0)\n06/26/19 09:50:27.077 (fd:3) (pid:9624) (D_SECURITY) SECMAN: added session elvwlmsubmit4:14080:1561539027:178484 to cache for 60 seconds (3600s lease).\n06/26/19 09:50:27.082 (fd:3) (pid:9624) (D_SECURITY) SECMAN: startCommand succeeded.\n...\n</pre></div>\n\n\n<p></p><div class=\"snip\">\n<pre class=\"sniplabel\">SchedLog fragment</pre>\n<pre class=\"snip\">06/26/19 09:50:17.057 (fd:3) (pid:14080) (D_DAEMONCORE) In DaemonCore Timeout()\n06/26/19 09:50:17.057 (fd:3) (pid:14080) (D_DAEMONCORE) DaemonCore Timeout() Complete, returning 10\n06/26/19 09:50:17.057 (fd:3) (pid:14080) (D_ALWAYS) PERF: entering select. timeout=10\n06/26/19 09:50:27.059 (fd:3) (pid:14080) (D_ALWAYS) PERF: leaving select\n06/26/19 09:50:27.059 (fd:3) (pid:14080) (D_ALWAYS) State = TIMED_OUT\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_ALWAYS) max_fd = 1288\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_ALWAYS) Selection FD's\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_ALWAYS) \tRead {640 676 680 688 720 1288 } = 6\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_ALWAYS) \tWrite {} = 0\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_ALWAYS) \tExcept {} = 0\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_ALWAYS) Timeout = 10.000000 seconds\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_DAEMONCORE) Processing 4 pump work item(s)\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_ALWAYS) SharedPort PipeListenerHelper got messages from Listener thread:\n\t09:50:17.812 SharedPortEndpoint: Pipe connected and pid 14080 sent\n\t09:50:17.812 SharedPortEndpoint: Got WSAPROTOCOL_INFO, queueing pump work. wake dst(000002BF31E83AA8=640), src(000002BF31E83E40=632) 1\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_NETWORK) CONNECT bound to &lt;172.22.17.47:9618&gt; fd=1980 peer=&lt;172.22.17.47:51644&gt;\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=1980 &lt;172.22.17.47:51644&gt;,,size=5,timeout=1,flags=2,non_blocking=0)\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: ReadCommand()\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=1980 &lt;172.22.17.47:51644&gt;,,size=5,timeout=0,flags=0,non_blocking=1)\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=1980 &lt;172.22.17.47:51644&gt;,,size=405,timeout=0,flags=0,non_blocking=1)\n06/26/19 09:50:27.060 (fd:3) (pid:14080) (D_SECURITY) DC_AUTHENTICATE: received DC_AUTHENTICATE from &lt;172.22.17.47:51644&gt;\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_NETWORK) condor_write(fd=1980 &lt;172.22.17.47:51644&gt;,,size=322,timeout=20,flags=0,non_blocking=0)\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: EnableCrypto()\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: VerifyCommand()\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_SECURITY) DC_AUTHENTICATE: Success.\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_ALWAYS) PERMISSION GRANTED to unauthenticated@unmapped from host 172.22.17.47 for command 516 (QUERY_JOB_ADS), access level READ: reason: cached result for READ; see first case for the full reason\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: SendResponse()\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: SendResponse() : m_new_session\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_NETWORK) condor_write(fd=1980 &lt;172.22.17.47:51644&gt;,,size=209,timeout=20,flags=0,non_blocking=0)\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_SECURITY) DC_AUTHENTICATE: added incoming session id elvwlmsubmit4:14080:1561539027:178483 to cache for 80 seconds (lease is 3620s, return address is unknown).\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: ExecCommand(m_req == 516, m_real_cmd == 516, m_auth_cmd == 516)\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=1980 &lt;172.22.17.47:51644&gt;,,size=5,timeout=20,flags=0,non_blocking=1)\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_NETWORK) Reading header would have blocked.\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_NETWORK) msgReady would have blocked.\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_ALWAYS) SharedPort PipeListenerHelper got messages from Listener thread:\n\t09:50:17.812 SharedPortEndpoint: WARNING wake socket not hot dst(000002BF31E83AA8=640), src(000002BF31E83E40=632) 640=0x0000 632=0x0010\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_ALWAYS) SharedPort PipeListenerHelper got messages from Listener thread:\n\t09:50:20.870 SharedPortEndpoint: Pipe connected and pid 14080 sent\n\t09:50:20.870 SharedPortEndpoint: Got WSAPROTOCOL_INFO, queueing pump work. wake dst(000002BF31E83AA8=640), src(000002BF31E83E40=632) 106/26/19 09:50:27.061 (fd:3) (pid:14080) (D_NETWORK) CONNECT bound to &lt;172.22.17.47:9618&gt; fd=2372 peer=&lt;172.22.17.47:51647&gt;\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=2372 &lt;172.22.17.47:51647&gt;,,size=5,timeout=1,flags=2,non_blocking=0)\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: ReadCommand()\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=2372 &lt;172.22.17.47:51647&gt;,,size=5,timeout=0,flags=0,non_blocking=1)\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=2372 &lt;172.22.17.47:51647&gt;,,size=404,timeout=0,flags=0,non_blocking=1)\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_SECURITY) DC_AUTHENTICATE: received DC_AUTHENTICATE from &lt;172.22.17.47:51647&gt;\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_NETWORK) condor_write(fd=2372 &lt;172.22.17.47:51647&gt;,,size=322,timeout=20,flags=0,non_blocking=0)\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: EnableCrypto()\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: VerifyCommand()\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_SECURITY) DC_AUTHENTICATE: Success.\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_ALWAYS) PERMISSION GRANTED to unauthenticated@unmapped from host 172.22.17.47 for command 516 (QUERY_JOB_ADS), access level READ: reason: cached result for READ; see first case for the full reason\n06/26/19 09:50:27.061 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: SendResponse()\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: SendResponse() : m_new_session\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_NETWORK) condor_write(fd=2372 &lt;172.22.17.47:51647&gt;,,size=209,timeout=20,flags=0,non_blocking=0)\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_SECURITY) DC_AUTHENTICATE: added incoming session id elvwlmsubmit4:14080:1561539027:178484 to cache for 80 seconds (lease is 3620s, return address is unknown).\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_DAEMONCORE) DAEMONCORE: ExecCommand(m_req == 516, m_real_cmd == 516, m_auth_cmd == 516)\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=2372 &lt;172.22.17.47:51647&gt;,,size=5,timeout=20,flags=0,non_blocking=1)\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_NETWORK) Reading header would have blocked.\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_NETWORK) msgReady would have blocked.\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) SharedPort PipeListenerHelper got messages from Listener thread:\n\t09:50:20.870 SharedPortEndpoint: WARNING wake socket not hot dst(000002BF31E83AA8=640), src(000002BF31E83E40=632) 640=0x0000 632=0x0010\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_DAEMONCORE) In DaemonCore Timeout()\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_PRIV) PRIV_CONDOR --&gt; PRIV_CONDOR at C:\\condor\\execute\\dir_1584\\sources\\src\\condor_daemon_core.V6\\daemon_core.cpp:4406\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_DAEMONCORE) DaemonCore Timeout() Complete, returning 10\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) PERF: entering select. timeout=10\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) PERF: leaving select\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) State = FDS_READY\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) max_fd = 2372\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) Selection FD's\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) \tRead {640 676 680 688 720 1288 1980 2372 } = 8\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) \tWrite {} = 0\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) \tExcept {} = 0\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) Ready FD's\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) \tRead {1980 } = 1\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) \tWrite {} = 0\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) \tExcept {} = 0\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_ALWAYS) Timeout = 10.000000 seconds\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_DAEMONCORE) Calling Handler &lt;DaemonCore::HandleReqPayloadReady&gt; for Socket &lt;Waiting for command 516 payload&gt;\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_COMMAND) Calling Handler &lt;DaemonCore::HandleReqPayloadReady&gt; (5)\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_DAEMONCORE) Cancel_Socket: cancelled socket 5 &lt;Waiting for command 516 payload&gt; 000002BF32837AB0\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_COMMAND) Calling HandleReq &lt;command_query_job_ads&gt; (0) for command 516 (QUERY_JOB_ADS) from unauthenticated@unmapped &lt;172.22.17.47:51644&gt;\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=1980 &lt;172.22.17.47:51644&gt;,,size=5,timeout=15,flags=0,non_blocking=0)\n06/26/19 09:50:27.062 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=1980 &lt;172.22.17.47:51644&gt;,,size=103,timeout=15,flags=0,non_blocking=0)\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_COMMAND) Return from HandleReq &lt;command_query_job_ads&gt; (handler: 0.000299s, sec: 0.001s, payload: 0.001s)\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_COMMAND) Return from Handler &lt;DaemonCore::HandleReqPayloadReady&gt; 0.000371s\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_PRIV) PRIV_CONDOR --&gt; PRIV_CONDOR at C:\\condor\\execute\\dir_1584\\sources\\src\\condor_daemon_core.V6\\daemon_core.cpp:4406\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_DAEMONCORE) In DaemonCore Timeout()\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_DAEMONCORE) DaemonCore Timeout() Complete, returning 10\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) PERF: entering select. timeout=10\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) PERF: leaving select\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) State = FDS_READY\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) max_fd = 2372\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) Selection FD's\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) \tRead {640 676 680 688 720 1288 2372 } = 7\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) \tWrite {1980 } = 1\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) \tExcept {} = 0\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) Ready FD's\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) \tRead {} = 0\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) \tWrite {1980 } = 1\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) \tExcept {} = 0\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) Timeout = 10.000000 seconds\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_DAEMONCORE) Calling Handler &lt;Query Job Ads Continuation&gt; for Socket &lt;Client Response&gt;\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_COMMAND) Calling Handler &lt;Query Job Ads Continuation&gt; (5)\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_NETWORK) condor_write(fd=1980 &lt;172.22.17.47:51644&gt;,,size=582,timeout=15,flags=0,non_blocking=0)\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_COMMAND) Return from Handler &lt;Query Job Ads Continuation&gt; 0.000083s\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_PRIV) PRIV_CONDOR --&gt; PRIV_CONDOR at C:\\condor\\execute\\dir_1584\\sources\\src\\condor_daemon_core.V6\\daemon_core.cpp:4406\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_DAEMONCORE) Cancel_Socket: cancelled socket 5 &lt;Client Response&gt; 000002BF32837AB0\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_NETWORK) CLOSE TCP &lt;172.22.17.47:9618&gt; fd=1980\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_DAEMONCORE) In DaemonCore Timeout()\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_DAEMONCORE) DaemonCore Timeout() Complete, returning 10\n06/26/19 09:50:27.063 (fd:3) (pid:14080) (D_ALWAYS) PERF: entering select. timeout=10\n06/26/19 09:50:27.208 (fd:3) (pid:14080) (D_ALWAYS) PERF: leaving select\n06/26/19 09:50:27.208 (fd:3) (pid:14080) (D_ALWAYS) State = FDS_READY\n06/26/19 09:50:27.208 (fd:3) (pid:14080) (D_ALWAYS) max_fd = 2372\n06/26/19 09:50:27.208 (fd:3) (pid:14080) (D_ALWAYS) Selection FD's\n06/26/19 09:50:27.208 (fd:3) (pid:14080) (D_ALWAYS) \tRead {640 676 680 688 720 1288 2372 } = 7\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) \tWrite {} = 0\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) \tExcept {} = 0\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) Ready FD's\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) \tRead {2372 } = 1\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) \tWrite {} = 0\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) \tExcept {} = 0\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) Timeout = 10.000000 seconds\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_DAEMONCORE) Calling Handler &lt;DaemonCore::HandleReqPayloadReady&gt; for Socket &lt;Waiting for command 516 payload&gt;\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_COMMAND) Calling Handler &lt;DaemonCore::HandleReqPayloadReady&gt; (6)\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_DAEMONCORE) Cancel_Socket: cancelled socket 6 &lt;Waiting for command 516 payload&gt; 000002BF32837370\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_COMMAND) Calling HandleReq &lt;command_query_job_ads&gt; (0) for command 516 (QUERY_JOB_ADS) from unauthenticated@unmapped &lt;172.22.17.47:51647&gt;\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=2372 &lt;172.22.17.47:51647&gt;,,size=5,timeout=15,flags=0,non_blocking=0)\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_NETWORK) condor_read(fd=2372 &lt;172.22.17.47:51647&gt;,,size=321,timeout=15,flags=0,non_blocking=0)\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_COMMAND) Return from HandleReq &lt;command_query_job_ads&gt; (handler: 0.000398s, sec: 0.001s, payload: 0.147s)\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_COMMAND) Return from Handler &lt;DaemonCore::HandleReqPayloadReady&gt; 0.000503s\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_PRIV) PRIV_CONDOR --&gt; PRIV_CONDOR at C:\\condor\\execute\\dir_1584\\sources\\src\\condor_daemon_core.V6\\daemon_core.cpp:4406\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_DAEMONCORE) In DaemonCore Timeout()\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_DAEMONCORE) DaemonCore Timeout() Complete, returning 10\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) PERF: entering select. timeout=10\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) PERF: leaving select\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) State = FDS_READY\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) max_fd = 2372\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) Selection FD's\n06/26/19 09:50:27.209 (fd:3) (pid:14080) (D_ALWAYS) \tRead {640 676 680 688 720 1288 } = 6\n06/26/19 09:50:27.210 (fd:3) (pid:14080) (D_ALWAYS) \tWrite {2372 } = 1\n06/26/19 09:50:27.210 (fd:3) (pid:14080) (D_ALWAYS) \tExcept {} = 0\n06/26/19 09:50:27.210 (fd:3) (pid:14080) (D_ALWAYS) Ready FD's\n06/26/19 09:50:27.210 (fd:3) (pid:14080) (D_ALWAYS) \tRead {} = 0\n06/26/19 09:50:27.210 (fd:3) (pid:14080) (D_ALWAYS) \tWrite {2372 } = 1\n06/26/19 09:50:27.210 (fd:3) (pid:14080) (D_ALWAYS) \tExcept {} = 0\n06/26/19 09:50:27.210 (fd:3) (pid:14080) (D_ALWAYS) Timeout = 10.000000 seconds\n06/26/19 09:50:27.210 (fd:3) (pid:14080) (D_DAEMONCORE) Calling Handler &lt;Query Job Ads Continuation&gt; for Socket &lt;Client Response&gt;\n06/26/19 09:50:27.210 (fd:3) (pid:14080) (D_COMMAND) Calling Handler &lt;Query Job Ads Continuation&gt; (5)\n06/26/19 09:50:27.210 (fd:3) (pid:14080) (D_NETWORK) condor_write(fd=2372 &lt;172.22.17.47:51647&gt;,,size=582,timeout=15,flags=0,non_blocking=0)\n06/26/19 09:50:27.210 (fd:3) (pid:14080) (D_COMMAND) Return from Handler &lt;Query Job Ads Continuation&gt; 0.000102s\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2019-Aug-07 11:43:16 by jfrey:</em> <br/>\n\nThe core of this bug is a race between <code>DaemonCore::Driver()</code> and <code>SharedEndPoint::PipeListenerThread()</code> operating on the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> variables <code>async_pipe</code> and <code>async_pipe_signal</code>. <code>PipeListenerThread()</code> calls <code>DaemonCore::Register_PumpWork_TS()</code> and none of the functions in this call stack grab a lock for operating on these variables. Certain interleavings of the of the instructions in the two threads can result in <code>async_pipe_signal</code> set to <code>true</code> and the <code>async_pipe</code> connection empty. This condition is never cleared.\n\n<p>The main fix is to unconditionally set <code>async_pipe_signal</code> to <code>false</code> in DaemonCore::Driver() on windows (this is already the behavior on unix). This clears the bad state if the daemon gets into it. We also add usage of InterlockedExchange() when modifying <code>async_pipe_signal</code> reduce risks from cache incoherency. All other changes in this ticket are error detection and reporting.\n\n</p><p></p><hr/>\n<em>2019-Aug-07 11:43:32 by jfrey:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>This code looks good.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-08 16:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57639\">[57639]</a></span>: version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7143\" onclick=\"get_ticket_and_populate_wrapper('7143'); return false;\" title=\"Daemons slow to respond to commands on Windows\">#7143</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7182\" onclick=\"get_ticket_and_populate_wrapper('7182'); return false;\" title=\"name conflict with collectd causes a crash\">#7182</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jul-12 11:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57407\">[57407]</a></span>: fix Windows build break caused by merge of <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7143\" onclick=\"get_ticket_and_populate_wrapper('7143'); return false;\" title=\"Daemons slow to respond to commands on Windows\">#7143</a></span> from stable to master branch  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jul-11 15:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57400\">[57400]</a></span>: fix for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7143\" onclick=\"get_ticket_and_populate_wrapper('7143'); return false;\" title=\"Daemons slow to respond to commands on Windows\">#7143</a></span>, daemons slow to respond to commands on Windows. The fix involves fixing a race condition in wake_up_select, and also adding a bunch of logging to make this condition visible in the log when the dprintf level is set to D_PERF_TEST ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Aug-08 16:46", "status": "resolved", "created": "2019-Jul-05 13:47", "fixed_version": "2019-Jul-05 13:47", "broken_version": "v080600", "priority": "2", "subsystem": "Win32", "assigned_to": "johnkn", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}