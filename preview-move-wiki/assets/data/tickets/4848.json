{"id": 4848, "title": "Ticket #4848: Address rewriting only considers first command socket", "description": "<blockquote>\n(Split off from <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=4833\" onclick=\"get_ticket_and_populate_wrapper('4833'); return false;\" title=\"IPv6 bugfixes for 8.3.2\">#4833</a></span>.)\nIf shared_port, IPv6, and IPv4 is enabled, address rewriting does not work.\n<ul>\n<li>The address rewriting code seems to have a somewhat-fatal flaw: instead of comparing the ad's address against all command sockets, it only compares the address against the <strong>first</strong> command socket.  So, if the initial command socket is IPv4, an IPv4 address may get bumped to IPv6; an IPv6 address will not get rewritten to IPv4.  This results in IPv4 connections getting told the IPv6 address; hilarity ensues.\n</li><li>The issue comes up is because we determine the command socket from the shared_port_ad; if the shared port advertises the IPv4 socket (the default!) but the ad in the collector is the IPv6 address (true if the IPv6 address is first in the DNS for the collector).  This affects the collector ad (assuming issue 1 is fixed).\n</li><li>I fix this by tracking <strong>all</strong> command socket sinful strings and try address rewriting for each.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2015-Jan-16 11:21 by tlmiller:</em>\n\n<p>I'm certain I tested this.  I may have missed something, but I'm sure I tested it -- so I'd like to know what, precisely, is broken.\n\n</p><p>The address rewriting code should never see an IP address other than the first command socket's -- we (should) never insert anything else.  I don't necessarily object to checking all of sinfuls, just to be safe, but I think something else is going on.\n\n</p><p>Have you verified that the on-disk shared port ad contains an IPv6 address?  The shared port daemon uses the initial command socket (as we would expect) to populate the ad, and address rewriting only occurs when sending <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> over the wire.  (And only when the address in question is the address of the sender, because we don't otherwise know what to substitute.)\n\n</p><p>More generally, yes, even an IPv4-only client is going to see IPv6 addresses in the collector.  There's nothing we can do about that; we plan to avoid the problem with matchmaking, in the future.\n\n</p><p></p><hr/>\n<em>2015-Jan-17 07:48:35 by bbockelm:</em>\n\n<p>Yes, when you tested it, this worked correctly.  However, when we fixed <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4830\" onclick=\"get_ticket_and_populate_wrapper('4830'); return false;\" title=\"Bug: unnecessary socket creation\">#4830</a></span>, the daemons started connecting to the collector using IPv6 (as designed) - including the collector itself!  This means the collector ad contained the collector's IPv6 address - no longer IPv4.  When subsequently serving the collector ad - which contains the IPv6 address, but the initial command socket is IPv4 - address rewriting breaks.\n\n</p><p></p><hr/>\n<em>2015-May-27 14:44:26 by tlmiller:</em> <br/>\n\nI believe this was deliberately left undocumented.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Feb-11 22:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=43336\">[43336]</a></span>: Aggressively rewrite shared port addresses. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4848\" onclick=\"get_ticket_and_populate_wrapper('4848'); return false;\" title=\"Address rewriting only considers first command socket\">#4848</a></span> <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4849\" onclick=\"get_ticket_and_populate_wrapper('4849'); return false;\" title=\"Rewrite all ads leaving collector on single-node pool\">#4849</a></span> If SHARED_PORT_ADDRESS_REWRITING is set to true, THEN:\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-14 22:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=42222\">[42222]</a></span>: Fix various IPv6 issues. <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=4833\" onclick=\"get_ticket_and_populate_wrapper('4833'); return false;\" title=\"IPv6 bugfixes for 8.3.2\">#4833</a></span> In particular: 1) Make sure the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=InitCommandSockets\" title=\"Init Command Sockets\">InitCommandSockets</a></span> code does not rely on the TCP port and UDP port being the same. In the case of the collector- behind-shared-port, the collector listens on UDP 9618 and a random TCP port. Previously, the code caused the collector to listen\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2015-Nov-09 10:06", "status": "resolved", "created": "2015-Jan-23 14:31", "fixed_version": "2015-Jan-23 14:31", "broken_version": "v080303", "priority": "4", "subsystem": "Daemons", "assigned_to": "tlmiller", "derived_from": "#4492", "creator": "bbockelm", "rust": "", "customer_group": "other", "visibility": "public", "notify": "bbockelm@cse.unl.edu, tlmiller@cs.wisc.edu,adesmet@cs.wisc.edu", "due_date": ""}