{"id": 6535, "title": "Ticket #6535: ClassAd python objects has case-sensitive __contains__", "description": "<blockquote>\nIn python, you can check for existence of keys in dict-like objects with <code>attr in dict</code>, implemented by a class __contains__ method. <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> objects allow checking for attributes this way but it's case-sensitive, whereas all other methods of accessing attributes are case-insensitive:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">#!/bin/env python\n\nimport htcondor\nimport classad\n\ncoll = htcondor.Collector('localhost')\nad = coll.locate(htcondor.DaemonTypes.Collector)\n\n# these all access the 'Name' attribute\nprint '\\n'.join([ad['name'],\n                 ad['Name'],\n                 ad.get('name'),\n                 ad.get('Name'),\n                 str('Name' in ad)]) # True\n\n# this fails to access 'Name'\nprint 'name' in ad # False\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2018-Oct-09 09:55:20 by johnkn:</em> <br/>\n\nIt looks to me like since our Classad wrapper doesn't have a __contains__ method, python falls back to getting the keys and then iterating to see if one matches.\n\n<p>the keys iteration is implemented thus\n\n</p><p></p><pre>    typedef boost::transform_iterator&lt;AttrPairToFirst, classad::AttrList::iterator&gt; AttrKeyIter;\n</pre>\n\n<p></p><pre>    ...\n</pre>\n\n<p></p><pre>    AttrKeyIter beginKeys();\n    AttrKeyIter endKeys();\n</pre>\n\n<p></p><pre>    ...\n</pre>\n\n<p></p><pre>   .def(\"keys\", boost::python::range(&amp;ClassAdWrapper::beginKeys, &amp;ClassAdWrapper::endKeys))\n</pre>\n\n<p>It looks to me like python is just doing it's own comparison of a string against the iteration of keys.  So we can fix the first example by adding a __contains__ method (and we should since it's more efficient).  But\n\n</p><p></p><pre>    key in ad.keys()\n</pre>\n\n<p>would still be case sensitive. (I think)\n\n</p><p></p><hr/>\n<em>2018-Oct-10 09:58:04 by johnkn:</em> <br/>\n\nUpon consultation with some other python programmers, it is not a problem that\n\n<p></p><pre>    key in ad.keys()\n</pre>\n\n<p>is case sensitive\n\n</p><p></p><hr/>\n<em>2018-Oct-10 15:35:59 by tim:</em> <br/>\n\n<strong>CODE REVIEW</strong> Nice addition\n\n<p><strong>DOC REVIEW</strong> Complete</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Oct-10 10:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e54faff0ab5c6d785ac3cc0eeb4c1fec3748073c\">[55548]</a></span>: version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6535\" onclick=\"get_ticket_and_populate_wrapper('6535'); return false;\" title=\"ClassAd python objects has case-sensitive __contains__\">#6535</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Oct-10 09:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/7e1ab27012e17dd6cc0d0fbdcaf0df468f9ba0a1\">[55547]</a></span>: implement __contains__ in python bindings classad wrapper so that is case insensitive <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6535\" onclick=\"get_ticket_and_populate_wrapper('6535'); return false;\" title=\"ClassAd python objects has case-sensitive __contains__\">#6535</a></span>, the default python implementation is case sensitive, which is wrong. ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2018-Oct-10 15:36", "status": "resolved", "created": "2018-Jan-18 16:05", "fixed_version": "2018-Jan-18 16:05", "broken_version": "v080608", "priority": "3", "subsystem": "PythonBinding", "assigned_to": "johnkn", "derived_from": "#4882", "creator": "blin", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "blin@cs.wisc.edu", "due_date": ""}