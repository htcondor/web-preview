{"id": 4554, "title": "Ticket #4554: Exceeds MAX_JOBS_RUNNING", "description": "<blockquote>\nbatches of jobs go past the limit and the excess are then removed. Removal of extra jobs not based on last started first out. killing seems random.\n\n<p>set MAX_JOBS_RUNNING at 8\nwrite a submit file which submits 12 jobs against 12 slots.\nsubmit and look at user and starter and schedd logs etc.</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Sep-05 15:50:10 by bt:</em> <br/>\n\nThis seems to be a regression from 8.0.7\n\n<p></p><hr/>\n<em>2014-Oct-01 16:11:09 by jfrey:</em> <br/>\n\nThis was introduced with the new send-multiple-matches feature of the negotiator (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3585\" onclick=\"get_ticket_and_populate_wrapper('3585'); return false;\" title=\"Negotiation protocol slow over high latency links\">#3585</a></span>), introduced in 8.1.1. The schedd sees 12 identical jobs, so it sends the negotiator one job ad (one auto cluster) and asks for 12 matches. As each match arrives, the schedd checks whether the next job in the auto cluster can run on it. This includes a check of MAX_JOBS_RUNNING (counting the matches it has been receiving). For the first 8 matches, everything's fine. For the final 4 matches, the check fails. So the schedd falls back to seeing if any job in the queue can run on the match, without a check of MAX_JOBS_RUNNING. The jobs checked include the unmatched jobs it just decided can't run. The schedd then proceeds to claim the startd and start a shadow. Later, the schedd rechecks the entire job queue and notices that there are too many shadows running, and picks 4 random ones to kill.\n\n<p>In particular, ScheddNegotiate::nextJob() includes a check of MAX_JOBS_RUNNING (via scheduler_skipJob()) and skips jobs in the auto cluster if it fails. If it runs out of jobs, it sets the id of the next job to -1.-1. The old code that negotiates one job at a time checks for this value and says it has no more jobs to be matched. In the new code, it can keep receiving matches after nextJob() runs out of jobs and starts using id -1.-1. It will call scheduler_handleMatch() with this job id and the additional matches. scheduler_handleMatch() doesn't properly detect that no jobs can be started with the match (it could be dealing with a grid universe job, which doesn't have this limit). It then calls FindRunnableJob() and doesn't do an additional check.\n\n</p><p></p><hr/>\n<em>2015-Jan-30 10:29:03 by jfrey:</em> <br/>\n\nThis problem has gone away with the newer negotiation protocol introduced by <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4460\" onclick=\"get_ticket_and_populate_wrapper('4460'); return false;\" title=\"Further improvements to negotiation over high latency links\">#4460</a></span> for 8.3.0.\n\n<p></p><hr/>\n<em>2015-Apr-07 14:06:33 by tannenba:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>Patch looks good, thanks.</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-03 11:24</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=43499\">[43499]</a></span>: minor 8.2.8 version history item edit <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4554\" onclick=\"get_ticket_and_populate_wrapper('4554'); return false;\" title=\"Exceeds MAX_JOBS_RUNNING\">#4554</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-30 11:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=42479\">[42479]</a></span>: Docs for exceeding MAX_JOBS_RUNNING bug fix. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4554\" onclick=\"get_ticket_and_populate_wrapper('4554'); return false;\" title=\"Exceeds MAX_JOBS_RUNNING\">#4554</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-30 11:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=42478\">[42478]</a></span>: Don't exceed MAX_JOBS_RUNNING when we get extra matches. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4554\" onclick=\"get_ticket_and_populate_wrapper('4554'); return false;\" title=\"Exceeds MAX_JOBS_RUNNING\">#4554</a></span> When we send a resource request list to the negotiator, we may get back enough matches to exceed MAX_JOBS_RUNNING. When this happens, the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ScheddNegotiate\" title=\"Schedd Negotiate\">ScheddNegotiate</a></span> object will skip job ids in the autocluster and then call scheduler_handleMatch() with\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2015-Jun-19 11:47", "status": "resolved", "created": "2014-Aug-25 12:00", "fixed_version": "2014-Aug-25 12:00", "broken_version": "v080101", "priority": "4", "subsystem": "DaemonsSubmitNode", "assigned_to": "tannenba", "derived_from": "", "creator": "bt", "rust": "s8468", "customer_group": "support", "visibility": "public", "notify": "bt@cs.wisc.edu", "due_date": ""}