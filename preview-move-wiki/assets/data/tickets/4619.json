{"id": 4619, "title": "Ticket #4619: Shadow error causes job to be un-removed", "description": "<blockquote>\nIf a running job is removed, and then shadow exits with JOB_SHOULD_HOLD, the schedd puts the job in the HELD status without setting <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobStatusOnRelease\" title=\"Job Status On Release\">JobStatusOnRelease</a></span>. Then, if the job is released, it goes to IDLE status instead of back to REMOVED.\n\n<p>SetAttribute() already has a check for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobStatus\" title=\"Job Status\">JobStatus</a></span>, to save the previous value as <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LastJobStatus\" title=\"Last Job Status\">LastJobStatus</a></span>. We can expand that code to ensure that <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobStatusOnRelease\" title=\"Job Status On Release\">JobStatusOnRelease</a></span> is set appropriately when the status changed away from REMOVED, and that once the status has been REMOVED, it can only switch between HELD and REMOVED.\n\n</p><p>In Scheduler::jobExitCode(), if the shadow's exit status is JOB_SHOULD_HOLD and the job's current status is REMOVED, then the schedd should leave <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobStatus\" title=\"Job Status\">JobStatus</a></span> as REMOVED and let the the job leave the queue. The same goes for DedicatedScheduler::reaper().</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Sep-30 16:18:27 by jfrey:</em> <br/>\n\nWe could enforce the rule that REMOVED jobs that are HELD can only go back to REMOVED using <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LastJobStatus\" title=\"Last Job Status\">LastJobStatus</a></span>, and get rid of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobStatusOnRelease\" title=\"Job Status On Release\">JobStatusOnRelease</a></span>.\n\n<p></p><hr/>\n<em>2014-Oct-10 16:22:23 by gthain:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>While the changes here all look good, they call set_job_status, which commits the change in job status as a non-durable transaction.  Isn't that a problem in a lot of cases?</p></blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Sep-30 16:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41279\">[41279]</a></span>: Docs for Shadow error causes job to be un-removed bugfix <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4619\" onclick=\"get_ticket_and_populate_wrapper('4619'); return false;\" title=\"Shadow error causes job to be un-removed\">#4619</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Sep-30 16:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41275\">[41275]</a></span>: Ignore shadow request to hold job if job is removed. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4619\" onclick=\"get_ticket_and_populate_wrapper('4619'); return false;\" title=\"Shadow error causes job to be un-removed\">#4619</a></span> There's no need to keep the job around, and attempting to hold it helped provoke a bug that resulted in the job going to idle on release.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Sep-30 16:41</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41276\">[41276]</a></span>: Ensure that removed jobs can't return to idle. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=4619\" onclick=\"get_ticket_and_populate_wrapper('4619'); return false;\" title=\"Shadow error causes job to be un-removed\">#4619</a></span> Our existing set of checks to prevent removed jobs from returning to idle status had a hole. We're adding a back-stop to catch future holes. In SetAttribute(), if <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobStatus\" title=\"Job Status\">JobStatus</a></span> is changed, we now enforce the following: * <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LastJobStatus\" title=\"Last Job Status\">LastJobStatus</a></span> reflects the previous\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-Oct-22 15:20", "status": "resolved", "created": "2014-Sep-26 14:27", "fixed_version": "2014-Sep-26 14:27", "broken_version": "v080200", "priority": "2", "subsystem": "DaemonsSubmitNode", "assigned_to": "gthain", "derived_from": "#4615", "creator": "jfrey", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "tannenba@cs.wisc.edu, jfrey@cs.wisc.edu", "due_date": ""}