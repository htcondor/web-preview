{"id": 7816, "title": "Ticket #7816: Fix test_late_materialization.py", "description": "<blockquote>\nThis Ornithological test is currently disabled; fix it and enable it.\n\n<p></p><hr/>\nThis test does not pass consistently in BaTLab.\n\n<p>This test may not be a complete replacement of the test it's porting, job_late_materialize_py.run.</p></blockquote>", "remarks": "<blockquote>\nI think finalizing this will need a little more domain knowledge from TJ to make sure we're covering the same ground as the existing test.\n\n<p>The Ornithology test has the same two main sections as the existing test: the first checks that the materialization limits are behaving as expected, and the second makes sure that itemdata makes it into the job ads correctly.\n\n</p><p>I'm not too worried about the second one (I think the new test is basically doing the same thing the old one does, though because it checks the job queue log it's a little more in the guts of the system).\n\n</p><p>I'm more worried about the first one. I do not check the same conditions that the existing test did. The Ornithology test makes assertions about <code>max_idle</code> and <code>max_materialize</code> (that they are never exceeded, and that the limit is reached at some point during the test, in both cases). The old test is somewhat different:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">if peak_idle &lt; int(sub['max_idle']):\n\tUtils.Log(\"FAILURE: peak_idle({0}) &lt; max_idle({1})\".format(peak_idle, sub['max_idle']))\n\tretval = 1\nelif peak_idle &gt; 2*int(sub['max_idle']):\n\tUtils.Log(\"FAILURE: peak_idle({0}) &gt; 2*max_idle({1})\".format(peak_idle, sub['max_idle']))\n\tretval = 1\nelif total_materialized != num_items:\n\tUtils.Log(\"FAILURE: total_materialized({0}) != {1}\".format(total_materialized, num_items))\n\tretval = 1\nelif total_exited != num_items:\n\tUtils.Log(\"FAILURE: total_exited({0}) != {1}\".format(total_exited, num_items))\n\tretval = 1\n</pre></div>\n\n\n<p>TJ, could you comment on exactly what assertions you'd like to make / be able to make in the final form of this test?\n\n</p><p></p><hr/>\n<em>2020-Sep-08 16:30:14 by karpel:</em> <br/>\n\nFixed an internal bug with log reading that was causing the failure and re-enabled. Now let's see if the timeouts are long enough for consistency.\n\n<p></p><hr/>\n<em>2020-Sep-09 09:02:21 by karpel:</em> <br/>\n\nTimeouts look good. Now we just need to decide whether we're testing the rights things.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Sep-08 16:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/432ae2a44841fbec29f56b020913d352ac48a012\">[61242]</a></span>: (<span class=\"ticket\"><a class=\"active\" href=\"/tickets?ticket=7816\" onclick=\"get_ticket_and_populate_wrapper('7816'); return false;\" title=\"Fix test_late_materialization.py\">#7816</a></span>) resolve an issue in ornithology where partially-written lines could be read from the job queue log in the middle of a transaction, which was breaking test_late_materialization.py (now re-enabled)  (By Josh Karpel )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2020-Nov-18 17:35", "status": "active", "created": "2020-Aug-25 19:12", "fixed_version": "2020-Aug-25 19:12", "broken_version": "", "priority": "3", "subsystem": "Tests", "assigned_to": "johnkn", "derived_from": "#7811", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu johnkn@cs.wisc.edu", "due_date": ""}