{"id": 7095, "title": "Ticket #7095: Schedd crash when removing scheduler universe jobs", "description": "<blockquote>\nWhen a scheduler or local universe job is removed, if the periodic job policy is evaluated immediately after the initial change in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobStatus\" title=\"Job Status\">JobStatus</a></span>, the job ad can leave the queue without the job or starter process being signaled that it should exit. The job will be allowed to continue running, and no final job event will be logged.\n\n<p>For scheduler universe jobs, this could result in the schedd exiting with status 4 when the job exits with a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ScheddLog\" title=\"Schedd Log\">ScheddLog</a></span> entry similar to\n\n</p><p></p><pre>   06/21/19 11:41:35 (pid:3918818) (D_ALWAYS) scheduler universe job (7648644.0) pid 2163102 exited with status 1\n   06/21/19 11:41:35 (pid:3918818) (D_ALWAYS|D_FAILURE) ERROR \"Assertion ERROR on (job_ad)\"\n</pre>\n\n<p>When a job is removed, its ad is updated and it's added to the stop_job_queue self-draining queue, which will send a signal to the job or starter process at a future date. The delay before the signal is sent is usually small, but can become large if a lot of jobs are removed at once.\nIf the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PeriodicExprHandler\" title=\"Periodic Expr Handler\">PeriodicExprHandler</a></span> timer fires before stop_job_queue gets to the job, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PeriodicExprHandler\" title=\"Periodic Expr Handler\">PeriodicExprHandler</a></span> will call DestroyProc() on the job. This first call to DestroyProc() will add the job to the job_is_finished_queue self-draining queue, which does final cleanup on jobs ready to leave the queue. If job_is_finished_queue gets to the job before stop_job_queue, then DestroyProc() is called again, this time leading to the job leaving the queue. When stop_job_queue finally gets to the job, it can't find the job ad, so it doesn't signal the job or starter process.\nOnce the job does exit, the reaper for scheduler universe looks up the job ad and calls ASSERT() if it doesn't find it.\n\n</p><p>This bug was introduced in a bug fix in 8.8.0 (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6808\" onclick=\"get_ticket_and_populate_wrapper('6808'); return false;\" title=\"Removed jobs remain in queue forever with leave_in_queue\">#6808</a></span>). The fix allowed removed jobs whose <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=LeaveJobInQueue\" title=\"Leave Job In Queue\">LeaveJobInQueue</a></span> expression changed from True to False to leave the queue. Prior to that, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PeriodicExprHandler\" title=\"Periodic Expr Handler\">PeriodicExprHandler</a></span> didn't call DestroyProc() on removed jobs.</p></blockquote>", "remarks": "<blockquote>\n<em>2019-Jun-05 09:12:05 by jfrey:</em> <br/>\n\nAnother fun detail: DestroyProc() can be called at any point during a job's lifetime, and the schedd will take the job out of the queue. Clients can do this for jobs they have rights on.\n\n<p></p><hr/>\n<em>2019-Jun-05 12:45:22 by jfrey:</em> <br/>\n\nI propose three changes to fix this bug:\n\n<p></p><ul>\n<li>The schedule universe reaper logs an error and returns early if it can't get the job ad.\n</li><li>DestroyProc() returns failure if the job isn't in COMPLETED or REMOVED status.\n</li><li>PeriodicExprEval() doesn't call DestroyProc() if the job has a shadow_rec.\n</li></ul>\n\n<p>I planned to have DestroyProc() make the shadow_rec check, but in the normal course of events, check_zombie() calls DestroyProc() just before the shadow_rec is deleted. Having that call to DestroyProc() succeed involved a larger change than I wanted for a stable release.\n\n</p><p></p><hr/>\n<em>2019-Jun-19 12:28:35 by johnkn:</em> <br/>\n\n<strong>CODE_REVIEW</strong> changes look good.\n\n<p>I should note that the changes to not allow external qmgmt clients to destroy procs that are not in COMPLETED or REMOVED state seems reasonable, but I don't really understand the consequences here.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jun-05 12:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57110\">[57110]</a></span>: Fix schedd crash when scheduler univ jobs leave the queue early. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7095\" onclick=\"get_ticket_and_populate_wrapper('7095'); return false;\" title=\"Schedd crash when removing scheduler universe jobs\">#7095</a></span> * Prevent jobs from leaving the queue prematurely due an early call to DestroyProc(). * The reaper for scheduler universe jobs shouldn't freak out if it can't get the job ad.  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jun-05 12:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=57111\">[57111]</a></span>: Docs for schedd crash on scheduler universe job removal bug fix. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7095\" onclick=\"get_ticket_and_populate_wrapper('7095'); return false;\" title=\"Schedd crash when removing scheduler universe jobs\">#7095</a></span>  (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Jun-21 12:03", "status": "resolved", "created": "2019-Jun-04 15:30", "fixed_version": "2019-Jun-04 15:30", "broken_version": "v080800", "priority": "3", "subsystem": "DaemonsSubmitNode", "assigned_to": "jfrey", "derived_from": "#6808", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}