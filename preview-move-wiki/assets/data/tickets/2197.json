{"id": 2197, "title": "Ticket #2197: General statistics architecture for Condor", "description": "<blockquote>\nWe would like to be able to gather statistics for the purpose of improving the\nCondor software and providing guidance to users. The data is to give us insight\nin to what the daemon is doing, and in particular intended to help us determine\nthe reasons for badput.\n\n<p><span class=\"subsection\"></span></p><h3>General Guidelines:</h3>\n\n<p>We will do the bare minimum of processing of data.  The onus of processing will\nbe on the user. Thus the data we collect will observe the following constraints.\n\n</p><p></p><ul>\n<li>Instantaneous values or totals from the time the daemon was started will be published.\n</li><li>Statistical data is not persistent and will be lost when the daemon process exits.\n</li><li>The set of statistical values is defined at compile time, based on actual\n  user requests or plausable use cases. Dynamic or user-defined statistics are\n  not envisaged.\n</li></ul>\n\n<p>Calls to increment and update raw statistical values will need to be added in various places in the code that we are trying to measure, but an effort should be made to minimize the amount of code needed outside of the statistics module.\n\n</p><p>It will be straightforward to change or add new statistical values, and to change which <span class=\"quote\">ClassAds</span> statistics are published into.\n\n</p><p><span class=\"subsection\"></span></p><h3>Implementation: </h3>\n\n<p>A module will be created to aid in the storage, updating and publishing of statistics. Storage of temporary values and much of the code for windowing and calculating statistical data will be collected into a class or set of classes.  The class will have a simple interface for callers to increment various counters, and to publish the collected values.\n\n</p><p>There will be three main types of statistical values\n\n</p><p></p><ul>\n<li>Simple values or time durations that will increase throughout the lifetime of the daemon\n</li><li>Windowed values for the most recent <span class=\"quote\">RecentStatWindowTime</span> seconds\n</li><li>Histograms returned as a list of values\n</li></ul>\n\n<p>In most cases statistical values will be available as both Simple values and Recent window values.\n\n</p><p>The statistics will be collected internally in the daemons, and published in\nthe daemons' <span class=\"quote\">ClassAds</span>. The collection will occur in a statically allocated table, with the exception of the binning for the lists (e.g., in <span class=\"quote\">JobLifetimes</span>). The binning is envisaged to be a config knob.\n\n</p><p>The initial implementation will define what statistics exist and where they will be published at compile time.  But it is expected that we may want to make changes at run-time in the future, so care will be taken to not preclude that.\n\n</p><p></p><div class=\"strike\">\n<strike>Because the changes #2006 have already been shipped by Red Hat, we will make it easy to publish some of the values under the names indicated in #2006 as well as under the names given above.  This behavior will be controlled by a new param called PUBLISH_STATISTICS_USING_OLD_NAMES_ALSO.</strike></div>\n\n\n<p>Proposed values:\n</p><ul>\n<div class=\"verbatim\">\n<pre>## Schedd Ad statistics.\n\nStatLifetime             RelTime   total the schedd has been collecting statistics. (schedd lifetime)\nJobsStatLastUpdateTime   AbsTime   corresponding to the most recent update of the Schedd Ad statistics.\nJobsSubmitted            int     number of jobs submitted over lifetime of schedd\nJobsStarted              int     number of jobs started over schedd lifetime\nJobsCompleted            int     number of jobs successfully completed over schedd lifetime\nJobsExited               int     number of jobs exited (successful or otherwise) over schedd lifetime\nJobShadowExceptions      int     number of shadow exceptions over schedd lifetime\n\n# these supercede (2006 ExitCodeXXX) and JobsExitedWithCodeXXX above\n#\nJobsExitedNormally        int     number of jobs that exited with JOB_EXITED or JOB_EXITED_AND_CLAIM_CLOSING\nJobsCheckpointed          int     number of jobs that exited with JOB_CKPTED\nJobsKilled                int     number of jobs that exited with JOB_KILLED  (or JOB_NO_CKPT_FILE?)\nJobsCoredumped            int     number of jobs that exited with JOB_COREDUMPED\nJobsExitException         int     number of jobs that exited with JOB_EXCEPTION, DPRINTF_ERROR, or any unknown code\nJobsShadowNoMemory        int     number of jobs that exited with JOB_NO_MEM\nJobsExecFailed            int     number of jobs that exited with JOB_EXEC_FAILED (or JOB_NO_MEM?)\nJobsShouldRequeue         int     number of jobs that exited with JOB_SHOULD_REQUEUE\nJobsNotStarted            int     number of jobs that exited with JOB_NOT_STARTED\nJobsShouldHold            int     number of jobs that exited with JOB_SHOULD_HOLD\nJobsShouldRemove          int     number of jobs that exited with JOB_SHOULD_REMOVE\nJobsMissedDeferralTime    int     number of jobs that exited with JOB_MISSED_DEFERRAL_TIME\nJobsExitedAndClaimClosing int     number of jobs that exited with JOB_EXITED_AND_CLAIM_CLOSING\n\nShadowsRunning            int    current number of running shadows\nShadowsRunningPeak        int    largest number of simultaneously running shadows\nShadowsStarted            int    total number of shadow processes that have been started over daemon lifetime\nShadowsRecycled           int    number of times shadows have been recycled over daemon lifetime\nShadowExceptions          int    number of shadow exceptions during StatLifetime           (2006 ShadowExceptionsCum)\n\n\nJobsAccumTimeToStart    RelTime   sum of job wait times to first start, over schedd lifetime\nJobsAccumRunningTime    RelTime   sum of job running times for goodput over schedd lifetime\nJobsAccumBadputTime     RelTime   sum of job running times for badput over schedd lifetime\n\n## Schedd Ad window'ed statistics\n\nRecentStatWindowTime        RelTime   size of the time window for 'Recent' stats.  grows until it reaches WINDOWED_STAT_WIDTH and then holds there.\nRecentJobsSubmitted         int     number of jobs submitted over most recent sampling window\nRecentJobsStarted           int     Number of jobs started in stat window WINDOWED_STAT_WIDTH\nRecentJobsCompleted         int     number of jobs completed (successfully) over sampling window\nRecentJobsExited            int     number of jobs that exited (successful or otherwise) over window\nRecentJobsExitedWithCodeXXX int     number of jobs exited with code XXX (100, 115, etc) over window\nRecentJobShadowExceptions   int     number of shadow exceptions over window\n\nRecentJobRunningTime        int     running (wall-clock) time of jobs in schedd, over stat window\n\n# these are currently in the code but aren't needed, can be calculated from the above.\n#\nRecentJobStartedPerSec      int     rate (jobs/sec) of jobs starting in stat window\nRecentJobsSubmittedPerSec   int     rate of job submission (jobs/sec) over sampling window\nRecentJobsCompletedPerSec   int     rate of successful job completions over window\n\n##\n## Histograms of job runtimes and sizes for goodput and badput\n##\n\nJobsRunningSizes             list counts of jobs for each of &lt;job_size_set&gt; for actively running jobs\nJobsCompletedSizes           list counts of jobs for each of &lt;job_size_set&gt; for jobs that succeeded\nJobsBadputSizes              list counts of jobs for each of &lt;job_size_set&gt; for jobs that failed in some way.\n\n## &lt;job_set_set&gt; is ( &lt; 64k &lt; 256k &lt; 1Mb &lt; 4Mb &lt; 16Mb &lt; 64Mb &lt; 256Mb &lt; 1Gb &lt; 4Gb &lt; 16Gb &lt; 64Gb &lt; 256Gb ...)\n## This is possibly a user configurable set.\n\nJobsRunningRuntimes          list  runtimes of jobs for each of &lt;job_runtime_set&gt; for actively running jobs\nJobsCompletedRuntimes        list  runtimes of jobs for each of &lt;job_runtime_set&gt; for jobs that succeeded\nJobsBadputRuntimes           list  runtimes of jobs for each of &lt;job_runtime_set&gt; for jobs that ran and failed in some way.\n\n## &lt;job_runtime_set&gt; is ( &lt; 30 sec &lt; 1 min &lt; 10 min &lt; 30 min &lt; 1 hour &lt; 3 hours &lt; 6 hours &lt; 24 hours &lt; 2 days &lt; 7 days &lt; 30 days &gt; 30 days)\n## possibly user configurable set?\n\n## for each daemon\n##\n\nDCStatLifetime            RelTime   total time the daemon has been collecting statistics. (uptime)\nDCStatLastUpdateTime      AbsTime   time of last update of DCxxxx statistics values\nDCSelectWaittime          RelTime   total time spent waiting in select\nDCSignalRuntime           RelTime   total time spent handling signals\nDCSocketRuntime           RelTime   total time spent handling socket messages\nDCPipeRuntime             RelTime   total time spent handling pipe messages\nDCSignals                 int       number of signals handlers called\nDCSockMessages            int       number of socket handlers called\nDCPipeMessages            int       number of pipe handlers called\nDCSockBytes               int       number of bytes passed though the socket (can we do this?)\nDCPipeBytes               int       number of bytes passed though the socket\nDCDebugOuts               int       number of dprintf calls that were written to output.\n\n\n</pre></div>\n\n</ul>\n\n<p><span class=\"subsection\"></span></p><h3>Milestones </h3>\n\n<p></p><ol>\n<li>20110909 Implement the generic plumbing, and simple and windowed stats for the schedd.\n</li><li>20110817 <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2354\" onclick=\"get_ticket_and_populate_wrapper('2354'); return false;\" title=\"Statistics in DaemonCore\">#2354</a></span> Statistics in <span class=\"quote\">DaemonCore</span>\n</li><li>20110819 <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2353\" onclick=\"get_ticket_and_populate_wrapper('2353'); return false;\" title=\"Statistics histogram\">#2353</a></span> Statistics histogram\n</li><li>20110915 <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=2355\" onclick=\"get_ticket_and_populate_wrapper('2355'); return false;\" title=\"Unit tests for Ring buffer implementation\">#2355</a></span> Unit tests for Ring buffer implementation\n</li><li>20110915 <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2356\" onclick=\"get_ticket_and_populate_wrapper('2356'); return false;\" title=\"Condor tests for statistics implementation\">#2356</a></span> Condor tests for statistics implementation\n</li><li>20110830 <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2429\" onclick=\"get_ticket_and_populate_wrapper('2429'); return false;\" title=\"create a wiki page showing how to add statistics in the condor code\">#2429</a></span> create <span class=\"wiki\"><a href=\"wiki?p=AddingStatisticsValues\" title=\"Adding Statistics Values\">AddingStatisticsValues</a></span> page to document how to use the classes in generic_stats.h</li></ol>\n</blockquote>", "remarks": "<blockquote>\n<em>2011-May-31 14:30:44 by eje:</em> <br/>\n\nPerformance stats are fairly daemon-specific in my experience.   What is the expected payoff for a generic cross-daemon 'stats collecting' object and/or service?\n\n<p>As part of <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2006\" onclick=\"get_ticket_and_populate_wrapper('2006'); return false;\" title=\"RFE: publish some additional performance-related stats in schedd ad\">#2006</a></span> I implemented a template widget called timed_queue&lt;&gt; which can be limited by either a time-window or a particular size (or both) -- it provides ring-buffer functionality.  It also demonstrates some basic accumulation methods:\n\n</p><p>.../src/condor_utils/timed_queue.h\n\n</p><p></p><hr/>\n<em>2011-May-31 14:54:48 by nwp:</em> <br/>\n\nPayoff from having cross-daemon object/service is that it is something that the schedd does not have to do; It seems that the schedd is getting overloaded, and not adding more to it seems like a good idea.  Also, such a service could communicate with the collector and negotiator, rather than being part of the schedd.\n\n<p>As it is, the timed_queue has got two objections that I have heard here around UW: first, it is not a priori bounded in memory usage; second, there is an objection to deriving from std::deque, because condor is not set up now to handle C++ exceptions very well.\n\n</p><p></p><hr/>\n<em>2011-May-31 17:31:32 by eje:</em> <br/>\n\nRegarding timed_queue&lt;&gt; questions:\n\n<p>1) It's memory can be bounded in a well defined way using the max_len() method, if desired.\n\n</p><p>2) Regarding exceptions, the STL data structures that are used in the condor code already include string, vector&lt;&gt; and map&lt;&gt;.   Adding deque&lt;&gt; to that list doesn't introduce a qualitative change.\n\n</p><p></p><hr/>\n<em>2011-May-31 17:39:31 by eje:</em> <br/>\n\nRegarding schedd computational load, it doesn't feel obvious to me that updating a given statistic is more compute-expensive than executing the machinery of sending data to a third party so the third party can maintain it.\n\n<p></p><hr/>\n<em>2011-Jun-01 12:04:26 by nwp:</em> <br/>\n\nYes, STL has snuck into Condor, for better or worse.  Hopefully, the upside is better than the downside.\n\n<p>I do not know that the statistics daemon is a good idea; I am just throwing it out there.  I could see some lunatic asking for statistics 30 times/sec and then it would probably make sense to offload it from the schedd.\n\n</p><p></p><hr/>\n<em>2011-Jun-01 12:18:21 by tstclair:</em> <br/>\n\nI think we need to create some clear objectives &amp; requirements, based on use cases, similar to some of the other tickets.  It might become more obvious what the best path will be then.  As it stands, this is pretty nebulous, and prone to conjecture atm.  It might be worth a mtg with some folks to gather/define requirements.\n\n<p></p><hr/>\n<em>2011-Jun-01 12:19:06 by nwp:</em> <br/>\n\nAmen\n\n<p></p><hr/>\n<em>2011-Jun-03 10:20:39 by bcotton:</em> <br/>\n\nFrom our Research Services group, who do the statistical finagling:\n\n<p>There are three distinct types of things that we cannot (to our\nknowledge) get from Condor right now that would be very helpful:\n\n</p><p>1.  Full job run attempt history.\nRight now, all that is logged in the history log is the last,\nsecond-to-last, and some info about the first run attempted.\nA lot of the discussion and proposal seems to be centered around\nthe notion of reporting statistics on a job.  We don't want or\nneed Condor to do statistics--we have real statistics packages\nfor that.  What we would like is for Condor to log the raw data\nthose need about <em>every</em> attempted run.\n\n</p><p>2.  Information on jobs in progress or in queue.\nRight now, history only logs anything about a job after it\ncompletes.  This is very problematic.  It would be much more\nuseful to get information about jobs before they complete, as\nthings happen.  This really is a fundamental shift in thinking\nabout logging, from a job-based log to an event-based log.\nEven if something wholly different from the current history\nlog, a real event-based log would be far more useful.  Many\njobs will stay in progress for days or even weeks, and not\nbeing able to report on them until they finish makes truly\naccurate reporting on the current state of the system simply\nimpossible.\n\n</p><p>3.  Centralized logging.\nBeing reliant on access to logs from the schedd hosts is a\nreally big problem.  It means that we cannot get accurate\ninformation on what our pool resources are doing if any of\nthem allow jobs from hosts outside of our control, either\ndirectly or through flocking.  This creates a huge disincentive\nfor anyone to allow any jobs from outside of their own\norganization, because they have no way of tracking what work\nor even how much work they are supporting by those outside\nschedds.  Note, this doesn't have to be a fancy DB-based\ncustom system.  Simply having event-based remote syslog\nsupport would solve all of (1), (2), and (3) above.\n\n</p><p></p><hr/>\n<em>2011-Jun-03 10:36:52 by tstclair:</em> <br/>\n\nbcotton - love the comments! and there may be 2-3 side-tickets just from that!\n\n<p>But I'm not sure it relates <strong>100%</strong> to the root of this specific ticket.  For example, most of the stats we are looking to obtain, or already exist, are internal performance measurements of the code itself.  The question(s) we've been trying to figure out are:\n\n</p><p></p><ul>\n<li>What the possible use cases?\n</li><li>What's the scope we want to attack here?\n</li></ul>\n\n<p></p><hr/>\n<em>2011-Jun-03 11:06:06 by eje:</em> <br/>\n\nbcotton, fyi - I think some of what you want will be available via new schedd stats in 7.7 (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2006\" onclick=\"get_ticket_and_populate_wrapper('2006'); return false;\" title=\"RFE: publish some additional performance-related stats in schedd ad\">#2006</a></span>)\n\n<p></p><hr/>\n<em>2011-Jun-04 12:16:44 by eje:</em> <br/>\n\nsee also:  <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=2211\" onclick=\"get_ticket_and_populate_wrapper('2211'); return false;\" title=\"Publish performance stat attributes for the Collector\">#2211</a></span>   (collector stat rfe)\n\n<p></p><hr/>\n<em>2011-Jun-06 13:35:56 by gthain:</em> <br/>\n\nNote that I'm not worried about using deque, but <em>deriving</em> from std::deque is a bit hinky, as the stl containers aren't really designed for this.\n\n<p></p><hr/>\n<em>2011-Jun-06 16:04:43 by johnkn:</em> <br/>\n\nI propose that the sort of statistics that are relevant to this ticket are.\n\n<p></p><ul>\n<li>Instantaneous values or totals from the time the daemon was started.\n</li><li>Not persistent - statistical data is lost when the daemon process exits.\n</li><li>Designed to give us insight in to what the daemon is doing, and in particular intended to help us determine the reasons for badput.\n</li><li>The set of statistical values is defined at compile time, based on actual user requests or plausable use cases.\n</li></ul>\n\n<p></p><hr/>\n<em>2011-Jun-06 16:17:37 by psilord:</em> <br/>\n\nStatistical data in which I have been personally interested:\n\n<p></p><ol>\n<li>Job completion rate per user and total over all users\n<ul>\n<li>It is useful because it tells me if all of Condor is somehow being affected by some environment problem or just a particular user is being affected.\n</li></ul>\n</li><li>I/O rate in/out per user and total over all users\n<ul>\n<li>When a machine is \"slow\" I can look to see who might be responsible for it since usually it is I/O related. I can see if the current network bandwidth of the machine is a limiting factor to the rate of job completion.\n</li></ul>\n</li><li>Global reconnect rate of shadows started up by schedd\n<ul>\n<li>This tells me if the submit machine is in an odd state where the shadows aren't staying active, continuously reconnecting correctly, but then going away again. It is usually indicative of high load related to process churn.\n</li></ul>\n</li></ol>\n\n<p></p><hr/>\n<em>2011-Jun-10 14:28:38 by tstclair:</em> <br/>\n\nIn doing some recent testing it would be nice to see:\n\n<p><code>ShadowsRunning</code>\n\n</p><p><code>ShadowsRunningCumulative</code>\n\n</p><p><code>ShadowsRecycled</code>\n\n</p><p><code>ShadowsRecycledCumulative</code>\n\n</p><p>because exit codes only tell 1/2 the story ;-)\n\n</p><p></p><hr/>\n<hr/>\n<em>2011-Sep-07 16:24:15 by nwp:</em> <br/>\n\nI wonder if we should scope the enumerations in <code>generic_stats.h</code>, e.g.,\n<div class=\"code\">\n<pre class=\"code\">+enum {\n+   STATS_ENTRY_TYPE_INT32 = 1,\n+   STATS_ENTRY_TYPE_INT64 = 2,\n+   STATS_ENTRY_TYPE_FLOAT = 1 | 4,\n+   STATS_ENTRY_TYPE_DOUBLE = 2 | 4,\n+   STATS_ENTRY_TYPE_UNSIGNED = 8,\n+   STATS_ENTRY_TYPE_UINT32 = STATS_ENTRY_TYPE_INT32 | STATS_ENTRY_TYPE_UNSIGNED,\n+   STATS_ENTRY_TYPE_UINT64 = STATS_ENTRY_TYPE_INT64 | STATS_ENTRY_TYPE_UNSIGNED,\n+   };\n</pre></div>\n\nand such, in namespaces, to avoid collisions\n\n<p></p><hr/>\n<em>2011-Sep-07 16:27:40 by nwp:</em> <br/>\n\nWhy are we using pointer-to-member rather than inheritance-plus-virtual functions?\n\n<p></p><hr/>\n<em>2011-Sep-08 09:43:52 by johnkn:</em> <br/>\n\npointer-to-member allows you to have multiple Publish methods in your class, and pass a pointer to the one you want to use when you register the probe with the pool.  You could even register the probe multiple times with a different attrib name and Publish method each time.\n\n<p>So if we need to have backward-compatible names for values, we can do that.\n\n</p><p></p><hr/>\n<em>2011-Dec-13 09:30:37 by nwp:</em> <br/>\n\nThe exact format and options in <code>STATISTICS_TO_PUBLISH</code> should be put into the manual, as they are not there now.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=2211\" onclick=\"get_ticket_and_populate_wrapper('2211'); return false;\" title=\"Publish performance stat attributes for the Collector\">#2211</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nPublish performance stat attributes for the Collector</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2353\" onclick=\"get_ticket_and_populate_wrapper('2353'); return false;\" title=\"Statistics histogram\">#2353</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nStatistics histogram</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2354\" onclick=\"get_ticket_and_populate_wrapper('2354'); return false;\" title=\"Statistics in DaemonCore\">#2354</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nStatistics in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span></td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=2355\" onclick=\"get_ticket_and_populate_wrapper('2355'); return false;\" title=\"Unit tests for Ring buffer implementation\">#2355</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nUnit tests for Ring buffer implementation</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2356\" onclick=\"get_ticket_and_populate_wrapper('2356'); return false;\" title=\"Condor tests for statistics implementation\">#2356</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCondor tests for statistics implementation</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2429\" onclick=\"get_ticket_and_populate_wrapper('2429'); return false;\" title=\"create a wiki page showing how to add statistics in the condor code\">#2429</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\ncreate a wiki page showing how to add statistics in the condor code</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=2474\" onclick=\"get_ticket_and_populate_wrapper('2474'); return false;\" title=\"Convert ad-hoc statistics in various daemons to use generic_stats\">#2474</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nConvert ad-hoc statistics in various daemons to use generic_stats</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2732\" onclick=\"get_ticket_and_populate_wrapper('2732'); return false;\" title=\"Create a new condor_reset_stats tool\">#2732</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCreate a new condor_reset_stats tool</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=2733\" onclick=\"get_ticket_and_populate_wrapper('2733'); return false;\" title=\"Incorporate statistics into the startd\">#2733</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nIncorporate statistics into the startd</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2783\" onclick=\"get_ticket_and_populate_wrapper('2783'); return false;\" title=\"Add attributes to JobAd to show time spent in file transfer\">#2783</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nAdd attributes to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobAd\" title=\"Job Ad\">JobAd</a></span> to show time spent in file transfer</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2862\" onclick=\"get_ticket_and_populate_wrapper('2862'); return false;\" title=\"Schedd should collect statistics on sub-sets of completed jobs.\">#2862</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nSchedd should collect statistics on sub-sets of completed jobs.</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3288\" onclick=\"get_ticket_and_populate_wrapper('3288'); return false;\" title=\"RFE: expose general_stats 'recent' ring buffer quantization to configu\">#3288</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nRFE: expose general_stats 'recent' ring buffer quantization to configu</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3428\" onclick=\"get_ticket_and_populate_wrapper('3428'); return false;\" title=\"Create unit tests for ring_buffer code used by daemon statistics\">#3428</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCreate unit tests for ring_buffer code used by daemon statistics</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3443\" onclick=\"get_ticket_and_populate_wrapper('3443'); return false;\" title=\"daemon abort after changing STATISTICS_WINDOW_SECONDS, reconfig\">#3443</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\ndaemon abort after changing STATISTICS_WINDOW_SECONDS, reconfig</td></tr>\n</tbody></table>", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/364/condor-stats.pdf\">condor-stats.pdf</a>\n30830 bytes added by nwp on 2011-May-31 21:24:21 UTC.\n<br/>\nSecond draft<br/>\n</li><li><a href=\"attach_get/389/schedd-stats\">schedd-stats</a>\n5258 bytes added by nwp on 2011-Jun-27 21:40:20 UTC.\n<br/>\nText document from above, for convenience in downloading<br/>\n</li><li><a href=\"attach_get/613/qmgmt_queued_stat.patch\">qmgmt_queued_stat.patch</a>\n3033 bytes added by johnkn on 2012-Jul-25 16:39:31 UTC.\n<br/>\nadds <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobsQueued\" title=\"Jobs Queued\">JobsQueued</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobsQueuedRecent\" title=\"Jobs Queued Recent\">JobsQueuedRecent</a></span> to schedd stats when statistics_to_publish = SCHEDD:2<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2013-Jan-15 09:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=34639\">[34639]</a></span>: fix statistics ring buffer so that it no longer aborts after a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SetSize\" title=\"Set Size\">SetSize</a></span> operation that reduces the size. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3443\" onclick=\"get_ticket_and_populate_wrapper('3443'); return false;\" title=\"daemon abort after changing STATISTICS_WINDOW_SECONDS, reconfig\">#3443</a></span>. This should fix the ring buffer problem in mentioned in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3428\" onclick=\"get_ticket_and_populate_wrapper('3428'); return false;\" title=\"Create unit tests for ring_buffer code used by daemon statistics\">#3428</a></span> also. parent ticket <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-09 10:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31971\">[31971]</a></span>: fix schedd stats code merged from 7.8 to add 2nd argument needed for 7.9 <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-08 15:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31954\">[31954]</a></span>: fix for Recent values not updating for SCHEDD_COLLECT_STATS_FOR_xxx type stats in the schedd. <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Feb-28 10:05</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=30729\">[30729]</a></span>: fix basic file transfer statistics <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> to account for jobs failing so early that they never begin to execute. ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jan-25 17:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=29218\">[29218]</a></span>: Add basic schedd statistics for time spent in file transfer vs. time spent executing. for <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> new attributes are <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobsAccumPreExcuteTime\" title=\"Jobs Accum Pre Excute Time\">JobsAccumPreExcuteTime</a></span>, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobsAccumExecuteTime\" title=\"Jobs Accum Execute Time\">JobsAccumExecuteTime</a></span>, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobsAccumPostExecuteTime\" title=\"Jobs Accum Post Execute Time\">JobsAccumPostExecuteTime</a></span> and Recent flavors ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-14 14:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28776\">[28776]</a></span>: specified -statistics command line option for condor_status ===GT=== <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-14 12:29</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28772\">[28772]</a></span>: add definitions of new config knobs STATISTICS_TO_PUBLISH and STATISTICS_WINDOW_SECONDS ===GT=== <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-13 13:54</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28743\">[28743]</a></span>: addition of schedd statistics attribute definitions related to histograms ===GT=== <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-12 15:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28742\">[28742]</a></span>: more changes of schedd statistics <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> attribute definitions ===GT=== <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-09 15:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28700\">[28700]</a></span>: more changes to defns of schedd statistics attributes ===GT=== <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-08 12:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28672\">[28672]</a></span>: further edits to new schedd statistics attribute definitions ===GT=== <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-06 16:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28638\">[28638]</a></span>: Remove 3 statistics attributes that are no longer. ===GT=== <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-06 15:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28636\">[28636]</a></span>: Identify those attributes which are in the Scheduler <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> when the verbosity level of STATISTICS_TO_PUBLISH is high enough. ===GT=== <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-06 10:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28619\">[28619]</a></span>: Documentation for verbose scheduler statistics <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Dec-06 09:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28617\">[28617]</a></span>: Documentation for basic scheduler statistics <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> attributes ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-30 10:58</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27542\">[27542]</a></span>: Add support for -statistics verbosity override to the condor_status -direct command handler in the startd. Also add some verbose mode statistics for startd <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ResMgr\" title=\"Res Mgr\">ResMgr</a></span>. ===GT=== <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-30 10:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27540\">[27540]</a></span>: Add Publish with config method to schedd stats and daemon core stats <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> so that a caller can request to override the publish statistics flags defined in the config file. This is added to enable condor_status -direct -statistics or a new condor_stats command. ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-22 09:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27326\">[27326]</a></span>: Add Publish with config method to schedd stats and daemon core stats <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> so that a caller can request to override the publish statistics flags defined in the config file. This is added to enable condor_status -direct -statistics or a new condor_stats command. ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-16 14:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27260\">[27260]</a></span>: Fix daemon core statistics publishing in schedd so that dc statistics are not published in the submitter ad. ===GT=== <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-15 15:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27233\">[27233]</a></span>: Add params to control generic statistics publishing and recent window STATISTICS_TO_PUBLISH parameter for generic statistics <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> and STATISTICS_WINDOW_SECONDS parameter to control the window size for generic statistics DCSTATISTICS_WINDOW_SECONDS parameter to control the window size for daemon core\u00a0[...]\n (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-13 13:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27232\">[27232]</a></span>: disable <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PublishDebug\" title=\"Publish Debug\">PublishDebug</a></span> for DC Statistics (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2354\" onclick=\"get_ticket_and_populate_wrapper('2354'); return false;\" title=\"Statistics in DaemonCore\">#2354</a></span>) and change default window size for schedd statistics (<span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>) from 5 min to 20 min. ===VersionHistory:None=== code has not yet shipped  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-07 14:15</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27116\">[27116]</a></span>: Created generic <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StatisticsPool\" title=\"Statistics Pool\">StatisticsPool</a></span> class (<span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>) and modifed schedd_stats and daemoncore stats (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2354\" onclick=\"get_ticket_and_populate_wrapper('2354'); return false;\" title=\"Statistics in DaemonCore\">#2354</a></span>) to use it. removed code made obsolete as a result.\u00a0[...]\n (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-07 12:25</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27113\">[27113]</a></span>: remove dead code for static publishing tables from generic statistics <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> move experimental Probe class from daemon core to generic statistics <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2354\" onclick=\"get_ticket_and_populate_wrapper('2354'); return false;\" title=\"Statistics in DaemonCore\">#2354</a></span> ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-06 17:24</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27107\">[27107]</a></span>: prune code from generic_stats that is no longer used. <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> change the name of the stats_pool class to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=StatisticsPool\" title=\"Statistics Pool\">StatisticsPool</a></span>. ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-31 18:55</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27048\">[27048]</a></span>: change schedd statistics to use a stats_pool rather than static const array <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> prune some of the generic statistics code that is no longer used. some improvements to stats_pool class to support schedd stats ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-31 16:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27047\">[27047]</a></span>: remove dead code from generic stats <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> and Daemon Core stats <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2354\" onclick=\"get_ticket_and_populate_wrapper('2354'); return false;\" title=\"Statistics in DaemonCore\">#2354</a></span> ===VersionHistory:None===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-31 12:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27042\">[27042]</a></span>: implement Remove method of stats_pool <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-30 20:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27036\">[27036]</a></span>: create a generic statistics pool class <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> and refactor DC statistics to use it. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2354\" onclick=\"get_ticket_and_populate_wrapper('2354'); return false;\" title=\"Statistics in DaemonCore\">#2354</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-26 14:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27034\">[27034]</a></span>: change from flags to an enum for statistics entry classes, <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>, also convert Schedd statistics to using the newer publishing structures. this checking changes the effective names of some of the SCHEDD statistics entries. ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-24 16:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26964\">[26964]</a></span>: Add pool of dynamic named statistics entries to <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2354\" onclick=\"get_ticket_and_populate_wrapper('2354'); return false;\" title=\"Statistics in DaemonCore\">#2354</a></span> also refactor generic statistics (<span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>) to allow greater flexibilty and type safety in support of dynamic named statistics. ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-15 14:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26775\">[26775]</a></span>: move version history for statistics (<span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>) from 7.7.1 section to 7.7.2 where it belongs. ===VersionHistory=== none  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-15 14:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26773\">[26773]</a></span>: added preliminary version history for schedd statistics. ===GT=== <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span> ===Doc=== Pending  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-04 12:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26624\">[26624]</a></span>: Initial changes for generic statistics architecture <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=2197\" onclick=\"get_ticket_and_populate_wrapper('2197'); return false;\" title=\"General statistics architecture for Condor\">#2197</a></span>  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2013-Jan-07 16:14", "status": "stalled", "created": "2011-May-27 08:52", "fixed_version": "2011-May-27 08:52", "broken_version": "", "priority": "3", "subsystem": "Daemons", "assigned_to": "johnkn", "derived_from": "#2006", "creator": "nwp", "rust": "", "customer_group": "other", "visibility": "public", "notify": "johnkn@cs.wisc.edu, eje@redhat.com, tstclair@redhat.com, epaulson@cs.wisc.edu,tannenba@cs.wisc.edu", "due_date": "20111212"}