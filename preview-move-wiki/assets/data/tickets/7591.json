{"id": 7591, "title": "Ticket #7591: preempting claim in a GPU slot attempts to add another GPU and fails", "description": "<blockquote>\nCarsten Albert at reports on condor_users that when they tried to setup premption on GPU slots, they were able to get the Startd to abort.  It looks like the Startd is trying to bind a GPU into a slot that already has one, and then aborting when it fails to do so.\n\n<p></p><div class=\"verbatim\">\n<pre>in our quest to get preemption running in a somewhat reliable and\npredictable fashion, we now found a problem when a job which requested a\ngpu is already running but is the preempted by the negotiator by another\njob requesting a gpu.\n</pre></div>\n\n\n<p></p><div class=\"snip\">\n<pre class=\"sniplabel\">from StartLog</pre>\n<pre class=\"snip\">04/09/20 07:05:14 slot1: Schedd sending 1 preempting claims.\n04/09/20 07:05:14 slot1_5: Canceled ClaimLease timer (48)\n04/09/20 07:05:14 slot1_5: Changing state and activity: Claimed/Busy -&gt;\nPreempting/Killing\n04/09/20 07:05:14 slot1_5[48.2]: In Starter::kill() with pid 6043, sig 3\n(SIGQUIT)\n04/09/20 07:05:14 Send_Signal(): Doing kill(6043,3) [SIGQUIT]\n04/09/20 07:05:14 slot1_5[48.2]: in starter:killHard starting kill timer\n04/09/20 07:05:14 slot1: Total execute space: 859473444\n04/09/20 07:05:14 slot1_5: Total execute space: 859473444\n04/09/20 07:05:14 slot1: Received ClaimId from schedd\n(&lt;10.10.38.22:9618?addrs=10.10.38.22-9618&amp;noUDP&amp;sock=6676_c25a_6&gt;#1586415265#15#...)\n04/09/20 07:05:14 slot1: Match requesting resources: cpus=1 memory=128\ndisk=0.1% GPUs=1\n04/09/20 07:05:14 Got execute_dir = /local/condor/execute\n04/09/20 07:05:14 slot1: Total execute space: 859473444\n04/09/20 07:05:14 bind_DevIds for slot1.1 before : GPUs:{CUDA0, }{1_5, }\n04/09/20 07:05:14 ERROR \"Failed to bind local resource 'GPUs'\" at line\n1272 in file /home/tim/CONDOR_SRC/.tmplCDN9v/condor-8.8.7/src/condor_sta\nrtd.V6/ResAttributes.cpp\n</pre></div>\n\n\n<p>Another user reported what may be the same problem, and provided use with a repo case and a patch\n</p><div class=\"snip\">\n<pre class=\"sniplabel\">from Konstantinos Polyzos &lt;k.polyzos@surrey.ac.uk&gt;</pre>\n<pre class=\"snip\">diff --git a/src/condor_startd.V6/command.cpp b/src/condor_startd.V6/command.cpp\nindex 07c12bb..0a6167e 100644\n--- a/src/condor_startd.V6/command.cpp\n+++ b/src/condor_startd.V6/command.cpp\n@@ -1310,6 +1310,8 @@ request_claim( Resource* rip, Claim *claim, char* id, Stream* stream )\n                                        // if they were idle, kill_claim delete'd them\n                                        *(dslots[i]-&gt;get_parent()-&gt;r_attr) += *(dslots[i]-&gt;r_attr);\n                                        *(dslots[i]-&gt;r_attr) -= *(dslots[i]-&gt;r_attr);\n+                                       dprintf( D_FULLDEBUG, \"unbinding devIDs in slot %s \\n\", dslots[i]-&gt;r_name );\n+                                       dslots[i]-&gt;r_attr-&gt;unbind_DevIds(dslots[i]-&gt;r_id, dslots[i]-&gt;r_sub_id);\n                                }\n                                // TODO Do we need to call refresh_classad() on either slot?\n                        }\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2020-Apr-10 12:34:36 by johnkn:</em> <br/>\n\nThe patch fixes the problem, But there is a bigger issue with the code.  By clearing the resource bag of the d-slot and then creating an entirely new d-slot for the preempting claim, we don't have any way of insuring that the new d-slot is assigned the same non-fungible resources as the old one.  (i.e. GPU id is not necessarily preserved)\n\n<p>This also means that the preempting claim can request more or less resources than the d-slot that was preempted, which might be useful - or not.  This should be given more thought (in a different ticket)\n\n</p><p></p><hr/>\n<em>2020-Apr-22 12:53:59 by tlmiller:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>In the release note, it should be \"assign bac_k_ to\".\n\n</p><p>Otherwise, this looks good, although I wonder if it needs to be done elsewhere.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Apr-21 12:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59431\">[59431]</a></span>: version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7553\" onclick=\"get_ticket_and_populate_wrapper('7553'); return false;\" title=\"Collector can hang when a port scanner probes it\">#7553</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7521\" onclick=\"get_ticket_and_populate_wrapper('7521'); return false;\" title=\"p-slot child rollup should contain evaluated d-slot values\">#7521</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7542\" onclick=\"get_ticket_and_populate_wrapper('7542'); return false;\" title=\"SLOT_TYPE_N configuration works START, not for RANK, etc\">#7542</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7605\" onclick=\"get_ticket_and_populate_wrapper('7605'); return false;\" title=\"condor_gpu_discovery crashes on PowerPC\">#7605</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7360\" onclick=\"get_ticket_and_populate_wrapper('7360'); return false;\" title=\"macro default does not allow - character and workaround is broken\">#7360</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7591\" onclick=\"get_ticket_and_populate_wrapper('7591'); return false;\" title=\"preempting claim in a GPU slot attempts to add another GPU and fails\">#7591</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7479\" onclick=\"get_ticket_and_populate_wrapper('7479'); return false;\" title=\"MAX_PROCD_LOG does not honor units suffix\">#7479</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2020-Apr-10 11:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=59306\">[59306]</a></span>: fix for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7591\" onclick=\"get_ticket_and_populate_wrapper('7591'); return false;\" title=\"preempting claim in a GPU slot attempts to add another GPU and fails\">#7591</a></span>: preempting claim in a GPU slot attempts to add another GPU and fails when preempting, the resources are deleted from the d-slot and then re-added (sigh) for the new job This hack is incomplete though, when the GPU count is decremented, the assigned GPU is not released, so a later attempt\u00a0[...]\n (By Konstantinos Polyzos )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2020-May-04 09:46", "status": "resolved", "created": "2020-Apr-10 10:13", "fixed_version": "2020-Apr-10 10:13", "broken_version": "v080807", "priority": "2", "subsystem": "DaemonsExecNode", "assigned_to": "johnkn", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "users", "visibility": "public", "notify": "tannenba@cs.wisc.edu", "due_date": ""}