{"id": 1589, "title": "Ticket #1589: some CCB connection failures are not detected", "description": "<blockquote>\nA schedd at UCSD that submits jobs to a glidien pool using CCB stopped functioning properly because the number of registered sockets exceeded the internal limit set by <code>DaemonCore</code>.  This is an expected condition when there are bursts of activity, but we would expect the number of registered sockets to decrease after the burst subsides.  This never happened to the schedd at UCSD.   The schedd did not in fact have very many file descriptors allocated.  The \"registered sockets\" were entries in the socket table for reverse connection requests via CCB, and, as such, do not consume a file descriptor.  These requests were for RELEASE_CLAIM and INVALIDATE_KEY commands (to startds).  Some of these pending commands had been issued weeks ago and appeared to have built up gradually over time.\n\n<p>What appears to have happened is this:\n\n</p><p></p><ol>\n<li>No deadline is set when creating the <code>DCMessage</code> object to send the command, so when the CCB client starts up, it does not set a timer to eventually expire the request.\n\n<p></p></li><li>After initiating the non-blocking CCB request, startCommand() does set a deadline on the socket via SEC_TCP_SESSION_DEADLINE, so the sockets have a deadline set, but since they are in a reverse-connecting state, the CCB client is in charge of enforcing the deadline, and this deadline was set too late for the CCB client to know about it.\n\n<p></p></li><li>If we get a response back from the CCB server indicating failure, then there is no problem, because we abort the reverse-connect.  However, the problem is if we get back a 'success' response from the CCB server, but we never establish the reversed connection (i.e. <code>ReverseConnectCallback()</code> is never called).  This could happen if the remote daemon successfully connected to us but then a communication error (e.g. timeout) prevents the reverse connect command from being successfully processed on our end.  In this case, the only thing preventing us from waiting forever is a deadline on the socket, but since there is no deadline, we end up waiting forever, consuming a slot in the <code>DaemonCore</code> socket table.\n</li></ol>\n\n<p>The problem can be addressed by always setting a deadline for reverse connection attempts.  We thought we had solved all problems such as this with TCP_SESSION_DEADLINE, but that is applied too late in the game for CCB connections.\n\n</p><p>It would be nice if we could propagate the error processing the reverse connect command rather than propagating back 'success' immediately when connect() succeeds.  However, this would require an ACK in the reverse-connect command protocol.  There is currently no ACK.  It was designed that way to avoid latency.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Aug-19 14:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=25646\">[25646]</a></span>: Documented fix for CCB connection attempts building up indefinitely. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1589\" onclick=\"get_ticket_and_populate_wrapper('1589'); return false;\" title=\"some CCB connection failures are not detected\">#1589</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Aug-19 14:03</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18832\">[18832]</a></span>: Always have a deadline for asynchronous messages. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1589\" onclick=\"get_ticket_and_populate_wrapper('1589'); return false;\" title=\"some CCB connection failures are not detected\">#1589</a></span> This addresses a problem in which failure to process the CCB reverse-connect command can cause the connection request to never complete.  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2010-Aug-19 14:16", "status": "resolved", "created": "2010-Aug-19 13:03", "fixed_version": "2010-Aug-19 13:03", "broken_version": "v070400", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "dan@hep.wisc.edu", "due_date": ""}