{"id": 634, "title": "Ticket #634: Java maxheap initial setting should be correct", "description": "<blockquote>\nWe've had a problem for a long time: when installing Condor, we try to guess the maximum heap size for Java jobs. When using the Sun JVM on a 32-bit machine with more than 2GB of memory, we select a heap size that is too big and the Java universe doesn't work. There are two workarounds for this:\n\n<p>1) The user can specifically set the heap size\n\n</p><p>2) The user can clear the option to set the heap size. (But then it might be too small.)\n\n</p><p>I argue that both of these are bad options. By default, the Java universe should work without user intervention.\n\n</p><p>I recently met a Condor user who installs on Windows. He can do distributed installations, but right now he only knows how to customize the installation through the MSI installer and not by automatically editing the configuration files. The MSI installer doesn't have an option to set the Java heap size and his computers are 32-bit with more than 2GB of memory. So by default, Java universe is broken for him. And he uses the Java universe, so this is a pain.\n\n</p><p>Two ideas:\n\n</p><p>1) We should do a better job of setting the Java universe heap size. We should never set a bad value, that just sucks.\n\n</p><p>2) We could simply not set the Java universe heap size, and expect users to use \"java_vm_args\" in their submit files. This would require clear documentation of this change.\n\n</p><p>I don't have a strong opinion between these two options, but I really think we should make one of the choices before we ship Condor 7.4.0. Our install shouldn't result in an unusable Java universe when it's possible to have a usable Java universe.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Jul-21 09:34:25 by matt:</em> <br/>\n\n(2) sounds quite reasonable. This was surely not an issue back in 2002 when Doug first wrote the code, see 25a7c0c3d.\n\n<p></p><hr/>\n<em>2009-Dec-14 10:29:20 by cweiss:</em> <br/>\n\ncode submitted to branch V7_5-java_Xmx-branch\n\n<p></p><hr/>\n<em>2010-Feb-23 14:40:02 by matt:</em> <br/>\n\nCathrin, please provide an executive summary of how you went about solving the problem, and why. Thanks.\n\n<p>It looks like you went to some elaborate measures.\n\n</p><p></p><hr/>\n<em>2010-Jun-22 09:24:45 by tannenba:</em> <br/>\n\n<strong>Results from a code review of [16653]</strong>  - a few items:\n\n<p></p><ol>\n<li><em>Important!</em> This patch breaks error propagation for method <code>java_config()</code>. Previously, this methods returned 0 on failure and non-zero on success.  In some places, the patch returns -1 on failure - this failure will not be detected by several call sites that still think non-zero means success. Instead of changing all the call sites, I think the patched code should be made consistent to always return 0 on failure.\n\n<p></p></li><li>In the patch, <code>max_memory</code> is initialized to 90% of (physical memory / physical num of cores).  Why shouldn't max memory be initialized to 90% of the advertised Memory in the machine/slot classad ?  IIRC, this ad can be easily fetched from inside the starter by invoking <code>Starter-&gt;jic-&gt;machClassAd()</code> - if this call returns NULL, then fallback to the patch's current algorithm using physical memory.\n\n<p></p></li><li>The patch's handling of JAVA_MAXHEAP_ARGUMENT is weak. I see what you are trying to do [although a comment would be nice ;)], but we can do better than hard-coded logic of \"if arg string length is greater than 4 than the user specified an actual head value\".  Instead, I'd suggest simply scanning the string with <code>isdigit()</code>, and if all the trailing characters are digits than assume the string contains the actual heap size.\n\n<p></p></li><li>In <code>java_detect.cpp:76</code>, the <code>while (rc!=0)</code> loop could use a dprintf in the common case that shows iterative tries of new values - currently looks like only dprintfs happen during errors.\n\n<p></p></li><li>Since a new job ad attribute was added (<code>JAVA_MAX_HEAP</code>), seems like <code>condor_submit</code> should be patched so users can specify this without neededing to use the \"+\" operator. And then of course <code>condor_submit</code> man page must be updated.\n\n<p></p></li><li>Don't forget to document (or make a child ticket) the job ad attribute <code>JAVA_MAX_HEAP</code> and the semantic change to config param <code>JAVA_MAXHEAP_ARGUMENT</code>.\n\n<p></p></li><li>As this changes semantic behavior, perhaps it should be merged into the developer series, not the stable series?  I could go either way on this.\n</li></ol>\n\n<p>Thanks for the patch to this long-standing issue!\n</p><hr/>\n<em>2010-Aug-23 17:07:50 by adesmet:</em> <br/>\n\nBulk change of target version from v070402 to v070404 using ./ticket_target_mover.\n<hr/>\n<em>2010-Oct-27 16:39:01 by adesmet:</em> <br/>\n\nBulk change of target version from v070404 to v070405 using ./ticket-target-mover.\n\n<p></p><hr/>\n<em>2011-Apr-08 10:57:29 by cweiss:</em> <br/>\n\nStalling this ticket instead of resolving, because we still haven't figured out a good and well-performing way to set a default in case a user does not provide a maxheap setting themselves.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Dec-14 10:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/557cc3fded373fbf6e2cb1ee015ef09c1f5fe473\">[16653]</a></span>: changes for Java universe issues as described in <span class=\"ticket\"><a class=\"stalled\" href=\"/tickets?ticket=634\" onclick=\"get_ticket_and_populate_wrapper('634'); return false;\" title=\"Java maxheap initial setting should be correct\">#634</a></span>  (By Cathrin Weiss )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2012-Oct-17 06:03", "status": "stalled", "created": "2009-Jul-20 13:48", "fixed_version": "2009-Jul-20 13:48", "broken_version": "v070204", "priority": "3", "subsystem": "Daemons", "assigned_to": "PitS", "derived_from": "", "creator": "roy", "rust": "", "customer_group": "other", "visibility": "public", "notify": "roy@cs.wisc.edu, tannenba@cs.wisc.edu, cweiss@cs.wisc.edu", "due_date": "20100122"}