{"id": 2713, "title": "Ticket #2713: RFE: extend dprintf flag parameter to 64-bit integer", "description": "<blockquote>\nTo support any additional dprintf() flags, for example <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2712\" onclick=\"get_ticket_and_populate_wrapper('2712'); return false;\" title=\"RFE: new dprintf() format-modifying flag to output flag info\">#2712</a></span>, it looks like we need to increase the width of the flag bit parameter.  Simply extending to 64-bit integer would be one straighforward option.</blockquote>", "remarks": "<blockquote>\n<em>2011-Dec-14 14:52:33 by johnkn:</em> <br/>\n\nI have no real objection to this, but I noticed that more than half of the debug 'flags' are mutually exclusive, and if we switched them from from individual bits to an enum, we could get even MORE headroom without going to 64 bits.\n\n<p>Redefine the debug 'level' as a set of mutually exclusive flags (D_PID, etc) OR'd with one category value from the set of categories. This would also give us room for a few bits of 'verbosity'. something like this\n\n</p><p></p><div class=\"verbatim\">\n<pre>#define D_CATEGORY_MASK   (0xFF&lt;&lt;16)\n#define D_NO_CATEGORY     (0&lt;&lt;16)\n#define D_CONFIG          (1&lt;&lt;16)\n#define D_PROTOCOL        (2&lt;&lt;16)\n#define D_PRIV\t          (3&lt;&lt;16)\n#define D_SECURITY\t  (4&lt;&lt;16)\n#define D_DAEMONCORE\t  (5&lt;&lt;16)\n#define D_COMMAND\t  (6&lt;&lt;16)\n#define D_MATCH\t\t  (7&lt;&lt;16)\n#define D_NETWORK         (8&lt;&lt;16)\n#define D_KEYBOARD        (9&lt;&lt;16)\n#define D_PROCFAMILY      (10&lt;&lt;16)\n#define D_IDLE\t          (11&lt;&lt;16)\n#define D_THREADS\t  (12&lt;&lt;16)\n#define D_ACCOUNTANT\t  (13&lt;&lt;16)\n\n#define D_VERBOSITY_MASK    = (3&lt;&lt;14)\n#define D_LACONIC           = (0&lt;&lt;14)\n#define D_CHATTY            = (1&lt;&lt;14)\n#define D_VERBOSE           = (2&lt;&lt;14)\n#define D_DIAGNOSTIC        = (3&lt;&lt;14)\n</pre></div>\n\n\n<p>so a dprintf call might be\n\n</p><p></p><pre>    dprintf(D_SECURITY, \"message that everyone who sets D_SECURITY should see\");\n    dprintf(D_SECURITY | D_VERBOSE, \"message for those who set D_SECURITY_VERBOSE\")\n</pre>\n\n<p>This leaves us with room for 50 more categories, and it frees up a bunch of bits to use as new flags.\n\n</p><p></p><hr/>\n<em>2011-Dec-14 15:45:52 by eje:</em> <br/>\n\nI see that there are two \"unused\" in flags, and another in format-flags:\n<div class=\"code\">\n<pre class=\"code\">#define D_UNUSED2       (1&lt;&lt;13)\n#define D_UNUSED3\t\t(1&lt;&lt;14)\n//...\n#define D_UNUSED4       (1&lt;&lt;30)\n</pre></div>\n\n\n<p>So arguably I could service <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=2711\" onclick=\"get_ticket_and_populate_wrapper('2711'); return false;\" title=\"RFE: new 'unit testing' parsable dprintf flag\">#2711</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2712\" onclick=\"get_ticket_and_populate_wrapper('2712'); return false;\" title=\"RFE: new dprintf() format-modifying flag to output flag info\">#2712</a></span> with those.\n\n</p><p></p><hr/>\n<em>2012-Jun-25 14:51:23 by eje:</em> <br/>\n\nTJ's refactor of dprintf  on <span class=\"ticket\"><a class=\"pending\" href=\"/tickets?ticket=2933\" onclick=\"get_ticket_and_populate_wrapper('2933'); return false;\" title=\"refactor dprintf flags to enum + flags\">#2933</a></span> makes this RFE moot, I'm abandoning</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2012-Jun-25 14:51", "status": "abandoned", "created": "2011-Dec-13 16:32", "fixed_version": "2011-Dec-13 16:32", "broken_version": "", "priority": "4", "subsystem": "Libs", "assigned_to": "eje", "derived_from": "#2712", "creator": "eje", "rust": "", "customer_group": "other", "visibility": "public", "notify": "eje@cs.wisc.edu, matt@cs.wisc.edu, tannenba@cs.wisc.edu, gthain@cs.wisc.edu, tstclair@redhat.com, ziliang@cs.wisc.edu", "due_date": ""}