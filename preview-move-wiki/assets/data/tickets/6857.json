{"id": 6857, "title": "Ticket #6857: Excessive CPU usage by GPU Monitor", "description": "<blockquote>\nUsers are reporting excessive GPU usage by the monitor, now that it's been turned on by default; see below.  The first thing to do is to disable the GPU monitor by default; it's much easier for user to add back, if it was working for them, then to remove.\n\n<p></p><hr/>\nAlexander Antoniades wrote:\n<div class=\"code\">\n<pre class=\"code\">I have a consumer gpu server from Advanced HPC which has 8 1080ti GPUs and\n2 E5-2603 Xeons (6 cores each).\n\nThe cpu usage of GPUs_MONITOR seems a little high for sitting at idle.\ncondor    2165 66.9  0.0  26460  6844 ?        R    Jan08 793:42 GPUs_MONITOR\n\nThis is with Condor 8.8 on Ubuntu 18.04.1 LTS.\n</pre></div>\n\n\n<p>Todd L Miller replied:\n</p><div class=\"code\">\n<pre class=\"code\">I would just try killing it (this will, of course, cause bogus GPU usage\nnumbers to be reported) and seeing it the problem re-occurs.\n</pre></div>\n\n\n<p>Alexander Antoniades:\n</p><div class=\"code\">\n<pre class=\"code\">I killed the process and cpu usage is the same.\n\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\ncondor   26313 67.1  0.0  26460  6772 ?        S    15:39  14:44 GPUs_MONITOR\n\nHere's a the summery of a quick strace if that helps.\n\nroot@gpu2:~# sort condor_gpu.txt |uniq -c\n    793 getpid()                                = 26313\n  39637 ioctl(0, _IOC(_IOC_READ|_IOC_WRITE, 0x46, 0x2a, 0x20),\n0x7ffd1e446f30) = 0\n    397 ioctl(0, _IOC(_IOC_READ|_IOC_WRITE, 0x46, 0x2a, 0x20),\n0x7ffd1e447110) = 0\n      1 ioctl(0, _IOC(_IOC_READ|_IOC_WRITE, 0x46, 0x2a, 0x20) &lt;detached ...&gt;\n    396 ioctl(0, _IOC(_IOC_READ|_IOC_WRITE, 0x46, 0x4a, 0xb0),\n0x7ffd1e4536a0) = 0\n     49 nanosleep({tv_sec=0, tv_nsec=100000000}, NULL) = 0\n      1 restart_syscall(&lt;... resuming interrupted nanosleep ...&gt;) = 0\n     12 write(1, \"SlotMergeConstraint = StringList\"..., 135) = 135\n      6 write(1, \"SlotMergeConstraint = StringList\"..., 136) = 136\n      6 write(1, \"SlotMergeConstraint = StringList\"..., 139) = 139\n</pre></div>\n\n\n<p>Bert <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DeKnuydt\" title=\"De Knuydt\">DeKnuydt</a></span> confirmed the problem, and supplied some more information:\n</p><div class=\"code\">\n<pre class=\"code\">strace reports it is mainly in\n\nnanosleep({tv_sec=0, tv_nsec=100000000}\n\nwhich is to be expected.  For the rest I see zillions\n(well, 4200 per second more or less), of these\n\nioctl(0, _IOC(_IOC_READ|_IOC_WRITE, 0x46, 0x2a, 0x20), 0x7ffe74c56e10) = 0\n\nDon't know what this exactly is doing.\n</pre></div>\n\n\n<p>B. Baumeier agreed as well, saying:\n</p><div class=\"code\">\n<pre class=\"code\">For what it's worth, for me it's not as high but about 8%. Which seems still\na bit more than it should.\n</pre></div>\n\n\n<p>and also (after being asked if the GPUs were busy):\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">*) This was on an totally idle system. On all 9 test machines I have 6 to 9%\nCPU consistently.\n*) 'perf top' shows that it is indeed the nvml library; more in detail: (to\n5% only)\n\n[root@postel ~]# perf top -p 1254\n  32.47%  [kernel]                [k] _nv031472rm\n  19.52%  [kernel]                [k] pci_conf1_read\n   5.05%  [kernel]                [k] _raw_spin_lock_irqsave\n   4.28%  [kernel]                [k] _nv033593rm\n   1.59%  [kernel]                [k] _nv007572rm\n   1.30%  [kernel]                [k] _nv034648rm\n[...]\n\nThis is with libnvidia-ml.so.415.25 on a GeForce GTX 960\n</pre></div>\n\n\n<p>Michael Pelletier analyszed the ioctl:\n</p><div class=\"code\">\n<pre class=\"code\">&gt;  39637 ioctl(0, _IOC(_IOC_READ|_IOC_WRITE, 0x46, 0x2a, 0x20),\n\nFile descriptor 0 should be stdin, right? Odd that they've got a \"write\"\nassociated with it. The second argument appears to be an expansion of this\nmacro from ioctl.h:\n\n#define _IOWR(type,nr,size)\n_IOC(_IOC_READ|_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))\n\nThe type is 'F' from the ioctl-numbers.txt file, if I'm understanding this\ncorrectly:\nhttps://github.com/torvalds/linux/blob/master/Documentation/ioctl/ioctl-numb\ner.txt\n\n... which as you would expect is associated with video:\n\n'F'     20      drivers/video/fsl-diu-fb.h      conflict!\n'F'     20      drivers/video/intelfb/intelfb.h conflict!\n'F'     20      linux/ivtvfb.h          conflict!\n'F'     20      linux/matroxfb.h        conflict!\n'F'     20      drivers/video/aty/atyfb_base.c  conflict!\n'F'     00-0F   video/da8xx-fb.h        conflict!\n'F'     80-8F   linux/arcfb.h           conflict!\n'F'     DD      video/sstfb.h           conflict!\n\n... and the \"nr\" value is dec42 (heh) which is a sequence number, and a\n\"long double\" type is a native one which has a size of 16 bytes.\n\nIs the nouveau driver being used, or the NVIDIA-supplied driver?\n</pre></div>\n\n\n<p>Alexander Antoniades replied:\n</p><div class=\"code\">\n<pre class=\"code\">On the machine in question I believe we are running the nvidia drivers.\n</pre></div>\n\n...\n<div class=\"code\">\n<pre class=\"code\">root@gpu2:~# lsmod | grep nv\nnvidia_uvm            757760  4\nnvidia_drm             40960  0\nnvidia_modeset       1114112  1 nvidia_drm\nnvidia              14364672  632 nvidia_modeset,nvidia_uvm\n</pre></div>\n\n\n<p>Michael Pelletier:\n</p><div class=\"code\">\n<pre class=\"code\">Your driver version is 390.87, so of course the first thing the NVIDIA tech\nis going to ask is whether anyone has tried the 396.44 release.\n</pre></div>\n\n\n<p>Alexander Antoniades:\n</p><div class=\"code\">\n<pre class=\"code\">I plan on updating these servers next week. It looks like I can pull 3.96\nfrom the graphics-driver ppa so I will update them when I can coordinate\nwith the users and I'll see if that resolves the issue, and report back.\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2019-Jan-15 14:12:48 by tlmiller:</em> <br/>\n\nI'll make a child ticket in the (likely) event that I can't resolve this before the 8.8.1 freeze.\n\n<p></p><hr/>\n<em>2019-Jan-15 14:59:32 by tlmiller:</em> <br/>\n\n.. did we want to mention that's it not building on Windows in the release note?\n\n<p></p><hr/>\n<em>2019-Feb-05 10:28:45 by johnkn:</em> <br/>\n\n<strong>CODE_REVIEW</strong> : there is an unconditional fprintf to stderr that should probably not be there.  Also, loading .so.1 instead .so.\n\n<p></p><hr/>\n<em>2019-Feb-05 14:14:30 by tlmiller:</em> <br/>\n\nCommented out debugging fprintf.  Committed that patch.\n\n<p>Cherry-picked both patches off the 8.9-based branch into 8.8.1; I tested the first patch earlier.</p></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6901\" onclick=\"get_ticket_and_populate_wrapper('6901'); return false;\" title=\"Try harder to load libnvidia-ml\">#6901</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nTry harder to load libnvidia-ml</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6912\" onclick=\"get_ticket_and_populate_wrapper('6912'); return false;\" title=\"Check for E_NO_PERM-equivalent nvidia-ml error.\">#6912</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCheck for E_NO_PERM-equivalent nvidia-ml error.</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-05 14:34</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56121\">[56121]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6857\" onclick=\"get_ticket_and_populate_wrapper('6857'); return false;\" title=\"Excessive CPU usage by GPU Monitor\">#6857</a></span>) Update release note.  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-05 14:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56118\">[56118]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6857\" onclick=\"get_ticket_and_populate_wrapper('6857'); return false;\" title=\"Excessive CPU usage by GPU Monitor\">#6857</a></span>) Forgot to remove some debugging output. :(  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-05 14:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56117\">[56117]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6857\" onclick=\"get_ticket_and_populate_wrapper('6857'); return false;\" title=\"Excessive CPU usage by GPU Monitor\">#6857</a></span>) Assuming that all devices sample at the smallest documented interval (one sixth of a second), and that the reported maximum sample count is minimal, we can compute the minimum necessary polling interval to avoid missing any data. Poll three times more frequently to avoid off-by-one problems,\u00a0[...]\n (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-05 14:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56116\">[56116]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6857\" onclick=\"get_ticket_and_populate_wrapper('6857'); return false;\" title=\"Excessive CPU usage by GPU Monitor\">#6857</a></span>) Forgot to remove some debugging output. :(  (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Feb-03 19:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=56110\">[56110]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6857\" onclick=\"get_ticket_and_populate_wrapper('6857'); return false;\" title=\"Excessive CPU usage by GPU Monitor\">#6857</a></span>) Assuming that all devices sample at the smallest documented interval (one sixth of a second), and that the reported maximum sample count is minimal, we can compute the minimum necessary polling interval to avoid missing any data. Poll three times more frequently to avoid off-by-one problems,\u00a0[...]\n (By Todd L Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jan-15 17:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55993\">[55993]</a></span>: Add Known Issue section in version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6857\" onclick=\"get_ticket_and_populate_wrapper('6857'); return false;\" title=\"Excessive CPU usage by GPU Monitor\">#6857</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Jan-15 14:11</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=55991\">[55991]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6857\" onclick=\"get_ticket_and_populate_wrapper('6857'); return false;\" title=\"Excessive CPU usage by GPU Monitor\">#6857</a></span>) Don't enable GPU resource monitoring by default.  (By Todd L Miller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Feb-06 10:27", "status": "resolved", "created": "2019-Jan-15 13:56", "fixed_version": "2019-Jan-15 13:56", "broken_version": "v080800", "priority": "2", "subsystem": "DaemonsExecNode", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}