{"id": 4727, "title": "Ticket #4727: Submit failures + retries + final node + rescue + recov = hung DAGMan", "description": "<blockquote>\nSay you have a DAG like this:\n\n<p></p><pre>  Job Node1 foo.cmd\n  Retry Node1 3\n  Final NodeF bar.cmd\n</pre>\n\n<p>Now say you have the following sequence of events:\n</p><ol>\n<li>submit the DAG and it runs\n</li><li>all submit attempts for Node1 fail\n</li><li>NodeF runs and succeeds\n</li><li>fix the problem with Node1\n</li><li>re-submit the DAG\n</li><li>DAGMan goes into recovery mode\n</li><li>DAGMan re-tries Node1 and it succeeds\n</li></ol>\n\n<p>Now DAGMan waits forever, even though it thinks all nodes are finished!:\n\n</p><p></p><pre>  Done     Pre   Queued    Post   Ready   Un-Ready   Failed\n   ===     ===      ===     ===     ===        ===      ===\n     2       0        0       0       0          0        0\n</pre>\n\n<p>I think the solution is to not allow a FINAL node to be marked as done in recovery mode.</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Dec-02 12:47:31 by wenger:</em> <br/>\n\nMade branch V8_2-gittrac_4727-branch for this.\n\n<p></p><hr/>\n<em>2014-Dec-03 13:28:07 by wenger:</em> <br/>\n\nI'm kind of wondering whether we should write an event if all submit attempts fail for a node (even though that's not necessarily needed to fix this particular bug).\n\n<p></p><hr/>\n<em>2015-Jan-06 13:08:52 by wenger:</em> <br/>\n\nNote:  enable job_dagman_gt4727 on master (8.3) once this is all committed to 8.2 and merged to master (avoiding enabling new test in stable series).\n\n<p></p><hr/>\n<em>2015-Jan-11 12:40:56 by wenger:</em> <br/>\n\nI'm going to assign this to Zach for review.  I haven't edited the version history because I don't have the 8.2.7 section on this branch.\n\n<p></p><hr/>\n<em>2015-Jan-21 13:40:07 by wenger:</em> <br/>\n\nForgot to add a note to the branch_diff attachment...  Anyhow, this is a final diff of the branch -- looking at all of the individual commits is probably confusing, because there was lots of temporary/debug code that was committed and then eventually removed.\n\n<p></p><hr/>\n<em>2015-Jan-22 15:30:45 by wenger:</em> <br/>\n\nJust discussed this with Zach, and we agreed that implementing an \"all submit attempts failed\" event (see <span class=\"ticket\"><a class=\"active\" href=\"/tickets?ticket=4809\" onclick=\"get_ticket_and_populate_wrapper('4809'); return false;\" title=\"Write event to workflow log if all node job submit attempts fail\">#4809</a></span>) is cleaner that the fix I have so far for this, so I'm going to go ahead and do <span class=\"ticket\"><a class=\"active\" href=\"/tickets?ticket=4809\" onclick=\"get_ticket_and_populate_wrapper('4809'); return false;\" title=\"Write event to workflow log if all node job submit attempts fail\">#4809</a></span>.\n\n<p></p><hr/>\n<em>2015-Jan-22 15:34:22 by wenger:</em> <br/>\n\nI'm going to mark this ticket as stalled, rather than abandoned, because doing <span class=\"ticket\"><a class=\"active\" href=\"/tickets?ticket=4809\" onclick=\"get_ticket_and_populate_wrapper('4809'); return false;\" title=\"Write event to workflow log if all node job submit attempts fail\">#4809</a></span> will actually fix this problem...\n\n<p></p><hr/>\n<em>2015-Feb-04 11:44:58 by wenger:</em> <br/>\n\nHmm -- when Zach and I were talking about this, he suggested that one possible way of dealing with this is to just mark all \"unknown\" jobs (jobs for which there are no events) as failed if you see a submit event for a final node in recovery mode.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"active\" href=\"/tickets?ticket=4809\" onclick=\"get_ticket_and_populate_wrapper('4809'); return false;\" title=\"Write event to workflow log if all node job submit attempts fail\">#4809</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nWrite event to workflow log if all node job submit attempts fail</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/861/branch_diff\">branch_diff</a>\n10318 bytes added by wenger on 2015-Jan-21 19:38:40 UTC.\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-11 12:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=42162\">[42162]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=4727\" onclick=\"get_ticket_and_populate_wrapper('4727'); return false;\" title=\"Submit failures + retries + final node + rescue + recov = hung DAGMan\">#4727</a></span>: (Not directly related to this problem, but committed on the branch) More conservative about when we bail out of writing the node status file because it's not outdated -- found a problem with this when working on the <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=4727\" onclick=\"get_ticket_and_populate_wrapper('4727'); return false;\" title=\"Submit failures + retries + final node + rescue + recov = hung DAGMan\">#4727</a></span> stuff...  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-07 16:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=42130\">[42130]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=4727\" onclick=\"get_ticket_and_populate_wrapper('4727'); return false;\" title=\"Submit failures + retries + final node + rescue + recov = hung DAGMan\">#4727</a></span>: Created Job::Reset() method to clean up the resetting of the final node.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-06 19:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=42124\">[42124]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=4727\" onclick=\"get_ticket_and_populate_wrapper('4727'); return false;\" title=\"Submit failures + retries + final node + rescue + recov = hung DAGMan\">#4727</a></span>: Note: previous commit also includes a possible fix for the node status file not getting properly updated when the DAG finishes; got rid of debug code -- we just need a little cleanup and testing.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-06 18:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=42123\">[42123]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=4727\" onclick=\"get_ticket_and_populate_wrapper('4727'); return false;\" title=\"Submit failures + retries + final node + rescue + recov = hung DAGMan\">#4727</a></span>: Lots of debug code to figure out why DAGMan (without the bug fix) didn't think the DAG was finished even though all nodes were done -- turns out that _finalNodeRun was not getting set to true when we see the final node events in recovery mode.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-04 17:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41821\">[41821]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=4727\" onclick=\"get_ticket_and_populate_wrapper('4727'); return false;\" title=\"Submit failures + retries + final node + rescue + recov = hung DAGMan\">#4727</a></span>: Cleaned up the test DAGs, added a .run file, removed a bunch of temporary code.  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Dec-02 13:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41809\">[41809]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=4727\" onclick=\"get_ticket_and_populate_wrapper('4727'); return false;\" title=\"Submit failures + retries + final node + rescue + recov = hung DAGMan\">#4727</a></span>: Tentative fix for this, plus lots of temporary debug node (I need to do a bunch of thinking and testing to make sure the fix doesn't break anything else).  (By Kent Wenger )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Nov-18 11:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=41663\">[41663]</a></span>: Gittrac <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=4727\" onclick=\"get_ticket_and_populate_wrapper('4727'); return false;\" title=\"Submit failures + retries + final node + rescue + recov = hung DAGMan\">#4727</a></span>: Came up with a DAG that reproduces this problem (still needs a .run script to make it into a full test; enable the test on master once everything is fixed and merged).  (By Kent Wenger )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2017-Jun-01 14:01", "status": "defer", "created": "2014-Nov-17 17:17", "fixed_version": "2014-Nov-17 17:17", "broken_version": "v080201", "priority": "3", "subsystem": "Dag", "assigned_to": "coatsworth", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "users", "visibility": "public", "notify": "wenger@cs.wisc.edu, coatsworth@cs.wisc.edu", "due_date": ""}