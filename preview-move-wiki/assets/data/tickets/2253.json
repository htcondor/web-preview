{"id": 2253, "title": "Ticket #2253: Schedd crash if parallel job disappears during negotiation", "description": "<blockquote>\nDuring negotiation, if a job handled by the dedicated scheduler leaves the queue between the time the schedd sends it to the negotiator and when the negotiator replies with a match, the schedd will crash when it tries to retrieve the now-absent job ad from the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAdCollection\" title=\"Class Ad Collection\">ClassAdCollection</a></span>.\n\n<p>Here's a stack trace provided by LIGO:\n</p><div class=\"code\">\n<pre class=\"code\">#0  0x000000000082bb60 in WriteCoreDump ()\n#1  0x00007fffeaa8be38 in ?? ()\n#2  0x000000000000000b in ?? ()\n#3  0x0000000000582dcb in linux_sig_coredump ()\n#4  &lt;signal handler called&gt;\n#5  0x00000000005fa355 in classad::ExprTree::CopyFrom ()\n#6  0x00000000005f5927 in classad::ClassAd::CopyFrom ()\n#7  0x00000000005f5d1f in classad::ClassAd::ClassAd ()\n#8  0x000000000065d681 in compat_classad::ClassAd::ClassAd ()\n#9  0x00000000005573ce in DedicatedScheduler::AddMrec ()\n#10 0x0000000000557e60 in DedicatedScheddNegotiate::scheduler_handleMatch ()\n#11 0x00000000005485c5 in ScheddNegotiate::messageReceived ()\n#12 0x00000000005b82d6 in DCMsg::callMessageReceived ()\n#13 0x00000000005b8482 in DCMessenger::readMsg ()\n#14 0x00000000005bb7ff in DCMessenger::receiveMsgCallback ()\n#15 0x0000000000596f58 in DaemonCore::CallSocketHandler_worker ()\n#16 0x00000000005973fa in DaemonCore::CallSocketHandler_worker_demarshall ()\n#17 0x0000000000657da8 in CondorThreads::pool_add ()\n#18 0x000000000058f9b9 in DaemonCore::CallSocketHandler ()\n#19 0x0000000000591c25 in DaemonCore::Driver ()\n#20 0x0000000000585527 in main ()\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2011-Jun-17 14:59:28 by danb:</em> <br/>\n\nI pushed a patch suitable for 7.6.2 for this problem.  Someone with deeper knowledge of the dedicated scheduler may want to make <code>DedicatedScheduler::scheduler_handleMatch()</code> do something smarter when the job that requested a match has gone away.  However, that work could probably be left for the development series.\n\n<p></p><hr/>\n<em>2011-Jul-11 12:56:21 by tannenba:</em> <br/>\n\nAfter trying a schedd patched with <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/85e57589a729c19170ed881a764a082db3de55a0\">[22224]</a></span> and <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/2f78cfff9bea748df11896701566cd259651f37e\">[22228]</a></span> below, LIGO's schedd was consisting shutting down with the following exception:\n<div class=\"code\">\n<pre class=\"code\">06/29/11 14:54:18 (pid:14742) Received TCP command 443 (RELEASE_CLAIM)\nfrom unauthenticated@unmapped &lt;10.14.2.93:58308&gt;, access level READ\n06/29/11 14:54:18 (pid:14742) Calling HandleReq &lt;release_claim&gt; (0)\n06/29/11 14:54:18 (pid:14742) Got RELEASE_CLAIM from &lt;10.14.2.93:58308&gt;\n06/29/11 14:54:18 (pid:14742) ERROR deleting match record for cluster\n40221824\n06/29/11 14:54:18 (pid:14742) Allocation node for this cluster doesn't\ninclude the match rec\n06/29/11 14:54:18 (pid:14742) ERROR \"Can't delete m_rec from allocation\nnode for cluster 40221824\" at line 3261 in file\n/u/j/f/jfrey/condor/CONDOR_SRC/src/condor_schedd.V6/dedicated_scheduler.cpp\n</pre></div>\n\n\n<p>Upon looking at the below patches and the above exception, Nathan P concluded that perhaps the problem is <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DelMrec\" title=\"Del Mrec\">DelMrec</a></span> does not look in the pending queues for a matching record, and thus suggested the following patch:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">src/condor_schedd.V6/dedicated_scheduler.cpp |   23 +++++++++++++++++++++--\n 1 files changed, 21 insertions(+), 2 deletions(-)\n\ndiff --git a/src/condor_schedd.V6/dedicated_scheduler.cpp b/src/condor_schedd.V6/dedicated_scheduler.cpp\nindex 49889d1..6c47e0d 100644\n--- a/src/condor_schedd.V6/dedicated_scheduler.cpp\n+++ b/src/condor_schedd.V6/dedicated_scheduler.cpp\n@@ -3185,7 +3185,7 @@ DedicatedScheduler::DelMrec( match_rec* rec )\n bool\n DedicatedScheduler::DelMrec( char const* id )\n {\n-\tmatch_rec* rec;\n+\tmatch_rec* rec = NULL;\n\n \tchar name_buf[256];\n \tname_buf[0] = '\\0';\n@@ -3195,7 +3195,26 @@ DedicatedScheduler::DelMrec( char const* id )\n \t\t\t\t \"match not deleted\\n\" );\n \t\treturn false;\n \t}\n-\n+\t// Check pending_matches\n+\tstd::map&lt;std::string,match_rec*&gt;::iterator it;\n+\tif((it = pending_matches.find(id)) != pending_matches.end()){\n+\t\trec = it-&gt;second;\n+\t\tdprintf( D_FULLDEBUG, \"Found record for claim %s in pending matches\\n\",id);\n+\t\tpending_matches.erase(it);\n+\t\tstd::map&lt;std::string,ClassAd*&gt;::iterator rit;\n+\t\tif((rit = pending_requests.find(rec-&gt;publicClaimId())) != pending_requests.end()){\n+\t\t\tif(rit-&gt;second){\n+\t\t\t\tdelete rit-&gt;second;\n+\t\t\t\tpending_requests.erase(rit);\n+\t\t\t}\n+\t\t}\n+\t\tstd::map&lt;std::string,std::string&gt;::iterator cit;\n+\t\tif((cit = pending_claims.find(rec-&gt;publicClaimId())) != pending_claims.end()){\n+\t\t\tpending_claims.erase(cit);\n+\t\t}\n+\t\tdelete rec;\n+\t\treturn true;\n+\t}\n \t\t// First, delete it from our table hashed on ClaimId.\n \tHashKey key( id );\n \tif( all_matches_by_id-&gt;lookup(key, rec) &lt; 0 ) {\n\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Jul-11 13:22:43 by jfrey:</em> <br/>\n\nNathan's patch looks correct, though I don't see any direct connection with Dan's patches. It is a bug related to asynchronous negotiation and should be committed.\n\n<p></p><hr/>\n<em>2011-Jul-12 15:22:02 by tannenba:</em> <br/>\n\nReader of this ticket may find <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2294\" onclick=\"get_ticket_and_populate_wrapper('2294'); return false;\" title=\"Schedd crash while asynchronously negotiating or claiming\">#2294</a></span> of interest as well, which fixes another parallel universe race condition that can crash the schedd.\n\n<p></p><hr/>\n<em>2011-Aug-01 15:10:28 by tannenba:</em> <br/>\n\nReviewed by gthain</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jul-11 13:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/41f7e3be9356eefa5c4c0f8095bea1dbcf02ba59\">[22398]</a></span>: Look in pending queues for a match record This is <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2253\" onclick=\"get_ticket_and_populate_wrapper('2253'); return false;\" title=\"Schedd crash if parallel job disappears during negotiation\">#2253</a></span> It appears that <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DelMrec\" title=\"Del Mrec\">DelMrec</a></span> does not look in the pending queues for a matching record. I want to see if this patch fixes a problem that LIGO is seeing  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-17 15:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/2f78cfff9bea748df11896701566cd259651f37e\">[22228]</a></span>: Added safety check to DedicatedScheduler::AddMrec(). <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2253\" onclick=\"get_ticket_and_populate_wrapper('2253'); return false;\" title=\"Schedd crash if parallel job disappears during negotiation\">#2253</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-17 14:52</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/85e57589a729c19170ed881a764a082db3de55a0\">[22224]</a></span>: Fixed a race condition that could cause the dedicated scheduler to crash. ===GT:Fixed=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2253\" onclick=\"get_ticket_and_populate_wrapper('2253'); return false;\" title=\"Schedd crash if parallel job disappears during negotiation\">#2253</a></span> ===VersionHistory=== Fixed a problem introduced in 7.5.5 that could cause the condor_schedd to crash when an idle parallel universe job left the queue.  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Aug-01 15:10", "status": "defer", "created": "2011-Jun-17 14:41", "fixed_version": "2011-Jun-17 14:41", "broken_version": "v070600", "priority": "5", "subsystem": "Parallel", "assigned_to": "gthain", "derived_from": "", "creator": "jfrey", "rust": "a22276", "customer_group": "ligo", "visibility": "public", "notify": "matt@cs.wisc.edu, tstclair@redhat.com, eje@redhat.com, dan@hep.wisc.edu, tannenba@cs.wisc.edu,pcouvare@caltech.edu", "due_date": ""}