{"id": 1439, "title": "Ticket #1439: GetEnv() of the Env object returns an invalid char pointer", "description": "<blockquote>\nGetEnv() function:\n<div class=\"code\">\n<pre class=\"code\">const char *\nEnv::GetEnv(MyString const &amp;var) const\n{\n\tMyString val;\n\t// lookup returns 0 on success\n\tif ( _envTable-&gt;lookup(var,val) == 0 ) {\n\t\treturn val.Value();\n\t} else {\n\t\treturn NULL;\n\t}\n}\n</pre></div>\n\n\n<p>The memory pointed to by val.Value() is invalid after this function call.\n\n</p><p>Here are the call sites I found:\n</p><div class=\"verbatim\">\n<pre>condor_c++_util/proc_family_proxy.cpp:107:      const char* base_addr_from_env = GetEnv(\"CONDOR_PROCD_ADDRESS_BASE\");\ncondor_c++_util/proc_family_proxy.cpp:116:              const char* addr_from_env = GetEnv(\"CONDOR_PROCD_ADDRESS\");\ncondor_daemon_core.V6/daemon_core.cpp:8551:     const char *tmp = GetEnv( envName );\ncondor_dagman/dagman_main.cpp:1197:     const char *    logFile = GetEnv( \"_CONDOR_DAGMAN_LOG\" );\ncondor_gridmanager/gridftpmanager.cpp:619:      value = GetEnv( \"X509_CERT_DIR\" );\ncondor_gridmanager/gt42_gahp_wrapper.cpp:118:   const char *port_range = GetEnv( \"GLOBUS_TCP_PORT_RANGE\" );\ncondor_gridmanager/gt4_gahp_wrapper.cpp:118:    const char *port_range = GetEnv( \"GLOBUS_TCP_PORT_RANGE\" );\ncondor_master.V6/master.cpp:727:        if ( GetEnv(\"GCB_INAGENT\") ) {\ncondor_master.V6/master.cpp:1125:       const char *our_broker = GetEnv( \"GCB_INAGENT\" );\ncondor_master.V6/master.cpp:1255:       if ( GetEnv(\"GCB_INAGENT\") ) {\ncondor_master.V6/master.cpp:1262:       if ( GetEnv(\"GCB_INAGENT\") &amp;&amp;\ncondor_starter.V6.1/baseStarter.cpp:238:        if ( GetEnv( \"CONDOR_GLEXEC_STARTER_CLEANUP_FLAG\" ) ) {\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2010-Jun-09 15:03:58 by gthain:</em> <br/>\n\nNote the source code is for the member function Env::GetEnv, and the call sites are all for ::GetEnv.\n\n<p></p><hr/>\n<em>2010-Jun-09 16:03:28 by psilord:</em> <br/>\n\nThis does bring into light that we still have two methods of dealing with environments, the En object as described in <code>condor_c++_util/env.cpp</code> and the SetEnv() and GetEnv() interface, as described in <code>condor_c++_util/setenv.cpp</code>.\n\n<p>I remember we were trying to unify/replace everything with the Env object and\nI guess the transition fizzled out.\n\n</p><p></p><hr/>\n<em>2010-Jun-10 09:46:12 by matt:</em> <br/>\n\nResolved? By whom and where?\n\n<p></p><hr/>\n<em>2010-Jun-10 09:59:32 by slauson:</em> <br/>\n\nThis was resolved by Greg with check-in <span class=\"chng\"><a href=\"chngview?cn=18441\">[18441]</a></span>.\n\n<p></p><hr/>\n<em>2010-Jun-10 10:33:33 by matt:</em> <br/>\n\nPlease update the ticket to reflect that.\n\n<p></p><hr/>\n<em>2010-Jun-10 11:29:43 by gthain:</em> <br/>\n\nThis method wasn't called anywhere, so I just removed it.  The other <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=GetEnv\" title=\"Get Env\">GetEnv</a></span> should be used instead.\n\n<p></p><hr/>\n<em>2010-Jun-10 12:16:05 by matt:</em> <br/>\n\nWhat release is this code going into?</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Jun-10 00:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=18441\">[18441]</a></span>: Remove char *Env::GetEnv, it was unused and broken  (By Greg Thain )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2010-Jun-10 12:18", "status": "resolved", "created": "2010-Jun-09 14:29", "fixed_version": "2010-Jun-09 14:29", "broken_version": "v070403", "priority": "3", "subsystem": "Libs", "assigned_to": "gthain", "derived_from": "#1239", "creator": "slauson", "rust": "", "customer_group": "other", "visibility": "public", "notify": "psilord@cs.wisc.edu slauson@cs.wisc.edu", "due_date": ""}