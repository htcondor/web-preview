{"id": 6192, "title": "Ticket #6192: Collector should queue queries when it can no longer fork", "description": "<blockquote>\nCurrently when the number of forked children processing Collector queries surpasses the maximum set by config knob <code>COLLECTOR_QUERY_WORKERS</code>, the Collector handles all new incoming queries in-processes (i.e. without forking).  As processing a query and sending out the result to the network could take a long time, the result of servicing such queries in-process is the Collector is likely to drop a lot of updates.  To avoid this, currently the only recourse is to set <code>COLLECTOR_QUERY_WORKERS</code> very high, which results in forking a lot of child processes that can exhaust memory on a central manager handling a very large pool.\n\n<p>The following enhancements are proposed:\n\n</p><p></p><ol>\n<li>Instead handling queries in-process, the patches in this ticket will have the Collector queue up query requests.  As children exit, new queries will be forked.  (Done)\n\n<p></p></li><li>Config knob <code>COLLECTOR_QUERY_WORKERS_PENDING</code> defines the maximum number of fork requests that can be pending (i.e. queued).  Queries that would exceed this maximum pending are aborted. Defaults to 50. (Done)\n\n<p></p></li><li>Queries coming from the condor_negotiator should be considered high priority, and be serviced ahead of all other queries. (Done)\n\n<p></p></li><li>Queries coming from from \"condor_sos condor_status\" should be considered high priority. (Done)\n\n<p></p></li><li>Config knob <code>COLLECTOR_QUERY_WORKERS_RESERVE_FOR_HIGH_PRIO</code> is the number of COLLECTOR_QUERY_WORKERS slots that will be held in reserve to only service high priority requests. Defaults to 1. Also, the default for <code>COLLECTOR_QUERY_WORKERS</code> should increase from 2 to 4. (Done)\n\n<p></p></li><li>When a query request is pulled from the queue, the Collector should confirm that the client has not closed the TCP socket (because it was tired of waiting) <em>before</em> going through all the work of actually forking a child and starting to service the query. (Done)\n\n<p></p></li><li>Config knob <code>COLLECTOR_QUERY_MAX_WORKTIME</code> should define the maximum amount of time in seconds that a query should be in the system. Queries that wait in the pending queue longer than this period of time will be aborted before forking.  Queries that have already forked will also abort after the worktime has expired - this protects against clients on a very slow network connection. If set to 0, then there is no timeout.  The default is 0. (Done)\n\n<p></p></li><li>There should be statistical attributes available in the collector set of stats (i.e. visible by using \"-collector -statistics collector\" flags to condor_status) (Done):\n<div class=\"verbatim\">\n<pre>            ActiveQueryWorkers       - current number of forked workers\n            ActiveQueryWorkersPeak   - peak number of forked workers since startup or stat reset\n            PendingQueries           - number of queries pending (waiting to fork)\n            PendingQueriesPeak       - peak number of queries pending (waiting to fork)\n            DroppedQueries           - number of queries aborted because COLLECTOR_QUERY_WORKERS_PENDING exceeded, or COLLECTOR_QUERY_MAX_WORKTIME exceeded, or client closed TCP socket while request was pending\n            RecentDroppedQueries     - number of queries aborted in the recent time window (20 min by default)\n</pre></div>\n\n</li><li>Add an undocumented config knob <code>COLLECTOR_TRACK_QUERY_BY_SUBSYS</code> which, when set to True (the default), will instruct the Collector to publish counts on the number of queries grouped by subsystem (e.g. TOOL, NEGOTIATOR, STARTD, etc) of the client.  This knob can remain undocumented, as support for this will be conditionally compiled, and we anticipate removing this feature after we have a better understanding of what daemons perform queries.  The metrics published will take the following form, where <code>SUBSYSTEM</code> will be replaced by the subsystem name of the client:\n<div class=\"verbatim\">\n<pre>            ForkQueriesFromSUBSYSTEM          - counter of the number of queries handled by forking from SUBSYSTEM\n            InProcQueriesFromSUBSYSTEM        - counter of the number of queries handled in-process from SUBSYSTEM\n            RecentForkQueriesFromSUBSYSTEM    - counter of the number of queries in the recent time window (20 min) handled by forking from SUBSYSTEM\n            RecentInProcQueriesFromSUBSYSTEM  - counter of the number of queries in the recent time window (20 min) handled in-process from SUBSYSTEM\n</pre></div>\n\nWhen the collector aborts a query request due to load, in the initial implementation it will simply close the socket. In a future refinement, it would be nice if a specific error was give back to the client (aka 'Server too busy').</li></ol>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Apr-22 17:29</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50561\">[50561]</a></span>: Version history entries for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Apr-22 16:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50559\">[50559]</a></span>: Documentation for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Apr-05 16:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50415\">[50415]</a></span>: for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>, add subsys to the collector query info log message, and track queries by more subsys types.  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-31 14:43</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50391\">[50391]</a></span>: Implement knob COLLECTOR_QUERY_WORKERS_RESERVE_FOR_HIGH_PRIO. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span> Also add an undocumented knob to enable/disable COLLECTOR_TRACK_QUERY_BY_SUBSYS behavior.  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-31 14:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50390\">[50390]</a></span>: Add defaults and param table entries for COLLECTOR_QUERY_* knobs. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-31 14:36</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50389\">[50389]</a></span>: Fix bugs introduced with TRACK_QUERIES_BY_SUBSYS commit. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-18 16:13</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50343\">[50343]</a></span>: COLLECTOR_QUERY_MAX_WORKTIME abort queries already in progress. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span> Previous to this commit, max worktime only impacted pending quries.  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-17 16:36</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50341\">[50341]</a></span>: for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>, add stats to the the collector to count queries by client subsystem type this code is tentative, wrapped in #ifdef TRACK_QUERIES_BY_SUBSYS which is currently enabled.  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-17 10:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50339\">[50339]</a></span>: Fix wrong number of args to dprintf (which broke fedora build). <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-17 09:14</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50337\">[50337]</a></span>: Drop collector query requests if client expired or disconnected. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span> Also implement config knob COLLECTOR_QUERY_MAX_WORKTIME.  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-17 09:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50336\">[50336]</a></span>: Consider collector queries via condor_sos as high priority. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-16 15:22</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50332\">[50332]</a></span>: Service collector queries from the negotiator at high priority. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-16 10:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50325\">[50325]</a></span>: stats for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ActiveQueryWorkers\" title=\"Active Query Workers\">ActiveQueryWorkers</a></span> + Peak, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=PendingQueries\" title=\"Pending Queries\">PendingQueries</a></span> + Peak, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DroppedQueries\" title=\"Dropped Queries\">DroppedQueries</a></span> + Recent  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-15 08:16</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50320\">[50320]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>) Make Fedora compiler happy  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-15 05:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50319\">[50319]</a></span>: Initial commit to implement COLLECTOR_QUERY_WORKERS_PENDING. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span> The collector no longer will handle queries in-process when it reaches the fork limit defined by COLLECTOR_QUERY_WORKERS; instead it will queue up to COLLECTOR_QUERY_WORKERS_PENDING queries and service them as forked children complete.\u00a0[...]\n (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-15 05:34</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50318\">[50318]</a></span>: Get rid of a useless dprintf that was cluttering logs. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-15 05:32</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=50317\">[50317]</a></span>: Fix mem leak bug in Create_Thread if FAKE_THREAD_CREATE=True. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6192\" onclick=\"get_ticket_and_populate_wrapper('6192'); return false;\" title=\"Collector should queue queries when it can no longer fork\">#6192</a></span> Create_Thread() is supposed to take responsibility to free() the memory passed in as the void *arg. This was not happening if config knob FAKE_THREAD_CREATE=True, which is the default on Win32.  (By Todd Tannenbaum )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2017-Apr-22 17:30", "status": "resolved", "created": "2017-Mar-15 05:22", "fixed_version": "2017-Mar-15 05:22", "broken_version": "", "priority": "2", "subsystem": "DaemonsCM", "assigned_to": "tannenba", "derived_from": "#6093", "creator": "tannenba", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "tannenba@cs.wisc.edu", "due_date": ""}