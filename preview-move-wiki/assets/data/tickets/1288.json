{"id": 1288, "title": "Ticket #1288: schedd StartJobs() called multiple times during single event loop", "description": "<blockquote>\nDuring debugging we had noticed that there are paths within the schedd where we can call StartJobs() multiple times within an event loop cycle.\n\n<p>It may be better to create a generic function which updates the timer to StartJobs() to be called during the next cycle as it does not appear to scale on a fully loaded schedd.</p></blockquote>", "remarks": "<blockquote>\n<code>StartJobs()</code> is now managed via a timeslice timer.  By default, the schedd will attempt to schedule this timer so that it spends no more than 5% of its time in <code>StartJobs()</code> but never less frequently than once every 5 minutes (controlled via the existing SCHEDD_INTERVAL_TIMESLICE and SCHEDD_INTERVAL config knobs).\n\n<p>In addition, when a shadow exits for a job with a claim (i.e. not a local job), we no longer call <code>StartJobs()</code> at all.  We call the more specific <code>StartJob()</code> function to get a new job for the specific claim we are dealing with.  Therefore, the limit on how much of a timeslice <code>StartJobs()</code> is allowed to consume should really only affect how long it takes to start new local universe jobs.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Apr-12 15:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/9d50bad2783aff4f16a0562270c69d111702ad72\">[25422]</a></span>: Documented StartJobs() optimization in schedd. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1288\" onclick=\"get_ticket_and_populate_wrapper('1288'); return false;\" title=\"schedd StartJobs() called multiple times during single event loop\">#1288</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Mar-18 15:21</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/43f376dd95ba5ea5cb6394c2961191b22c87fbea\">[17667]</a></span>: StartJobs() is now regulated by a timeslice timer. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1288\" onclick=\"get_ticket_and_populate_wrapper('1288'); return false;\" title=\"schedd StartJobs() called multiple times during single event loop\">#1288</a></span> Since StartJobs() involves a full queue scan to start local jobs, the frequency of calls to it needs to be adapted to the size of the queue in order for the schedd to remain responsive to other tasks.  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Mar-17 12:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/b9ac2543c5fe11741d3db6785637daa839a9cc9c\">[17649]</a></span>: In schedd's child_exit reaper, find new job for specific claim when we have one. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1288\" onclick=\"get_ticket_and_populate_wrapper('1288'); return false;\" title=\"schedd StartJobs() called multiple times during single event loop\">#1288</a></span> Previously, we just called StartJobs() which cycles through all the claims and local jobs. This is more work than we need to do when we are just dealing with a specific claim (i.e. when not a local job).  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2010-Mar-18 16:13", "status": "resolved", "created": "2010-Mar-17 11:00", "fixed_version": "2010-Mar-17 11:00", "broken_version": "v070500", "priority": "4", "subsystem": "Daemons", "assigned_to": "danb", "derived_from": "#1284", "creator": "tstclair", "rust": "", "customer_group": "users", "visibility": "public", "notify": "matt@cs.wisc.edu, dan@hep.wisc.edu, tstclair@redhat.com", "due_date": ""}