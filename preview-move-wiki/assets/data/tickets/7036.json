{"id": 7036, "title": "Ticket #7036: Cannot queue multiple times on a single transaction", "description": "<blockquote>\nThis Python script\n\n<p></p><div class=\"code\">\n<pre class=\"code\"># multisubmit.py\n\nimport htcondor\n\ns1 = htcondor.Submit({'executable': '/bin/sleep', 'args': '180'})\ns2 = htcondor.Submit({'executable': '/bin/sleep', 'args': '180'})\n\nschedd = htcondor.Schedd()\nwith schedd.transaction() as txn:\n    s1.queue(txn, count = 1)\n    s2.queue(txn, count = 1)\n</pre></div>\n\n\n<p>(you can replace the submit descriptions with anything, the jobs never get submitted so it doesn't matter)\n\n</p><p>errors on <code>s2.queue(txn, count = 1)</code> with\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">Traceback (most recent call last):\n  File \"multisubmit.py\", line 9, in &lt;module&gt;\n    s2.queue(txn, count = 1)\nRuntimeError: Failed to commmit and disconnect from queue. SCHEDD:2:Failed to apply a required job transform.\n</pre></div>\n\n\n<p>Note that it's the second queue that fails.\n\n</p><p></p><div class=\"strike\">\n<strike>TJ believes it doesn't actually have anything to do with job transforms; it's something about the clusterad for the second queue not being handled correctly.</strike></div>\n subsequent events have proved him wrong.</blockquote>", "remarks": "<blockquote>\n<em>2019-Jun-19 15:53:27 by johnkn:</em> <br/>\n\n8.9.2 still shows this problem (on submit-1 chtc).  it's possible that this is not the same bug as <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6719\" onclick=\"get_ticket_and_populate_wrapper('6719'); return false;\" title=\"Submitting multiple clusters broken in condor_submit\">#6719</a></span>\n\n<p></p><hr/>\n<em>2019-Jul-31 14:15:34 by karpel:</em> <br/>\n\nThis is still happening on submit-1, with 8.9.3 and 8.9.3 pre-release bindings.\n\n<p></p><hr/>\n<em>2019-Aug-01 15:39:54 by johnkn:</em> <br/>\n\nTesting without submit transform shows that this works as expected on 8.8.5 pre release and 8.9.3 pre-release. but with a submit transform on 8.9.3 we get the following error message\n<div class=\"term\">\n<pre class=\"term\">&gt;multisubmit.py\nTraceback (most recent call last):\n  File \"D:\\scratch\\condor\\master\\test\\jobs\\py\\multisubmit.py\", line 10, in &lt;module&gt;\n    s2.queue(txn, count=1)\nRuntimeError: Failed to commmit and disconnect from queue. SCHEDD:2:Failed to apply a required job transform.\n|SCHEDD:2:Failed to apply a required job transform.\n</pre></div>\n\n<div class=\"snip\">\n<pre class=\"sniplabel\">SchedLog fragment</pre>\n<pre class=\"snip\">08/01/19 16:08:39.746 (D_ALWAYS) Inserting new attribute requirements into non-active cluster cid=10939 acid=10940\n08/01/19 16:08:39.746 (D_ALWAYS) (10939.0) job_transforms: Failed to set requirements = (TARGET.PoolName == \"CHTC\") &amp;&amp; (\nTARGET.Arch == \"X86_64\") &amp;&amp; (TARGET.OpSys == \"WINDOWS\") &amp;&amp; (TARGET.Disk &gt;= RequestDisk) &amp;&amp; (TARGET.Memory &gt;= RequestMemo\nry) &amp;&amp; ((TARGET.FileSystemDomain == MY.FileSystemDomain) || (TARGET.HasFileTransfer))\n08/01/19 16:08:39.746 (D_ALWAYS) (10939.0) job_transforms: ERROR applying transforms (err=-4,rval=-2)\n08/01/19 16:08:39.756 (D_ALWAYS) Inserting new attribute requirements into non-active cluster cid=10939 acid=10940\n08/01/19 16:08:39.757 (D_ALWAYS) (10939.0) job_transforms: Failed to set requirements = (TARGET.PoolName == \"CHTC\") &amp;&amp; (\nTARGET.Arch == \"X86_64\") &amp;&amp; (TARGET.OpSys == \"WINDOWS\") &amp;&amp; (TARGET.Disk &gt;= RequestDisk) &amp;&amp; (TARGET.Memory &gt;= RequestMemo\nry) &amp;&amp; ((TARGET.FileSystemDomain == MY.FileSystemDomain) || (TARGET.HasFileTransfer))\n08/01/19 16:08:39.757 (D_ALWAYS) (10939.0) job_transforms: ERROR applying transforms (err=-4,rval=-2)\n</pre></div>\n\nI think we a can fix this pretty easily by relaxing the check that a submit can only edit the current cluster. A range of clusters should be allowed, or we could turn that check off entirely during the transform phase, since it is the schedd itself setting job attributes in that case.\n\n<p>But the real problem here is that each distinct submit object used in a transaction in a python script allocates a new cluster, while multiple QUEUE statements in a submit file normally do not, so this bug in the transform code is much easier to hit from python than it is from condor_submit.\n\n</p><p></p><hr/>\n<em>2019-Aug-09 10:06:31 by jfrey:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p>This code looks good.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2019-Aug-08 15:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/aa3fa268fc9362bbcc08e3c2b58f31156f535030\">[57633]</a></span>: fix <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7036\" onclick=\"get_ticket_and_populate_wrapper('7036'); return false;\" title=\"Cannot queue multiple times on a single transaction\">#7036</a></span> - python cannot queue multiple times in a single transaction. this is actually a bug with submit transforms when there are multiple clusters in the transform. ===VersionHistory:Complete===  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2019-Aug-12 15:19", "status": "resolved", "created": "2019-May-06 12:19", "fixed_version": "2019-May-06 12:19", "broken_version": "v080803", "priority": "4", "subsystem": "PythonBinding", "assigned_to": "johnkn", "derived_from": "#6719", "creator": "karpel", "rust": "", "customer_group": "users", "visibility": "public", "notify": "karpel@wisc.edu, johnkn@cs.wisc.edu", "due_date": ""}