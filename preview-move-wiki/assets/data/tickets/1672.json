{"id": 1672, "title": "Ticket #1672: LocalUserLog::logStarterError() called before initialized", "description": "<blockquote>\nIgor observed the following:\n\n<p></p><div class=\"verbatim\">\n<pre>09/23 06:20:34 (pid:30260) ERROR \"Assertion ERROR on (result)\" at line 207 in file NTsenders.cpp\n09/23 06:20:34 (pid:30260) ERROR \"LocalUserLog::logStarterError(Assertion ERROR on (result)) called before init()\" at line 222 in file local_user_log.cpp\n</pre></div>\n\n\n<p>The problem is that we are hitting an error before fetching the job from the shadow, so the local user log has not been initialized yet.  The exception in logStarterError() just adds to the confusion.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Sep-23 17:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=25690\">[25690]</a></span>: Documented fix for LocalUserLog::logStarterError() exception. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1672\" onclick=\"get_ticket_and_populate_wrapper('1672'); return false;\" title=\"LocalUserLog::logStarterError() called before initialized\">#1672</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Sep-23 17:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=19044\">[19044]</a></span>: Do not EXCEPT in LocalUserLog::logStarterError() if ulog not initialized. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1672\" onclick=\"get_ticket_and_populate_wrapper('1672'); return false;\" title=\"LocalUserLog::logStarterError() called before initialized\">#1672</a></span> This is an expected code path. The EXCEPT here just makes the logs confusing.  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2010-Sep-23 17:06", "status": "resolved", "created": "2010-Sep-23 17:03", "fixed_version": "2010-Sep-23 17:03", "broken_version": "v070000", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "", "due_date": ""}