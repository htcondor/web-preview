{"id": 5616, "title": "Ticket #5616: document passing of arguments to python classad function", "description": "<blockquote>\nThe documentation for passing and using arguments external classad functions is in poor shape. It took me about a day to figure out that the manual's statement that\n\n<p></p><div class=\"verbatim\">\n<pre>Any further arguments are converted from ClassAd expressions to python; the function return value is converted back to ClassAds\n</pre></div>\n\n\n<p>does not mean that the arguments are converted to pythonic types (int, str, etc). They are passed in (I think) as <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ExprTree\" title=\"Expr Tree\">ExprTree</a></span> whose names can be extracted by conversion to string and whose values through eval().\n\n</p><p></p><pre>  def ligotest(*args, **kwargs):\n    ad = {}\n    for arg in args:\n      ad[str(arg).upper()] = arg.eval()\n</pre>\n\n<p>I am further told that one can pass the whole classad through a named keyword 'state' but that it must be explicit. i.e. the above code will yield 0 for len(kwargs). I have been unable to pass/use a 'state' keyword argument but I may have been confusing multiple problems and drawing incorrect conclusions. An example of how to do it would help.</p></blockquote>", "remarks": "<blockquote>\n<em>2016-Apr-27 10:01:30 by tpdownes:</em> <br/>\n\nI think the more important part here is documenting the worlds simplest example of each way of passing arguments. Here is a start.\n\n<p></p><pre>  import classad\n  import json\n  import re\n</pre>\n\n<p></p><pre>  def ligotest(*args, **kwargs):\n    EXIT_CODES = { 'valid': True, 'invalid': False }\n</pre>\n\n<p></p><pre>    ad = {}\n    for arg in args:\n      ad[str(arg).upper()] = arg.eval()\n</pre>\n\n<p></p><pre>    with open(\"/tmp/wrapper-dump.txt\",\"w\") as textfile:\n      textfile.write(\"Number of keyword args: %d\" % len(kwargs))\n</pre>\n\n<p></p><pre>    try:\n      group = ad['Target.AcctGroup'.upper()]\n      group_user = ad['Target.AcctGroupUser'.upper()]\n      job_owner = ad['Target.Owner'.upper()]\n    except:\n      return EXIT_CODES['invalid']\n</pre>\n\n<p></p><pre>    # do stuff with classads here\n</pre>\n\n<p></p><hr/>\n<em>2016-Jun-03 10:00:14 by tim:</em> <br/>\n\nSee simple examples in the unit test code.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2016-Apr-16 13:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=48212\">[48212]</a></span>: Pass state when function accepts keyword arguments. <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=5616\" onclick=\"get_ticket_and_populate_wrapper('5616'); return false;\" title=\"document passing of arguments to python classad function\">#5616</a></span> Now, a function of the form def func(*args, **kw): return 0 will get a keyword argument 'state' that contains the evaluation context.  (By Brian )</td></tr>\n</tbody></table>", "type": "doc", "last_change": "2017-Jun-01 13:48", "status": "defer", "created": "2016-Apr-11 15:46", "fixed_version": "2016-Apr-11 15:46", "broken_version": "v080503", "priority": "5", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "tpdownes", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "wenger@cs.wisc.edu,pcouvare@caltech.edu", "due_date": ""}