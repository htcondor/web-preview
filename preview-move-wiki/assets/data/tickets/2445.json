{"id": 2445, "title": "Ticket #2445: condor_userprio callbacks limit size of submitter names to 63 chars", "description": "<blockquote>\nIf a submitter record in the accountant is longer than 63 characters, for example a very long group name, or a very long host name, or any combination thereof, the callbacks invoked by condor_userprio will currently fail with a log message in the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=NegotiatorLog\" title=\"Negotiator Log\">NegotiatorLog</a></span>, because they are reading from the stream with a hard limit of 64 characters.\n\n<p>This tripped up a downstream test where the host-name happened to be very long, and the group name was also somewhat long.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Sep-08 14:45:42 by eje:</em> <br/>\n\nREPRO/TEST\n\n<p>Consider the following configuration with a very long group name designed to trigger the hard limit on submitter name length:\n</p><div class=\"code\">\n<pre class=\"code\">NEGOTIATOR_DEBUG = D_FULLDEBUG\nNEGOTIATOR_INTERVAL = 30\nSCHEDD_INTERVAL\t= 15\nNEGOTIATOR_USE_SLOT_WEIGHTS = FALSE\nGROUP_QUOTA_MAX_ALLOCATION_ROUNDS = 1\n\nNUM_CPUS = 10\n\nGROUP_NAMES = this_egregiously_long_group_name_will_exceed_sixty_four_character_limit\nGROUP_QUOTA_DYNAMIC_this_egregiously_long_group_name_will_exceed_sixty_four_character_limit = 1.0\n</pre></div>\n\n\n<p>The accountant itself can handle arbitrary submitter lengths internally.  Using this submission file will succeed:\n</p><div class=\"code\">\n<pre class=\"code\">universe = vanilla\ncmd = /bin/sleep\nargs = 6000\nshould_transfer_files = if_needed\nwhen_to_transfer_output = on_exit\n+AccountingGroup=\"this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user\"\nqueue 1\n</pre></div>\n\n\n<p>Submit the above job, and you can see it in the accountant:\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_userprio -l | grep -e '^Name'\nName1 = \"this_egregiously_long_group_name_will_exceed_sixty_four_character_limit\"\nName2 = \"&lt;none&gt;\"\nName3 = \"this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain\"\n</pre></div>\n\n\n<p>There are eight condor_userprio commands that involve passing the submitter name.  If you invoke them after submitting the job above, like so:\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_userprio -setprio this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain 2\n\n$ condor_userprio -setfactor this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain 2\n\n$ condor_userprio -setaccum this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain 2\n\n$ condor_userprio -setbegin this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain 2\n\n$ condor_userprio -setlast this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain 2\n\n$ condor_userprio -resetusage this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain\n\n$ condor_userprio -getreslist this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain\n\n$ condor_userprio -delete this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain\n</pre></div>\n\n\n<p>Before the fix, you will see the following errors in the Negotiator Log: (note the error messages are somewhat misleading as well).  Also, the operations themselves will not be performed, which you can see by inspecting the accountant with condor_userprio -all\n</p><div class=\"code\">\n<pre class=\"code\">$ tail -f NegotiatorLog | grep 'Could not read'\n09/08/11 12:07:55 Could not read schedd name and priority\n09/08/11 12:08:38 Could not read schedd name and priority\n09/08/11 12:10:52 Could not read schedd name and accumulatedUsage\n09/08/11 12:12:23 Could not read schedd name and begin usage time\n09/08/11 12:12:39 Could not read schedd name and last usage time\n09/08/11 12:13:07 Could not read schedd name\n09/08/11 12:13:16 Could not read schedd name\n09/08/11 12:13:43 Could not read accountant record name\n</pre></div>\n\n\n<p></p><div class=\"code\">\n<pre class=\"code\">$ condor_userprio -all\nLast Priority Update:  9/8  12:29\n                                    Effective   Real     Priority   Res   Total Usage       Usage            Last\nUser Name                           Priority  Priority    Factor    Used (wghted-hrs)    Start Time       Usage Time\n------------------------------      --------- -------- ------------ ----  ----------- ---------------- ----------------\nthis_egregiously_long_group_na           0.51     0.51         1.00    1         0.43  9/08/2011 12:04  9/08/2011 12:29\nthis_egregiously_long_group_na           0.51     0.51         1.00    1         0.43  9/08/2011 12:04  9/08/2011 12:29\n------------------------------      --------- -------- ------------ ----  ----------- ---------------- ----------------\nNumber of users: 1                                                     1         0.43  9/08/2011 12:04  9/07/2011 12:30\n</pre></div>\n\n\n<p>After the fix, you should see that there are no log messages, and the condor_userprio operations are performed.\n</p><div class=\"code\">\n<pre class=\"code\">$ tail -f NegotiatorLog | grep 'Could not read'\n</pre></div>\n\n\n<p>After the first five commands, (-setprio | -setfactor | -setaccum | -setbegin | -setlast) you should see this (note -setlast gets updated)\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_userprio -all\nLast Priority Update:  9/8  12:37\n                                    Effective   Real     Priority   Res   Total Usage       Usage            Last\nUser Name                           Priority  Priority    Factor    Used (wghted-hrs)    Start Time       Usage Time\n------------------------------      --------- -------- ------------ ----  ----------- ---------------- ----------------\nthis_egregiously_long_group_na           0.50     0.50         1.00    1         0.03  9/08/2011 12:35  9/08/2011 12:37\nthis_egregiously_long_group_na           4.00     2.00         2.00    1         0.02 12/31/1969 17:00  9/08/2011 12:37\n------------------------------      --------- -------- ------------ ----  ----------- ---------------- ----------------\nNumber of users: 1                                                     1         0.02 12/31/1969 17:00  9/07/2011 12:37\n</pre></div>\n\n\n<p>invoking -resetusage will set the \"total usage\" column back to zero:\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_userprio -all\nLast Priority Update:  9/8  12:41\n                                    Effective   Real     Priority   Res   Total Usage       Usage            Last\nUser Name                           Priority  Priority    Factor    Used (wghted-hrs)    Start Time       Usage Time\n------------------------------      --------- -------- ------------ ----  ----------- ---------------- ----------------\nthis_egregiously_long_group_na           0.50     0.50         1.00    1         0.10  9/08/2011 12:35  9/08/2011 12:41\nthis_egregiously_long_group_na           4.00     2.00         2.00    1         0.00  9/08/2011 12:41  9/08/2011 12:41\n------------------------------      --------- -------- ------------ ----  ----------- ---------------- ----------------\nNumber of users: 1                                                     1         0.00  9/08/2011 12:41  9/07/2011 12:41\n</pre></div>\n\n\n<p>Invoking -getreslist will give the expected slot:\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_userprio -getreslist this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain\nResource Name                    Start Time   Match Time\n-------------                    ----------   ----------\nResource.slot1@rorschach.localdomain   9/8  12:35   0+00:07:14\n-------------                   ------------  ------------\nNumber of Resources Used: 1\n</pre></div>\n\n\n<p>remove the job, and invoke condor_userprio -delete, and submitter is correctly deleted:\n</p><div class=\"code\">\n<pre class=\"code\">$ condor_rm -all\nAll jobs marked for removal.\n$ condor_userprio -delete this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain\nThe accountant record named this_egregiously_long_group_name_will_exceed_sixty_four_character_limit.user@localdomain was deleted\n$ condor_userprio -all\nLast Priority Update:  9/8  12:44\n                                    Effective   Real     Priority   Res   Total Usage       Usage            Last\nUser Name                           Priority  Priority    Factor    Used (wghted-hrs)    Start Time       Usage Time\n------------------------------      --------- -------- ------------ ----  ----------- ---------------- ----------------\nthis_egregiously_long_group_na           0.50     0.50         1.00    1         0.14  9/08/2011 12:35  9/08/2011 12:44\n------------------------------      --------- -------- ------------ ----  ----------- ---------------- ----------------\nNumber of users: 0                                                     0         0.00 12/31/1969 17:00  9/07/2011 12:44\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Sep-21 12:43:58 by eje:</em> <br/>\n\nSince this fix requires changing the type xmitted over the stream from char[] to std::string, I wonder what the implications are for stable series -- does type change break compatability between condor_userprio and negotiator? (e.g. if negotiator is updated but user's copy of condor_userprio isn't?)\n\n<p></p><hr/>\n<em>2011-Sep-21 13:54:23 by eje:</em> <br/>\n\nGreg points out that all the string overloadings for get/put use char* under the hood.  That takes care of any protocol compatability issues.   Also implies I can simplify the patch since condor_userprio side can remain unchanged.\n\n<p></p><hr/>\n<em>2011-Sep-23 16:55:31 by danb:</em> <br/>\n\nCode review: looks good.  Thanks!\n\n<p>--Dan</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/454/gt2445-userprio-submitter-len.patch\">gt2445-userprio-submitter-len.patch</a>\n10792 bytes added by eje on 2011-Sep-08 20:02:25 UTC.\n<br/>\nUpdates condor_userprio callbacks to handle submitter names of arbitrary length.  Patch against V7_6-branch.  I would expect this to merge forward cleanly against master.<br/>\n</li><li><a href=\"../files/464/gt2445-userprio-submitter-len.patch2\">gt2445-userprio-submitter-len.patch2</a>\n7094 bytes added by eje on 2011-Sep-21 19:22:04 UTC.\n<br/>\nSmaller patch takes advantage of fact that all string type overloadings for stream get/put xmit char* under the hood, so condor_userprio side does not need to change, only the callback side on the negotiator.\n<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-26 12:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/2ae5e3e50b712272db43f334f8b0327211184d6e\">[27399]</a></span>: ===VersionHistory:Completed=== ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2445\" onclick=\"get_ticket_and_populate_wrapper('2445'); return false;\" title=\"condor_userprio callbacks limit size of submitter names to 63 chars\">#2445</a></span>  (By Erik Erlandson )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-26 12:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/d74b166e4bb765282bcdc1aec5a7086bc71d6a85\">[27398]</a></span>: Updated condor_userprio callbacks to handle submitter names of arbitrary length. ===GT:Fixed=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2445\" onclick=\"get_ticket_and_populate_wrapper('2445'); return false;\" title=\"condor_userprio callbacks limit size of submitter names to 63 chars\">#2445</a></span>  (By Erik Erlandson )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Sep-26 12:18", "status": "resolved", "created": "2011-Sep-08 14:20", "fixed_version": "2011-Sep-08 14:20", "broken_version": "", "priority": "2", "subsystem": "Daemons", "assigned_to": "eje", "derived_from": "", "creator": "eje", "rust": "", "customer_group": "other", "visibility": "public", "notify": "tstclair@redhat.com, dan@hep.wisc.edu, eje@cs.wisc.edu", "due_date": ""}