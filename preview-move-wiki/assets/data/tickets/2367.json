{"id": 2367, "title": "Ticket #2367: performance issue - n^2 fsync()ing algorithm in dedicated scheduler", "description": "<blockquote>\nThere are three issues here:\n\n<p></p><ol>\n<li>The algorithm need not be n^2, could be n <strong>DEFERRED</strong> <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=2397\" onclick=\"get_ticket_and_populate_wrapper('2397'); return false;\" title=\"n^2 algorithm in dedicated scheduler could be n\">#2397</a></span>\n</li><li>DURABLE <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SetAttributeString\" title=\"Set Attribute String\">SetAttributeString</a></span> could be NONDURABLE to avoid the fsync <strong>DONE:</strong> <span class=\"chng\"><a href=\"chngview?cn=26688\">[26688]</a></span>\n</li><li>The dedicates scheduler battles the scheduler over the correct value for ATTR_SCHEDULER value because of a mismatch in ds_name and correct_scheduler <strong>DONE:</strong> <span class=\"chng\"><a href=\"chngview?cn=26687\">[26687]</a></span>\n</li></ol>\n\n<p>First, in the 7.6 timeframe, the following code was added to the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DedicatedScheduler\" title=\"Dedicated Scheduler\">DedicatedScheduler</a></span>...\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">commit 03c931773b7b3f6060f5e33e1896f602fc01a7f0\nAuthor: gthain &lt;gthain&gt;\nDate:   Thu Apr 20 19:43:16 2006 +0000\n\n    make sure SCHEDULER attribute is set for all procs in a cluster of parallel jobs\n\ndiff --git a/src/condor_schedd.V6/dedicated_scheduler.C b/src/condor_schedd.V6/dedicated_scheduler.C\nindex 9586559..e301411 100644\n--- a/src/condor_schedd.V6/dedicated_scheduler.C\n+++ b/src/condor_schedd.V6/dedicated_scheduler.C\n@@ -1981,8 +1981,14 @@ DedicatedScheduler::sortJobs( void )\n                        // so put it in our array.\n                (*verified_clusters)[next_cluster++] = cluster;\n\n-                       // While we're at it, make sure ATTR_SCHEDULER is right\n-               setScheduler( job );\n+                       // While we're at it, make sure ATTR_SCHEDULER is right for all procs\n+               ClassAd *jobIter = job;\n+               int proc = 0;\n+               do {\n+                       setScheduler( jobIter );\n+                       proc++;\n+                       jobIter = GetJobAd(cluster, proc);\n+               } while (jobIter != NULL);\n        }\n\n                // No matter what, we want to remove our old array and start\n@@ -3776,9 +3782,10 @@ DedicatedScheduler::setScheduler( ClassAd* job_ad )\n        if( ! job_ad-&gt;LookupInteger(ATTR_PROC_ID, proc) ) {\n                return false;\n        }\n-       if( SetAttributeString(cluster, proc, ATTR_SCHEDULER,\n-                                                  ds_name) &lt; 0 ) {\n-               return false;\n+\n+       while( SetAttributeString(cluster, proc, ATTR_SCHEDULER,\n+                                                  ds_name) ==  0 ) {\n+               proc++;\n        }\n        return true;\n }\n</pre></div>\n\n\n<p>The result is for every parallel job in the queue, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SetAttributeString\" title=\"Set Attribute String\">SetAttributeString</a></span> is called (n^2-n)/2 times.\n\n</p><p>Second, each <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SetAttributeString\" title=\"Set Attribute String\">SetAttributeString</a></span> is DURABLE and results in an fsync, could be NONDURABLE.\n\n</p><p>Third,\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">commit b7ab1748d7115ea16025baa09be2e47f3d2d26d8\nAuthor: wright &lt;wright&gt;\nDate:   Mon Apr 9 23:17:26 2001 +0000\n\n    + Added dirtyJobQueue(), which allows parts of the schedd external to\n      qmgmt.C to set the flag that says the queue is dirty.  This is\n      useful when we do things to the in-memory version of job classads\n      that we'd like to be truncated on shutdown, but that we don't need\n      persistently logged immediately (eg fixing ATTR_USER on a\n      reconfig'ed UID_DOMAIN).\n    + Added code to InitJobQueue() to check for the ATTR_SCHEDULER\n      attribute for MPI jobs and insert one if it's not there (just like\n      we do for ATTR_USER).\n    + Fixed the code in InitJobQueue() for adding ATTR_USER (and the new\n      code for ATTR_SCHEDULER) so that we set the JobQueueDirty flag to\n      true when we do it, so that the changes get truncated (persistently\n      logged) on shutdown.\n\ndiff --git a/src/condor_schedd.V6/qmgmt.C b/src/condor_schedd.V6/qmgmt.C\nindex 2bd1ae0..39b398f 100644\n...\n+       sprintf( correct_scheduler, \"DedicatedScheduler!%s\", Name );\n...\n</pre></div>\n\n\n<p>Disagrees with,\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">commit 356bbf10564d9d3936a709a0f945c162f2e29967\nAuthor: wright &lt;wright&gt;\nDate:   Tue Apr 10 22:59:11 2001 +0000\n\n    + Removed ds_scheduler and schedulerName(), since we just want to use\n      ds_name and name() to set ATTR_SCHEDULER.\n    + Cleaned up the initialization of ds_owner and ds_name: ds_name is\n      now always \"DedicatedScheduler@schedd.name\", even if schedd.name\n      contains an '@' sign itself.  If there's an '@' in the schedd name,\n      ds_owner will be \"DedicatedScheduler@everything_before_the_@\", for\n      example, \"DedicatedScheduler@wright\", if the schedd name is\n      \"wright@raven.cs.wisc.edu\".\n\ndiff --git a/src/condor_schedd.V6/dedicated_scheduler.C b/src/condor_schedd.V6/dedicated_scheduler.C\nindex ed27ccf..08117ca 100644\n...\n-       sprintf( buf, \"DedicatedScheduler!%s\", Name );\n-       ds_scheduler = strnewp( buf );\n\n+       sprintf( buf, \"DedicatedScheduler@%s\", Name );\n+       ds_name = strnewp( buf );\n...\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2011-Aug-09 11:01:31 by matt:</em> <br/>\n\nGreg, why did you make the setting of ATTR_SCHEDULER operate this way? It seems like only one loop, either in sortJobs or setScheduler, would be sufficient. There's a case where PU job {1.0, 1.1, 1.2} might have 1.1 removed, but neither loops appears to protect against that (I'm assuming it is invalid state to begin with). Can we reduce this code to a single loop that handles the error cases of when setting fails (likely to ignore anyway)?\n\n<p></p><hr/>\n<em>2011-Aug-15 09:17:57 by gthain:</em> <br/>\n\nFirst, note this is looping over the \"procs\", not the ranks, and there is almost never more then 2 procs per parallel job.\n\n<p></p><hr/>\n<em>2011-Aug-17 12:41:30 by matt:</em> <br/>\n\nOk, the algorithm may iterate more than is necessary, but does not perform expensive operations on each iteration anymore. Given that the wisdom as to why the algorithm is doubly cautious has been lost and no time to fully validate -- let's defer the n^2 -&gt; n for now.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=2397\" onclick=\"get_ticket_and_populate_wrapper('2397'); return false;\" title=\"n^2 algorithm in dedicated scheduler could be n\">#2397</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nn^2 algorithm in dedicated scheduler could be n</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-09 14:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26697\">[26697]</a></span>: Added 7.7.2 version history for NONDURABLE and Scheduler attribute expectation mismatch, see <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2367\" onclick=\"get_ticket_and_populate_wrapper('2367'); return false;\" title=\"performance issue - n^2 fsync()ing algorithm in dedicated scheduler\">#2367</a></span>  (By Matthew Farrellee )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-09 10:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26687\">[26687]</a></span>: Reconciled qmgmt's correct_scheduler with dedicated_scheduler's ds_name, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2367\" onclick=\"get_ticket_and_populate_wrapper('2367'); return false;\" title=\"performance issue - n^2 fsync()ing algorithm in dedicated scheduler\">#2367</a></span> The dedicated scheduler was setting ATTR_SCHEDULER to DedicatedScheduler@... while the sanity code in qmgmt's <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=InitJobQueue\" title=\"Init Job Queue\">InitJobQueue</a></span> was checking for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DedicatedScheduler\" title=\"Dedicated Scheduler\">DedicatedScheduler</a></span>!... Both now use @ as a separator.\u00a0[...]\n (By Matthew Farrellee )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Aug-09 10:49</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=26688\">[26688]</a></span>: Made DedicatedScheduler's <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SetAttributeString\" title=\"Set Attribute String\">SetAttributeString</a></span> of ATTR_SCHEDULER to be NONDURABLE, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2367\" onclick=\"get_ticket_and_populate_wrapper('2367'); return false;\" title=\"performance issue - n^2 fsync()ing algorithm in dedicated scheduler\">#2367</a></span> The setting of ATTR_SCHEDULER need not be durable as it is reset periodically if wrong. Making it DURABLE caused an fsync for every job in every parallel cluster.\u00a0[...]\n (By Matthew Farrellee )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2011-Aug-17 12:44", "status": "resolved", "created": "2011-Aug-09 10:29", "fixed_version": "2011-Aug-09 10:29", "broken_version": "v060700", "priority": "4", "subsystem": "Daemons", "assigned_to": "matt", "derived_from": "", "creator": "matt", "rust": "", "customer_group": "other", "visibility": "public", "notify": "gthain@cs.wisc.edu, dan@hep.wisc.edu, tstclair@redhat.com", "due_date": ""}