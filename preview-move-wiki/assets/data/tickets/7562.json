{"id": 7562, "title": "Ticket #7562: Python bindings should be able to read job log events from stdin", "description": "<blockquote>\nThe Python bindings provide a class (<a class=\"external\" href=\"https://htcondor.readthedocs.io/en/latest/apis/python-bindings/api/htcondor.html#htcondor.JobEventLog\">https://htcondor.readthedocs.io/en/latest/apis/python-bindings/api/htcondor.html#htcondor.JobEventLog</a>) that can read job events from a file on-disk. This is enforced by making the user pass a path to a file as a string, and is necessary for enabling pickling of this object to resume reading a file. Unfortunately, this means that you can't use this class to read from a stream (in particular stdin). This is a use case we'd like to enable for condor_watch_q (without having to pass everything from stdin through an actual file on disk).\n\n<p>After brief discussion with ToddM, it seems like there are two options: expose the underlying raw event scanning/parsing code, or expose a new <code>JobEventLogStream</code> object that can't be pickled but can read from a stream (Python file object would be ideal).\n\n</p><p>This would perhaps also involve renaming the existing class to <code>JobEventLogFile</code> so we can be explicit about which is which. We could easily add an aliased name in the Python wrapper to not break existing users.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "enhance", "last_change": "2020-Nov-09 12:23", "status": "new", "created": "2020-Mar-16 13:50", "fixed_version": "2020-Mar-16 13:50", "broken_version": "", "priority": "4", "subsystem": "PythonBinding", "assigned_to": "tlmiller", "derived_from": "", "creator": "karpel", "rust": "", "customer_group": "other", "visibility": "public", "notify": "karpel@wisc.edu, tlmiller@cs.wisc.edu", "due_date": ""}