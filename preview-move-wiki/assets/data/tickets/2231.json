{"id": 2231, "title": "Ticket #2231: negotiator overwhelmed with rejForSubmitterLimit rejections", "description": "<blockquote>\nMassive numbers of submissions rejected with rejForSubmitterLimit overwhelm the negotiator. In some cases, negotiation can be terminated after one rejection.</blockquote>", "remarks": "<blockquote>\n<em>2011-Jun-16 16:02:57 by eje:</em> <br/>\n\nThis check at the top of the outer loop should already be providing the desired halting condition, if it is working properly.\n\n<p>(unless the repro scenario involves non-integer submitter limits, where it keeps trying to fill the fractional remainder?)\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">\t\t// Handle the case if we are over the submitterLimit\n\t\tif( limitUsed &gt;= submitterLimit ) {\n\t\t\tif( ignore_schedd_limit ) {\n\t\t\t\tonly_consider_startd_rank = true;\n\t\t\t\tif( display_overlimit ) {\n\t\t\t\t\tdisplay_overlimit = false;\n\t\t\t\t\tdprintf(D_FULLDEBUG,\n\t\t\t\t\t\t\t\"    Over submitter resource limit (%f, used %f) ... \"\n\t\t\t\t\t\t\t\"only consider startd ranks\\n\", submitterLimit,limitUsed);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdprintf (D_ALWAYS,\n\t\t\t\t\t\t \"    Reached submitter resource limit: %f ... stopping\\n\", limitUsed);\n\t\t\t\tbreak;\t// get out of the infinite for loop &amp; stop negotiating\n\t\t\t}\n\t\t} else {\n\t\t\tonly_consider_startd_rank = false;\n\t\t}\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Jun-16 19:07:57 by eje:</em> <br/>\n\nRepro/test\n\n<p>Repro involves fractional slots on submitter limits.\n\n</p><p>For easier repro within a single job cluster, I set:\n</p><div class=\"verbatim\">\n<pre>NEGOTIATE_ALL_JOBS_IN_CLUSTER = TRUE\n</pre></div>\n\n\n<p>Start with this config:\n</p><div class=\"code\">\n<pre class=\"code\">CLAIM_WORKLIFE = 0\nNEGOTIATOR_CONSIDER_PREEMPTION = FALSE\nNEGOTIATOR_DEBUG = D_FULLDEBUG\n\nNEGOTIATE_ALL_JOBS_IN_CLUSTER = TRUE\nNEGOTIATOR_USE_SLOT_WEIGHTS = FALSE\n\nGROUP_QUOTA_MAX_ALLOCATION_ROUNDS = 1\n\nNEGOTIATOR_INTERVAL = 30\nSCHEDD_INTERVAL = 15\n\nNUM_CPUS = 20\n\nGROUP_NAMES = a\nGROUP_QUOTA_a = 5\n\nGROUP_ACCEPT_SURPLUS = FALSE\n</pre></div>\n\n\n<p>Using this submit file, which creates jobs for two submitters, forcing each to be given submitter limit of 2.5:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">universe = vanilla\ncmd = /bin/sleep\nargs = 60\nshould_transfer_files = if_needed\nwhen_to_transfer_output = on_exit\n+AccountingGroup=\"a.u2.user\"\nqueue 10\n+AccountingGroup=\"a.u1.user\"\nqueue 10\n</pre></div>\n\n\n<p>Before fix, we see lots of unproductive rejections for submitter limit.  Group \"a\" is allocated its limit of 5:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">$ tail -f NegotiatorLog | grep -e 'done negotiating' -e 'exceeded' -e 'Group a .*allocated=.*usage='\n06/16/11 16:55:19 group quotas: Group a  allocated= 0  usage= 0\n06/16/11 16:55:40       Rejected 1.12 a.u1.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.13 a.u1.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.14 a.u1.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.15 a.u1.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.16 a.u1.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.17 a.u1.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.18 a.u1.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.19 a.u1.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40     Got NO_MORE_JOBS;  done negotiating\n06/16/11 16:55:40       Rejected 1.2 a.u2.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.3 a.u2.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.4 a.u2.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.5 a.u2.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.6 a.u2.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.7 a.u2.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.8 a.u2.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40       Rejected 1.9 a.u2.user@localdomain &lt;192.168.1.2:42270&gt;: group quota exceeded\n06/16/11 16:55:40     Got NO_MORE_JOBS;  done negotiating\n06/16/11 16:55:40 group quotas: Group a  allocated= 5  usage= 5\n</pre></div>\n\n\n<p>After fix, we see that group \"a\" still gets its quota of 5, but with fewer unproductive submitter limit rejections:\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">$ tail -f NegotiatorLog | grep -e 'done negotiating' -e 'exceeded' -e 'Group a .*allocated=.*usage='\n06/16/11 16:52:39 group quotas: Group a  allocated= 0  usage= 0\n06/16/11 16:52:59       Rejected 1.12 a.u1.user@localdomain &lt;192.168.1.2:56962&gt;: group quota exceeded\n06/16/11 16:52:59     Hit submitter limit: done negotiating\n06/16/11 16:53:00       Rejected 1.2 a.u2.user@localdomain &lt;192.168.1.2:56962&gt;: group quota exceeded\n06/16/11 16:53:00     Hit submitter limit: done negotiating\n06/16/11 16:53:00 group quotas: Group a  allocated= 5  usage= 5\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Aug-01 15:10:58 by tannenba:</em> <br/>\n\nReviewed by gthain\n\n<p></p><hr/>\n<em>2012-Feb-10 09:23:41 by tannenba:</em> <br/>\n\nWhy do we keep negotiating with a submitter when they are over their limit if slot weights are being used?  A comment in the code patch should address this question. Recall that slot weights are on by default, so essentially this patch does absolutely nothing on 99% of all pools. Setting this ticket back to review status until someone can answer this question, thanks.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/372/trimexceeded.patch\">trimexceeded.patch</a>\n2116 bytes added by jrt on 2011-Jun-13 19:04:56 UTC.\n<br/>\npatch to bail out of negotiation when receiving rejForSubmitterLimit rejections<br/>\n</li><li><a href=\"../files/380/gt2231_trimexceeded.patch2\">gt2231_trimexceeded.patch2</a>\n1170 bytes added by eje on 2011-Jun-17 00:09:17 UTC.\n<br/>\nTweak on patch for increased compactness and without use of 'goto'\n<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Jun-28 09:39</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=22306\">[22306]</a></span>: === GT <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2231\" onclick=\"get_ticket_and_populate_wrapper('2231'); return false;\" title=\"negotiator overwhelmed with rejForSubmitterLimit rejections\">#2231</a></span> === patch created by jrt, reviewed by eje Fix: Massive numbers of submissions rejected with rejForSubmitterLimit overwhelm the negotiator. In some cases, negotiation can be terminated after one rejection.  (By Timothy St. Clair )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2012-Jul-11 10:22", "status": "resolved", "created": "2011-Jun-13 14:03", "fixed_version": "2011-Jun-13 14:03", "broken_version": "v070600", "priority": "2", "subsystem": "Daemons", "assigned_to": "gthain", "derived_from": "", "creator": "jrt", "rust": "", "customer_group": "other", "visibility": "public", "notify": "matt@cs.wisc.edu, tstclair@redhat.com, eje@redhat.com, dan@hep.wisc.edu", "due_date": ""}