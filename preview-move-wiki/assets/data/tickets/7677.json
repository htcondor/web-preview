{"id": 7677, "title": "Ticket #7677: Detect Singularity failure to launch container vs job failure", "description": "<blockquote>\nAs part of our effort to improve HTCondor's Singularity support so that it can manage container launches instead of glideinWms, we want HTCondor to distinguish between failure of a job running under Singularity vs a failure of Singularity to start a container.\n\n<p>As a reference, <a class=\"external\" href=\"https://github.com/opensciencegrid/osg-flock/blob/master/job-wrappers/user-job-wrapper.sh#L405-L425\">consider this glideinWMS code</a> - looks like their approach is to have the container drop a success-of-launch file before running the job, and if Singularity exits with a failure it will look if this file exists or not.\n\n</p><p>Upon detection of a Singularity failure, we want the ability to prevent future Singularity jobs from running (at least for a time, to prevent black holes).  glideinWMS simply sleeps for 20 mintes... perhaps a first-class HTCondor mechanism can do better.\n\n</p><p>We should have the same unified approach for Docker, Java, and VM universe.... in other words, how we handle failure of a runtime environment should be consistent from the point of view of the user / admin (not necessarily saying the code/implementation has to be unified, but that would be nice).</p></blockquote>", "remarks": "<blockquote>\n<em>2020-Jul-28 10:31:54 by pfc:</em> <br/>\n\nGreg suggests that Condor call the \"<a class=\"external\" href=\"https://sylabs.io/guides/3.2/user-guide/cli/singularity_test.html\">singularity test</a>\" command to validate a container on the execute machine before job execution, reporting if it fails.  (Maybe Condor should allow the user to specify in the submit file any custom exec options to be passed to the test command, and if there are none, should pass \"condor\" as the default exec option, to avoid running potentially heavyweight and inappropriate default tests a container may have defined?)\n\n<p></p><hr/>\n<em>2020-Jul-28 10:55:21 by pfc:</em> <br/>\n\nLIGO will talk to OSG (e.g., Edgar) about what sorts of singularity failures OSG sees and needs this to detect.\n\n<p></p><hr/>\n<em>2020-Sep-29 10:08:41 by pfc:</em> <br/>\n\nGreg says this should be done in the next few weeks.\n\n<p></p><hr/>\n<em>2020-Oct-20 10:41:24 by pfc:</em> <br/>\n\nThis depends on <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7801\" onclick=\"get_ticket_and_populate_wrapper('7801'); return false;\" title=\"Run singularity test before singularity job to check singularity works\">#7801</a></span>.\n\n<p></p><hr/>\n<em>2020-Oct-20 10:42:28 by pfc:</em> <br/>\n\nJosh wants to make sure we don't lose sight of the degenerate corner-case where an upstream container author has defined a Singularity test which runs for hours/days (e.g., for CI).\n\n<p></p><hr/>\n<em>2020-Nov-10 10:41:14 by gthain:</em> <br/>\n\nThis is implemented in <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=7801\" onclick=\"get_ticket_and_populate_wrapper('7801'); return false;\" title=\"Run singularity test before singularity job to check singularity works\">#7801</a></span>.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2020-Nov-10 10:41", "status": "abandoned", "created": "2020-Jun-09 10:48", "fixed_version": "2020-Jun-09 10:48", "broken_version": "", "priority": "2", "subsystem": "DaemonsExecNode", "assigned_to": "gthain", "derived_from": "", "creator": "tannenba", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "gthain@cs.wisc.edu tannenba@cs.wisc.edu jlwillis@caltech.edu emfajard@ucsd.edu BBockelman@morgridge.org marcom@fnal.gov", "due_date": ""}