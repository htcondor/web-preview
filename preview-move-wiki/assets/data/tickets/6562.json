{"id": 6562, "title": "Ticket #6562: python binding SecMan().ping() fails if private network defined", "description": "<blockquote>\nIf the python API <code>htcondor.Secman().ping()</code> method is used to ping an HTCondor daemon that specified a <code>PRIVATE_NETWORK_INTERFACE</code>, the ping() call throws a <code>RuntimeError</code> exception with the following message:\n\n<p></p><pre>   RuntimeError: No valid entry in command map hash table!\n</pre>\n\n<p>To reproduce, setup a personal condor configured something like so:\n\n</p><p></p><pre>   use role:personal\n   COLLECTOR.PRIVATE_NETWORK_INTERFACE = 10.140.83.20\n   COLLECTOR.PRIVATE_NETWORK_NAME = WhatEver\n</pre>\n\n<p>Then the following Python code will exhibit the problem:\n\n</p><p></p><pre>   import htcondor\n   coll = htcondor.Collector('localhost')\n   ad = coll.locate(htcondor.DaemonTypes.Collector)\n   print(htcondor.SecMan().ping(ad, 'READ'))\n</pre>\n\n<p>An interesting observation is the <code>condor_ping</code> command line tool will still work, however.</p></blockquote>", "remarks": "<blockquote>\n<em>2018-Feb-08 17:01:09 by tannenba:</em> <br/>\n\nNote that if you are specifically trying to ping an HTCondor Collector, until an upgrade to HTCondor Python bindings v8.6.10+ is done, a workaround would be to provide the ping() method a string with just an ip address and port (like <code>'&lt;10.4.0.0:9618&gt;'</code>) instead of a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span>.  Like so:\n\n<p></p><pre>   import htcondor\n   import socket\n   addr = socket.gethostbyname('hostname.with.my.collector.edu')\n   print( htcondor.SecMan().ping('&lt;{}:9618&gt;'.format(addr),'READ') )\n</pre>\n\n<p></p><hr/>\n<em>2018-Feb-08 17:06:01 by blin:</em> <br/>\n\nWhen you say that an upgrade to 8.6.10+ is required for it to work, is this server-side, client-side, or both?\n\n<p></p><hr/>\n<em>2018-Feb-08 17:11:39 by tannenba:</em> <br/>\n\nJust an upgrade of the client side (ie an upgrade of the htcondor PIP package) is required.\n\n<p></p><hr/>\n<em>2018-Feb-15 14:35:43 by zmiller:</em> <br/>\n\n<strong>CODE REVIEW</strong>: Looks good.\n\n<p></p><hr/>\n<em>2018-Mar-09 11:16:13 by tim:</em> <br/>\n\n<strong>DOC REVIEW:</strong> Looks good.</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Mar-09 08:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=54464\">[54464]</a></span>: Version history blurb for bug fix <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6562\" onclick=\"get_ticket_and_populate_wrapper('6562'); return false;\" title=\"python binding SecMan().ping() fails if private network defined\">#6562</a></span>  (By Todd Tannenbaum )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2018-Feb-08 17:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=54248\">[54248]</a></span>: Fix python binding SecMan().ping() call if private networks used. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6562\" onclick=\"get_ticket_and_populate_wrapper('6562'); return false;\" title=\"python binding SecMan().ping() fails if private network defined\">#6562</a></span> Also don't leak a file descriptor (plus RAM) on every call.  (By Todd Tannenbaum )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2018-Mar-09 11:16", "status": "resolved", "created": "2018-Feb-08 16:54", "fixed_version": "2018-Feb-08 16:54", "broken_version": "v080101", "priority": "2", "subsystem": "PythonBinding", "assigned_to": "tannenba", "derived_from": "#4882", "creator": "tannenba", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "blin@cs.wisc.edu", "due_date": ""}