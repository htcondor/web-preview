{"id": 974, "title": "Ticket #974: NMI Glue is a Pit of Despair", "description": "<blockquote>\nWhile testing my glue changes for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=715\" onclick=\"get_ticket_and_populate_wrapper('715'); return false;\" title=\"Make building clipped Condor very portable (NMI)\">#715</a></span>, I've run into an ever deepening\npool of suck.\n\n<p>The high level view of it is that apparently, years ago when the glue\n(specifically nmi_tools/ and nmi_glue/) was written, an assumption was\nmade that there would be only a single authoritative source for this glue,\nfor all branches, and that it would live at the end of the trunk. Our\nnightly builds assume it, the workspace build assumes it, even building\na certain tag or branch assumes it. Due to the happy coincidence that\nour glue scripts, and how they interact with our sources and tests,\nare identical across all of our branches at this time, our builds and\ntests work on a day to day basis.\n\n</p><p>This assumption has made it nearly impossible for one to test <strong>any</strong>\nchanges in a branch to the glue without propagating it all the way to\nthe master and thereby contaminating the nightly builds and whatnot with\nuntested code.\n\n</p><p>After moderate inspection of condor_nmi_submit, how our nightlies work,\nand so forth, I've come to the conclusion that there were initial design\nproblems which were never solved, punted on, and are now causing the pain.\n\n</p><p>Some design problems are:\n</p><ul>\n<li><div class=\"strike\">\n<strike> All of our branches have nmi_glue and nmi_tools, yet only the\norigin/master instance is actually used during BUILD and TEST runs.\nThis is especially apparent in the nightlies, no matter which tag you\nare building. The existence of those directories in each branch produced\nan implication that glue scripts are local to a branch and will only\naffect the building of that branch.  From a developer point of view,\nthe glue associated with the branch *should be* the glue used to\nmake and test that branch. </strike></div>\n Fixed. See <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1195\" onclick=\"get_ticket_and_populate_wrapper('1195'); return false;\" title=\"Break recursive dependency between nightly.pl and condor_nmi_submit\">#1195</a></span>\n\n<p></p></li><li>In workspace builds, it is somewhat unclear to me which glue actually\ngets used.  It appears to me that the glue used in the BUILD stage is\nthe one from the workspace, but the glue used in the TEST stage is the\none from origin/master.  From a developer's point of view, both instances\nof the glue <strong>should be</strong> from the workspace itself.\n\n<p></p></li><li>One cannot correctly test glue changes without contaminating all builds and tests for all branches including nightlies.\n\n<p></p></li><li><div class=\"strike\">\n<strike> In the nightlies, condor_nmi_submit is responsible for finding the nightly tags file and submitting the builds and tests. Since we don't have a condor_nmi_submit, we get one from origin/master and call that one. This means we use origin/master's glue for all branches built. From a developer's point of view, the nightly.pl script should parse the tags, checkout the correct version of nmi_tools and nmi_glue, and then invoke that with the right branch tags so the build and tests gets the right glue. </strike></div>\n Fixed. See <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1195\" onclick=\"get_ticket_and_populate_wrapper('1195'); return false;\" title=\"Break recursive dependency between nightly.pl and condor_nmi_submit\">#1195</a></span> / <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1397\" onclick=\"get_ticket_and_populate_wrapper('1397'); return false;\" title=\"How our nightly builds work\">#1397</a></span>.\n\n<p></p></li><li><div class=\"strike\">\n<strike> Even though there is one branch for the glue, the submit_info file is actually checked out from the individual branches in question in the nightlies and read by the condor_nmi_submit. This is crazy, as it means the format and meaning of that file must be identical across all branches because it is only read by one version of the glue! </strike></div>\n Made obselete by <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1195\" onclick=\"get_ticket_and_populate_wrapper('1195'); return false;\" title=\"Break recursive dependency between nightly.pl and condor_nmi_submit\">#1195</a></span> / <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1397\" onclick=\"get_ticket_and_populate_wrapper('1397'); return false;\" title=\"How our nightly builds work\">#1397</a></span>. The <code>SubmitInfo.pm</code> file now matches the <code>condor_nmi_submit</code> that uses it.\n\n<p></p></li><li>While doing work for <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=366\" onclick=\"get_ticket_and_populate_wrapper('366'); return false;\" title=\"Allow our ckpt tests to run against DMTCP\">#366</a></span>, I came across another problem. I was adding new targets to <code>condor_tests/Imakefile</code> and found that the NMI glue builds the tests in the test suite in a radically different manner than how a developer does it. Basically, the test glue builds a few named targets, then each test actually needing to be run is build independently. Since some of those tests rely on a new dependency which has to exist in the toplevel condor_tests/ directory, I'd have to add a new make invocation in the glue to ensure it exists. Make can't do it itself, because there are completely separate Makefiles in condor_tests/ condor_tests/gcc condor_tests/g77 condor_tests/gpp condor_tests/f90 that don't really know about each other.\n\n<p></p></li><li>I found that changing the glue in a certain manner, suppose altering the\nsyntax or presence of the <code>submit_info</code> file, causes the new glue to be unable\nto build previous incarnation or tags of Condor which predate the glue change. This is due to the head of the master trying to find what it think to be the correct files or state in older tags or branches. Basically, the NMI Glue not only expects to see an identical version of itself across all branches, but also across all time on those branches.\n\n<p></p></li><li><div class=\"strike\">\n<strike> The nightly.pl script, which fires off the nightly builds is only valid at origin/master. Worse than that, the nightly.pl script updates itself as it is running from cron, meaning if you make a change to it, the nightlies on the day you made the change won't see it, but the next nightlies will, unless you manually update the copy in ~cndrauto/condor on nmi-s006.</strike></div>\n See <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1195\" onclick=\"get_ticket_and_populate_wrapper('1195'); return false;\" title=\"Break recursive dependency between nightly.pl and condor_nmi_submit\">#1195</a></span> / <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1397\" onclick=\"get_ticket_and_populate_wrapper('1397'); return false;\" title=\"How our nightly builds work\">#1397</a></span> for now it works sanely.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1195\" onclick=\"get_ticket_and_populate_wrapper('1195'); return false;\" title=\"Break recursive dependency between nightly.pl and condor_nmi_submit\">#1195</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nBreak recursive dependency between nightly.pl and condor_nmi_submit</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2010-May-25 15:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/7489fc70096abe47af60e9627dc6298476ff9cc8\">[18262]</a></span>: Removed a dead code path which read in the old submit_info file and using it, wrote the NMI submit file. The new way that instead uses SubmitInfo.pm has been working a while. The two code paths existed at the same time in case we needed to switch back and we aren't so why keep dead code around. This\u00a0[...]\n (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-May-07 11:35</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/dff2ea9448725d8c81fd693f40c9af8a3c54adcc\">[17963]</a></span>: This checkin implements <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1195\" onclick=\"get_ticket_and_populate_wrapper('1195'); return false;\" title=\"Break recursive dependency between nightly.pl and condor_nmi_submit\">#1195</a></span>. The new script run_nightly_builds now reads the nightly tags file, checks out the correct nmi_tools associated with a nightly tag, and submits the build using that version of nmi_tools.\u00a0[...]\n (By Pete Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2010-Feb-09 10:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0b0d6a57205523cbedbd5e3737b9ac08bffbd427\">[17138]</a></span>: I found that when using the --nightly feature, the SubmitInfo.pm module wants to be loaded, as different branch versions, repeatedly. So, now when loading the module, I break the idempotency check perl does on already loaded modules so it'll reload it again. Once this happens, it'll stomp on old definitions\u00a0[...]\n (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Dec-02 15:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/8829a76d27331bf3d111f821edc6a3e827bde8b9\">[16476]</a></span>: This checkin makes it so that making the individual stduniv test programs will produce symlinks to the condor_tests/dmtcp-local directory so the tests have available the binaries and libraries for DMTCP.\u00a0[...]\n (By Peter Keller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Nov-19 16:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c590d0d986ab79388eb463d8df824676ba2e8804\">[16391]</a></span>: In vivo test of changed NMI glue for <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=715\" onclick=\"get_ticket_and_populate_wrapper('715'); return false;\" title=\"Make building clipped Condor very portable (NMI)\">#715</a></span>. Due to the nastiness detailed in <span class=\"ticket\"><a class=\"abandoned\" href=\"/tickets?ticket=974\" onclick=\"get_ticket_and_populate_wrapper('974'); return false;\" title=\"NMI Glue is a Pit of Despair\">#974</a></span>, I have to squash merge the V7_4-submit_info-branch into the master to test to see if the new glue changes I have made work for nightlies, continuous builds, and workspaces. I have done what testing I am able given the contraints\u00a0[...]\n (By Pete Keller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2013-May-30 10:05", "status": "abandoned", "created": "2009-Nov-18 11:47", "fixed_version": "2009-Nov-18 11:47", "broken_version": "v070000", "priority": "1", "subsystem": "Tests", "assigned_to": "", "derived_from": "#715", "creator": "psilord", "rust": "", "customer_group": "other", "visibility": "public", "notify": "psilord@cs.wisc.edu", "due_date": ""}