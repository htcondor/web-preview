{"id": 2500, "title": "Ticket #2500: condor Procd should exit when its communication pipes are deleted", "description": "<blockquote>\nIf the procd's named command pipe is unlinked (by an external program), the procd should notice and exit. It should be that periodically, I check the\nnamed_pipe and if it doesn't exist (or the inode is different from the one held by the fd of the unlinked named pipe) and if I find it gone, to exit.\n\n<p>There is some code related to this where the named pipe is touched every now and\nthen to prevent <strong>tmpwatch</strong> from deleting it.\n\n</p><p>I need to spend a few hours thinking about race conditions or attacks in relation\nto an attacker removing the named pipe and substituting another one with different permissions.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Sep-26 15:58:17 by matt:</em> <br/>\n\nHopefully useful thought - does the client side reopen the pipe for each use? If not a pipe may be deleted but still have a client attached. The re-try in the client is notoriously bad - there is none? - resulting in client process EXCEPT when procd communication fails.\n\n<p></p><hr/>\n<em>2011-Oct-03 10:51:09 by psilord:</em> <br/>\n\nI've inspected the code, implemented most of the fix, but I need to ensure some constraints are held true, namely that an entire communication from the client to the server completes in a certain loop in the codes. If this isn't true, then the code I wrote could cut an in progress communication between a client and the procd and I'm not sure that's a good idea yet.\n\n<p></p><hr/>\n<em>2011-Oct-04 15:47:15 by psilord:</em> <br/>\n\nOk, I wrote the solution and tested it. Seems to work well enough. I commented specifically in the portion of the code which uses the new code that this feature is <strong>not</strong> a security device.\n\n<p></p><hr/>\n<em>2011-Oct-04 15:48:41 by psilord:</em> <br/>\n\nAlso, it appears that an entire communication with a client happens atomically in relation to the server loop. This means no client should have the connection open when I'm performing the check.\n\n<p></p><hr/>\n<em>2011-Oct-04 16:04:13 by psilord:</em> <br/>\n\nCommitted and already documented.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-25 14:12</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27984\">[27984]</a></span>: revise 7.7.3 version history item about condor_procd bug fix ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2500\" onclick=\"get_ticket_and_populate_wrapper('2500'); return false;\" title=\"condor Procd should exit when its communication pipes are deleted\">#2500</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-04 15:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27604\">[27604]</a></span>: ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2500\" onclick=\"get_ticket_and_populate_wrapper('2500'); return false;\" title=\"condor Procd should exit when its communication pipes are deleted\">#2500</a></span> ===GT:Fixed=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2500\" onclick=\"get_ticket_and_populate_wrapper('2500'); return false;\" title=\"condor Procd should exit when its communication pipes are deleted\">#2500</a></span> ===VersionHistory:Complete=== This checkin adds a semantic to the named pipe reader which checks to ensure that the on disk named pipe's (whose path is in m_addr) inode matches the inode of the named pipe which had been originall opened. In normal cases, this should\u00a0[...]\n (By Peter Keller )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Oct-27 15:46", "status": "resolved", "created": "2011-Sep-26 13:37", "fixed_version": "2011-Sep-26 13:37", "broken_version": "v070000", "priority": "2", "subsystem": "Daemons", "assigned_to": "psilord", "derived_from": "", "creator": "psilord", "rust": "", "customer_group": "other", "visibility": "public", "notify": "psilord@cs.wisc.edu, bbockelm@cse.unl.edu", "due_date": "20111004"}