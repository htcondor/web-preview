{"id": 2393, "title": "Ticket #2393: Job attribute \"Arguments\" appears as \"Args\" for Negotiator", "description": "<blockquote>\nJob classad attribute \"Arguments\" is seen as such by the Startd. The Negotiator however receives this attribute under the title \"Args\".\n\n<p>Therefore, if policy decisions should be made on the Startd side based on \"Arguments\" the same expression also needs to be added for \"Args\" such that the Negotiator is able to handle it correctly.\n\n</p><p>Example:\n\n</p><p>Jobs with argument \"force\" should run immediately and preempt other jobs. This could lead to a RANK expression in the Startd of\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">RANK = (Arguments =?= \"force\")</pre></div>\n\n\n<p>However, this RANK will never be honored by the Negotiator as \"Arguments\" is undefined there. A workaround would be\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">RANK =  ( (Arguments =?= \"force\") || (Args =?= \"force\") )</pre></div>\n\n\n<p>To me this seems like either a consistency that should be documented or a bug.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Aug-16 22:19:46 by matt:</em> <br/>\n\nIs this an issue with what is passed to the Negotiator vs Startd or an issue with the fact that old-style arguments can still be used and live in the Args attribute?\n\n<p></p><div class=\"code\">\n<pre class=\"code\">$ grep ARGUMENTS src/condor_utils/condor_attributes.cpp\nconst char * const ATTR_JOB_ARGUMENTS1\t\t\t = \"Args\";\nconst char * const ATTR_JOB_ARGUMENTS2\t\t\t = \"Arguments\";\n</pre></div>\n</blockquote>", "derived_tickets": "", "attachments": "", "check_ins": "", "type": "defect", "last_change": "2012-Oct-17 13:19", "status": "new", "created": "2011-Aug-16 13:45", "fixed_version": "2011-Aug-16 13:45", "broken_version": "v070600", "priority": "4", "subsystem": "", "assigned_to": "", "derived_from": "", "creator": "cweiss", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}