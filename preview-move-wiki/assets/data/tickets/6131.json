{"id": 6131, "title": "Ticket #6131: Location of corrupted log is unclear", "description": "<blockquote>\nOne of our users encountered a corrupted job log due to disk filling up and found the following message in their <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=SchedLog\" title=\"Sched Log\">SchedLog</a></span>\n\n<p></p><div class=\"code\">\n<pre class=\"code\">02/07/17 10:55:49 WARNING: Encountered corrupt log record 95654 (byte offset 5046225)\n02/07/17 10:55:49     103 1354325.0 PeriodicRemove ( StageInFinish &gt; 0 ) 105\n02/07/17 10:55:49 Lines following corrupt log record 95654 (up to 3):\n02/07/17 10:55:49     103 1346101.0 RemoteWallClockTime 116668.000000\n02/07/17 10:55:49     104 1346101.0 WallClockCheckpoint\n02/07/17 10:55:49     104 1346101.0 ShadowBday\n02/07/17 10:55:49 ERROR \"Error: corrupt log record 95654 (byte offset 5046225) occurred inside closed transaction, recovery failed\" at line 1080 in file /builddir/build/BUILD/condor-8.4.8/src/condor_utils/classad_log.cpp\n02/07/17 10:55:49 Cron: Killing all jobs\n02/07/17 10:55:49 CronJobList: Deleting all jobs\n02/07/17 10:55:49 Cron: Killing all jobs\n02/07/17 10:55:49 CronJobList: Deleting all jobs\n</pre></div>\n\n\n<p>The location of the 'corrupted log\" was not specified, making it difficult to troubleshoot, and extending their downtime due to a non-functioning Schedd.</p></blockquote>", "remarks": "<blockquote>\n<em>2017-Feb-08 15:21:23 by tannenba:</em> <br/>\n\nEasy enough to improve the error message.\n\n<p>More concerning is the idea that the schedd tries to abort when write() says the disk is full, but Linux does not always propagate a full disk error (fancy optimistic file systems, etc).  The result is only partial records are written, the schedd keeps running, and \"appends\" another record.  To better handle this, we should consider:\n\n</p><p></p><ol>\n<li>the classad log and event log code could use the linux system call to pre-allocate (reserve) disk space for the log, say 32 MB at a time, and reserve another 32 MB when some low-water mark (5MB?) is reached.\n\n<p></p></li><li>the schedd, upon restart, could truncate the log at the spot of corruption.  in practice, this is what a sysadmin would end up doing 95% of the time anyhow, so we could save them the hassle.  I.e. recover from the corruption the best we can instead of simply refusing to start the schedd.\n</li></ol>\n\n<p></p><hr/>\n<em>2017-Feb-22 15:13:19 by tannenba:</em> <br/>\n\nSee <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6153\" onclick=\"get_ticket_and_populate_wrapper('6153'); return false;\" title=\"Fix corruption of job queue log when write fails\">#6153</a></span>, which hopefully fixed the primary culprit of the log getting corrupted in the first place.\n\n<p>And see <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=6154\" onclick=\"get_ticket_and_populate_wrapper('6154'); return false;\" title=\"Remove ClassAd log transaction backup file feature\">#6154</a></span>, which adds the filename to the error message as requested.\n\n</p><p>As such, I am abandoning this ticket.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2017-Feb-22 15:13", "status": "abandoned", "created": "2017-Feb-07 12:22", "fixed_version": "2017-Feb-07 12:22", "broken_version": "", "priority": "2", "subsystem": "DaemonsSubmitNode", "assigned_to": "", "derived_from": "#4555", "creator": "blin", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "blin@cs.wisc.edu", "due_date": ""}