{"id": 2536, "title": "Ticket #2536: make upper bound on time spent in Preempting/Vacate explicit", "description": "<blockquote>\nFor adding support for draining partitionable slots (<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2330\" onclick=\"get_ticket_and_populate_wrapper('2330'); return false;\" title=\"support pool defragmentation\">#2330</a></span>), it is desired to make the upper bound on time spent in <code>Preempting/Vacate</code> explicit.\n\n<p>Currently, the boolean KILL expression is used to terminate the <code>Preempting/Vacating</code> state.  This makes it awkward to compute how long it could take to drain a slot, because the upper bound on time, if any, is embedded in the boolean expression.  Also, there is no standard way for the job to express its requirements or preferences.\n\n</p><p>The following is proposed:\n\n</p><p></p><ul>\n<li>Add <code>MachineMaxVacateTime</code>: this is the maximum time in seconds that the machine will wait before escalating from a graceful shutdown of the job to a fast shutdown.  This is evaluated when the job starts.  This configuration setting is required.  It defaults to 10 minutes, like the default for KILL used to be.\n\n<p></p></li><li>In addition, the timing of the beginning of eviction will be changed.  Previously, eviction was initiated at the end of the promised <code>MaxJobRetirementTime</code>.  Now, if there is sufficient retirement time left, the goal is to begin evicting the job before the end of retirement so that if the job uses the full eviction time, it will finish by the end of retirement.  If there is not sufficient retirement time left, eviction will be initiated without delay.\n\n<p></p></li><li>Add <code>JobMaxVacateTime</code>: this is an optional expression supplied by the job.  If it yields a number smaller than <code>MachineMaxVacateTime</code>, the job's value is used in place of the machine's.  Alternatively, if there is sufficient retirement time to accommodate it, <code>JobMaxVacateTime</code> may increase the effective vacate time so that eviction is initiated earlier during retirement than it would have otherwise been.  <code>JobMaxVacateTime</code> deprecates <code>KillSigTimeout</code>.\n\n<p></p></li><li>WANT_VACATE will still work as it does today.  This means that even if <code>MachineMaxVacateTime</code> is non-zero, if WANT_VACATE evaluates to false when the job is being evicted, the graceful shutdown stage will be skipped.\n\n<p></p></li><li>KILL will still work as it does today, except that it cannot be used to grant more time than offered by <code>MachineMaxVacateTime</code>.  Normally, KILL should just be set to <code>false</code>, and <code>MachineMaxVacateTime</code> should be used to control how long to wait.  However, in unusual cases, KILL could be used to abort the graceful shutdown of a job.  The new default will be <code>false</code>.\n\n<p></p></li><li>In addition, a change to the job attributes <code>RmKillSig</code> and <code>KillSig</code> is proposed.  Currently, in unix for vanilla jobs, the fast shutdown mode of the starter will send <code>RmKillSig</code> if it is defined, and if not, falling back to <code>KillSig</code>, and if that is not defined, falling back to SIGKILL (see <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=1198\" onclick=\"get_ticket_and_populate_wrapper('1198'); return false;\" title=\"remove_kill_sig and kill_sig not used by condor_rm in vanilla universe\">#1198</a></span>).  This means it is possible for a job to ignore the fast shutdown signal, so the starter has some logic to escalate to SIGKILL if a custom signal was defined.  One issue with this implementation is that the starter doesn't really know that the job is being <em>removed</em>; it only knows that fast shutdown is ensuing, so the semantics of <code>RmKillSig</code> and <code>KillSig</code> are a bit muddy.  Another issue is that the signal escalation seems to duplicate functionality of graceful shutdown mode, so there is added complexity that may not really be necessary.  Another issue is that the feature is tied to unix and to vanilla jobs.  What if one wants graceful removal of windows jobs?  We are still gathering requirements to find out what exactly is needed.  Based on the feedback we get, we plan to select from one of the following options.  [We have not received any indication that the second option is needed, so we have implemented just the first option.  The second option can be added later if needed.]\n\n<p></p><ol>\n<li>[DONE] Make fast shutdown of the job always use a hard kill.  When requested by the user, have the shadow initiate a graceful shutdown of the job rather than a fast one.  For condor_rm, the user could request this behavior by putting <span class=\"quote\">WantGracefulRemoval=True</span> in the job ad.  This is platform and job universe independent.  This is the preferred option unless users need the greater flexibility provided by the second option.\n\n<p></p></li><li>[NOT DONE] Everything as in the first option but additionally, when the shadow requests graceful shutdown of the job, it specifies a reason.  The reason is used to select a custom kill signal, which may be specific to the cause of the shutdown: job removal, hold, condor_vacate, condor_vacate_job, PREEMPT, and so on.</li></ol>\n</li></ul>\n</blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3470\" onclick=\"get_ticket_and_populate_wrapper('3470'); return false;\" title=\"Allow old signal escalation semantics and to use remove_killI_sig\">#3470</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nAllow old signal escalation semantics and to use remove_killI_sig</td></tr>\n</tbody></table>", "attachments": "", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-27 09:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=28006\">[28006]</a></span>: lots of little edits to try to make descriptions of the new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MachineMaxVacateTime\" title=\"Machine Max Vacate Time\">MachineMaxVacateTime</a></span>, <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobMaxVacateTime\" title=\"Job Max Vacate Time\">JobMaxVacateTime</a></span>, want_graceful_removal, and friends even more clear. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2536\" onclick=\"get_ticket_and_populate_wrapper('2536'); return false;\" title=\"make upper bound on time spent in Preempting/Vacate explicit\">#2536</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-17 19:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27872\">[27872]</a></span>: Documented <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MachineMaxVacateTime\" title=\"Machine Max Vacate Time\">MachineMaxVacateTime</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobMaxVacateTime\" title=\"Job Max Vacate Time\">JobMaxVacateTime</a></span>. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2536\" onclick=\"get_ticket_and_populate_wrapper('2536'); return false;\" title=\"make upper bound on time spent in Preempting/Vacate explicit\">#2536</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-17 19:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27873\">[27873]</a></span>: Documented want_graceful_removal. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2536\" onclick=\"get_ticket_and_populate_wrapper('2536'); return false;\" title=\"make upper bound on time spent in Preempting/Vacate explicit\">#2536</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Oct-17 19:00</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=27871\">[27871]</a></span>: Added <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MachineMaxVacateTime\" title=\"Machine Max Vacate Time\">MachineMaxVacateTime</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobMaxVacateTime\" title=\"Job Max Vacate Time\">JobMaxVacateTime</a></span> and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=WantGracefulRemoval\" title=\"Want Graceful Removal\">WantGracefulRemoval</a></span>. <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2536\" onclick=\"get_ticket_and_populate_wrapper('2536'); return false;\" title=\"make upper bound on time spent in Preempting/Vacate explicit\">#2536</a></span> (parent ticket <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2330\" onclick=\"get_ticket_and_populate_wrapper('2330'); return false;\" title=\"support pool defragmentation\">#2330</a></span>) \u00a0[...]\n (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2011-Oct-17 19:03", "status": "resolved", "created": "2011-Oct-10 15:46", "fixed_version": "2011-Oct-10 15:46", "broken_version": "v070703", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "#2330", "creator": "danb", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "tstclair@redhat.com", "due_date": "20111014"}