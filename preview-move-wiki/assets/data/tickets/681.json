{"id": 681, "title": "Ticket #681: DaemonCore::Create_Process() has memory problems", "description": "<blockquote>\nJust ran valgrind on DAGMan (this is on i386_rhel5).  Any DAG that has a PRE script (and probably a POST script, too) generates the following error:\n\n<p></p><div class=\"verbatim\">\n<pre>==17558== Syscall param clone(parent_tidptr) contains uninitialised byte(s)\n==17558==    at 0x973418: clone (in /lib/libc-2.5.so)\n==17558==    by 0x8159386: DaemonCore::Create_Process(char const*, ArgList const&amp;, priv_state, int, int, Env const*, char const*, FamilyInfo*, Stream**, int*, int*, int, __sigset_t*, int, unsigned*, int*) (daemon_core.cpp:7526)\n==17558==    by 0x813D53D: Script::BackgroundRun(int) (script.cpp:106)\n==17558==    by 0x813DA0C: ScriptQ::Run(Script*) (scriptQ.cpp:68)\n==17558==    by 0x8128601: Dag::StartNode(Job*, bool) (dag.cpp:1163)\n==17558==    by 0x812F0F8: Dag::Bootstrap(bool) (dag.cpp:279)\n==17558==    by 0x81244C0: main_init(int, char**) (dagman_main.cpp:895)\n==17558==    by 0x816C0E1: main (daemon_core_main.cpp:2207)\n==17558==\n==17558== Syscall param clone(child_tidptr) contains uninitialised byte(s)\n==17558==    at 0x973418: clone (in /lib/libc-2.5.so)\n==17558==    by 0x8159386: DaemonCore::Create_Process(char const*, ArgList const&amp;, priv_state, int, int, Env const*, char const*, FamilyInfo*, Stream**, int*, int*, int, __sigset_t*, int, unsigned*, int*) (daemon_core.cpp:7526)\n==17558==    by 0x813D53D: Script::BackgroundRun(int) (script.cpp:106)\n==17558==    by 0x813DA0C: ScriptQ::Run(Script*) (scriptQ.cpp:68)\n==17558==    by 0x8128601: Dag::StartNode(Job*, bool) (dag.cpp:1163)\n==17558==    by 0x812F0F8: Dag::Bootstrap(bool) (dag.cpp:279)\n==17558==    by 0x81244C0: main_init(int, char**) (dagman_main.cpp:895)\n==17558==    by 0x816C0E1: main (daemon_core_main.cpp:2207)\n==17805==\n==17805== Jump to the invalid address stated on the next line\n==17805==    at 0x0: ???\n==17805==  Address 0x0 is not stack'd, malloc'd or (recently) free'd\n==17805==\n==17805== Process terminating with default action of signal 11 (SIGSEGV)\n==17805==  Bad permissions for mapped region at address 0x0\n==17805==    at 0x0: ???\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2009-Sep-23 17:11:56 by tannenba:</em> <br/>\n\nvalgrind and the clone() system call do not get along.  when running valgrind, configure Condor to use fork() instead of clone().  in fact, Condor will now automatically detect if it is running under valgrind and use fork().</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2009-Dec-26 21:33", "status": "abandoned", "created": "2009-Aug-20 11:22", "fixed_version": "2009-Aug-20 11:22", "broken_version": "v070302", "priority": "2", "subsystem": "Daemons", "assigned_to": "", "derived_from": "", "creator": "wenger", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}