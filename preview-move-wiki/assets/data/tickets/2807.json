{"id": 2807, "title": "Ticket #2807: Have DAGMan use a single node job user log file", "description": "<blockquote>\nWe could avoid all of our problems with file descriptor throttles/macros not allowed in log file names/etc by changing the schedd to allow a job to have more than one user log file.  So the use could specify whatever log file they wanted in their submit file, but DAGMan wouldn't pay any attention to that file.  It would force the job to also log to the default node job log file, and just read that file.\n\n<p>That way, DAGMan would only need to read a single log file, and we could solve a bunch of problems at one shot.  This would also avoid \"polluting\" the per-job user logs with POST SCRIPT TERMINATED events.\n\n</p><p>Note that we should probably have a configuration macro to turn on the old log file mode, in case someone needed to use a newer DAGMan with an older schedd.\n\n</p><p>See also <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2428\" onclick=\"get_ticket_and_populate_wrapper('2428'); return false;\" title=\"allow macros in dagman log files to assist templating\">#2428</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2759\" onclick=\"get_ticket_and_populate_wrapper('2759'); return false;\" title=\"Multi-log reading code is very inefficient on very wide DAGs\">#2759</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2772\" onclick=\"get_ticket_and_populate_wrapper('2772'); return false;\" title=\"Macro in node job log file name should be fatal error\">#2772</a></span>, <span class=\"ticket\"><a class=\"new\" href=\"/tickets?ticket=445\" onclick=\"get_ticket_and_populate_wrapper('445'); return false;\" title=\"Gracefully handle two DAGs with identical node names sharing user log\">#445</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=831\" onclick=\"get_ticket_and_populate_wrapper('831'); return false;\" title=\"DAGMan can't handle macros in submit file\">#831</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=965\" onclick=\"get_ticket_and_populate_wrapper('965'); return false;\" title=\"Re-try if write of POST script terminated event fails\">#965</a></span>, <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=1428\" onclick=\"get_ticket_and_populate_wrapper('1428'); return false;\" title=\"Have a DAGMan option to force all jobs to use default log file\">#1428</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2053\" onclick=\"get_ticket_and_populate_wrapper('2053'); return false;\" title=\"Regression test ticket for dagman fd throttle\">#2053</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2645\" onclick=\"get_ticket_and_populate_wrapper('2645'); return false;\" title=\"Maintain DAGMan state in a better way\">#2645</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2702\" onclick=\"get_ticket_and_populate_wrapper('2702'); return false;\" title=\"Document DAGMan file descriptor issues\">#2702</a></span>, <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=659\" onclick=\"get_ticket_and_populate_wrapper('659'); return false;\" title=\"Add a log reader file descriptor throttle to DAGMan\">#659</a></span>.\n\n</p><p>This work is on <code>V7_9-gittrac_2807-branch</code>\n\n</p><p></p><ul>\n<li>[done] Added DAGManNodesLog attribute; schedd, shadow, and submit use this attribute to name the default node log.\n</li><li>[done] Added <code>dagman_log</code> to submit file\n</li><li>[done] DAGman uses default node log to read events\n</li><li>[done] Added configuration option to enable old behavior of only one log per job.\n</li><li>[done] Add a mask to attenuate the volume of events written to the DAGMan log.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2012-Feb-07 15:12:48 by nwp:</em> <br/>\n\nDoes this also solve <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=659\" onclick=\"get_ticket_and_populate_wrapper('659'); return false;\" title=\"Add a log reader file descriptor throttle to DAGMan\">#659</a></span>, avoiding the need to have an fd throttle?\n\n<p></p><hr/>\n<em>2012-Feb-07 15:23:29 by wenger:</em> <br/>\n\nYeah, <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=659\" onclick=\"get_ticket_and_populate_wrapper('659'); return false;\" title=\"Add a log reader file descriptor throttle to DAGMan\">#659</a></span> should be on the list, too.\n\n<p></p><hr/>\n<em>2012-Feb-08 22:23:24 by nwp:</em> <br/>\n\nToddT mentioned today that DAGman should just write out its own log.  So this would mean thinking of the userlog as read-only w.r.t. DAGman.  It seems this would be a clean way of thinking about it.\n\n<p></p><hr/>\n<em>2012-Feb-10 13:47:35 by wenger:</em> <br/>\n\nIdeas as a result of today's LIGO phone call:\n<ul>\n<li>Make sure things will work with a single log bigger than 2GB.\n</li><li>Maybe have the schedd write a special \"workflow log\" that would have only the subset of events that DAGMan cares about (e.g., no image size changed, etc.).\n</li></ul>\n\n<p></p><hr/>\n<em>2012-Feb-10 14:03:49 by wenger:</em> <br/>\n\nHmm -- we could do an initial implementation (for simplicity's sake) where the \"workflow log\" contains all of the normal events.  Then reducing the number of events could be an optimization, as long as we can tolerate the log file getting bigger than 2GB.\n\n<p></p><hr/>\n<em>2012-Apr-06 14:13:23 by wenger:</em> <br/>\n\nIn today's LIGO phone conference, the file size issue came up again.  Todd T suggested having the schedd write a special file like the jobstate log that just has each job's current state.  I have a few issues with that, though:\n\n<p></p><ul>\n<li>The schedd would probably have to we-write the entire file each time something changes.\n</li><li>DAGMan would probably have to re-read the entire file each time.\n</li><li>What if there were a couple of state transitions in really quick succession, and DAGMan missed one of them?\n</li></ul>\n\n<p>Because of that, I prefer the idea of writing a \"normal\" log file, except omitting events that DAGMan doesn't care about.\n\n</p><p></p><hr/>\n<em>2012-Apr-07 13:59:52 by nwp:</em> <br/>\n\nMake the Userlog be a <strong>list</strong> of files.  The idea is that the schedd can write events to each file.  There would be a logfile from the job, in which the user could use macros. DAGman would append a logfile to the list for its own purposes.\n\n<p></p><hr/>\n<em>2012-Apr-07 14:03:44 by nwp:</em> <br/>\n\nIt seems like the Userlog should be read-only from DAGman perspective.  The jobstate log could be sequential; there is no reason to rewrite it each time.  The log would only be used for recovery/rescue to update DAGman's internal state.\n\n<p></p><hr/>\n<em>2012-Apr-30 16:18:03 by nwp:</em> <br/>\n\nIt seems like something happens under load here.  A DAG with 5 jobs succeeds; a DAG with 50 jobs fails with my current approach.\n\n<p></p><hr/>\n<em>2012-Apr-30 16:25:42 by wenger:</em> <br/>\n\nAs far as the log being read-only for DAGMan -- we have to write the POST script terminated events somehow, so unless DAGMan somehow tells the schedd to write them, DAGMan has to be able to write to the log.\n\n<p></p><hr/>\n<em>2012-May-02 10:05:16 by nwp:</em> <br/>\n\nWhat happens when one job uses an XML log and another job uses a plain-text log? A: a big problem\n\n<p></p><hr/>\n<em>2012-May-02 10:20:41 by wenger:</em> <br/>\n\nI think the special DAGMan log should just always be plain text.\n\n<p></p><hr/>\n<em>2012-May-02 10:34:38 by nwp:</em> <br/>\n\nThat is the way I implemented it now.  But the NMI tests were hanging because a couple of the logs were in XML format and DAGman expected plain text format, so it never \"saw\" the events, causing it to loop endlessly.\n\n<p></p><hr/>\n<em>2012-May-02 12:17:41 by wenger:</em> <br/>\n\nHmm -- I don't understand that.  The log file reading code individually detects plain text or XML for every log file.  So unless plain text and XML are mixed in a single file, I don't see how this would be goofing up the event reading.\n\n<p></p><hr/>\n<em>2012-May-02 12:28:32 by wenger:</em> <br/>\n\nAh, it might be the POST script terminated events that are goofing you up.  When DAGMan writes that event, I think it looks at the job's submit file to decide whether or not to write an XML log.  So if DAGMan is writing to the \"special\" log, which is all plain text, but the submit file specifies an XML log, DAGMan might mess things up by writing an XML POST script terminated event into a plain text log.  So the thing to do, if this is the problem, is to just change the POST script terminated event-writing code to always write a plain text event, no matter what type of log the submit file specifies.\n\n<p></p><hr/>\n<em>2012-May-02 13:59:01 by nwp:</em> <br/>\n\n\"So unless plain text and XML are mixed in a single file\" -- this is exactly what was happening in the job_dagman_recovery_event_check test.\n\n<p></p><hr/>\n<em>2012-May-04 09:17:35 by nwp:</em> <br/>\n\nThe code I have below definitely breaks backward compatibility.  I will need to add back some of the old code to use a configuration option to get this back.\n\n<p></p><hr/>\n<em>2012-May-05 16:52:48 by nwp:</em> <br/>\n\nI restored backward compatibility and added a test for a new configuration option.\n\n<p></p><hr/>\n<em>2012-May-07 12:28:50 by wenger:</em> <br/>\n\nOkay, I'll really try to get this reviewed this week.  It probably won't be until at least Wednesday, though.\n\n<p>Also, it might be a good idea to have someone else review the schedd changes -- maybe Dan B?\n\n</p><p></p><hr/>\n<em>2012-Jun-29 09:20:33 by nwp:</em> <br/>\n\nBatlab tests caught that we <strong>must</strong> watch for hold events.  See <a class=\"external\" href=\"http://submit-2.batlab.org/results/run-details.php?runid=49226\">Batlab run 49226</a></blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3111\" onclick=\"get_ticket_and_populate_wrapper('3111'); return false;\" title=\"DAGMan log events do not get written in local universe\">#3111</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nDAGMan log events do not get written in local universe</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3311\" onclick=\"get_ticket_and_populate_wrapper('3311'); return false;\" title=\"DAGManNodesMask is not working correctly\">#3311</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nDAGManNodesMask is not working correctly</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3351\" onclick=\"get_ticket_and_populate_wrapper('3351'); return false;\" title=\"Create DAGManNodesMask\">#3351</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCreate DAGManNodesMask</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3352\" onclick=\"get_ticket_and_populate_wrapper('3352'); return false;\" title=\"Add -dont_use_default_node_log flag to condor_submit_dag\">#3352</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nAdd -dont_use_default_node_log flag to condor_submit_dag</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=3636\" onclick=\"get_ticket_and_populate_wrapper('3636'); return false;\" title=\"Do not hold DAGMan jobs on an upgrade from HTCondor version 7.8 -&gt; 8.0\">#3636</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nDo not hold DAGMan jobs on an upgrade from HTCondor version 7.8 -&gt; 8.0</td></tr>\n</tbody></table>", "attachments": "<blockquote>\n<ul>\n<li><a href=\"attach_get/583/DagManEventLogList+Design+Doc.doc\">DagManEventLogList Design Doc.doc</a>\n27648 bytes added by nwp on 2012-Jun-25 18:20:01 UTC.\n<br/>\nDesign document for dagman logging enhancements<br/>\n</li></ul>\n</blockquote>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jul-12 12:04</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32747\">[32747]</a></span>: edits of version history items and defn of knob DAGMAN_ALWAYS_USE_NODE_LOG ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2428\" onclick=\"get_ticket_and_populate_wrapper('2428'); return false;\" title=\"allow macros in dagman log files to assist templating\">#2428</a></span> ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-21 16:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32452\">[32452]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=31903\">[31903]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31904\">[31904]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31905\">[31905]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31906\">[31906]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31907\">[31907]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31908\">[31908]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31909\">[31909]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31914\">[31914]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31929\">[31929]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31930\">[31930]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31931\">[31931]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31936\">[31936]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=31948\">[31948]</a></span>, <span class=\"chng\"><a href=\"chngview?cn=32445\">[32445]</a></span>, Merge: DAGMan uses a single event log, helping with scalability and allowing for templating <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span> Conflicts: doc/version-history/7-9.history.tex  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-Jun-21 09:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=32445\">[32445]</a></span>: Fix ups based on feedback <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span> This implements suggestions based on design documentation review Remove capability to have a vector of arbitrary length fed to the schedd; that is a recipe for a DoS. Add the \"dagman_log\" field; old versions of the schedd will ignore it and thus it will only affect the\u00a0[...]\n (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-08 11:40</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31948\">[31948]</a></span>: Make splitting more idiomatic and secure It was a terrible idea to tie the internal state of this helper class to that of a variable with external state. Also, write fewer lines of code by using the standard library. ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-07 14:01</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31936\">[31936]</a></span>: Filter check on macros in log file This fixes the following use case. The submit file is executable = /bin/echo mydir = bob initialdir = $(mydir) arguments = $(cluster) output = 0.$(cluster).out log = 0.$(cluster).log error = 0.$(cluster).err universe = vanilla should_transfer_files = yes when_to_transfer_output\u00a0[...]\n (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-05 14:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31931\">[31931]</a></span>: Test for DAGMAN_ALWAYS_USE_NODE_LOG = False ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-05 13:48</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31930\">[31930]</a></span>: Edit version history and manual Documented the addition of the DAGMAN_ALWAYS_USE_NODE_LOG configuration variable. ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span> ===VersionHistory===  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-05 10:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31929\">[31929]</a></span>: Restore DAGman code for backward compatibility ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-03 10:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31914\">[31914]</a></span>: Merged <span class=\"chng\"><a href=\"chngview?cn=31913\">[31913]</a></span>, Merge remote-tracking branch 'origin/master' into gittrac-2807 <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span> (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-02 22:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31902\">[31902]</a></span>: Remove XML diagnosis code used only by DAGman ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-02 22:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31903\">[31903]</a></span>: Introduce a helper class to split <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=UserLog\" title=\"User Log\">UserLog</a></span> lists ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-02 22:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31904\">[31904]</a></span>: Let submit use recursive macros ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span> This has been suggested a lot. This is a partial solution to <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=406\" onclick=\"get_ticket_and_populate_wrapper('406'); return false;\" title=\"Recursive $(macro) expansion causes condor_submit to hang\">#406</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/tickets?ticket=2428\" onclick=\"get_ticket_and_populate_wrapper('2428'); return false;\" title=\"allow macros in dagman log files to assist templating\">#2428</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-02 22:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31905\">[31905]</a></span>: Make schedd understand new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=UserLog\" title=\"User Log\">UserLog</a></span> format This is compatible with the old Userlog format, unless ';' is used as a separator. There is probably some system that I don't know about uses semicolons as a regular part of the filename\u00a0[...]\n (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-02 22:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31906\">[31906]</a></span>: Make shadow understand new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=UserLog\" title=\"User Log\">UserLog</a></span> format This is compatible with the old Userlog format, unless ';' is used as a separator. There is probably some system that I don't know about uses semicolons as a regular part of the filename\u00a0[...]\n (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-02 22:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31907\">[31907]</a></span>: Use new macro capability in DAGman DAGman now requests the schedd and shadow to write each event to the default log, i.e., &lt;DAG file&gt;.nodes.log, along with whatever log is specified by the user.\u00a0[...]\n (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-02 22:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31908\">[31908]</a></span>: Fix tests affected by DAGman userlog changes ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span>  (By Nathan W. Panike )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2012-May-02 22:18</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"chngview?cn=31909\">[31909]</a></span>: Document DAGman userlog changes in manual And in the version history. ===GT=== <span class=\"ticket\"><a class=\"defer\" href=\"/tickets?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span> ===VersionHistory===  (By Nathan W. Panike )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2012-Nov-30 09:03", "status": "defer", "created": "2012-Feb-06 13:42", "fixed_version": "2012-Feb-06 13:42", "broken_version": "v070705", "priority": "5", "subsystem": "Dag", "assigned_to": "nwp", "derived_from": "#2810", "creator": "wenger", "rust": "", "customer_group": "ligo", "visibility": "public", "notify": "wenger@cs.wisc.edu, tannenba@cs.wisc.edu,pcouvare@caltech.edu", "due_date": ""}