This file is for keeping track of the items that have been completed
in MW or items that were once on the TODO list, but upon further
discussion, were never (and are not going to be) implemented.

It was started a ways after the TODO list was started, so this only
includes additions since metaNEOS III.


MWCheckpoint
------------

4) Allow for an option to store multiple checkpoints?

   I'm not sure that we need this.  Perhaps we should try to get some
   feedback from other users.

(MIKE): Kinda doubtful here, too.

5) Store the checkpoints on the condor checkpoint server?

   Do we need this level of sophistication?  Probably only if we start 
   storing multiple checkpoints, IMO.

(MIKE): I think it's unnecessary, unless checkpoints get out of hand...



MWHeterogeneous
---------------

1) MW should allow for running multiple OS jobs.

   This will require a fix to the condor schedd or something.
   Also, the issue of how to spawn the correct executable will need to 
   be conquered.  Perhaps a good first step would be to make the
   condor class ad information available to MW and the underlying
   application. 

   Mike got it working.  YAHOO!


MWHostAdd
---------
1) MW should definitely ask for more than one host at the beginning --
   it takes too long to build up to a decent number of hosts

   Mike is working on this one.  Once we have it in place, we can
   allow the user to request a "target" number of hosts either at the
   beginning (in pvm_submit) or at run time, and MW should handle
   everything behind the scense for you.  Note -- you cannot decrease
   the number of hosts once you make a request.

   Mike got it working.  We love Mike!


JeffMWQuestions
---------------

1) I know that the idea of "stopping" a task was pretty much poo-pooed 
   at the last meeting, but I was perusing the PVM3.4 intro talk at 
   http://www.epm.ornl.gov/pvm/EuroPVM97/
   and happened upon the "message handler" capacbility that is being
   add in PVM3.4

   Will the "message handler" capabilities of PVM3.4 allow for us to
   put some sort of "active message" protocol into MW.  I this
   something that we would want to do -- or do you think that we should
   stick to PVM3.3 compliant code for the time being?

(MIKE): I read this just the other day.  Basically, PVM's "active message"
concept is basically what we're doing already - when a certain message
comes with a certain tag, call a given function.  I do the same thing
in that big switch statement in the master_mainloop.  I don't think
it'll give us anything that we don't already have...which is to say, 
it won't work any better than what we've got.


MWTaskList
----------
1) Implement JP's branch and bound application using new features as a 
   "water test" of whether or not they really all work.

   QAP/JP's code seem to indicate that it actually works!
   I wouldn't bet the farm on it.  MW/FATCOP will probably push the
   envelope a bit more.

2) There are issues (perhaps to hash out with Qun and Michael) about
   where to rank and restart "suspended" tasks.   Also, perhaps tasks
   that "go away" should be placed in their proper place on the list
   (based on the current addition mode) instead of just putting them
   at the top. 

(MIKE): See the new set_suspension_policy(), etc.

MWMiscellaneous
---------------
1) There should be return codes from the virtual functions, so that MW 
   is able to exit nicely.  (And call a user defined exit function)
   before quitting.

   Jeff did a rudimentary implementation of this -- but things
   may need to be refined (other return values and appropriate
   actions taken) over time.		

2) Set "you're the boss" messages to a worse MWprintf level (85).

