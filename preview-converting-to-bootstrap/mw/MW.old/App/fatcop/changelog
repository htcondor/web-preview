12/13/99:
-- Adding a ReducedCostFixing() function in the worker (just looks
   cleaner)

-- Fixed a definite bug

   When generating cuts, you have to use originalformulation, not
   the working formulation, or else the cuts you generate are only
   locally valid.

-- Cleaned up a LOT of spurious options and the option file is much
   more well commented

-- Removed all "driver" options from the tasks.  Now the "strategies"
   that we wish to implement are not part of the task, but kept at the
   driver and passed when the task is to start

  (This had a few effects -- the task class was rewritten, for example)

-- Added timers for branching, cut generation, and heuristics.

-- Also strategies for turning on and off cut generation and and
   heuristics based on success ratios and times.
													     
												     -- We now never delete the cuts

												     -- Fixed a bug having to do with when cut generation is done.
													if objective function was negative, it always thought that cuts had
												   tailed off.

-- Added counters to the preprocessing code so that it returned the number
														      of bound changes made.  Only "reload" LP if necessary.

-- Load basis after doing node preprocessing







12/14/99:

1. FATCOP_worker.cc

	only if coeffiecients are modified, does the program
        reload the lp.  Otherwise if only bounds are modified,
        just set bounds.

	in LoadBoundsToLPSolver(), change formulaion to originalformulation

	after node preprocessing, do lpsolver->LPSolveDual if lpsolver has
	been changed.  Add iteration counts to numLPPivots.
	
	change ReducedCostFixing() interface to return int

2. fatcop.opt
      
	Add nodepreprocessing option.

         

