{"id": 2299, "title": "Ticket #2299: memory leaks in negotiator", "description": "<blockquote>\nI noticed an idiom used several times in the HGQ code to check if a parameter is defined:\n\n<p></p><pre>\tif (NULL != param_without_default(\"GROUP_QUOTA_MAX_ALLOCATION_ROUNDS\"))\n</pre>\n\n<p>This leaks memory if the parameter is defined, because the return value of param_without_default() is not freed.\n\n</p><p>I suggest adding a new function param_is_defined(name).  It could probably be implemented more efficiently than by calling param_without_default(), but until there is need to optimize, a simple implementation is probably best.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Sep-06 15:42:51 by eje:</em> <br/>\n\nREPRO/TEST\n\n<p>There is no functional change made by this fix.  The negotiator should work exactly as before.  I exercised the fix with the following functional test for HGQ (also attached as a tarball):\n\n</p><p>Configuration:\n</p><div class=\"code\">\n<pre class=\"code\">NEGOTIATOR_DEBUG = D_FULLDEBUG\nSCHEDD_INTERVAL\t= 15\nNEGOTIATOR_USE_SLOT_WEIGHTS = FALSE\n\nNUM_CPUS = 40\n\n# turn on round-robin for this test, since we're testing\n# an overlapping-effective-pool scenario\nHFS_ROUND_ROBIN_RATE = 1.0\n\n# turn on multiple allocation rounds, since we're testing\n# slot rejection scenario as well\nHFS_MAX_ALLOCATION_ROUNDS = 3\n\nGROUP_NAMES = a, b, a.a, a.b, b.a, b.b\n\nGROUP_QUOTA_DYNAMIC_a = 0.5\nGROUP_QUOTA_DYNAMIC_b = 0.5\nGROUP_QUOTA_DYNAMIC_a.a = 0.5\nGROUP_QUOTA_DYNAMIC_a.b = 0.5\nGROUP_QUOTA_DYNAMIC_b.a = 0.5\nGROUP_QUOTA_DYNAMIC_b.b = 0.5\n\n# Have \"a\" and \"b\" subtrees manage their quota independently\nGROUP_AUTOREGROUP = TRUE\nGROUP_AUTOREGROUP_a = FALSE\nGROUP_AUTOREGROUP_b = FALSE\n</pre></div>\n\n\n<p>Submit file:\n</p><div class=\"code\">\n<pre class=\"code\">universe = vanilla\ncmd = /bin/sleep\narguments = 10m\n# group \"a.a\" should be able to use slots unused by \"a.b\"\n# set up requirements to stay out of lower slots (used by b.a and b.b)\nRequirements = (SlotID &gt; 10)\n+AccountingGroup = \"a.a.user\"\nqueue 25\n# set up jobs for \"a.b\" to fail:\nRequirements = False\n+AccountingGroup = \"a.b.user\"\nqueue 25\n# set up \"b.a\" and \"b.b\" to compete\nRequirements = (SlotID &lt;= 10)\n+AccountingGroup = \"b.a.user\"\nqueue 25\n+AccountingGroup = \"b.b.user\"\nqueue 25\n</pre></div>\n\n\n<p>Expected negotiator results (copied from original test README)\n</p><div class=\"code\">\n<pre class=\"code\">This test is designed to test behavior in two cases of negotiation failure:\n1) A group cannot use all the slots it is allocated (in which case other should be able to use surplus)\n2) Two (or more) groups are competing for same subset of slots, in which case neither should starve.\n\nBest to begin this by nuking your accounting log.\nInstall \"neg_failures.config\" into your configuration, then start up condor.\n\nSubmit \"neg_failures.submit\":\n% condor_submit neg_failures.submit\nSubmitting job(s)....................................................................................................\n100 job(s) submitted to cluster 2.\n\nYou should see the following distribution: \"b.a\" and \"b.b\" are sharing their subset, and neither is starved.  \"a.a\" is able to u\nse the surplus that \"a.b\" cannot use.  (note, there are 10 of the total 40 slots unused here, by design):\n\n% qvhist AccountingGroup -c 'JobStatus == 2'\n     20 a.a.user\n      5 b.a.user\n      5 b.b.user\n     30 total\n</pre></div>\n\n\n<p></p><hr/>\n<em>2011-Sep-23 15:25:10 by danb:</em> <br/>\n\nCode review: looks good.  Thanks!  --Dan</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body><blockquote>\n<ul>\n<li><a href=\"../files/452/neg_failures_test.tar.gz\">neg_failures_test.tar.gz</a>\n1221 bytes added by eje on 2011-Sep-06 20:38:50 UTC.\n<br/>\nTarball of the test referred to in the \"repro/test\" section below.<br/>\n</li></ul>\n</blockquote></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Sep-06 15:31</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c6d60ad5bde4a054c8a3cb1a3bcd117e696e48f5\">[27103]</a></span>: Fixed a memory leak from some calls to param_without_default() by introducing a nicer abstraction param_defined(). ===VersionHistory:Complete=== ===GT:Fixed=== <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2299\" onclick=\"get_ticket_and_populate_wrapper('2299'); return false;\" title=\"memory leaks in negotiator\">#2299</a></span>  (By Erik Erlandson )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2011-Sep-23 15:25", "status": "resolved", "created": "2011-Jul-13 10:11", "fixed_version": "2011-Jul-13 10:11", "broken_version": "v070506", "priority": "4", "subsystem": "Daemons", "assigned_to": "eje", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "other", "visibility": "public", "notify": "dan@hep.wisc.edu, tstclair@redhat.com, eje@cs.wisc.edu", "due_date": ""}