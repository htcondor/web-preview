{"id": 6213, "title": "Ticket #6213: User tracing plugins for HTCondor-CE", "description": "<blockquote>\nOSG has been working to replace <code>glexec</code> (which provides both traceability and isolation); the first - and most difficult - part of this was to add <code>singularity</code> for <em>isolation</em>.\n\n<p>However, FNAL has asked us to all improve on the <em>traceability</em> capabilities.  Currently, <code>glexec</code> leaves a message (critically, containing a user's name) in syslog each time a user invokes the program.  They want an alternate mechanism to provide information about what users have been running locally.\n\n</p><p>Since glideinWMS currently sends the startd ad to the HTCondor-CE, the agreement is that if the <code>condor_collector</code> running on the CE records the username of the payload user, then we will meet the traceability requirements.\n\n</p><p>To do this, we propose implementing a new <code>condor_collector</code> plugin.  Unfortunately, it appears the collector plugin infrastructure is unusable:\n</p><ul>\n<li>It appears that the linking of the <code>condor_collector</code> binary hides necessary symbols for <em>any</em> plugin to function.\n</li><li>Unusable ABI design: There's no C++ ABI guarantee across HTCondor versions nor any versioning mechanism in place.\n</li><li>Unusable API design: There's no API versioning mechanism nor are the necessary headers shipped.\n</li><li>HTCondor-CE is currently python/shell/config files only and we'd like to keep it that way.\n</li></ul>\n\n<p>Hence, the new plugin will be a python-based plugin.  A new knob, <code>COLLECTOR_PLUGIN_PYTHON_MODULES</code> will provide a comma-separated list if python module names (not filenames!).  If specified and the module is loadable, there will be three functions invoked:\n</p><ul>\n<li><code>update(command: str, ad: ClassAd)</code>: Invoked each time a new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> is received by the collector.  <code>command</code> is the string version of the collector command and <code>ad</code> is the provided ad.\n</li><li><code>invalidate(command: str, ad: ClassAd)</code>: Analogous to <code>update</code>, but invoked whenever a daemon explicitly invalidates its ad.\n</li><li><code>shutdown</code>: Invoked when the collector is being shutdown.\n</li></ul>\n\n<p>As a result, a python module that implements FNAL's requirements might look like the following:\n\n</p><p></p><div class=\"verbatim\">\n<pre>import htcondor\n\ndef update(command, ad):\n    if command != \"UPDATE_STARTD_AD\":\n        return\n    if ad.get('State') == 'Unclaimed':\n        return\n    info = {}\n    keys = ['RemoteOwner', 'GlobalJobID', 'State', 'Name', 'ClientMachine',\n            'x509UserProxyVOName', 'ProjectName', 'x509userproxysubject',\n            'x509UserProxyFQAN', 'x509UserProxyEmail', 'Group', ]\n    for key in keys:\n        if key in ad:\n            info[key] = ad[key]\n    htcondor.log(htcondor.LogLevel.Audit, \"Startd user trace: %s\" % info)\n</pre></div>\n\n\n<p>The corresponding configuration addition might be:\n\n</p><p></p><div class=\"verbatim\">\n<pre>COLLECTOR.PLUGINS=/some/path/to/libcollector_python_plugin.so\nCOLLECTOR_PLUGIN_PYTHON_MODULES=audit_payloads\nCOLLECTOR_AUDIT_LOG = $(LOG)/AuditPayloadLog\nCOLLECTOR_DEBUG = D_AUDIT, $(COLLECTOR_DEBUG)\nMAX_COLLECTOR_AUDIT_LOG = 1d\nMAX_NUM_COLLECTOR_AUDIT_LOG = 90\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2017-Apr-19 15:19:12 by tim:</em> <br/>\n\nFermi would like this back ported to stable.\n\n<p></p><hr/>\n<em>2017-May-01 17:00:21 by tim:</em> <br/>\n\n<strong>CODE REVIEW</strong>: Found and fixed several coding errors.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-08 15:19</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/8fe5d0b7c4d027388c9ce3f5309c6c2eee1a217f\">[50618]</a></span>: Version history for <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6213\" onclick=\"get_ticket_and_populate_wrapper('6213'); return false;\" title=\"User tracing plugins for HTCondor-CE\">#6213</a></span>  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-01 16:09</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/fe5c3de9f657560168bd52bd0a902fdc61d8e58a\">[50598]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6213\" onclick=\"get_ticket_and_populate_wrapper('6213'); return false;\" title=\"User tracing plugins for HTCondor-CE\">#6213</a></span>) Make collector plugin available in UW as well as proper build.  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-01 16:08</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/04bacbafee148d77095a02d99bbf1b8bde0d14bd\">[50597]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6213\" onclick=\"get_ticket_and_populate_wrapper('6213'); return false;\" title=\"User tracing plugins for HTCondor-CE\">#6213</a></span>) Add collector plugin into RPM file list  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-01 16:07</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/012f4da6d3dfc855f607da2fd8a222ccf9f41f95\">[50596]</a></span>: (<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6213\" onclick=\"get_ticket_and_populate_wrapper('6213'); return false;\" title=\"User tracing plugins for HTCondor-CE\">#6213</a></span>) Fix bugs in python collector plugin  (By Tim Theisen )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-01 09:20</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/d681010367460895d4df1f121ef77cb483d4299f\">[50595]</a></span>: Python plugin for the collector. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6213\" onclick=\"get_ticket_and_populate_wrapper('6213'); return false;\" title=\"User tracing plugins for HTCondor-CE\">#6213</a></span> This provides a new collector plugin to be shipped with HTCondor. This plugin will allow users to implement their own collector plugins using the HTCondor python bindings instead of writing C++; it is analogous to the work done with <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> python-based user functions.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-May-01 09:17</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e3bb5a25a61161a9f2f8869c78ae3d0ceaa92a79\">[50594]</a></span>: Fix collector plugin symbol issue. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6213\" onclick=\"get_ticket_and_populate_wrapper('6213'); return false;\" title=\"User tracing plugins for HTCondor-CE\">#6213</a></span> This allows the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CollectorPlugin\" title=\"Collector Plugin\">CollectorPlugin</a></span> typeinfo to have global visibility in the resulting shared object. Without this, dynamically loaded plugin objects might load their own version of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CollectorPlugin\" title=\"Collector Plugin\">CollectorPlugin</a></span>, violating the C++ One Definition Rule. In practice, we observed\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Apr-02 21:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/5e4d8895feb8f27bf98b3817c51d35496317fe4b\">[50401]</a></span>: Python plugin for the collector. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6213\" onclick=\"get_ticket_and_populate_wrapper('6213'); return false;\" title=\"User tracing plugins for HTCondor-CE\">#6213</a></span> This provides a new collector plugin to be shipped with HTCondor. This plugin will allow users to implement their own collector plugins using the HTCondor python bindings instead of writing C++; it is analogous to the work done with <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> python-based user functions.\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Apr-02 21:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/11ca3aa32b370a932140e23038f0bf75d9de2513\">[50400]</a></span>: Fix collector plugin symbol issue. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6213\" onclick=\"get_ticket_and_populate_wrapper('6213'); return false;\" title=\"User tracing plugins for HTCondor-CE\">#6213</a></span> This allows the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CollectorPlugin\" title=\"Collector Plugin\">CollectorPlugin</a></span> typeinfo to have global visibility in the resulting shared object. Without this, dynamically loaded plugin objects might load their own version of <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CollectorPlugin\" title=\"Collector Plugin\">CollectorPlugin</a></span>, violating the C++ One Definition Rule. In practice, we observed\u00a0[...]\n (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2017-May-09 11:50", "status": "resolved", "created": "2017-Apr-02 21:52", "fixed_version": "2017-Apr-02 21:52", "broken_version": "", "priority": "2", "subsystem": "DaemonsCM", "assigned_to": "tim", "derived_from": "#4555", "creator": "bbockelm", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "bbockelm@cse.unl.edu tannenba@cs.wisc.edu", "due_date": ""}