#######################################################################
#
#  Makefile for the fibonacci example application
#
#######################################################################

#CC= condor_compile g++
CC= g++

CFLAGS = -g
#flags for linux:
#CFLAGS= -g #-frtti -DNO_DYN_CAST #-ggdb #(no -ggdb flag on monterery!)
CDEFINES=  #-DSTANDALONE

# Just master objects
MWMOBJS = ../MWDriver.o \
	../MWTask.o \
	../MWWorkerID.o \
	../MWStats.o \
	../MWprintf.o \
	../MWPvmRC.o

# just worker objects
MWWOBJS = ../MWTask.o \
	../MWWorker.o \
	../MWprintf.o \
	../MWPvmRC.o \
	../MWWorkerID.o 

MWOBJS = $(MWMOBJS) $(MWWOBJS)

MASTER_NAME     = master-fib
WORKER_NAME     = worker-fib

DOC_TARGET_DIR  = ./html/

APP_HEADERS     = Driver-fib.h Task-fib.h Worker-fib.h
MASTERSOURCES   = Driver-fib.C Task-fib.C MasterMain-fib.C
WORKERSOURCES   = Worker-fib.C Task-fib.C WorkerMain-fib.C

MASTEROBJS      = $(MASTERSOURCES:C=o)
WORKEROBJS      = $(WORKERSOURCES:C=o)

DOCDIR          = /unsup/doc++/bin
DOCOPTIONS      = -p
DOCS            = $(APP_HEADERS:.h=.doc)

# PVM things:
PVM_ROOT = 	/p/condor/workspaces/pvm/pvm3.4.2

PVM_ARCH =	X86SOL2
#PVM_ARCH = 	SUN4SOL2
#PVM_ARCH = 	LINUX
#PVM_ARCH = 	SUNMP
ARCHCFLAGS	= 

# There are the needed for solaris
ARCHLIB	= -lsocket -lnsl
PVM_INCLS = -I$(PVM_ROOT)/include
PVM_LIB = -L$(PVM_ROOT)/lib/$(PVM_ARCH) -lpvm3 $(ARCHLIB)

DEPGEN=	makedepend
# (Need this so that makedepend doesn't complain)
CCINCLS= -I/s/gcc/include/g++ -I/s/gcc/@sys/i386-pc-solaris2.6/include
#CCINCLS= -I/s/gcc/include/g++ -I/s/gcc/@sys/sparc-sun-solaris2.6/include

#
# Put everything together
#

INCLS=	$(PVM_INCLS) -I./ -I../
LIBS=	$(PVM_LIB) 
DEFINES= $(CDEFINES)

all: master worker

pure: master_pure worker_pure

master_pure: $(MWMOBJS) $(MASTEROBJS)
	purify $(CC) $(CFLAGS) -o $(MASTER_NAME) \
		$(MWMOBJS) $(MASTEROBJS) $(LIBS) $(FILE_LIB)
	@echo " *** Pure Master Fib. created ***"

worker_pure: $(MWWOBJS) $(WORKEROBJS)
	purify $(CC) $(CFLAGS) -o $(WORKER_NAME) \
		$(MWWOBJS) $(WORKEROBJS) $(LIBS) 
	@echo " *** Pure Worker Fib. created ***"

master: $(MWMOBJS) $(MASTEROBJS)
	$(CC) $(CFLAGS) -o $(MASTER_NAME) \
		$(MWMOBJS) $(MASTEROBJS) $(LIBS) $(FILE_LIB)
	@echo " *** Master Fib. created ***"

worker: $(MWWOBJS) $(WORKEROBJS)
	$(CC) $(CFLAGS) -o $(WORKER_NAME) \
		$(MWWOBJS) $(WORKEROBJS) $(LIBS) $(FILE_LIB)
	@echo " *** Worker Fib. created ***"

depend:
	$(DEPGEN) $(INCLS) $(CCINCLS) $(DEFINES) $(ALLSOURCES)
	@echo " *** Done making depend"

clean:
	rm -f $(MASTEROBJS) $(WORKEROBJS) core
	@echo " *** You're clean now"

reallyclean: clean
	rm -f $(MASTER_NAME) $(WORKER_NAME) $(DOCS) out_* work.log
	@echo " *** You're really clean now."

myclean:
	/bin/rm ./submit_files/* ./worker_input/* ./worker_output/* core*

doc: $(DOCS)
	$(DOCDIR)/doc++ -d $(DOC_TARGET_DIR) \
		$(DOCOPTIONS) $(DOCS); \
	rm -f $(DOCS)
	@echo " *** Made doc++"

######################################################################

.SUFFIXES: .o .C .doc

.C.o:
	$(CC) $(CFLAGS) $(DEFINES) $(INCLS) -c -o $(<:C=o) $<

.h.doc:
	$(DOCDIR)/docify $< > $(<:h=doc)
# DO NOT DELETE
