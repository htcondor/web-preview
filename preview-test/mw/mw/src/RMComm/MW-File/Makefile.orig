#######################################################################
#
#  Makefile for Condor-FileBased RMComm 
#
#######################################################################

# Turn off default suffixes
.SUFFIXES:
.SUFFIXES: .C .o


CXX= g++
CXXFLAGS = -g
CONDOR_DIR = /unsup/condor
MW_DIR = ../..

MASTERSRC = ../MWRMComm.C \
	MWFileRC.C \
	list.C

# Note that we use a compiler define to distinguish between master
# and worker -- so we have an awkward naming convention here
# Also, we put the (abstract) RMComm object file in the current directory
MASTEROBJ = MWRMComm.o \
	MWFileRCM.o \
	list.o

WORKERSRC = ../MWRMComm.C \
	MWFileRC.C \
	list.C

# Note that we use a compiler define to distinguish between master
# and worker -- so we have an awkward naming convention here
WORKEROBJ = MWRMComm.o \
	MWFileRCW.o \
	list.o


#
# Put everything together
#

INCLS=	-I../ -I$(MW_DIR) -I$(CONDOR_DIR)/include

all: mwfilemaster mwfileworker

mwfilemaster: $(MASTEROBJ)
	ar cr libMWfilemaster.a $(MASTEROBJ)
	ranlib libMWfilemaster.a

mwfileworker: $(WORKEROBJ)
	ar cr libMWfileworker.a $(WORKEROBJ)
	ranlib libMWfileworker.a

clean:
	rm -f $(MASTEROBJ) $(WORKEROBJ)
	@echo " *** You're clean now"


MWFileRCM.o: MWFileRC.C MWFileRC.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLS) -DFILE_MASTER  -c MWFileRC.C -o MWFileRCM.o

MWFileRCW.o: MWFileRC.C MWFileRC.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLS) -c MWFileRC.C -o MWFileRCW.o

MWRMComm.o: ../MWRMComm.C ../MWRMComm.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLS) -c ../MWRMComm.C

.C.o:
	${CXX} -c ${CPPFLAGS} ${CXXFLAGS} $(INCLS) $<

