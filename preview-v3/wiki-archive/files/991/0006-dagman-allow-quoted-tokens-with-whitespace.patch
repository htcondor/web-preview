From e052d03c934ff8439c06aca47bcb12eef80bab89 Mon Sep 17 00:00:00 2001
From: Quintin Hill <Quintin.Hill@arqiva.com>
Date: Thu, 24 Aug 2017 16:44:59 +0100
Subject: [PATCH 6/6] dagman: allow quoted tokens with whitespace

Accept simple quoting of paths with spaces in "/path/with spaces".
---
 src/condor_dagman/CMakeLists.txt        |  2 +-
 src/condor_dagman/condor_submit_dag.cpp |  8 +++----
 src/condor_dagman/dag_tokener.cpp       | 31 +++++++++++++++++++++++++
 src/condor_dagman/dag_tokener.h         | 40 +++++++++++++++++++++++++++++++++
 4 files changed, 76 insertions(+), 5 deletions(-)
 create mode 100644 src/condor_dagman/dag_tokener.cpp
 create mode 100644 src/condor_dagman/dag_tokener.h

diff --git a/src/condor_dagman/CMakeLists.txt b/src/condor_dagman/CMakeLists.txt
index e5f9a2f737..2c36993cbe 100644
--- a/src/condor_dagman/CMakeLists.txt
+++ b/src/condor_dagman/CMakeLists.txt
@@ -25,7 +25,7 @@ condor_glob(DAGHdrs DAGSrcs "${submitDAG};${metricsReporter}")
 
 condor_exe(condor_dagman "${DAGHdrs};${DAGSrcs}" ${C_BIN} "${CONDOR_LIBS}" ON)
 
-condor_exe(condor_submit_dag "condor_submit_dag.cpp;dagman_multi_dag.cpp;dagman_recursive_submit.cpp" ${C_BIN} "${CONDOR_TOOL_LIBS}" OFF)
+condor_exe(condor_submit_dag "condor_submit_dag.cpp;dagman_multi_dag.cpp;dagman_recursive_submit.cpp;dag_tokener.cpp" ${C_BIN} "${CONDOR_TOOL_LIBS}" OFF)
 
 if(NOT WINDOWS AND WITH_CURL)
 condor_exe(condor_dagman_metrics_reporter
diff --git a/src/condor_dagman/condor_submit_dag.cpp b/src/condor_dagman/condor_submit_dag.cpp
index 865f7ab1fa..b9af65a042 100644
--- a/src/condor_dagman/condor_submit_dag.cpp
+++ b/src/condor_dagman/condor_submit_dag.cpp
@@ -35,6 +35,7 @@
 #include "my_popen.h"
 #include "setenv.h"
 #include "condor_attributes.h"
+#include "dag_tokener.h"
 
 
 #ifdef WIN32
@@ -53,7 +54,7 @@ bool parsePreservedArgs(const MyString &strArg, int &argNum, int argc,
 			const char * const argv[], SubmitDagShallowOptions &shallowOpts);
 int doRecursionNew( SubmitDagDeepOptions &deepOpts,
 			SubmitDagShallowOptions &shallowOpts );
-int parseJobOrDagLine( const char *dagLine, StringList &tokens,
+int parseJobOrDagLine( const char *dagLine, dag_tokener &tokens,
 			const char *fileType, const char *&submitOrDagFile,
 			const char *&directory );
 int setUpOptions( SubmitDagDeepOptions &deepOpts,
@@ -161,7 +162,6 @@ doRecursionNew( SubmitDagDeepOptions &deepOpts,
 	shallowOpts.dagFiles.rewind();
 
 		// Go through all DAG files specified on the command line...
-	StringList submitFiles;
 	const char *dagFile;
 	while ( (dagFile = shallowOpts.dagFiles.next()) ) {
 
@@ -178,7 +178,7 @@ doRecursionNew( SubmitDagDeepOptions &deepOpts,
 			// Find and parse JOB and SUBDAG lines.
 		MyString dagLine;
 		while ( reader.NextLogicalLine( dagLine ) ) {
-			StringList tokens( dagLine.Value(), " \t" );
+			dag_tokener tokens( dagLine.Value() );
 			tokens.rewind();
 			const char *first = tokens.next();
 
@@ -258,7 +258,7 @@ doRecursionNew( SubmitDagDeepOptions &deepOpts,
 	@return 0 if successful, 1 if failed
 */
 int
-parseJobOrDagLine( const char *dagLine, StringList &tokens,
+parseJobOrDagLine( const char *dagLine, dag_tokener &tokens,
 			const char *fileType, const char *&submitOrDagFile,
 			const char *&directory )
 {
diff --git a/src/condor_dagman/dag_tokener.cpp b/src/condor_dagman/dag_tokener.cpp
new file mode 100644
index 0000000000..66f2a52895
--- /dev/null
+++ b/src/condor_dagman/dag_tokener.cpp
@@ -0,0 +1,31 @@
+/***************************************************************
+ *
+ * Copyright (C) 2017, Condor Team, Computer Sciences Department,
+ * University of Wisconsin-Madison, WI.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License"); you
+ * may not use this file except in compliance with the License.  You may
+ * obtain a copy of the License at
+ *
+ *    http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ ***************************************************************/
+
+#include "dag_tokener.h"
+#include "tokener.h"
+
+dag_tokener::dag_tokener(const char * line_in)
+{
+	tokener tkns(line_in);
+	while(tkns.next()) {
+		std::string token;
+		tkns.copy_token(token);
+		tokens.Append(&token);
+	}
+}
diff --git a/src/condor_dagman/dag_tokener.h b/src/condor_dagman/dag_tokener.h
new file mode 100644
index 0000000000..5f1a9b7500
--- /dev/null
+++ b/src/condor_dagman/dag_tokener.h
@@ -0,0 +1,40 @@
+/***************************************************************
+ *
+ * Copyright (C) 1990-2017, Condor Team, Computer Sciences Department,
+ * University of Wisconsin-Madison, WI.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License"); you
+ * may not use this file except in compliance with the License.  You may
+ * obtain a copy of the License at
+ *
+ *    http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ ***************************************************************/
+
+#ifndef __DAG_TOKENER__
+#define __DAG_TOKENER__
+#include "list.h"
+#include <string>
+
+// this is a simple tokenizer class for parsing keywords out of a line of text
+// token separator defaults to whitespace, "" or '' can be used to have tokens
+// containing whitespace, but there is no way to escape " inside a "" string or
+// ' inside a '' string. outer "" and '' are not considered part of the token.
+
+class dag_tokener {
+public:
+	dag_tokener(const char * line_in);
+	void rewind() { tokens.Rewind(); }
+	const char * next() { return tokens.AtEnd() ? NULL : tokens.Next()->c_str(); }
+protected:
+	List<std::string> tokens; // parsed tokens
+};
+
+
+#endif // __DAG_TOKENER__
-- 
2.13.5

