{"id": 1322, "title": "Ticket #1322: schedd crashed on submit.chtc.wisc.edu", "description": "<blockquote>\nThe schedd crashed on submit.chtc.wisc.edu.  It wrote a core file and printed a stack dump in the log file, but then it hung before exiting.\n\n<p>The core file shows that it crashed in malloc:\n\n</p><p></p><div class=\"verbatim\">\n<pre>(gdb) where\n#0  0x00000000005caca0 in WriteCoreDump (\n    file_name=0x19000 &lt;Address 0x19000 out of bounds&gt;) at src/coredumper.c:136\n#1  0x00000000005c09be in linux_sig_coredump (signum=11)\n    at daemon_core_main.cpp:668\n#2  &lt;signal handler called&gt;\n#3  0x00000039a862fb73 in abort () from /lib64/tls/libc.so.6\n#4  0x00000039a8663591 in __libc_message () from /lib64/tls/libc.so.6\n#5  0x00000039a86689b2 in malloc_consolidate () from /lib64/tls/libc.so.6\n#6  0x00000039a8669859 in _int_malloc () from /lib64/tls/libc.so.6\n#7  0x00000039a866b632 in malloc () from /lib64/tls/libc.so.6\n#8  0x000000315ce9d425 in operator new () from /usr/lib64/libstdc++.so.5\n#9  0x00000000006b0eba in ReliSock::accept (this=0xede6c0) at reli_sock.cpp:229\n#10 0x00000000005aebad in DaemonCore::CallSocketHandler (this=0xeae880,\n    i=@0x7fbffff4ec, default_to_HandleCommand=true) at daemon_core.cpp:3479\n#11 0x00000000005ae95f in DaemonCore::Driver (this=0xeae880)\n    at daemon_core.cpp:3405\n#12 0x00000000005c38f9 in main (argc=1, argv=0x7fbffff850)\n    at daemon_core_main.cpp:2308\n{verbatim}\n\nI attached to the hung schedd and printed its stack:\n\n{verbatim}\n(gdb) where\n#0  0x00000039a86d2c2b in __lll_mutex_lock_wait () from /lib64/tls/libc.so.6\n#1  0x0000000000ec48b0 in ?? ()\n#2  0x0000000000000001 in ?? ()\n#3  0x00000039a866de53 in posix_memalign () from /lib64/tls/libc.so.6\n#4  0x0000000000000060 in ?? ()\n#5  0x0000000000000000 in ?? ()\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2010-Mar-31 10:12:14 by danb:</em> <br/>\n\nWe had NOT_RESPONDING_TIMEOUT set to 24 hours on submit.chtc.  This was done to prevent shadows doing file transfer of the STAR VM image from being killed by the schedd.  In order to avoid having a hung schedd go undetected for a day, I have changed the configuration to be more specific:\n\n<p></p><div class=\"verbatim\">\n<pre>SHADOW.NOT_RESPONDING_TIMEOUT = 24*3600\n</pre></div>\n\n\n<p></p><hr/>\n<em>2010-Mar-31 14:19:32 by danb:</em> <br/>\n\nIt happened again.\n\n<p>This time the core file shows the following stack:\n\n</p><p></p><div class=\"verbatim\">\n<pre>#0  0x00000000005caca0 in WriteCoreDump (\n    file_name=0x19000 &lt;Address 0x19000 out of bounds&gt;) at src/coredumper.c:136\n#1  0x00000000005c09be in linux_sig_coredump (signum=11)\n    at daemon_core_main.cpp:668\n#2  &lt;signal handler called&gt;\n#3  0x00000039a8669791 in _int_malloc () from /lib64/tls/libc.so.6\n#4  0x00000039a866b632 in malloc () from /lib64/tls/libc.so.6\n#5  0x000000315ce9d425 in operator new () from /usr/lib64/libstdc++.so.5\n#6  0x00000000005b35a7 in DaemonCore::Send_Signal (this=0xeae880,\n    pid=-1467803976, sig=10) at daemon_core.cpp:5209\n#7  0x000000000056a1b8 in GridUniverseLogic::SendRemoveSignal ()\n    at grid_universe.cpp:205\n#8  0x00000000005ca057 in TimerManager::Timeout (this=0xc114a0)\n    at timer_manager.cpp:391\n#9  0x00000000005adaf9 in DaemonCore::Driver (this=0xeae880)\n    at daemon_core.cpp:2992\n#10 0x00000000005c38f9 in main (argc=1, argv=0x7fbffff850)\n    at daemon_core_main.cpp:2308\n</pre></div>\n\n\n<p>And the hung schedd has this stack:\n\n</p><p></p><div class=\"verbatim\">\n<pre>(gdb) where\n#0  0x00000039a86d2c2b in __lll_mutex_lock_wait () from /lib64/tls/libc.so.6\n#1  0x0000000000ec48b0 in ?? ()\n#2  0x0000000000000001 in ?? ()\n#3  0x00000039a866de53 in posix_memalign () from /lib64/tls/libc.so.6\n#4  0x00000039a8831640 in __malloc_initialize_hook () from /lib64/tls/libc.so.6\n#5  0x00000039a88316b8 in main_arena () from /lib64/tls/libc.so.6\n#6  0x0000000000000000 in ?? ()\n</pre></div>\n\n\n<p>The problem this time appears identical to the one observed in <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=1256\" onclick=\"get_ticket_and_populate_wrapper('1256'); return false;\" title=\"condor_schedd crashes sometimes when gridmanager exits\">#1256</a></span>, which is believed to be fixed.  Therefore, we should install a new version of the schedd and see what happens.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "incident", "last_change": "2010-Jul-31 11:59", "status": "resolved", "created": "2010-Mar-31 09:57", "fixed_version": "2010-Mar-31 09:57", "broken_version": "v070501", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "dan@hep.wisc.edu,gthain@cs.wisc.edu,bt@cs.wisc.edu", "due_date": ""}