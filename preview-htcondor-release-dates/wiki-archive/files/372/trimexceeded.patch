diff -rNup condor-7.4.4.orig/src/condor_negotiator.V6/Accountant.cpp condor-7.4.4/src/condor_negotiator.V6/Accountant.cpp
--- condor-7.4.4.orig/src/condor_negotiator.V6/Accountant.cpp	2011-06-13 13:38:24.000000000 -0400
+++ condor-7.4.4/src/condor_negotiator.V6/Accountant.cpp	2011-06-13 13:41:48.000000000 -0400
@@ -1542,6 +1542,8 @@ void Accountant::DecrementLimits(const M
 
 float Accountant::GetSlotWeight(ClassAd *candidate) 
 {
+	if (candidate == NULL) return 0.0;
+	
 	float SlotWeight = 1.0;
 	if(!UseSlotWeights) {
 		return SlotWeight;
diff -rNup condor-7.4.4.orig/src/condor_negotiator.V6/matchmaker.cpp condor-7.4.4/src/condor_negotiator.V6/matchmaker.cpp
--- condor-7.4.4.orig/src/condor_negotiator.V6/matchmaker.cpp	2011-06-13 13:38:24.000000000 -0400
+++ condor-7.4.4/src/condor_negotiator.V6/matchmaker.cpp	2011-06-13 13:43:16.000000000 -0400
@@ -316,7 +319,9 @@ reinitialize ()
     if ((hfs_groups.size() > 1) && param_boolean("NEGOTIATOR_USE_SLOT_WEIGHTS", true)) {
         EXCEPT("HFS: The HFS algorithm is not defined on weighted slots\n");
     }
-
+    
+    useSlotWeights = param_boolean("NEGOTIATOR_USE_SLOT_WEIGHTS", false);
+    
     // Initialize accountant params
     accountant.Initialize(hfs_root_group);
 
@@ -2882,8 +2904,18 @@ negotiate( char const *scheddName, const
 						
 						return MM_ERROR;
 					}
+				
 				result = MM_NO_MATCH;
-				continue;
+				if (rejForSubmitterLimit && !ConsiderPreemption && !useSlotWeights) {	
+					dprintf (D_ALWAYS, "....done negotiating\n");
+					// stop negotiation and return MM_RESUME
+					// we don't want to return with MM_DONE because
+					// we didn't get NO_MORE_JOBS: there are jobs that could match 
+					// in later cycles with a quota redistribution
+					goto OUT;
+				} else {
+					continue;
+				}
 			}
 
 			if ((offer->LookupString(ATTR_PREEMPTING_ACCOUNTING_GROUP, remoteUser)==1) ||
@@ -2960,7 +2992,7 @@ negotiate( char const *scheddName, const
 		negotiation_cycle_stats[0]->matches++;
 	}
 
-
+OUT:
 	// break off negotiations
 	sock->encode();
 	if (!sock->put (END_NEGOTIATE) || !sock->end_of_message())
