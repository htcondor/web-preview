{"id": 6179, "title": "Ticket #6179: There should be a metaknob for mapping users to groups", "description": "<blockquote>\nIt will be a common use case of the classad usermap function to map users into accounting groups, so there should be a metaknob that makes that easy.  We will base this (loosely) on the transform that LIGO created to map users into some custom attributes that behave much like the accounting group attributes.  The transforms use the following config\n\n<p></p><div class=\"snip\">\n<pre class=\"sniplabel\">config suggested by ToddT to Ligo</pre>\n<pre class=\"snip\">\n#\n# LIGO JOB TRANSFORM AND VALIDATE RULES\n# 1) converting the classads for AcctGroup,AcctGroupUser into\nLigoSearchTag,LigoSearchUser.\n# 2) Deleting AcctGroup,AcctGroupUser,AccountingGroup\n# 3) Asserting that LigoSearchTag is a member of a valid list or matches\na regex\n# 4) Assert that LigoSearchUser is equal to \"Owner\" or their \"LIGO name\".\n#\n\n# Make a map representing valid LigoSearchTag values; in\n# this example, valid string values are \"val1\", \"val2\", or\n# any string value that begins with the character 'a' (to\n# demonstrate use of a regex in the list).\nSCHEDD_CLASSAD_USER_MAP_NAMES = $(SCHEDD_CLASSAD_USER_MAP_NAMES)\nValidSearchTags\n# Note: You can put this map into a seperate file via using knob\n# CLASSAD_USER_MAPFILE_ValidSearchTags = /some/file/path\nCLASSAD_USER_MAPDATA_ValidSearchTags @=end\n  * val1 found\n  * val2 found\n  * /^a/ found\n@end\n\n# Make a map where the Owner attribute is the key, and then the\n# value is a set of legit LigoSearchUser values.\nSCHEDD_CLASSAD_USER_MAP_NAMES = $(SCHEDD_CLASSAD_USER_MAP_NAMES)\nValidSearchUsers\n# Note: You can put this map into a seperate file via using knob\n# CLASSAD_USER_MAPFILE_ValidSearchUsers = /some/file/path\nCLASSAD_USER_MAPDATA_ValidSearchUsers @=end\n  * tpdownes thomas.downes\n  * mathguys peter.couvares,thomas.downs,kent.wenger\n  * tannenba todd.tannenbaum,mr.condor\n@end\n\n# Here we take care of\n# 1) converting the classads for AcctGroup,AcctGroupUser into\nLigoSearchTag,LigoSearchUser.\n# 2) Deleting AcctGroup,AcctGroupUser,AccountingGroup\n# If AcctGroup not defined, set LigoSearchTag to \"None\".\n# If AcctGroupUser not defined, set LigoSearchUser to the Owner.\nJOB_TRANSFORM_NAMES = $(JOB_TRANSFORM_NAMES) InsertLigoTags\nJOB_TRANSFORM_InsertLigoTags @=end\n[\n   COPY_AcctGroup = \"LigoSearchTag\";\n   COPY_AcctGroupUser = \"LigoSearchUser\";\n   DELETE_AcctGroup = true;\n   DELETE_AcctGroupUser = true;\n   DELETE_AccountingGroup = true;\n   EVAL_SET_LigoSearchTag = LigoSearchTag ?: \"None\";\n   EVAL_SET_LigoSearchUser = LigoSearchUser ?: Owner;\n]\n@end\n\n# Here we take care of\n# 3) Asserting that LigoSearchTag is a member of a valid list or matches\na regex\n# Add a submit requirement that LigoSearchTag is set to something\nunrecognized.\nSUBMIT_REQUIREMENT_NAMES = $(SUBMIT_REQUIREMENT_NAMES) ValidateSearchTag\nSUBMIT_REQUIREMENT_ValidateSearchTag = \\\n    userMap(\"ValidSearchTags\",LigoSearchTag) isnt undefined\nSUBMIT_REQUIREMENT_ValidateSearchTag_REASON = \\\n    strcat(\"Invalid value for LigoSearchTag: \",LigoSearchTag ?:\n\"&lt;undefined&gt;\")\n\n# Here we take care of\n# 4) Assert that LigoSearchUser is equal to \"Owner\" or their \"LIGO name\".\n# Add submit requirement that  LigoSearchUser must be\n# set to be the same as Owner or as a valid \"LIGO name\" according to our\nmap.\nSUBMIT_REQUIREMENT_NAMES = $(SUBMIT_REQUIREMENT_NAMES) ValidateSearchUser\nSUBMIT_REQUIREMENT_ValidateSearchUser = \\\n    Owner =?= LigoSearchUser || \\\n    userMap(\"ValidSearchUsers\",Owner,LigoSearchUser) is LigoSearchUser\nSUBMIT_REQUIREMENT_ValidateSearchUser_REASON = \\\n    strcat(\"Invalid value for LigoSearchUser: \", LigoSearchUser ?:\n\"&lt;undefined&gt;\", \".\\n\", \\\n           \"       Valid values are: \",userMap(\"ValidSearchUsers\",Owner))\n\n# Finally, make sure nobody can change any attributes we set above\nIMMUTABLE_JOB_ATTRS = $(IMMUTABLE_JOB_ATTRS) \\\n                       AcctGroup AcctGroupUser AccountingGroup \\\n                       LigoSearchTag LigoSearchUser\n\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2017-Mar-22 15:24:45 by johnkn:</em> <br/>\n\nnew metaknob is:\n\n<p></p><div class=\"code\">\n<pre class=\"code\">use FEATURE : \u200bAssignAccountingGroup(&lt;filename&gt;)</pre></div>\n\n\n<p>where <code>&lt;filename&gt;</code> is the name of the mapping file for mapping users into groups.\nThis knob sets up a job transform and a submit requirement, both called <code>AssignAccountingGroup</code> that, using the given <code>&lt;filename&gt;</code> as a mapfile, will set the <code>AcctGroup</code>, <code>AcctGroupUser</code> and <code>AcountingGroup</code> attributes of a job from a mapping of the <code>Owner</code> attribute.\n\n</p><p>The submit requirement will then require that <code>AcctGroup</code> and <code>AccountingGroup</code> are both defined.\n\n</p><p>This metaknob also makes <code>AcctGroup</code>, <code>AcctGroupUser</code> and <code>AcountingGroup</code> immutable attributes.\n\n</p><p>There are two other new metaknobs in support of this feature, that may be useful on their own.\n\n</p><p></p><div class=\"code\">\n<pre class=\"code\">use FEATURE : ScheddUserMapFile(&lt;map_name&gt;, &lt;filename&gt;)\nuse FEATURE : SetJobAttrFromUserMap(&lt;dst_attr&gt;,&lt;src_attr&gt;,&lt;map_name&gt;[,&lt;filename&gt;])\n</pre></div>\n\n\n<p>The first, registers a usermap for the schedd under the given <code>&lt;map_name&gt;</code> using the given <code>&lt;filename&gt;</code> as the map file.\n\n</p><p>The second implements a job transform and submit requirement that sets a job attribute as the usermap transform of another job attribute.\n\n</p><p></p><hr/>\n<em>2017-Apr-22 18:15:07 by tannenba:</em> <br/>\n\n<strong>CODE REVIEW</strong>\n\n<p>Documentation is sparse to the point of not helpful; really could be helped with an example.\n\n</p><p>The SUBMIT_REQUIREMENT_xxx_REASON value should be improved.  For example, the REASON can evaluate to undefined and thus be ignored completely if the user fails to request an accounting group in the first place.  Also would be nice if the reason displayed the allowed groups according to the map file.  Also, the white space is kinda messed up (spaces missing).\n\n</p><p>The above items are not critical and thus do not need to delay the release of v8.6.2, but should be improved in v8.6.3.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Apr-21 11:27</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/dd91d53083c1b358cd72dc07ac4d0b4839b51c73\">[50537]</a></span>: Doc and version history for <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=6197\" onclick=\"get_ticket_and_populate_wrapper('6197'); return false;\" title=\"condor_submit -dump crashes when use_x509userproxy is set\">#6197</a></span> and <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6179\" onclick=\"get_ticket_and_populate_wrapper('6179'); return false;\" title=\"There should be a metaknob for mapping users to groups\">#6179</a></span>  (By John (TJ) Knoeller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Apr-07 11:10</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c41b26fb003ce1ca972bf1f6d8fb9f97927be047\">[50434]</a></span>: Added to test metaknob AssignAccountingGroup(&lt;filename&gt;) <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6179\" onclick=\"get_ticket_and_populate_wrapper('6179'); return false;\" title=\"There should be a metaknob for mapping users to groups\">#6179</a></span>  (By shuyang )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2017-Mar-08 12:26</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/31a880dd013d1cad2ce76449de83d257a7e3e11a\">[50288]</a></span>: Make a metaknob for mapping users into accounting groups and enforcing it. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=6179\" onclick=\"get_ticket_and_populate_wrapper('6179'); return false;\" title=\"There should be a metaknob for mapping users to groups\">#6179</a></span> ===VersionHistory:Pending===  (By John (TJ) Knoeller )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2017-Apr-22 18:15", "status": "resolved", "created": "2017-Mar-08 12:24", "fixed_version": "2017-Mar-08 12:24", "broken_version": "", "priority": "3", "subsystem": "", "assigned_to": "tannenba", "derived_from": "", "creator": "johnkn", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}