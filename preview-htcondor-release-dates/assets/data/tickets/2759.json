{"id": 2759, "title": "Ticket #2759: Multi-log reading code is very inefficient on very wide DAGs", "description": "<blockquote>\nI need to do some more testing to 100% confirm this (which is why I only have it as a priority 4 right now).\n\n<p>Anyhow, Bill had some SOAR workflows with very wide DAGs, which initially failed because the DAGs ran out of file descriptors.  They increased the FD limits on the machine and restarted everything, and the DAGs went into recovery mode (correctly).  At this point there were something like 6-8 DAGs in recovery mode, and there were a number of problems:\n</p><ul>\n<li>the DAGs were reading events very slowly (~1 event/minute).\n</li><li>top reported that the DAGMan processes were using a lot of CPU.\n</li><li>the file system that the node job log files were on was responding very poorly to any other commands, (e.g., ls).\n</li></ul>\n\n<p>At this point, I'm betting that the problem is just that the multi-log reading code is doing an fstat on 1000s or 10,000s of log files each time through the event-reading cycle.</p></blockquote>", "remarks": "<blockquote>\n<em>2012-Jan-13 10:18:11 by wenger:</em> <br/>\n\nOh, yeah -- we should be able to identify this by creating a DAG that has unique log files with the create_large_dag script in condor_tests.\n\n<p></p><hr/>\n<em>2012-Jan-13 14:16:38 by wenger:</em> <br/>\n\nWe should probably use inotify to fix this -- probably that would allow us to eliminate the \"too many file descriptors\" problem at the same time...\n\n<p></p><hr/>\n<em>2012-Jan-13 16:11:21 by wenger:</em> <br/>\n\nI was able to somewhat duplicate this problem by running the DAG created with the command 'create_large_dag job_dagman_really_large_dag 50000 2 1 10000' on submit.chtc.wisc.edu.  (Note that create_large_dag is in the condor_test directory.)\n\n<p></p><hr/>\n<em>2012-Oct-04 14:17:23 by wenger:</em> <br/>\n\nThis is pretty much no longer an issue because of <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=2807\" onclick=\"get_ticket_and_populate_wrapper('2807'); return false;\" title=\"Have DAGMan use a single node job user log file\">#2807</a></span> being done.  I'm going to leave it unresolved for now, but move it down to priority 5.  I can probably be abandoned once the new \"one log file\" feature is widely used.\n\n<p></p><hr/>\n<em>2013-Apr-02 13:58:54 by wenger:</em> <br/>\n\nI'm going to mark this as resolved because the \"workflow log file\" fixes it...</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2013-Apr-02 14:00", "status": "resolved", "created": "2012-Jan-13 10:03", "fixed_version": "2012-Jan-13 10:03", "broken_version": "v070704", "priority": "5", "subsystem": "Dag", "assigned_to": "wenger", "derived_from": "#659", "creator": "wenger", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "wenger@cs.wisc.edu, bt@cs.wisc.edu, bbockelm@cse.unl.edu", "due_date": ""}