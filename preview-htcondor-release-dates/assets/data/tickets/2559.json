{"id": 2559, "title": "Ticket #2559: collector and negotiator crash at CERN", "description": "<blockquote>\nMarian reports occasional crashes of the glidein collector and negotiator when running at a scale of 7k running.\n\n<p></p><pre>   $CondorVersion: 7.6.4 Oct 02 2011 BuildID: 374632 PRE-RELEASE-UWCS $\n   $CondorPlatform: x86_64_rhap_5 $\n</pre>\n\n<p>The source:\n<a class=\"external\" href=\"http://pages.cs.wisc.edu/~danb/7.6.4-pre/2011-10-03/condor-7.6.4-374632-x86_64_rhap_5-stripped.tar.gz\">http://pages.cs.wisc.edu/~danb/7.6.4-pre/2011-10-03/condor-7.6.4-374632-x86_64_rhap_5-stripped.tar.gz</a>\n\n</p><p>Marian says this problem was not observed in 7.6.1.  It was observed in 7.6.2.  Upgrading to the pre-release of 7.6.4 mentioned above did not solve the problem.\n\n</p><p>Both of the crashes reported by Marian happened while reading a classad from a network connection.  I do not see any bug in the code where the crash happened, which is <code>compat_classad::ConvertEscapingOldToNew()</code>, so I have asked for more examples and for core files.  There have been no code changes in compat_classad since 7.6.1.\n\n</p><p>collector crash:\n</p><div class=\"verbatim\">\n<pre>/usr/lib64/libstdc++.so.6(_Znwm+0x79)[0x33ec6bba89]\n/usr/lib64/libstdc++.so.6(_ZNSs4_Rep9_S_createEmmRKSaIcE+0x21)[0x33ec69a521]\n/usr/lib64/libstdc++.so.6(_ZNSs4_Rep8_M_cloneERKSaIcEm+0x2b)[0x33ec69aefb]\n/usr/lib64/libstdc++.so.6(_ZNSs7reserveEm+0x45)[0x33ec69b805]\n/usr/lib64/libstdc++.so.6(_ZNSs6appendEPKcm+0x6f)[0x33ec69ba1f]\ncondor_collector(_ZN14compat_classad23ConvertEscapingOldToNewEPKcRSs+0x37)[0x5a4ad7]\ncondor_collector(_Z13getOldClassAdP6StreamRN7classad7ClassAdE+0x142)[0x5d7bb2]\ncondor_collector(_ZN14compat_classad7ClassAd14initFromStreamER6Stream+0xf)[0x5a6f5f]\ncondor_collector(_ZN15CollectorEngine7collectEiP4SockP11sockaddr_inRi+0x6a)[0x4f393a]\ncondor_collector(_ZN15CollectorDaemon14receive_updateEP7ServiceiP6Stream+0x3f)[0x4e6def]\ncondor_collector(_ZN10DaemonCore18CallCommandHandlerEiP6Streamb+0x105)[0x4fa7e5]\ncondor_collector(_ZN10DaemonCore9HandleReqEP6StreamS1_+0x13b7)[0x508327]\ncondor_collector(_ZN10DaemonCore24CallSocketHandler_workerEibP6Stream+0x905)[0x50aa85]\ncondor_collector(_ZN10DaemonCore35CallSocketHandler_worker_demarshallEPv+0x1a)[0x50aaba]\ncondor_collector(_ZN13CondorThreads8pool_addEPFvPvES0_PiPKc+0x38)[0x5a2168]\ncondor_collector(_ZN10DaemonCore17CallSocketHandlerERib+0x149)[0x503079]\ncondor_collector(_ZN10DaemonCore6DriverEv+0x1bb5)[0x5052e5]\ncondor_collector(main+0xe57)[0x4f9cd7]\n/lib64/libc.so.6(__libc_start_main+0xf4)[0x33e961d994]\ncondor_collector(__gxx_personality_v0+0x411)[0x4d11e9]</pre></div>\n\n\n<p>negotiator crash:\n</p><div class=\"verbatim\">\n<pre>/usr/lib64/libstdc++.so.6[0x33ec6bb666]\n/usr/lib64/libstdc++.so.6[0x33ec6bb693]\n/usr/lib64/libstdc++.so.6[0x33ec6bb77a]\n/usr/lib64/libstdc++.so.6(_Znwm+0x79)[0x33ec6bba89]\n/usr/lib64/libstdc++.so.6(_ZNSs4_Rep9_S_createEmmRKSaIcE+0x21)[0x33ec69a521]\n/usr/lib64/libstdc++.so.6(_ZNSs4_Rep8_M_cloneERKSaIcEm+0x2b)[0x33ec69aefb]\n/usr/lib64/libstdc++.so.6(_ZNSs7reserveEm+0x45)[0x33ec69b805]\n/usr/lib64/libstdc++.so.6(_ZNSs6appendEPKcm+0x6f)[0x33ec69ba1f]\ncondor_negotiator(_ZN14compat_classad23ConvertEscapingOldToNewEPKcRSs+0x37)[0x584727]\ncondor_negotiator(_Z13getOldClassAdP6StreamRN7classad7ClassAdE+0x142)[0x5b52a2]\ncondor_negotiator(_ZN14compat_classad7ClassAd14initFromStreamER6Stream+0xf)[0x586baf]\ncondor_negotiator(_ZN11CondorQuery8fetchAdsERN14compat_classad11ClassAdListEPKcP11CondorError+0x252)[0x597a52]\ncondor_negotiator(_ZN13CollectorList5queryER11CondorQueryRN14compat_classad11ClassAdListEP11CondorError+0x185)[0x50c355]\ncondor_negotiator(_ZN10Matchmaker22obtainAdsFromCollectorERN14compat_classad11ClassAdListERNS0_27ClassAdListDoesNotDeleteAdsES4_R9HashTableI8MyStringS6_E+0x8ab)[0x4c83ab]\ncondor_negotiator(_ZN10Matchmaker15negotiationTimeEv+0x19c)[0x4c98dc]\ncondor_negotiator(_ZN12TimerManager7TimeoutEv+0x155)[0x4f8c65]\ncondor_negotiator(_ZN10DaemonCore6DriverEv+0x248)[0x4e6248]\ncondor_negotiator(main+0xe57)[0x4dc607]\n/lib64/libc.so.6(__libc_start_main+0xf4)[0x33e961d994]\ncondor_negotiator(__gxx_personality_v0+0x419)[0x4b9e19]\n</pre></div>\n\n\n<p>We discovered that there was a virtual memory resource limit that was causing the condor daemons to run out of memory:\n\n</p><p></p><pre>   virtual memory          (kbytes, -v) 768000\n</pre>\n\n<p>As further evidence, all of the core files that were produced were just under this size.\n\n</p><p>It was not as easy as one might have hoped to arrive at this diagnosis.  It would have been nice if something clear had been reported in the log files when Condor ran out of memory.</p></blockquote>", "remarks": "<blockquote>\n<em>2011-Nov-29 10:04:15 by danb:</em> <br/>\n\nI have added an out-of-memory handler that would have made debugging this situation much easier.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Nov-29 10:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0f6c1fc5ca8694e018107ad2a3d09d99b6d5a977\">[28475]</a></span>: Added an out of memory handler for <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=DaemonCore\" title=\"Daemon Core\">DaemonCore</a></span> daemons. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2559\" onclick=\"get_ticket_and_populate_wrapper('2559'); return false;\" title=\"collector and negotiator crash at CERN\">#2559</a></span>  (By Dan Bradley )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2011-Nov-29 10:02</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/31969c6ec5a588512fa404c672adfacfa3898f4c\">[28476]</a></span>: Documented improved handling of out-of-memory condition. ===GT=== <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=2559\" onclick=\"get_ticket_and_populate_wrapper('2559'); return false;\" title=\"collector and negotiator crash at CERN\">#2559</a></span> ===VersionHistory:Complete===  (By Dan Bradley )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2012-Feb-01 12:10", "status": "resolved", "created": "2011-Oct-18 13:48", "fixed_version": "2011-Oct-18 13:48", "broken_version": "v070604", "priority": "4", "subsystem": "", "assigned_to": "danb", "derived_from": "", "creator": "danb", "rust": "", "customer_group": "cms", "visibility": "public", "notify": "isfiligoi@ucsd.edu,dan@hep.wisc.edu,burt@fnal.gov,tstclair@redhat.com", "due_date": ""}