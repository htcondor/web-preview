{"id": 571, "title": "Ticket #571: Get Condor to run MakeMSI and have it create a sample MSI", "description": "<blockquote>\nFor one reason or another MakeMSI does not seem to run as a Condor job.  It's not clear if this is just a configuration problem, or if the binary is simply incompatible with Condor.  Please make a simple MakeMSI project and try to have Condor generate and MSI as part of a job (a job that includes the MakeMSI package as well as the installer template as part of the job payload).\n\n<p>I do know that the submit script needs <code>load_profile</code> set to <code>true</code> as MakeMSI uses VBScript as its scripting engine; unfortunately, that feature alone does not seem to fix the problem.  The only experience I have with running MakeMSI under Condor is in NMI, so I think the best place to start would be to create a small MakeMSI Condor job that could be run on a personal Condor, and then build up from there.\n\n</p><p>Please keep track any progress in this ticket, however insignificant it seems, as it may significantly enhance our chances of getting MakeMSI working in NMI.  Also take note of anything that Condor does (extra noise in logs, daemons crashing, etc.) that may hint at Condor itself being the problem, rather than MakeMSI.  Thanks.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-Jul-04 17:22:58 by ziliang:</em> <br/>\n\nCreated a small makemsi job and ran it on my zwabbit pool.  The current problem seems to be several missing system environment variables which are listed in my user account but are not present within the context of the job run.  This is odd since they are system environment variables, which implies that they are visible to everyone.  One hack around this is to set the environment variables myself before calling the makemsi scripts, but this appears to be a more serious underlying issue that should be fixed.\n\n<p>Talked to a ReactOS developer and he stated that there is no guarantee for environment variables to be loaded before a service starts.  But this was in reference to just the user environment variables, not the system ones.  The other possibility is some kind of override suppressing all the extraneous environment variables in the Condor sandbox on Windows.\n\n</p><p></p><hr/>\n<em>2009-Jul-06 13:40:21 by burnett:</em> <br/>\n\nMaybe using <code>getenv</code> in your submit file will help.  (<a class=\"external\" href=\"http://www.cs.wisc.edu/condor/manual/v7.2/2_5Submitting_Job.html#1761\">Manual entry</a>)\n\n<p></p><hr/>\n<em>2009-Jul-06 18:38:21 by burnett:</em> <br/>\n\nWhich environment variables were they, by the way?\n\n<p></p><hr/>\n<em>2009-Jul-07 10:35:41 by ziliang:</em> <br/>\n\nMAKEMSI_DB_COMPARE_TEMPLATE.MSI, MAKEMSI_DIR, MAKEMSI_MSIVAL2_DIR, MAKEMSI_WILOGUTL_EXE are the ones that are missing.  The problem now with passing in all the current environment variables is that the TMP variable also gets passed in, which results in the script trying to use my account's temp directory, which is obviously a no no from a sandbox standpoint.  Going to see whether it also gets locked out of the Windows global temp folder.\n\n<p></p><hr/>\n<em>2009-Jul-07 10:56:10 by ziliang:</em> <br/>\n\nTook out getenv and did a series of set commands in the script.  A MSI installer was created.  Now we know why it failed before.\n\n<p></p><hr/>\n<em>2009-Jul-07 13:00:06 by burnett:</em> <br/>\n\nCan you attach your work?  I'd like to see the missing pieces :)\n\n<p></p><hr/>\n<em>2009-Jul-07 13:36:04 by ziliang:</em> <br/>\n\nSub file:\n\n<p></p><pre>  universe = vanilla\n  Executable = test.bat\n  should_transfer_files = YES\n  when_to_transfer_output = ON_EXIT\n  transfer_input_files = test.bat,test2.bat,TryMe.MM,TryMe.ICO,TryMe.rtf,TryMe.VER,VersionInformationBox.vbs,MM.CMD\n  Queue\n</pre>\n\n<p>test.bat\n\n</p><p></p><pre>  set MAKEMSI_DB_COMPARE_TEMPLATE.MSI=E:\\Program Files\\MakeMsi\\UiSample.MSI\n  set MAKEMSI_DIR=E:\\Program Files\\MakeMsi\\\n  set MAKEMSI_MSIVAL2_DIR=E:\\Program Files\\MSIVAL2\n  set MAKEMSI_WILOGUTL_EXE=E:\\Program Files\\Microsoft Platform SDK\\Bin\\WiLogUtl.EXE\n  set TMP=%SystemRoot%\\TEMP\n  set TEMP=%SystemRoot%\\TEMP\n  test2.bat &gt; temp.txt\n</pre>\n\n<p>test2.bat\n\n</p><p></p><pre>  set\n  call MM.CMD TryMe.MM P\n  7z a out.7z out\n</pre>\n\n<p>Some of the files that I transfer like MM.CMD I don't necessarily need to transfer, it's just part of the whole mess of stuff that I put together to get an adhoc solution.  Also, I'm using 7z for zipping the output folder so the system needed that installed and added to the path.\n\n</p><p></p><hr/>\n<em>2009-Sep-23 17:06:58 by tannenba:</em> <br/>\n\nLooks like we know why MakeMSI would not run as a job, so am resolving this ticket...</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2010-Jan-31 08:36", "status": "resolved", "created": "2009-Jun-17 10:09", "fixed_version": "2009-Jun-17 10:09", "broken_version": "v070000", "priority": "4", "subsystem": "Win32", "assigned_to": "ziliang", "derived_from": "#560", "creator": "burnett", "rust": "", "customer_group": "other", "visibility": "public", "notify": "burnett@cs.wisc.edu, willb@redhat.com, tannenba@cs.wisc.edu", "due_date": ""}