{"id": 7399, "title": "Ticket #7399: condor_wait without inotify (lustre)", "description": "<blockquote>\nA user has a set-up where their users submit jobs from hosts with no running HTCondor daemons.  To find out when their DAGs completed, these users were running <strong>condor_wait</strong> on a DAGMan log file on a (Lustre) shared file system.  This worked for them using HTCondor 8.4.12, but broken when upgraded to HTCondor 8.8.5, because the Linux ports assume that if the kernel supports inotify, it's available for all log files, but Lustre does not currently support inotify.\n\n<p></p><div class=\"code\">\n<pre class=\"code\">In an attempt to see if we could get a quick fix, we tried building the\ncondor agent with a modified version of file_modified_trigger that did not\nuse inotify (simply changed the ifdef to use the polling-based fallback). We\nre-deployed this newly built version to schedds and remote hosts, but this\nversion also seemed to have issues - the dagman could no longer write to its\nlog file if a condor_wait was being called (possibly locking?). I was able\nget it working if I pushed the standard 8.8.5 release to schedd hosts, and\nmy modified version to a remote host; but we probably don't want to live in\nthis modified build forever (in fact, we've just rolled back these remote\nhosts to using 8.4.12).\n</pre></div>\n\n\n<p></p><div class=\"code\">\n<pre class=\"code\">&gt;          To make sure I understand: condor_wait built without inotify\n&gt; prevents a DAGMan built without inotify from writing to its log (while the\n&gt; condor_wait is running), but a DAGMan with inotify can write to its log\n&gt; (while the same condor_wait is running)?\n\nThat's correct - it seems the fallback for not using inotify may do some\nsort of locking.\n</pre></div>\n\n\n<p></p><div class=\"code\">\n<pre class=\"code\">&gt;          Actually, I guess it might be even faster to check -- if the\n&gt; schedd is running 8.8.x, what happens if condor_wait is from 8.4.x?\n\nThis is actually what we're doing right now, and it seems to work fine.\n</pre></div>\n\n\n<p>So it sounds like there's two problems:\n\n</p><p></p><ul>\n<li>8.8.5 does not fall back to the polling implementation if inotify is unavailable for a specific file.  (This needs to be a run-time, not a compile-time decision.)\n</li><li>The 8.8.5 polling implementation is broken (or used incorrectly by the new log-reading code?) -- the reader blocks the writer.\n</li><li>We also need to verify that the inotify-based and polling-based implementations properly interoperate (as both reader/writer and writer/reader), because some set-ups, like sshfs, permit/require both.</li></ul>\n</blockquote>", "remarks": "<blockquote>\n<em>2019-Dec-16 11:07:31 by tlmiller:</em> <br/>\n\nPossibly resolved by <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7373\" onclick=\"get_ticket_and_populate_wrapper('7373'); return false;\" title=\"condor_wait doesn't fall back on polling when inotify fails\">#7373</a></span>?\n\n<p></p><hr/>\n<em>2020-Jan-01 13:34:18 by tlmiller:</em> <br/>\n\nUser confirms resolved by <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=7373\" onclick=\"get_ticket_and_populate_wrapper('7373'); return false;\" title=\"condor_wait doesn't fall back on polling when inotify fails\">#7373</a></span>.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "incident", "last_change": "2020-May-04 09:50", "status": "resolved", "created": "2019-Nov-22 14:04", "fixed_version": "2019-Nov-22 14:04", "broken_version": "", "priority": "3", "subsystem": "Tools", "assigned_to": "tlmiller", "derived_from": "", "creator": "tlmiller", "rust": "a99023", "customer_group": "other", "visibility": "public", "notify": "tlmiller@cs.wisc.edu", "due_date": ""}