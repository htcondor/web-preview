{"id": 4251, "title": "Ticket #4251: Eviction while ssh_to_job is active crashes the starter", "description": "<blockquote>\nWhen the starter spawns an sshd to handle condor_ssh_to_job, it creates an SSHDProc object and gives it a pointer to a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> allocated on the stack. After the current call returns, the SSHDProc object has a pointer to an invalid area of memory in the stack. Any attempts to access it are likely to cause a crash.\n\n<p>One way this happens is if the starter is told to shutdown while the ssh_to_job session is still active. The shutdown code looks at the SSHDProc's job ad to see what signal should be sent to kill the sshd process.\n\n</p><p>LIGO's original description of the resulting crash follows:\n\n</p><p>When running:\n\n</p><p></p><div class=\"verbatim\">\n<pre>condor_run /bin/sleep 60\n</pre></div>\n\n\n<p>...on an x86_64 8.0.6 condor pool, the resulting starter processes for a dynamic slot crashed.\n\n</p><p></p><div class=\"verbatim\">\n<pre>[root@node505 condor]# file core\ncore: ELF 64-bit LSB core file x86-64, version 1 (SYSV), SVR4-style, from 'condor_starter -f -a slot5_3 grid.ldas.cit\ufffd\n</pre></div>\n\n\n<p>...with the following stack trace:\n\n</p><p></p><div class=\"verbatim\">\n<pre>(gdb) where\n#0  0x00007ff3310e2acc in WriteCoreDump () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#1  0x00007ff3310a4c35 in linux_sig_coredump(int) () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#2  &lt;signal handler called&gt;\n#3  0x0000003dfb241da8 in classad::EvalState::SetRootScope() () from /usr/lib64/libclassad.so.5\n#4  0x0000003dfb224f34 in classad::ClassAd::EvaluateAttr(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, classad::Value&amp;) const () from /usr/lib64/libclassad.so.5\n#5  0x0000003dfb2255d7 in classad::ClassAd::EvaluateAttrInt(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&amp;) const () from /usr/lib64/libclassad.so.5\n#6  0x00007ff33100794b in compat_classad::ClassAd::LookupInteger(char const*, int&amp;) const ()\n  from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#7  0x00007ff330f4cfa1 in ?? () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#8  0x00000000004206fa in OsProc::ShutdownGraceful() ()\n#9  0x0000000000439108 in VanillaProc::ShutdownGraceful() ()\n#10 0x000000000043f62f in CStarter::ShutdownGraceful() ()\n#11 0x000000000043df3c in CStarter::RemoteShutdownGraceful(int) ()\n#12 0x0000000000425fb6 in main_shutdown_graceful() ()\n#13 0x00007ff3310a3dd7 in handle_dc_sigterm(Service*, int) () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#14 0x00007ff3310c4199 in DaemonCore::Driver() () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#15 0x00007ff3310a6839 in dc_main(int, char**) () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#16 0x0000003ab361ed1d in __libc_start_main () from /lib64/libc.so.6\n#17 0x000000000041dc29 in _start ()\n(gdb)\n</pre></div>\n\n\n<p>...possibly related to running condor_ssh_to_job -auto-retry to login to this machine. Once Stuart logged in, he ran top and was promptly logged out as the original condor job lost its affiliation with that machine.\n\n</p><p>The core file and Starter log file may be found at: <a class=\"external\" href=\"http://www.ligo.caltech.edu/~anderson/condor/starter-8.0.6/\">http://www.ligo.caltech.edu/~anderson/condor/starter-8.0.6/</a>\n\n</p><p>This failed in a second a second attempt (that matched to the same execute machine) with the following stack trace,\n\n</p><p></p><div class=\"verbatim\">\n<pre>(gdb) where\n#0  0x00007ffa93f25acc in WriteCoreDump () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#1  0x00007ffa93ee7c35 in linux_sig_coredump(int) () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#2  &lt;signal handler called&gt;\n#3  0x0000003dfb241da8 in classad::EvalState::SetRootScope() () from /usr/lib64/libclassad.so.5\n#4  0x0000003dfb224f34 in classad::ClassAd::EvaluateAttr(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, classad::Value&amp;) const () from /usr/lib64/libclassad.so.5\n#5  0x0000003dfb2255d7 in classad::ClassAd::EvaluateAttrInt(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&amp;) const () from /usr/lib64/libclassad.so.5\n#6  0x00007ffa93e4a94b in compat_classad::ClassAd::LookupInteger(char const*, int&amp;) const ()\n  from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#7  0x00007ffa93d8ffa1 in ?? () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#8  0x00000000004206fa in OsProc::ShutdownGraceful() ()\n#9  0x0000000000439108 in VanillaProc::ShutdownGraceful() ()\n#10 0x000000000043f62f in CStarter::ShutdownGraceful() ()\n#11 0x000000000043df3c in CStarter::RemoteShutdownGraceful(int) ()\n#12 0x0000000000425fb6 in main_shutdown_graceful() ()\n#13 0x00007ffa93ee6dd7 in handle_dc_sigterm(Service*, int) () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#14 0x00007ffa93f07199 in DaemonCore::Driver() () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#15 0x00007ffa93ee9839 in dc_main(int, char**) () from /usr/lib64/condor/libcondor_utils_8_0_6.so\n#16 0x0000003ab361ed1d in __libc_start_main () from /lib64/libc.so.6\n#17 0x000000000041dc29 in _start ()\n(gdb)\n</pre></div>\n</blockquote>", "remarks": "<blockquote>\n<em>2014-Mar-12 13:33:29 by jfrey:</em> <br/>\n\nNormally, the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=UserProc\" title=\"User Proc\">UserProc</a></span> class (and its child classes) don't own the memory of the job ad they are given. The ad is managed by the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=JobInfoCommunicator\" title=\"Job Info Communicator\">JobInfoCommunicator</a></span> class. For the SSHDProc, there's no other good place for the ad to be managed. I'll make the SSHDProc able to manage the ad's memory.\n\n<p></p><hr/>\n<em>2014-Mar-12 17:14:11 by johnkn:</em> <br/>\n\nCODE REVIEW: looks ok.  The fact that this code depends on the fact that the constructor for SSHDProc&amp;#65533;class runs after UserProc::initialize is called makes me a bit uneasy, but fixing that would make for a much bigger set of changes.\napproved.</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2014-Mar-12 11:59</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/c35a4c10b1408e8cc1ae8861f5947adf85fd7310\">[39592]</a></span>: Eviction while ssh_to_job active crashes the starter. <span class=\"ticket\"><a class=\"defer\" href=\"/wiki-archive/tickets/?ticket=4251\" onclick=\"get_ticket_and_populate_wrapper('4251'); return false;\" title=\"Eviction while ssh_to_job is active crashes the starter\">#4251</a></span> Allow the SSHDProc to be responsible for deleting the job ad it's given. Before, it was given a pointer to an ad on the stack. Any subsequent access to the ad would cause a crach. One instance where this happens is during shutdown, when the\u00a0[...]\n (By Jaime Frey )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2014-Mar-13 08:29", "status": "defer", "created": "2014-Mar-10 14:14", "fixed_version": "2014-Mar-10 14:14", "broken_version": "v080000", "priority": "5", "subsystem": "DaemonsExecNode", "assigned_to": "jfrey", "derived_from": "", "creator": "pfc", "rust": "a26709", "customer_group": "ligo", "visibility": "public", "notify": "pfcouvar@syr.edu, anderson@ligo.caltech.edu, gthain@cs.wisc.edu, tannenba@cs.wisc.edu,pcouvare@caltech.edu", "due_date": ""}