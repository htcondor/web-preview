{"id": 4015, "title": "Ticket #4015: Bad work fetch jobs leave slot in Claimed/Idle state", "description": "<blockquote>\nIf the starter fails to start a work fetch job and exits, the slot remains in Claimed/Idle state. It should return to Unclaimed/Idle. One easy way to trigger this condition is to have an invalid executable.\n\n<p>This happens with both static and partitionable slots.</p></blockquote>", "remarks": "<blockquote>\n<em>2013-Oct-31 14:21:30 by jfrey:</em> <br/>\n\nIt turns out after a work fetch job completes or fails to start, the slot remains in Claimed/Idle until the next UPDATE_INTERVAL, when the startd runs the fetch hook again to see if there's another job. If there isn't, the slot returns to Unclaimed.\n\n<p>If the starter fails to start the job, the Job Exit hook is still called, but there are no exit status or runtime attributes.\n\n</p><p>The startd could be made to run the Fetch Work hook immediately after the starter exits. But that could create a rapid black hole for misconfigured work fetch jobs.</p></blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "defect", "last_change": "2013-Oct-31 14:21", "status": "new", "created": "2013-Oct-28 14:08", "fixed_version": "2013-Oct-28 14:08", "broken_version": "v080000", "priority": "4", "subsystem": "DaemonsExecNode", "assigned_to": "", "derived_from": "", "creator": "jfrey", "rust": "", "customer_group": "other", "visibility": "public", "notify": "", "due_date": ""}