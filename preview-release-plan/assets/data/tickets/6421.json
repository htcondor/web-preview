{"id": 6421, "title": "Ticket #6421: Improve transfer_output_remaps syntax", "description": "<blockquote>\nWhile we were pondering syntaxes for multi-step jobs (see <span class=\"ticket\"><a class=\"new\" href=\"/wiki-archive/tickets/?ticket=6406\" onclick=\"get_ticket_and_populate_wrapper('6406'); return false;\" title=\"Vanilla-universe multicommand jobs\">#6406</a></span>), Christina noted that the grouping syntaxes would be a big improvement over the current syntax for <code>transfer_output_remaps</code>, which is a big long string with significant characters and their escapes.  Viz:\n\n<p></p><div class=\"verbatim\">\n<pre>transfer_output_remaps = \"results$(proc) = output/results$(proc); params$(proc) = output/param$(proc)\"\n</pre></div>\n\n\n<p>would be more-easily written on multiple lines.  Mat noted that it would also be clearer to explicit indicate the direction of remapping, viz:\n\n</p><p></p><div class=\"verbatim\">\n<pre>transfer_output_remaps @= {\n    results$(proc) -&gt; output/results$(proc)\n    param$(proc) -&gt; output/param$(proc)\n}\n</pre></div>\n\n\n<p>Since <code>transfer_output_remaps</code> already includes a custom parser, this shouldn't be horribly difficult to implement, and \"ASCII arrow right\" seems even less likely to show up in a filename than equals or semicolon.  It would still have to have an escape, though.  The custom parsing code could detect if the string had newlines and start by converting them into semicolons and then stripping leading and trailing whitespace.\n\n</p><p>Additionally, since this would turn into the old-style representation (whatever it might be) in the job ad, it would have to be careful about escaping semicolons and equal signs appropriately (however that might be; the manual specifies how to do it in the submit file language).\n\n</p><p>The initial implementation could use the existing here file syntax --\n\n</p><p></p><div class=\"verbatim\">\n<pre>transfer_output_remaps @= END_REMAPS\n ...\n@END_REMAPS\n</pre></div>\n\n\n<p>initially, so this ticket doesn't need to be assigned to TJ until we're sure it's worth adding syntactic sugar for this feature.</p></blockquote>", "remarks": "<blockquote>\n</blockquote>", "derived_tickets": "", "attachments": "<html><head></head><body></body></html>", "check_ins": "", "type": "enhance", "last_change": "2020-Nov-09 10:51", "status": "new", "created": "2017-Sep-26 14:48", "fixed_version": "2017-Sep-26 14:48", "broken_version": "v080703", "priority": "4", "subsystem": "Libs", "assigned_to": "johnkn", "derived_from": "", "creator": "tlmiller", "rust": "", "customer_group": "chtc", "visibility": "public", "notify": "tlmiller@cs.wisc.edu, ckoch5@wisc.edu, johnkn@cs.wisc.edu, matyas@cs.wisc.edu", "due_date": ""}