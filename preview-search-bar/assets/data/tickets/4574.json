{"id": 4574, "title": "Ticket #4574: Provide ClassAd functions for merging environments", "description": "<blockquote>\n(Copy of <a class=\"external\" href=\"https://jira.opensciencegrid.org/browse/SOFTWARE-1557\">https://jira.opensciencegrid.org/browse/SOFTWARE-1557</a>)\n\n<p>Site admins have complained that manipulating HTCondor environment strings via the existing <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> library is an impossible mess.\n\n</p><p>We'd like to see four functions added to HTCondor's shipped classads:\n</p><ol>\n<li>mergeEnvironmentV1(env1a, env1b, ...)\n</li><li>mergeEnvironmentV2(env2a, env2b, ...)\n</li><li>convertV1toV2(env1a)\n</li><li>convertV2toV1(env2a)\n</li></ol>\n\n<p>mergeEnvironmentV{1,2} takes two environment strings (formatted using HTCondor's V1 or V2 environment quoting rules) and creates a single string where the values from the Nth argument replace the ones from the N+1 if a key is in both. convertV{1,2} to {2,1} converts between the different environment string styles.\n\n</p><p>HTCondor's libcondor_utils.so provides functions that implement this - we just need to expose these via classads.</p></blockquote>", "remarks": "<blockquote>\n<em>2014-Sep-17 11:27:50 by tannenba:</em> <br/>\n\nThis is doable, and seems pretty easy.\n\n<p>Shame we need to support V1 and V2.... maybe would be better to have a convention that we always convert to V2, and V2 is universally accepted/used in OSG (i.e. by the factory etc).\n\n</p><p></p><hr/>\n<em>2014-Sep-17 11:28:17 by tannenba:</em> <br/>\n\nThese functions should only go into the classad compat layer, not in the classad library proper....\n\n<p></p><hr/>\n<em>2014-Sep-17 13:26:09 by bbockelm:</em> <br/>\n\nHi Todd,\n\n<p>I would be fine with your proposal about \"always moving to V2\".\n\n</p><p>I also agree that condor_compat is a fine place to put this.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2015-Jan-12 09:22:49 by jfrey:</em> <br/>\n\n<strong>Code Review</strong>\n\n<p></p><ul>\n<li>What are listToArgs() and argsToList() used for?\n\n<p></p></li><li>You set <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CondorErrMsg\" title=\"Condor Err Msg\">CondorErrMsg</a></span> in a lot of places. In the existing code, it's mostly used for memory allocation failures. Are you using it in the python bindings?\n\n<p></p></li><li>Every time you set a string value for a result, you first copy the value into a std::string. Why the extra step?\n\n<p></p></li><li>Your new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> functions should return false if an Evaluate() fails or if the construction of the result fails.\n\n<p></p></li><li>problemExpression() never fails, so why does it return a bool?\n\n<p></p></li><li>In ArgsToList(), if construction of the result list fails part-way through, memory for the portion constructed so far is leaked.\n</li></ul>\n\n<p></p><hr/>\n<em>2015-Jan-12 10:01:41 by bbockelm:</em> <br/>\n\nHi Jaime,\n\n<p></p><ul>\n<li>listToArgs and argsToList are somewhat orthogonal to the ticket, but necessary and useful for doing transforms (the same thing that motivated the ticket!).  They provide a clear mechanism for transforming the arguments lists -- especially the string escaping rules are tricky and seem to be impossible to do in bare <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>.\n</li><li><span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=CondorErrMsg\" title=\"Condor Err Msg\">CondorErrMsg</a></span> is indeed exposed to python bindings.  I know we do a poor job of utilizing the mechanism throughout the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> codebase, but that's something I'd like to improve.  It's been very useful in debugging, especially in places where you can't use the debug() function.\n</li><li>I didn't realize there was a SetStringValue(const char *) overload.  I'll tweak the callsites to eliminate the copies where possible.\n</li><li>problemExpression returns boolean because I use it as \"return problemExpression(...)\".  So, while it can't fail, I like to be able to control the return value of the various error cases from a single location.\n</li><li>Good catch; will fix.\n</li></ul>\n\n<p></p><hr/>\n<em>2015-Jan-12 10:40:52 by jfrey:</em> <br/>\n\nI'm having trouble thinking of a common situation where a CE would need to manipulate the arguments of an incoming job.\n\n<p>The problem with the \"return problemExpression(...)\" idiom is that the return value isn't always the same and that determination is outside of problemExpression().\n\n</p><p></p><hr/>\n<em>2015-Jan-12 10:43:21 by jfrey:</em> <br/>\n\nOk. I can think of a case where the CE would want to manipulate the job's arguments: Adding a wrapper script.\n\n<p></p><hr/>\n<em>2015-Jan-12 16:10:19 by bbockelm:</em> <br/>\n\nHi Jaime,\n\n<p>The point of the \"return problemExpression(...)\" idiom is that all call sites with a problematic expression should indeed have the same return value - better to control it at one place than at several.\n\n</p><p>Do you feel strongly about this?  I would prefer to keep as-is, but would be ok with changing the call sites in order to move forward to the next ticket.\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2015-Jan-12 16:53:11 by jfrey:</em> <br/>\n\nThe Evaluate() call in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> makes a clear distinction between errors due to mal-formed user input (wrong data type for the argument to a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> operator or function, wrong number of arguments to a <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> function, etc) and internal library errors (memory allocation failure, recursing too deep). Evaluate() returns true with a result value of Error in the first case and returns false in the second case.\n\n<p>Your <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> functions return true via &amp;#8203;problemExpression() in both classes of error.\n\n</p><p></p><hr/>\n<em>2015-Jan-12 19:40:35 by bbockelm:</em> <br/>\n\nHi Jaime,\n\n<p>I think I understand what you mean now.  I went back through the new functions and changed a few places where internal errors still resulted in \"return true;\".\n\n</p><p>However, I can't find any cases where \"return problemExpression(...)\" should return false based on the examples you gave.  In fact, as the name suggests, the function helps in the case where there is a problem with the user's input.  I figure that, if there's input problems, then we should set error value and return true.\n\n</p><p>Thoughts?  Which case were you looking at that returns the wrong value?\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2015-Jan-13 13:58:07 by jfrey:</em> <br/>\n\nOn closer inspection, the only uses of problemExpression() when false should be returned are when Evaluate() fails. I thought some of the calls into the Env and <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ArgList\" title=\"Arg List\">ArgList</a></span> might also merit returning false, but it appears they generally only fail if the provided strings are not in the expected format.\n\n<p></p><hr/>\n<em>2015-Jan-21 10:32:10 by jfrey:</em> <br/>\n\nOn thinking about these functions some more, I again don't see the usefulness of listToArgs() and argsToList(). They can't be used to add a wrapper script to jobs, which you can do with the strcat() function.\n\n<p>And the job of mergeEnvironment() could be done with strcat(), though maybe not quite as nicely. As it is, mergeEnvironment() and envV1toV2() are a little clumsy to use. In typical usage, the job route would have an entry like this:\n</p><div class=\"verbatim\">\n<pre>set_Environment = mergeEnvrionment(\n    ( Env =!= Undefined ? envV1toV2( Env ) : Environment ),\n    &lt;CE env string&gt; )\n</pre></div>\n\n\n<p>We could simplify that by having mergeEnvironment() treat arguments that evaluate to Undefined as empty strings.\n\n</p><p></p><hr/>\n<em>2015-Jan-22 20:48:15 by bbockelm:</em> <br/>\n\nHi Jaime,\n\n<p>I agree with your suggestion about handling of Undefined in the environment functions.\n\n</p><p>I don't believe strcat can be used for munging argument lists though: you must guarantee that the path to any script has no spaces (spaces must be escaped appropriately, hence the reason for this any!).\n\n</p><p>Why can't listToArgs be used for adding wrapper scripts?  I plan on doing something like:\n\n</p><p></p><div class=\"verbatim\">\n<pre>arg_list = classad.ExprTree(\"argsToList(Arguments)\").eval(ad)\narg_list = [\"/path/ to/script\"] + arg_list\nreturn arg_list\n</pre></div>\n\n\n<p>I guess I was thinking parochially - how I was going to do this in python - but why wouldn't be useful in a pure-classad context?\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2015-Jan-23 09:53:56 by jfrey:</em> <br/>\n\nThere's no operator in <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> to add entries to a list, so you can't do the the add-a-wrapper-script thing in pure <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span> with these functions.\n\n<p></p><hr/>\n<em>2015-Jan-23 09:59:09 by bbockelm:</em> <br/>\n\n<div class=\"verbatim\">\n<pre>&gt;&gt;&gt; classad.ExprTree(\"{1} + {2}\").eval()\nclassad.Value.Error\n</pre></div>\n\n\n<p>Doh!  Although, I suppose that's what extension functions are for:\n\n</p><p></p><div class=\"verbatim\">\n<pre>&gt;&gt;&gt; def add(a, b):  return a+b\n...\n&gt;&gt;&gt; classad.register(add)\n&gt;&gt;&gt; classad.ExprTree(\"add({1}, {2})\").eval()\n[1L, 2L]\n</pre></div>\n\n\n<p>Can we go ahead and merge the arg-mangling functions and plan on a follow-up ticket for mangling lists?  Especially with the planned \"condor_submit features\", I see this being a common need.\n\n</p><p></p><hr/>\n<em>2015-Jan-23 11:44:21 by bbockelm:</em> <br/>\n\nWith the changes to the environment Jaime suggested:\n\n<p></p><div class=\"verbatim\">\n<pre>&gt;&gt;&gt; htcondor.enable_classad_extensions()\n&gt;&gt;&gt; classad.ExprTree('mergeEnvironment(envV1toV2(Env), Environment, \"FOO=BAR\")').eval({})\n'FOO=BAR'\n&gt;&gt;&gt; classad.ExprTree('mergeEnvironment(envV1toV2(Env), Environment, \"FOO=BAR\")').eval({'Env': 'BAR=1'})\n'FOO=BAR BAR=1'\n&gt;&gt;&gt; classad.ExprTree('mergeEnvironment(envV1toV2(Env), Environment, \"FOO=BAR\")').eval({'Env': 'BAR=1', 'Environment': 'BAZ=2'})\n'BAZ=2 FOO=BAR BAR=1'\n&gt;&gt;&gt; classad.ExprTree('mergeEnvironment(envV1toV2(Env), Environment, \"FOO=BAR\")').eval({'Env': 'BAR=1', 'Environment': 'FOO=2'})\n'FOO=BAR BAR=1'\n&gt;&gt;&gt; classad.ExprTree('mergeEnvironment(envV1toV2(Env), Environment, \"FOO=BAR\")').eval({'Env': 'BAR=1', 'Environment': 'BAR=2'})\n'FOO=BAR BAR=2'\n</pre></div>\n\n\n<p></p><hr/>\n<em>2015-Feb-11 20:24:47 by bbockelm:</em> <br/>\n\nHi Jaime,\n\n<p>Coming back to this after a bit of a rest - is it ready to go?\n\n</p><p>Brian\n\n</p><p></p><hr/>\n<em>2015-Feb-27 10:37:04 by jfrey:</em> <br/>\n\nThis is ready to merge. I'd like to hold off on documenting the argument functions, since they're mainly useful only in combination with the python bindings. We may want to provide something more widely useable.\n\n<p></p><hr/>\n<em>2015-Apr-14 11:11:57 by jfrey:</em> <br/>\n\nI just noticed a problem with the envV1ToV2() function and cross-platform submissions. The delimiter for the old environment syntax is different between Windows and unix (vertical bar vs semicolon). There's a separate attribute, <code>EnvDelim</code>, that indicates what that delimiter is. That should be an optional second parameter to envV1ToV2().\n\n<p></p><hr/>\n<em>2015-Apr-14 12:35:17 by bbockelm:</em> <br/>\n\nA few questions:\n<ul>\n<li>What should the default value be for <code>EnvDelim</code>?  The Unix version or Windows version (or should it simply depend on the compiled platform?)?\n</li><li>Should we allow the user to specify the actual delimiter or should we allow them to specify \"WINDOWS\" versus \"UNIX\"?\n</li><li>I don't suppose we can auto-detect, can we?\n</li></ul>\n\n<p></p><hr/>\n<em>2015-Apr-14 13:40:51 by jfrey:</em> <br/>\n\nThe default for <code>EnvDelim</code> is vertical bar if you're running on Windows and semicolon if you're running on unix. I suggest making the delimiter an optional second parameter for envV1ToV2(), and a missing second parameter or one that evaluates to Undefined results in the default value for the local platform. Anyone who needs to worry about cross-platform support and has a job ad in hand can pass <code>EnvDelim</code> as the second parameter.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"new\" href=\"/wiki-archive/tickets/?ticket=5003\" onclick=\"get_ticket_and_populate_wrapper('5003'); return false;\" title=\"Improve ClassAd functions for job argument/environment manipulation\">#5003</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nImprove <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> functions for job argument/environment manipulation</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Apr-14 13:46</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/e8acb36e2525b9adc188b43b072b19167161d9f5\">[44603]</a></span>: minor formatting and editing of 8.3.5 doc for <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Apr-14 11:57</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/cbc7f8317662aa0dce1829fa28d67c2437a49470\">[44602]</a></span>: correct LaTeX error that cause failure of manual to build <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span>  (By Karen Miller )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Apr-14 11:30</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/4b49d3e249b8e240e59fe87185ad94b6377572a6\">[44601]</a></span>: Docs for new classad functions envV1ToV2() and mergeEnvironment(). <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-03 10:36</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/09743cb2b9a4a609d6542a1afed0ef26efda6e5d\">[43496]</a></span>: Fix duplicate variables in new arg-handling <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> functions. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Mar-01 09:47</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/6cae7f88e921d26f32baf9a86453573b0b17e75b\">[43478]</a></span>: Fix build issues on OS X. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span> Merge caused some missing files in CMakeLists.txt for condor_utils.  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Feb-28 16:06</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/42799165262004cdbd92e6c39ee53af0d6817873\">[43476]</a></span>: Merged <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/649581c53438d8c6fd773d44e8cfe77adc7a1866\">[42069]</a></span>, <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/cd5a5d64fb6c8e76e1e4e182150570c667e0e868\">[42070]</a></span>, <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/da34f8fa66de7424aee4e04ceba738d85c3de379\">[42177]</a></span>, <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/6640c31d2bafb19840778abf6b09806ea2f14a4e\">[42349]</a></span>, Merge branch 'V8_3-gt4574'. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span> Conflicts: src/python-bindings/CMakeLists.txt src/python-bindings/htcondor.cpp  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-28 11:53</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/46668582f39666d390197e4984d955fd908f00ad\">[42434]</a></span>: Unparse as old <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> in problemExpression(). <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-28 11:50</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/d365a08fc0e62fcc9394155f9261b02962d98c8d\">[42433]</a></span>: Add files to libcondorapi for new <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> functions. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span>  (By Jaime Frey )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-23 11:44</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/6640c31d2bafb19840778abf6b09806ea2f14a4e\">[42349]</a></span>: Additional improvements from code review. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span> In particular, 1) Have the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAd\" title=\"Class Ad\">ClassAd</a></span> function exit false whenever an evaluation of its arguments fail (similar to the stringList functions). 2) Do not treat undefined values as an error for merging environments. By simply ignoring them, it makes mergeEnvironment\u00a0[...]\n (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-12 19:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/da34f8fa66de7424aee4e04ceba738d85c3de379\">[42177]</a></span>: Address issues from code review. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-01 21:37</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/cd5a5d64fb6c8e76e1e4e182150570c667e0e868\">[42070]</a></span>: Expose compat_classad layers to python bindings. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span>  (By Brian Bockelman )</td></tr>\n<tr><td align=\"right\" valign=\"top\" width=\"160\">2015-Jan-01 21:32</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/649581c53438d8c6fd773d44e8cfe77adc7a1866\">[42069]</a></span>: Allow environment and argument lists to be manipulated from <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=ClassAds\" title=\"Class Ads\">ClassAds</a></span>. <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=4574\" onclick=\"get_ticket_and_populate_wrapper('4574'); return false;\" title=\"Provide ClassAd functions for merging environments\">#4574</a></span>  (By Brian Bockelman )</td></tr>\n</tbody></table>", "type": "enhance", "last_change": "2015-Apr-14 14:23", "status": "resolved", "created": "2014-Sep-05 08:24", "fixed_version": "2014-Sep-05 08:24", "broken_version": "", "priority": "3", "subsystem": "DaemonsSubmitNode", "assigned_to": "jfrey", "derived_from": "#4555", "creator": "bbockelm", "rust": "", "customer_group": "osg", "visibility": "public", "notify": "bbockelm@cse.unl.edu blin@cs.wisc.edu, marian.zvada@cern.ch", "due_date": ""}