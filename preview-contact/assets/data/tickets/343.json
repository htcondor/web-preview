{"id": 343, "title": "Ticket #343: condor_master -pidfile will stomp pidfile of running master", "description": "<blockquote>\nIf you run \"condor_master -pidfile /tmp/master.pid\" twice in a row, /tmp/master.pid will contain the PID of the second condor_master, the one that exited immediately because because it failed to get the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=InstanceLock\" title=\"Instance Lock\">InstanceLock</a></span>.\n\n<p>To reproduce:\n\n</p><p></p><ol>\n<li>Install and configure Condor so it can run.\n</li><li>condor_master -pidfile /tmp/master.pid\n</li><li>cat /tmp/master.pid   - Note the PID.\n</li><li>condor_master -pidfile /tmp/master.pid\n</li><li>cat /tmp/master.pid   - Note the PID.\n</li><li>Check <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=MasterLog\" title=\"Master Log\">MasterLog</a></span>.  Note that the second instance exited immediately, but that its PID matches the PID from step 5.\n</li></ol>\n\n<p>Observed behavior: /tmp/master.pid contains the PID of the second, exited condor_master.\n\n</p><p>Expected behavior: /tmp/master.pid contains the PID of the first, still running condor_master.</p></blockquote>", "remarks": "<blockquote>\n<em>2009-May-26 13:55:21 by adesmet:</em> <br/>\n\n<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=494\" onclick=\"get_ticket_and_populate_wrapper('494'); return false;\" title=\"Condor with --pidfile will write its pid before checking Instance lock\">#494</a></span> is a duplicate of this ticket.  Contents duplicated below:\n\n<p>Condor with --pidfile will write its pid before checking Instance lock\n\n</p><p>Condor with --pidfile will write its pid before checking Instance lock This ends up writing over the pidfile created by the original condor instance. This will lead to init scripts trying to kill the wrong pid when trying to shutdown condor.\n\n</p><p>I believe Condor should not write the pidfile until it knows that it is the one true instance.\n\n</p><p></p><hr/>\n<em>2009-Dec-21 08:33:00 by matt:</em> <br/>\n\nTo reproduce...\n\n<p></p><div class=\"verbatim\">\n<pre>$ _CONDOR_LOG=$PWD _CONDOR_MASTER_INSTANCE_LOCK=$PWD/InstanceLock condor_master -pidfile $PWD/PidFile\n$ cat PidFile\n11061\n$ _CONDOR_LOG=$PWD _CONDOR_MASTER_INSTANCE_LOCK=$PWD/InstanceLock ./condor_master -pidfile $PWD/PidFile -t -f\n...\n12/21 09:26:59 ** PID = 11088\n...\n12/21 09:26:59 FileLock::obtain(1) failed - errno 11 (Resource temporarily unavailable)\n12/21 09:26:59 ERROR \"Can't get lock on \"/home/matt/Documents/Condor/CONDOR_SRC/src/condor_master.V6/InstanceLock\"\" at line 955 in file master.cpp\n$ cat PidFile\n11088\n$ ps 11061 11088\n  PID TTY      STAT   TIME COMMAND\n11061 ?        Ss     0:00 ./condor_master -pidfile ...\n</pre></div>\n\n\n<p></p><hr/>\n<em>2009-Dec-21 08:41:48 by matt:</em> <br/>\n\nDesired output...\n\n<p></p><div class=\"verbatim\">\n<pre>$ _CONDOR_LOG=$PWD _CONDOR_MASTER_INSTANCE_LOCK=$PWD/InstanceLock ./condor_master -pidfile $PWD/PidFile\n$ cat PidFile\n12311\n$ _CONDOR_LOG=$PWD _CONDOR_MASTER_INSTANCE_LOCK=$PWD/InstanceLock ./condor_master -pidfile $PWD/PidFile -t -f\n...\n12/21 09:40:54 ** PID = 12338\n...\n12/21 09:40:54 FileLock::obtain(1) failed - errno 11 (Resource temporarily unavailable)\n12/21 09:40:54 ERROR \"Can't get lock on \"/home/matt/Documents/Condor/CONDOR_SRC/src/condor_master.V6/InstanceLock\"\" at line 955 in file master.cpp\n$ cat PidFile\n12311\n</pre></div>\n\n\n<p></p><hr/>\n<em>2009-Dec-21 08:55:09 by matt:</em> <br/>\n\nFYI, a problem I'm not fixing is TRUNC_MASTER_LOG_ON_OPEN=TRUE <strong>will</strong> trash the MASTER_LOG before the master gets a chance to check the INSTANCE_LOCK.</blockquote>", "derived_tickets": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">\n<span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=494\" onclick=\"get_ticket_and_populate_wrapper('494'); return false;\" title=\"Condor with --pidfile will write its pid before checking Instance lock\">#494</a></span></td>\n<td align=\"center\" valign=\"center\" width=\"30\">\n<span class=\"icon ptr1\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\">\nCondor with --pidfile will write its pid before checking Instance lock</td></tr>\n</tbody></table>", "attachments": "<html><head></head><body></body></html>", "check_ins": "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody><tr><td align=\"right\" valign=\"top\" width=\"160\">2009-Dec-21 08:42</td>\n<td align=\"center\" valign=\"top\" width=\"30\">\n<span class=\"icon dot\">\u00a0</span></td>\n<td align=\"left\" valign=\"top\"> \nCheck-in <span class=\"chng\"><a href=\"https://github.com/htcondor/htcondor/commit/0ba7136ccfbddde7c4636b2f4f281319aecd71ab\">[16736]</a></span>: Drop pidfile after giving the master a chance to check the <span class=\"wiki\"><a class=\"missing\" href=\"wiki?p=InstanceLock\" title=\"Instance Lock\">InstanceLock</a></span>, <span class=\"ticket\"><a class=\"resolved\" href=\"/wiki-archive/tickets/?ticket=343\" onclick=\"get_ticket_and_populate_wrapper('343'); return false;\" title=\"condor_master -pidfile will stomp pidfile of running master\">#343</a></span> It would be better to explicitly give another dc_ hook that comes right after dprintf is initialized  (By Matthew Farrellee )</td></tr>\n</tbody></table>", "type": "defect", "last_change": "2009-Dec-21 08:56", "status": "resolved", "created": "2009-Mar-23 14:03", "fixed_version": "2009-Mar-23 14:03", "broken_version": "v070201", "priority": "4", "subsystem": "Daemons", "assigned_to": "matt", "derived_from": "", "creator": "adesmet", "rust": "", "customer_group": "other", "visibility": "public", "notify": "khahn@cs.wisc.edu matt@cs.wisc.edu", "due_date": ""}