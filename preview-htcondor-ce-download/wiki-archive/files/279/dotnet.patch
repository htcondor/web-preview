diff --git a/src/condor_includes/condor_attributes.h b/src/condor_includes/condor_attributes.h
index d2c4f8d..11bfa4e 100644
--- a/src/condor_includes/condor_attributes.h
+++ b/src/condor_includes/condor_attributes.h
@@ -831,6 +831,8 @@ extern const char * const ATTR_HASH_NAME;
 extern const char * const ATTR_AUTHENTICATED_IDENTITY;
 extern const char * const ATTR_DELEGATE_JOB_GSI_CREDENTIALS_LIFETIME;
 
+extern const char * const ATTR_DOTNET_VERSIONS;
+
 // Enumerate the ones that can't be constant strings..
 typedef enum
 {
diff --git a/src/condor_startd.V6/ResAttributes.cpp b/src/condor_startd.V6/ResAttributes.cpp
index bd16f8c..9a4d73b 100644
--- a/src/condor_startd.V6/ResAttributes.cpp
+++ b/src/condor_startd.V6/ResAttributes.cpp
@@ -22,6 +22,10 @@
 #include "startd.h"
 #include <math.h>
 
+static char * get_windows_reg_value(
+	const char * pszRegKey, 
+	const char * pszValueName, 
+	int          options = 0);
 
 MachAttributes::MachAttributes()
 {
@@ -94,6 +98,8 @@ MachAttributes::MachAttributes()
 	}
 	m_local_credd = NULL;
 	m_last_credd_test = 0;
+
+	m_dot_Net_Versions = NULL;
 #endif
 }
 
@@ -107,6 +113,7 @@ MachAttributes::~MachAttributes()
 	if( m_ckptpltfrm ) free( m_ckptpltfrm );
 #if defined(WIN32)
 	if( m_local_credd ) free( m_local_credd );
+	if( m_dot_Net_Versions ) free( m_dot_Net_Versions );
 #endif
 }
 
@@ -162,6 +169,113 @@ MachAttributes::compute( amask_t how_much )
 			free(m_ckptpltfrm);
 		}
 		m_ckptpltfrm = strdup(sysapi_ckptpltfrm());
+
+#ifdef WIN32
+		char* detected_versions = param("DOT_NET_VERSIONS");
+		if(!detected_versions)
+		{
+			if(!m_dot_Net_Versions)
+			{
+				string s_dot_Net_Versions;
+				
+				char* net_install_value = NULL;
+				DWORD net11_install_dword = 0;
+				
+				net_install_value = get_windows_reg_value("HKLM\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v1.1.4322", "Install", 0);
+				if(net_install_value)
+				{
+					DWORD net11_install_dword = atoi(net_install_value);
+					if(net11_install_dword == 1)
+					{
+						if(!s_dot_Net_Versions.empty())
+							s_dot_Net_Versions.append(",");
+						s_dot_Net_Versions.append("1.1");
+					}
+				}
+
+				free(net_install_value);
+
+				net_install_value = get_windows_reg_value("HKLM\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v2.0.50727", "Install", 0);
+				if(net_install_value)
+				{
+					DWORD net11_install_dword = atoi(net_install_value);
+					if(net11_install_dword == 1)
+					{
+						if(!s_dot_Net_Versions.empty())
+							s_dot_Net_Versions.append(",");
+						s_dot_Net_Versions.append("2.0");
+					}
+				}
+
+				free(net_install_value);
+
+				net_install_value = get_windows_reg_value("HKLM\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v3.0", "Install", 0);
+				if(net_install_value)
+				{
+					DWORD net11_install_dword = atoi(net_install_value);
+					if(net11_install_dword == 1)
+					{
+						if(!s_dot_Net_Versions.empty())
+							s_dot_Net_Versions.append(",");
+						s_dot_Net_Versions.append("3.0");
+					}
+				}
+
+				free(net_install_value);
+
+				net_install_value = get_windows_reg_value("HKLM\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v3.5", "Install", 0);
+				if(net_install_value)
+				{
+					DWORD net11_install_dword = atoi(net_install_value);
+					if(net11_install_dword == 1)
+					{
+						if(!s_dot_Net_Versions.empty())
+							s_dot_Net_Versions.append(",");
+						s_dot_Net_Versions.append("3.5");
+					}
+				}
+
+				free(net_install_value);
+
+				net_install_value = get_windows_reg_value("HKLM\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Client", "Install", 0);
+				if(net_install_value)
+				{
+					DWORD net11_install_dword = atoi(net_install_value);
+					if(net11_install_dword == 1)
+					{
+						if(!s_dot_Net_Versions.empty())
+							s_dot_Net_Versions.append(",");
+						s_dot_Net_Versions.append("4.0Client");
+					}
+				}
+
+				free(net_install_value);
+
+				net_install_value = get_windows_reg_value("HKLM\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full", "Install", 0);
+				if(net_install_value)
+				{
+					DWORD net11_install_dword = atoi(net_install_value);
+					if(net11_install_dword == 1)
+					{
+						if(!s_dot_Net_Versions.empty())
+							s_dot_Net_Versions.append(",");
+						s_dot_Net_Versions.append("4.0Full");
+					}
+				}
+
+				free(net_install_value);
+
+				m_dot_Net_Versions = _strdup(s_dot_Net_Versions.c_str());
+			}
+		}
+		else
+		{
+			if(m_dot_Net_Versions)
+				free(m_dot_Net_Versions);
+
+			m_dot_Net_Versions = detected_versions;
+		}
+#endif
     }
 
 
@@ -347,7 +461,7 @@ static const char * GetLastErrMessage(int err, char * szMsg, int cchMsg)
 static char * get_windows_reg_value(
 	const char * pszRegKey, 
 	const char * pszValueName, 
-	int          options = 0)
+	int          options)
 {
 	char * value = NULL;   // return value from this function
 	char * pszTemp = NULL; // in case we need to copy the keyname
@@ -719,6 +833,19 @@ MachAttributes::publish( ClassAd* cp, amask_t how_much)
 			}
 		}
 
+		/*
+		Publish .Net versions installed on current machine assuming
+		the option is turned on..
+		*/
+		char * pubdotnet = param("STARTD_PUBLISH_DOTNET");
+		if(strcmp(pubdotnet, "Y") == 0)
+		{
+			if(!m_dot_Net_Versions)
+				cp->Assign(ATTR_DOTNET_VERSIONS, m_dot_Net_Versions);
+		}
+
+		free(pubdotnet);
+
 		// publish values from the window's registry as specified
 		// in the MACHINE_AD_REGISTRY_KEYS param.
 		//
diff --git a/src/condor_startd.V6/ResAttributes.h b/src/condor_startd.V6/ResAttributes.h
index dfbf095..bf9fada 100644
--- a/src/condor_startd.V6/ResAttributes.h
+++ b/src/condor_startd.V6/ResAttributes.h
@@ -154,6 +154,8 @@ private:
 #if defined ( WIN32 )
 	int				m_got_windows_version_info;
 	OSVERSIONINFOEX	m_window_version_info;
+
+	char*			m_dot_Net_Versions;
 #endif
 
 };	
diff --git a/src/condor_utils/condor_attributes.cpp b/src/condor_utils/condor_attributes.cpp
index f4e0db2..be78930 100644
--- a/src/condor_utils/condor_attributes.cpp
+++ b/src/condor_utils/condor_attributes.cpp
@@ -900,3 +900,6 @@ const char * const ATTR_COMMITTED_SLOT_TIME = "CommittedSlotTime";
 const char * const ATTR_HASH_NAME = "HashName";
 const char * const ATTR_AUTHENTICATED_IDENTITY = "AuthenticatedIdentity";
 const char * const ATTR_DELEGATE_JOB_GSI_CREDENTIALS_LIFETIME = "DelegateJobGSICredentialsLifetime";
+
+//.NET attributes
+const char * const ATTR_DOTNET_VERSIONS = "DotNetVersions";
\ No newline at end of file
