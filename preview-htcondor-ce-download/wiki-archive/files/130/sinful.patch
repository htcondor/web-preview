diff --git a/src/condor_c++_util/condor_sinful.cpp b/src/condor_c++_util/condor_sinful.cpp
index 584918c..1aa4061 100644
--- a/src/condor_c++_util/condor_sinful.cpp
+++ b/src/condor_c++_util/condor_sinful.cpp
@@ -17,13 +17,15 @@
  *
  ***************************************************************/
 
-
+#define _CONDOR_ALLOW_OPEN /* for sstream */
 #include "condor_common.h"
 #include "condor_sinful.h"
 #include "condor_debug.h"
 #include "internet.h"
 #include "condor_attributes.h"
 
+#include <sstream>
+
 static bool
 urlDecode(char const *str,size_t max,std::string &result)
 {
@@ -297,19 +299,23 @@ Sinful::getPrivateNetworkName() const
 void
 Sinful::setHost(char const *host)
 {
+	ASSERT(host);
 	m_host = host;
 	regenerateSinful();
 }
 void
 Sinful::setPort(char const *port)
 {
+	ASSERT(port);
 	m_port = port;
 	regenerateSinful();
 }
 void
 Sinful::setPort(int port)
 {
-	m_port = port;
+	std::ostringstream tmp;
+	tmp << port;
+	m_port = tmp.str();
 	regenerateSinful();
 }
 
@@ -320,11 +326,11 @@ Sinful::regenerateSinful()
 
 	m_sinful = "<";
 	m_sinful += m_host;
-	if( m_port.size() ) {
+	if( !m_port.empty() ) {
 		m_sinful += ":";
 		m_sinful += m_port;
 	}
-	if( m_params.size() ) {
+	if( !m_params.empty() ) {
 		m_sinful += "?";
 		m_sinful += urlEncodeParams(m_params);
 	}
diff --git a/src/condor_c++_util/condor_sinful.h b/src/condor_c++_util/condor_sinful.h
index 992b67c..fd61af8 100644
--- a/src/condor_c++_util/condor_sinful.h
+++ b/src/condor_c++_util/condor_sinful.h
@@ -40,13 +40,13 @@ class Sinful {
 	bool valid() const { return m_valid; }
 
 	// returns the full sinful string
-	char const *getSinful() const { return m_sinful.c_str(); }
+	char const *getSinful() const { if( m_sinful.empty() ) return NULL; else return m_sinful.c_str(); }
 
 	// returns the host portion of the sinful string
-	char const *getHost() { return m_host.c_str(); }
+	char const *getHost() { if( m_host.empty() ) return NULL; else return m_host.c_str(); }
 
 	// returns the port portion of the sinful string
-	char const *getPort() { return m_port.c_str(); }
+	char const *getPort() { if( m_port.empty() ) return NULL; else return m_port.c_str(); }
 
 		// returns -1 if port not set; o.w. port number
 	int getPortNum();
diff --git a/src/condor_master.V6/masterDaemon.cpp b/src/condor_master.V6/masterDaemon.cpp
index 723d218..9e7d108 100644
--- a/src/condor_master.V6/masterDaemon.cpp
+++ b/src/condor_master.V6/masterDaemon.cpp
@@ -614,7 +614,7 @@ int daemon::RealStart( )
 						command_port = sinful.getPortNum();
 					}
 					dprintf ( D_FULLDEBUG, "Host name matches collector %s.\n",
-							  sinful.getSinful() );
+							  sinful.getSinful() ? "NULL" : sinful.getSinful() );
 					break;
 				}
 			}
